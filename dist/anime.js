/*
  anime
  homepage: <https://github.com/vladmandic/anime>
  author: <https://github.com/vladmandic>'
*/

var J$=Object.defineProperty;var e_=(e,t,n)=>t in e?J$(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var Kr=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof require!="undefined"?require:t)[n]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var hn=(e,t,n)=>(e_(e,typeof t!="symbol"?t+"":t,n),n);var t_=Object.create,dh=Object.defineProperty,n_=Object.getOwnPropertyDescriptor,Ek=Object.getOwnPropertyNames,s_=Object.getPrototypeOf,r_=Object.prototype.hasOwnProperty,a_=e=>dh(e,"__esModule",{value:!0}),i_=(e=>typeof Kr!="undefined"?Kr:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof Kr!="undefined"?Kr:t)[n]}):e)(function(e){if(typeof Kr!="undefined")return Kr.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),Bt=(e,t)=>function(){return t||(0,e[Ek(e)[0]])((t={exports:{}}).exports,t),t.exports},Ee=(e,t)=>{for(var n in t)dh(e,n,{get:t[n],enumerable:!0})},o_=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of Ek(t))!r_.call(e,r)&&(n||r!=="default")&&dh(e,r,{get:()=>t[r],enumerable:!(s=n_(t,r))||s.enumerable});return e},$a=(e,t)=>o_(a_(dh(e!=null?t_(s_(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),u_=Bt({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(D){}function s(D,T,L){this.low=D|0,this.high=T|0,this.unsigned=!!L}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(D){return(D&&D.__isLong__)===!0}s.isLong=r;var a={},i={};function o(D,T){var L,W,q;return T?(D>>>=0,(q=0<=D&&D<256)&&(W=i[D],W)?W:(L=l(D,(D|0)<0?-1:0,!0),q&&(i[D]=L),L)):(D|=0,(q=-128<=D&&D<128)&&(W=a[D],W)?W:(L=l(D,D<0?-1:0,!1),q&&(a[D]=L),L))}s.fromInt=o;function u(D,T){if(isNaN(D))return T?x:v;if(T){if(D<0)return x;if(D>=g)return E}else{if(D<=-b)return O;if(D+1>=b)return A}return D<0?u(-D,T).neg():l(D%m|0,D/m|0,T)}s.fromNumber=u;function l(D,T,L){return new s(D,T,L)}s.fromBits=l;var c=Math.pow;function h(D,T,L){if(D.length===0)throw Error("empty string");if(D==="NaN"||D==="Infinity"||D==="+Infinity"||D==="-Infinity")return v;if(typeof T=="number"?(L=T,T=!1):T=!!T,L=L||10,L<2||36<L)throw RangeError("radix");var W;if((W=D.indexOf("-"))>0)throw Error("interior hyphen");if(W===0)return h(D.substring(1),T,L).neg();for(var q=u(c(L,8)),j=v,K=0;K<D.length;K+=8){var Q=Math.min(8,D.length-K),ne=parseInt(D.substring(K,K+Q),L);if(Q<8){var J=u(c(L,Q));j=j.mul(J).add(u(ne))}else j=j.mul(q),j=j.add(u(ne))}return j.unsigned=T,j}s.fromString=h;function d(D,T){return typeof D=="number"?u(D,T):typeof D=="string"?h(D,T):l(D.low,D.high,typeof T=="boolean"?T:D.unsigned)}s.fromValue=d;var p=1<<16,f=1<<24,m=p*p,g=m*m,b=g/2,y=o(f),v=o(0);s.ZERO=v;var x=o(0,!0);s.UZERO=x;var k=o(1);s.ONE=k;var C=o(1,!0);s.UONE=C;var $=o(-1);s.NEG_ONE=$;var A=l(-1,2147483647,!1);s.MAX_VALUE=A;var E=l(-1,-1,!0);s.MAX_UNSIGNED_VALUE=E;var O=l(0,-2147483648,!1);s.MIN_VALUE=O;var R=s.prototype;R.toInt=function(){return this.unsigned?this.low>>>0:this.low},R.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},R.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(O)){var L=u(T),W=this.div(L),q=W.mul(L).sub(this);return W.toString(T)+q.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var j=u(c(T,6),this.unsigned),K=this,Q="";;){var ne=K.div(j),J=K.sub(ne.mul(j)).toInt()>>>0,se=J.toString(T);if(K=ne,K.isZero())return se+Q;for(;se.length<6;)se="0"+se;Q=""+se+Q}},R.getHighBits=function(){return this.high},R.getHighBitsUnsigned=function(){return this.high>>>0},R.getLowBits=function(){return this.low},R.getLowBitsUnsigned=function(){return this.low>>>0},R.getNumBitsAbs=function(){if(this.isNegative())return this.eq(O)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,L=31;L>0&&(T&1<<L)==0;L--);return this.high!=0?L+33:L+1},R.isZero=function(){return this.high===0&&this.low===0},R.eqz=R.isZero,R.isNegative=function(){return!this.unsigned&&this.high<0},R.isPositive=function(){return this.unsigned||this.high>=0},R.isOdd=function(){return(this.low&1)===1},R.isEven=function(){return(this.low&1)===0},R.equals=function(T){return r(T)||(T=d(T)),this.unsigned!==T.unsigned&&this.high>>>31===1&&T.high>>>31===1?!1:this.high===T.high&&this.low===T.low},R.eq=R.equals,R.notEquals=function(T){return!this.eq(T)},R.neq=R.notEquals,R.ne=R.notEquals,R.lessThan=function(T){return this.comp(T)<0},R.lt=R.lessThan,R.lessThanOrEqual=function(T){return this.comp(T)<=0},R.lte=R.lessThanOrEqual,R.le=R.lessThanOrEqual,R.greaterThan=function(T){return this.comp(T)>0},R.gt=R.greaterThan,R.greaterThanOrEqual=function(T){return this.comp(T)>=0},R.gte=R.greaterThanOrEqual,R.ge=R.greaterThanOrEqual,R.compare=function(T){if(r(T)||(T=d(T)),this.eq(T))return 0;var L=this.isNegative(),W=T.isNegative();return L&&!W?-1:!L&&W?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},R.comp=R.compare,R.negate=function(){return!this.unsigned&&this.eq(O)?O:this.not().add(k)},R.neg=R.negate,R.add=function(T){r(T)||(T=d(T));var L=this.high>>>16,W=this.high&65535,q=this.low>>>16,j=this.low&65535,K=T.high>>>16,Q=T.high&65535,ne=T.low>>>16,J=T.low&65535,se=0,te=0,oe=0,re=0;return re+=j+J,oe+=re>>>16,re&=65535,oe+=q+ne,te+=oe>>>16,oe&=65535,te+=W+Q,se+=te>>>16,te&=65535,se+=L+K,se&=65535,l(oe<<16|re,se<<16|te,this.unsigned)},R.subtract=function(T){return r(T)||(T=d(T)),this.add(T.neg())},R.sub=R.subtract,R.multiply=function(T){if(this.isZero())return v;if(r(T)||(T=d(T)),n){var L=n.mul(this.low,this.high,T.low,T.high);return l(L,n.get_high(),this.unsigned)}if(T.isZero())return v;if(this.eq(O))return T.isOdd()?O:v;if(T.eq(O))return this.isOdd()?O:v;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(y)&&T.lt(y))return u(this.toNumber()*T.toNumber(),this.unsigned);var W=this.high>>>16,q=this.high&65535,j=this.low>>>16,K=this.low&65535,Q=T.high>>>16,ne=T.high&65535,J=T.low>>>16,se=T.low&65535,te=0,oe=0,re=0,le=0;return le+=K*se,re+=le>>>16,le&=65535,re+=j*se,oe+=re>>>16,re&=65535,re+=K*J,oe+=re>>>16,re&=65535,oe+=q*se,te+=oe>>>16,oe&=65535,oe+=j*J,te+=oe>>>16,oe&=65535,oe+=K*ne,te+=oe>>>16,oe&=65535,te+=W*se+q*J+j*ne+K*Q,te&=65535,l(re<<16|le,te<<16|oe,this.unsigned)},R.mul=R.multiply,R.divide=function(T){if(r(T)||(T=d(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var L=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return l(L,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?x:v;var W,q,j;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return x;if(T.gt(this.shru(1)))return C;j=x}else{if(this.eq(O)){if(T.eq(k)||T.eq($))return O;if(T.eq(O))return k;var K=this.shr(1);return W=K.div(T).shl(1),W.eq(v)?T.isNegative()?k:$:(q=this.sub(T.mul(W)),j=W.add(q.div(T)),j)}else if(T.eq(O))return this.unsigned?x:v;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();j=v}for(q=this;q.gte(T);){W=Math.max(1,Math.floor(q.toNumber()/T.toNumber()));for(var Q=Math.ceil(Math.log(W)/Math.LN2),ne=Q<=48?1:c(2,Q-48),J=u(W),se=J.mul(T);se.isNegative()||se.gt(q);)W-=ne,J=u(W,this.unsigned),se=J.mul(T);J.isZero()&&(J=k),j=j.add(J),q=q.sub(se)}return j},R.div=R.divide,R.modulo=function(T){if(r(T)||(T=d(T)),n){var L=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return l(L,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},R.mod=R.modulo,R.rem=R.modulo,R.not=function(){return l(~this.low,~this.high,this.unsigned)},R.and=function(T){return r(T)||(T=d(T)),l(this.low&T.low,this.high&T.high,this.unsigned)},R.or=function(T){return r(T)||(T=d(T)),l(this.low|T.low,this.high|T.high,this.unsigned)},R.xor=function(T){return r(T)||(T=d(T)),l(this.low^T.low,this.high^T.high,this.unsigned)},R.shiftLeft=function(T){return r(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?l(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):l(0,this.low<<T-32,this.unsigned)},R.shl=R.shiftLeft,R.shiftRight=function(T){return r(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?l(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):l(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},R.shr=R.shiftRight,R.shiftRightUnsigned=function(T){if(r(T)&&(T=T.toInt()),T&=63,T===0)return this;var L=this.high;if(T<32){var W=this.low;return l(W>>>T|L<<32-T,L>>>T,this.unsigned)}else return T===32?l(L,0,this.unsigned):l(L>>>T-32,0,this.unsigned)},R.shru=R.shiftRightUnsigned,R.shr_u=R.shiftRightUnsigned,R.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},R.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},R.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},R.toBytesLE=function(){var T=this.high,L=this.low;return[L&255,L>>>8&255,L>>>16&255,L>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},R.toBytesBE=function(){var T=this.high,L=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,L>>>24,L>>>16&255,L>>>8&255,L&255]},s.fromBytes=function(T,L,W){return W?s.fromBytesLE(T,L):s.fromBytesBE(T,L)},s.fromBytesLE=function(T,L){return new s(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,L)},s.fromBytesBE=function(T,L){return new s(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],L)}}}),l_=Bt({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),c_=Bt({"(disabled):util"(){}}),d_=Bt({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(l){var c=this,h=u();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=h(" "),c.s1=h(" "),c.s2=h(" "),c.s0-=h(l),c.s0<0&&(c.s0+=1),c.s1-=h(l),c.s1<0&&(c.s1+=1),c.s2-=h(l),c.s2<0&&(c.s2+=1),h=null}function i(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var h=new a(l),d=c&&c.state,p=h.next;return p.int32=function(){return h.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,d&&(typeof d=="object"&&i(d,h),p.state=function(){return i(h,{})}),p}function u(){var l=4022871197,c=function(h){h=String(h);for(var d=0;d<h.length;d++){l+=h.charCodeAt(d);var p=.02519603282416938*l;l=p>>>0,p-=l,p*=l,l=p>>>0,p-=l,l+=p*4294967296}return(l>>>0)*23283064365386963e-26};return c}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),h_=Bt({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(u){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var d=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^d^d>>>8},u===(u|0)?l.x=u:c+=u;for(var h=0;h<c.length+64;h++)l.x^=c.charCodeAt(h)|0,l.next()}function i(u,l){return l.x=u.x,l.y=u.y,l.z=u.z,l.w=u.w,l}function o(u,l){var c=new a(u),h=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var p=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,h&&(typeof h=="object"&&i(h,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),p_=Bt({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(u){var l=this,c="";l.next=function(){var d=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(d^d<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,u===(u|0)?l.x=u:c+=u;for(var h=0;h<c.length+64;h++)l.x^=c.charCodeAt(h)|0,h==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(u,l){return l.x=u.x,l.y=u.y,l.z=u.z,l.w=u.w,l.v=u.v,l.d=u.d,l}function o(u,l){var c=new a(u),h=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var p=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,h&&(typeof h=="object"&&i(h,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),f_=Bt({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(u){var l=this;l.next=function(){var h=l.x,d=l.i,p,f,m;return p=h[d],p^=p>>>7,f=p^p<<24,p=h[d+1&7],f^=p^p>>>10,p=h[d+3&7],f^=p^p>>>3,p=h[d+4&7],f^=p^p<<7,p=h[d+7&7],p=p^p<<13,f^=p^p<<9,h[d]=f,l.i=d+1&7,f};function c(h,d){var p,f,m=[];if(d===(d|0))f=m[0]=d;else for(d=""+d,p=0;p<d.length;++p)m[p&7]=m[p&7]<<15^d.charCodeAt(p)+m[p+1&7]<<13;for(;m.length<8;)m.push(0);for(p=0;p<8&&m[p]===0;++p);for(p==8?f=m[7]=-1:f=m[p],h.x=m,h.i=0,p=256;p>0;--p)h.next()}c(l,u)}function i(u,l){return l.x=u.x.slice(),l.i=u.i,l}function o(u,l){u==null&&(u=+new Date);var c=new a(u),h=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var p=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,h&&(h.x&&i(h,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),m_=Bt({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(u){var l=this;l.next=function(){var h=l.w,d=l.X,p=l.i,f,m;return l.w=h=h+1640531527|0,m=d[p+34&127],f=d[p=p+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[p]=m^f,l.i=p,m+(h^h>>>16)|0};function c(h,d){var p,f,m,g,b,y=[],v=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,v=Math.max(v,d.length)),m=0,g=-32;g<v;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(b=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(b=b+1640531527|0,p=y[g&127]^=f+b,m=p==0?m+1:0);for(m>=128&&(y[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=y[m+34&127],p=y[m=m+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,y[m]=f^p;h.w=b,h.X=y,h.i=m}c(l,u)}function i(u,l){return l.i=u.i,l.w=u.w,l.X=u.X.slice(),l}function o(u,l){u==null&&(u=+new Date);var c=new a(u),h=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var p=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,h&&(h.X&&i(h,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),g_=Bt({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(u){var l=this,c="";l.next=function(){var d=l.b,p=l.c,f=l.d,m=l.a;return d=d<<25^d>>>7^p,p=p-f|0,f=f<<24^f>>>8^m,m=m-d|0,l.b=d=d<<20^d>>>12^p,l.c=p=p-f|0,l.d=f<<16^p>>>16^m,l.a=m-d|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,u===Math.floor(u)?(l.a=u/4294967296|0,l.b=u|0):c+=u;for(var h=0;h<c.length+20;h++)l.b^=c.charCodeAt(h)|0,l.next()}function i(u,l){return l.a=u.a,l.b=u.b,l.c=u.c,l.d=u.d,l}function o(u,l){var c=new a(u),h=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var p=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(p+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,h&&(typeof h=="object"&&i(h,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),b_=Bt({"(disabled):crypto"(){}}),y_=Bt({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,i=6,o=52,u="random",l=r.pow(a,i),c=r.pow(2,o),h=c*2,d=a-1,p;function f(k,C,$){var A=[];C=C==!0?{entropy:!0}:C||{};var E=y(b(C.entropy?[k,x(s)]:k==null?v():k,3),A),O=new m(A),R=function(){for(var D=O.g(i),T=l,L=0;D<c;)D=(D+L)*a,T*=a,L=O.g(1);for(;D>=h;)D/=2,T/=2,L>>>=1;return(D+L)/T};return R.int32=function(){return O.g(4)|0},R.quick=function(){return O.g(4)/4294967296},R.double=R,y(x(O.S),s),(C.pass||$||function(D,T,L,W){return W&&(W.S&&g(W,O),D.state=function(){return g(O,{})}),L?(r[u]=D,T):D})(R,E,"global"in C?C.global:this==r,C.state)}function m(k){var C,$=k.length,A=this,E=0,O=A.i=A.j=0,R=A.S=[];for($||(k=[$++]);E<a;)R[E]=E++;for(E=0;E<a;E++)R[E]=R[O=d&O+k[E%$]+(C=R[E])],R[O]=C;(A.g=function(D){for(var T,L=0,W=A.i,q=A.j,j=A.S;D--;)T=j[W=d&W+1],L=L*a+j[d&(j[W]=j[q=d&q+T])+(j[q]=T)];return A.i=W,A.j=q,L})(a)}function g(k,C){return C.i=k.i,C.j=k.j,C.S=k.S.slice(),C}function b(k,C){var $=[],A=typeof k,E;if(C&&A=="object")for(E in k)try{$.push(b(k[E],C-1))}catch(O){}return $.length?$:A=="string"?k:k+"\0"}function y(k,C){for(var $=k+"",A,E=0;E<$.length;)C[d&E]=d&(A^=C[d&E]*19)+$.charCodeAt(E++);return x(C)}function v(){try{var k;return p&&(k=p.randomBytes)?k=k(a):(k=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(k)),x(k)}catch(A){var C=n.navigator,$=C&&C.plugins;return[+new Date,n,$,n.screen,x(s)]}}function x(k){return String.fromCharCode.apply(0,k)}if(y(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{p=b_()}catch(k){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+u]=f})(typeof self!="undefined"?self:e,[],Math)}}),hh=Bt({"src/node_modules/seedrandom/index.js"(e,t){var n=d_(),s=h_(),r=p_(),a=f_(),i=m_(),o=g_(),u=y_();u.alea=n,u.xor128=s,u.xorwow=r,u.xorshift7=a,u.xor4096=i,u.tychei=o,t.exports=u}}),Rk=Bt({"(disabled):src/node_modules/string_decoder/index.js"(){}}),ph=Bt({"(disabled):fs"(){}}),$d=Bt({"(disabled):path"(){}}),Dk=Bt({"(disabled):worker_threads"(){}}),v_=Bt({"(disabled):perf_hooks"(){}}),x_=Bt({"(disabled):os"(){}}),w_=Bt({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return Ce.buffer!=un&&ds(Ce.buffer),wc}function i(){return Ce.buffer!=un&&ds(Ce.buffer),kc}function o(){return Ce.buffer!=un&&ds(Ce.buffer),_u}function u(){return Ce.buffer!=un&&ds(Ce.buffer),Sc}function l(){return Ce.buffer!=un&&ds(Ce.buffer),Ic}function c(){return Ce.buffer!=un&&ds(Ce.buffer),Cc}function h(){return Ce.buffer!=un&&ds(Ce.buffer),Nc}var d=typeof r!="undefined"?r:{},p,f;d.ready=new Promise(function(N,F){p=N,f=F});var m;typeof process!="undefined"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},d),b=[],y="./this.program",v=(N,F)=>{throw F},x=typeof window=="object",k=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",$=d.ENVIRONMENT_IS_PTHREAD||!1,A="";function E(N){return d.locateFile?d.locateFile(N,A):A+N}var O,R,D,T;function L(N){if(N instanceof zu)return;J("exiting due to exception: "+N)}var W,q,j;if(C){k?A=$d().dirname(A)+"/":A=__dirname+"/",j=()=>{q||(W=ph(),q=$d())},O=function(B,Z){return j(),B=q.normalize(B),W.readFileSync(B,Z?void 0:"utf8")},D=F=>{var B=O(F,!0);return B.buffer||(B=new Uint8Array(B)),B},R=(F,B,Z)=>{j(),F=q.normalize(F),W.readFile(F,function(ue,pe){ue?Z(ue):B(pe.buffer)})},process.argv.length>1&&(y=process.argv[1].replace(/\\/g,"/")),b=process.argv.slice(2),process.on("uncaughtException",function(F){if(!(F instanceof zu))throw F}),process.on("unhandledRejection",function(F){throw F}),v=(F,B)=>{if(Ur())throw process.exitCode=F,B;L(B),process.exit(F)},d.inspect=function(){return"[Emscripten Module object]"};let N;try{N=Dk()}catch(F){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),F}global.Worker=N.Worker}else(x||k)&&(k?A=self.location.href:typeof document!="undefined"&&document.currentScript&&(A=document.currentScript.src),s&&(A=s),A.indexOf("blob:")!==0?A=A.substr(0,A.replace(/[?#].*/,"").lastIndexOf("/")+1):A="",C||(O=N=>{var F=new XMLHttpRequest;return F.open("GET",N,!1),F.send(null),F.responseText},k&&(D=N=>{var F=new XMLHttpRequest;return F.open("GET",N,!1),F.responseType="arraybuffer",F.send(null),new Uint8Array(F.response)}),R=(N,F,B)=>{var Z=new XMLHttpRequest;Z.open("GET",N,!0),Z.responseType="arraybuffer",Z.onload=()=>{if(Z.status==200||Z.status==0&&Z.response){F(Z.response);return}B()},Z.onerror=B,Z.send(null)}),T=N=>document.title=N);C&&typeof performance=="undefined"&&(global.performance=v_().performance);var K=console.log.bind(console),Q=console.warn.bind(console);C&&(j(),K=N=>W.writeSync(1,N+`
`),Q=N=>W.writeSync(2,N+`
`));var ne=d.print||K,J=d.printErr||Q;Object.assign(d,g),g=null,d.arguments&&(b=d.arguments),d.thisProgram&&(y=d.thisProgram),d.quit&&(v=d.quit);var se=4;function te(N){te.shown||(te.shown={}),te.shown[N]||(te.shown[N]=1,J(N))}function oe(N,F){if(typeof WebAssembly.Function=="function"){for(var B={i:"i32",j:"i64",f:"f32",d:"f64"},Z={parameters:[],results:F[0]=="v"?[]:[B[F[0]]]},ue=1;ue<F.length;++ue)Z.parameters.push(B[F[ue]]);return new WebAssembly.Function(Z,N)}var pe=[1,0,1,96],ye=F.slice(0,1),Te=F.slice(1),vt={i:127,j:126,f:125,d:124};pe.push(Te.length);for(var ue=0;ue<Te.length;++ue)pe.push(vt[Te[ue]]);ye=="v"?pe.push(0):pe=pe.concat([1,vt[ye]]),pe[1]=pe.length-2;var ms=new Uint8Array([0,97,115,109,1,0,0,0].concat(pe,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),gs=new WebAssembly.Module(ms),td=new WebAssembly.Instance(gs,{e:{f:N}}),Mu=td.exports.f;return Mu}var re=[],le;function ge(){if(re.length)return re.pop();try{qn.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return qn.length-1}function we(N,F){for(var B=N;B<N+F;B++){var Z=Bi(B);Z&&le.set(Z,B)}}var Ie=0,De=N=>{Ie=N},Le=Atomics.load,Xe=Atomics.store,et=Atomics.compareExchange,Ye;d.wasmBinary&&(Ye=d.wasmBinary);var nt=d.noExitRuntime||!0;typeof WebAssembly!="object"&&Li("no native wasm support detected");var Ce,ct,ot=!1,rn;function $t(N,F){N||Li(F)}function On(N){var F=d["_"+N];return F}function Ft(N,F,B,Z,ue){var pe={string:function(zn){var ji=0;if(zn!=null&&zn!==0){var Hx=(zn.length<<2)+1;ji=qi(Hx),Hs(zn,ji,Hx)}return ji},array:function(zn){var ji=qi(zn.length);return qs(zn,ji),ji}};function ye(zn){return F==="string"?on(zn):F==="boolean"?Boolean(zn):zn}var Te=On(N),vt=[],ms=0;if(Z)for(var gs=0;gs<Z.length;gs++){var td=pe[B[gs]];td?(ms===0&&(ms=bm()),vt[gs]=td(Z[gs])):vt[gs]=Z[gs]}var Mu=Te.apply(null,vt);function Q$(zn){return ms!==0&&Zc(ms),ye(zn)}return Mu=Q$(Mu),Mu}function an(N,F,B,Z){B=B||[];var ue=B.every(function(ye){return ye==="number"}),pe=F!=="string";return pe&&ue&&!Z?On(N):function(){return Ft(N,F,B,arguments,Z)}}var Pn=1;function Ln(N){var F=new TextDecoder(N);this.decode=B=>(B.buffer instanceof SharedArrayBuffer&&(B=new Uint8Array(B)),F.decode.call(F,B))}var nn=typeof TextDecoder!="undefined"?new Ln("utf8"):void 0;function Hn(N,F,B){for(var Z=F+B,ue=F;N[ue]&&!(ue>=Z);)++ue;if(ue-F>16&&N.subarray&&nn)return nn.decode(N.subarray(F,ue));for(var pe="";F<ue;){var ye=N[F++];if(!(ye&128)){pe+=String.fromCharCode(ye);continue}var Te=N[F++]&63;if((ye&224)==192){pe+=String.fromCharCode((ye&31)<<6|Te);continue}var vt=N[F++]&63;if((ye&240)==224?ye=(ye&15)<<12|Te<<6|vt:ye=(ye&7)<<18|Te<<12|vt<<6|N[F++]&63,ye<65536)pe+=String.fromCharCode(ye);else{var ms=ye-65536;pe+=String.fromCharCode(55296|ms>>10,56320|ms&1023)}}return pe}function on(N,F){return N?Hn(i(),N,F):""}function Gs(N,F,B,Z){if(!(Z>0))return 0;for(var ue=B,pe=B+Z-1,ye=0;ye<N.length;++ye){var Te=N.charCodeAt(ye);if(Te>=55296&&Te<=57343){var vt=N.charCodeAt(++ye);Te=65536+((Te&1023)<<10)|vt&1023}if(Te<=127){if(B>=pe)break;F[B++]=Te}else if(Te<=2047){if(B+1>=pe)break;F[B++]=192|Te>>6,F[B++]=128|Te&63}else if(Te<=65535){if(B+2>=pe)break;F[B++]=224|Te>>12,F[B++]=128|Te>>6&63,F[B++]=128|Te&63}else{if(B+3>=pe)break;F[B++]=240|Te>>18,F[B++]=128|Te>>12&63,F[B++]=128|Te>>6&63,F[B++]=128|Te&63}}return F[B]=0,B-ue}function Hs(N,F,B){return Gs(N,i(),F,B)}function Fi(N){for(var F=0,B=0;B<N.length;++B){var Z=N.charCodeAt(B);Z>=55296&&Z<=57343&&(Z=65536+((Z&1023)<<10)|N.charCodeAt(++B)&1023),Z<=127?++F:Z<=2047?F+=2:Z<=65535?F+=3:F+=4}return F}var ur=typeof TextDecoder!="undefined"?new Ln("utf-16le"):void 0;function qs(N,F){a().set(N,F)}function $u(N,F,B){for(var Z=0;Z<N.length;++Z)a()[F++>>0]=N.charCodeAt(Z);B||(a()[F>>0]=0)}function Oi(N,F){return N%F>0&&(N+=F-N%F),N}var un,wc,kc,_u,Sc,Ic,Cx,Cc,Nc;$&&(un=d.buffer);function ds(N){un=N,d.HEAP8=wc=new Int8Array(N),d.HEAP16=_u=new Int16Array(N),d.HEAP32=Ic=new Int32Array(N),d.HEAPU8=kc=new Uint8Array(N),d.HEAPU16=Sc=new Uint16Array(N),d.HEAPU32=Cx=new Uint32Array(N),d.HEAPF32=Cc=new Float32Array(N),d.HEAPF64=Nc=new Float64Array(N)}var Tc=d.INITIAL_MEMORY||16777216;if($)Ce=d.wasmMemory,un=d.buffer;else if(d.wasmMemory)Ce=d.wasmMemory;else if(Ce=new WebAssembly.Memory({initial:Tc/65536,maximum:32768,shared:!0}),!(Ce.buffer instanceof SharedArrayBuffer))throw J("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),C&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Ce&&(un=Ce.buffer),Tc=un.byteLength,ds(un);var qn,Pi=[],lr=[],Lp=[],$c=[],Wr=!1,zp=!1,_c=0;function Ur(){return nt||_c>0}function ln(){if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Nx(d.preRun.shift());Fc(Pi)}function Au(){Wr=!0,!$&&Fc(lr)}function Mp(){$||($e.terminateAllThreads(),zp=!0)}function Bp(){if(!$){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;)Eu(d.postRun.shift());Fc($c)}}function Nx(N){Pi.unshift(N)}function Tx(N){lr.unshift(N)}function Eu(N){$c.unshift(N)}var cr=0,Ac=null,hs=null;function Ru(N){cr++,d.monitorRunDependencies&&d.monitorRunDependencies(cr)}function $x(N){if(cr--,d.monitorRunDependencies&&d.monitorRunDependencies(cr),cr==0&&(Ac!==null&&(clearInterval(Ac),Ac=null),hs)){var F=hs;hs=null,F()}}d.preloadedImages={},d.preloadedAudios={};function Li(N){$?postMessage({cmd:"onAbort",arg:N}):d.onAbort&&d.onAbort(N),N="Aborted("+N+")",J(N),ot=!0,rn=1,N+=". Build with -s ASSERTIONS=1 for more info.";var F=new WebAssembly.RuntimeError(N);throw f(F),F}var Vp="data:application/octet-stream;base64,";function Ec(N){return N.startsWith(Vp)}function Rc(N){return N.startsWith("file://")}var cn;cn="tfjs-backend-wasm-threaded-simd.wasm",Ec(cn)||(cn=E(cn));function Dc(N){try{if(N==cn&&Ye)return new Uint8Array(Ye);if(D)return D(N);throw"both async and sync fetching of the wasm failed"}catch(F){Li(F)}}function zi(){if(!Ye&&(x||k)){if(typeof fetch=="function"&&!Rc(cn))return fetch(cn,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+cn+"'";return N.arrayBuffer()}).catch(function(){return Dc(cn)});if(R)return new Promise(function(N,F){R(cn,function(B){N(new Uint8Array(B))},F)})}return Promise.resolve().then(function(){return Dc(cn)})}function Wp(){var N={env:qc,wasi_snapshot_preview1:qc};function F(ye,Te){var vt=ye.exports;if(d.asm=vt,Xp(d.asm.emscripten_tls_init),qn=d.asm.__indirect_function_table,Tx(d.asm.__wasm_call_ctors),ct=Te,!$){var ms=$e.unusedWorkers.length;$e.unusedWorkers.forEach(function(gs){$e.loadWasmModuleToWorker(gs,function(){--ms||$x("wasm-instantiate")})})}}$||Ru("wasm-instantiate");function B(ye){F(ye.instance,ye.module)}function Z(ye){return zi().then(function(Te){return WebAssembly.instantiate(Te,N)}).then(function(Te){return Te}).then(ye,function(Te){J("failed to asynchronously prepare wasm: "+Te),Li(Te)})}function ue(){return!Ye&&typeof WebAssembly.instantiateStreaming=="function"&&!Ec(cn)&&!Rc(cn)&&typeof fetch=="function"?fetch(cn,{credentials:"same-origin"}).then(function(ye){var Te=WebAssembly.instantiateStreaming(ye,N);return Te.then(B,function(vt){return J("wasm streaming compile failed: "+vt),J("falling back to ArrayBuffer instantiation"),Z(B)})}):Z(B)}if(d.instantiateWasm)try{var pe=d.instantiateWasm(N,F);return pe}catch(ye){return J("Module.instantiateWasm callback failed with error: "+ye),!1}return ue().catch(f),{}}var _x,Ax,Up={};function Fc(N){for(;N.length>0;){var F=N.shift();if(typeof F=="function"){F(d);continue}var B=F.func;typeof B=="number"?F.arg===void 0?Bi(B)():Bi(B)(F.arg):B(F.arg===void 0?null:F.arg)}}function Mi(N){var F=bm(),B=N();return Zc(F),B}function i$(N){return N}function Ex(N){var F=/\b_Z[\w\d_]+/g;return N.replace(F,function(B){var Z=B;return B===Z?B:Z+" ["+B+"]"})}function Gp(N){l()[N>>2]=0;var F=$e.pthreads[N];delete $e.pthreads[N],F.worker.terminate(),gm(N),$e.runningWorkers.splice($e.runningWorkers.indexOf(F.worker),1),F.worker.pthread=void 0}function Hp(N){var F=$e.pthreads[N];F.worker.postMessage({cmd:"cancel"})}function Oc(N){var F=$e.pthreads[N];if(F){l()[N>>2]=0;var B=F.worker;$e.returnWorkerToPool(B)}}function Pc(N){X$(N)}function qp(N){if(N instanceof zu||N=="unwind")return rn;v(1,N)}var $e={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){$?$e.initWorker():$e.initMainThread()},initMainThread:function(){for(var N=8,F=0;F<N;++F)$e.allocateUnusedWorker()},initWorker:function(){nt=!1},pthreads:{},setExitStatus:function(N){rn=N},terminateAllThreads:function(){for(var N in $e.pthreads){var F=$e.pthreads[N];F&&F.worker&&$e.returnWorkerToPool(F.worker)}for(var B=0;B<$e.unusedWorkers.length;++B){var Z=$e.unusedWorkers[B];Z.terminate()}$e.unusedWorkers=[]},returnWorkerToPool:function(N){$e.runWithoutMainThreadQueuedCalls(function(){delete $e.pthreads[N.pthread.threadInfoStruct],$e.unusedWorkers.push(N),$e.runningWorkers.splice($e.runningWorkers.indexOf(N),1),gm(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){l()[Gx>>2]=0;try{N()}finally{l()[Gx>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in $e.tlsInitFunctions)$e.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,F){N.onmessage=B=>{var Z=B.data,ue=Z.cmd;if(N.pthread&&($e.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),Z.targetThread&&Z.targetThread!=Yc()){var pe=$e.pthreads[Z.targetThread];pe?pe.worker.postMessage(Z,Z.transferList):J('Internal error! Worker sent a message "'+ue+'" to target pthread '+Z.targetThread+", but that thread no longer exists!"),$e.currentProxiedOperationCallerThread=void 0;return}ue==="processQueuedMainThreadWork"?Mx():ue==="spawnThread"?zc(Z):ue==="cleanupThread"?Oc(Z.thread):ue==="killThread"?Gp(Z.thread):ue==="cancelThread"?Hp(Z.thread):ue==="loaded"?(N.loaded=!0,F&&F(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):ue==="print"?ne("Thread "+Z.threadId+": "+Z.text):ue==="printErr"?J("Thread "+Z.threadId+": "+Z.text):ue==="alert"?alert("Thread "+Z.threadId+": "+Z.text):Z.target==="setimmediate"?N.postMessage(Z):ue==="onAbort"?d.onAbort&&d.onAbort(Z.arg):J("worker sent an unknown command "+ue),$e.currentProxiedOperationCallerThread=void 0},N.onerror=B=>{var Z="worker sent an error!";throw J(Z+" "+B.filename+":"+B.lineno+": "+B.message),B},C&&(N.on("message",function(B){N.onmessage({data:B})}),N.on("error",function(B){N.onerror(B)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||s,wasmMemory:Ce,wasmModule:ct})},allocateUnusedWorker:function(){var N=E("tfjs-backend-wasm-threaded-simd.worker.js");$e.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return $e.unusedWorkers.length==0&&($e.allocateUnusedWorker(),$e.loadWasmModuleToWorker($e.unusedWorkers[0])),$e.unusedWorkers.pop()}};function jp(){var N=Yc(),F=l()[N+44>>2],B=l()[N+48>>2],Z=F-B;Ux(F,Z),Zc(F)}d.establishStackSpace=jp;function Lc(N){if($)return qr(1,0,N);try{Pc(N)}catch(F){qp(F)}}var Gr=[];function Bi(N){var F=Gr[N];return F||(N>=Gr.length&&(Gr.length=N+1),Gr[N]=F=qn.get(N)),F}function Kp(N,F){return Bi(N)(F)}d.invokeEntryPoint=Kp;function Rx(){var N=new Error;if(!N.stack){try{throw new Error}catch(F){N=F}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function Xp(N,F,B){$e.tlsInitFunctions.push(N)}function Dx(N,F){qn.set(N,F),Gr[N]=F}var Hr;C?Hr=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:$?Hr=()=>performance.now()-d.__performance_now_clock_drift:Hr=()=>performance.now();var Yp=!0;function Zp(N){return l()[zx()>>2]=N,N}function Qp(N,F){var B;if(N===0)B=Date.now();else if((N===1||N===4)&&Yp)B=Hr();else return Zp(28),-1;return l()[F>>2]=B/1e3|0,l()[F+4>>2]=B%1e3*1e3*1e3|0,0}function Jp(N,F){return Qp(N,F)}function ef(N){Bx(N,!k,1,!x),$e.threadInit()}function tf(N){$?postMessage({cmd:"cleanupThread",thread:N}):Oc(N)}function zc(N){var F=$e.getNewWorker();if(!F)return 6;$e.runningWorkers.push(F);var B=$e.pthreads[N.pthread_ptr]={worker:F,threadInfoStruct:N.pthread_ptr};F.pthread=B;var Z={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return F.runPthread=()=>{Z.time=performance.now(),F.postMessage(Z,N.transferList)},F.loaded&&(F.runPthread(),delete F.runPthread),0}function nf(N,F,B,Z){if(typeof SharedArrayBuffer=="undefined")return J("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ue=[],pe=0;if($&&(ue.length===0||pe))return Vx(687865856,N,F,B,Z);if(pe)return pe;var ye={startRoutine:B,pthread_ptr:N,arg:Z,transferList:ue};return $?(ye.cmd="spawnThread",postMessage(ye,ue),0):zc(ye)}function sf(){return 2097152}function rf(N,F){if(N==F)postMessage({cmd:"processQueuedMainThreadWork"});else if($)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var B=$e.pthreads[N],Z=B&&B.worker;if(!Z)return;Z.postMessage({cmd:"processThreadQueue"})}return 1}function af(){Li("")}function of(){C||k||te("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Mc(){return 2147483648}function uf(N,F,B){i().copyWithin(N,F,F+B)}function lf(){return C?x_().cpus().length:navigator.hardwareConcurrency}function qr(N,F){var B=arguments.length-2,Z=arguments;return Mi(function(){for(var ue=B,pe=qi(ue*8),ye=pe>>3,Te=0;Te<B;Te++){var vt=Z[2+Te];h()[ye+Te]=vt}return Wx(N,ue,pe,F)})}var Du=[];function cf(N,F,B){Du.length=F;for(var Z=B>>3,ue=0;ue<F;ue++)Du[ue]=h()[Z+ue];var pe=N<0,ye=pe?Up[-N-1]:_f[N];return ye.apply(null,Du)}function df(N){try{return Ce.grow(N-un.byteLength+65535>>>16),ds(Ce.buffer),1}catch(F){}}function hf(N){var F=i().length;if(N=N>>>0,N<=F)return!1;var B=Mc();if(N>B)return!1;for(var Z=1;Z<=4;Z*=2){var ue=F*(1+.2/Z);ue=Math.min(ue,N+100663296);var pe=Math.min(B,Oi(Math.max(N,ue),65536)),ye=df(pe);if(ye)return!0}return!1}var Me={inEventHandler:0,removeAllEventListeners:function(){for(var N=Me.eventHandlers.length-1;N>=0;--N)Me._removeHandler(N);Me.eventHandlers=[],Me.deferredCalls=[]},registerRemoveEventListeners:function(){Me.removeEventListenersRegistered||(Lp.push(Me.removeAllEventListeners),Me.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,F,B){function Z(ye,Te){if(ye.length!=Te.length)return!1;for(var vt in ye)if(ye[vt]!=Te[vt])return!1;return!0}for(var ue in Me.deferredCalls){var pe=Me.deferredCalls[ue];if(pe.targetFunction==N&&Z(pe.argsList,B))return}Me.deferredCalls.push({targetFunction:N,precedence:F,argsList:B}),Me.deferredCalls.sort(function(ye,Te){return ye.precedence<Te.precedence})},removeDeferredCalls:function(N){for(var F=0;F<Me.deferredCalls.length;++F)Me.deferredCalls[F].targetFunction==N&&(Me.deferredCalls.splice(F,1),--F)},canPerformEventHandlerRequests:function(){return Me.inEventHandler&&Me.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Me.canPerformEventHandlerRequests())for(var N=0;N<Me.deferredCalls.length;++N){var F=Me.deferredCalls[N];Me.deferredCalls.splice(N,1),--N,F.targetFunction.apply(null,F.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,F){for(var B=0;B<Me.eventHandlers.length;++B)Me.eventHandlers[B].target==N&&(!F||F==Me.eventHandlers[B].eventTypeString)&&Me._removeHandler(B--)},_removeHandler:function(N){var F=Me.eventHandlers[N];F.target.removeEventListener(F.eventTypeString,F.eventListenerFunc,F.useCapture),Me.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var F=function(ue){++Me.inEventHandler,Me.currentEventHandler=N,Me.runDeferredCalls(),N.handlerFunc(ue),Me.runDeferredCalls(),--Me.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=F,N.target.addEventListener(N.eventTypeString,F,N.useCapture),Me.eventHandlers.push(N),Me.registerRemoveEventListeners();else for(var B=0;B<Me.eventHandlers.length;++B)Me.eventHandlers[B].target==N.target&&Me.eventHandlers[B].eventTypeString==N.eventTypeString&&Me._removeHandler(B--)},queueEventHandlerOnThread_iiii:function(N,F,B,Z,ue){Mi(function(){var pe=qi(12);l()[pe>>2]=B,l()[pe+4>>2]=Z,l()[pe+8>>2]=ue,mm(N,637534208,F,Z,pe)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return $e.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function pf(N){var F=Fi(N)+1,B=fm(F);return Hs(N,B,F),B}function ff(N,F,B,Z){Mi(function(){var ue=qi(12),pe=0;F&&(pe=pf(F)),l()[ue>>2]=pe,l()[ue+4>>2]=B,l()[ue+8>>2]=Z,mm(N,657457152,0,pe,ue)})}function mf(N,F,B,Z){F=F?on(F):"",ff(N,F,B,Z)}function gf(N){return N>2?on(N):N}var bf=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function yf(N){N=gf(N);var F=bf[N]||(typeof document!="undefined"?document.querySelector(N):void 0);return F}function Fu(N){return yf(N)}function Bc(N,F,B){var Z=Fu(N);if(!Z)return-4;if(Z.canvasSharedPtr&&(l()[Z.canvasSharedPtr>>2]=F,l()[Z.canvasSharedPtr+4>>2]=B),Z.offscreenCanvas||!Z.controlTransferredOffscreen){Z.offscreenCanvas&&(Z=Z.offscreenCanvas);var ue=!1;if(Z.GLctxObject&&Z.GLctxObject.GLctx){var pe=Z.GLctxObject.GLctx.getParameter(2978);ue=pe[0]===0&&pe[1]===0&&pe[2]===Z.width&&pe[3]===Z.height}Z.width=F,Z.height=B,ue&&Z.GLctxObject.GLctx.viewport(0,0,F,B)}else if(Z.canvasSharedPtr){var ye=l()[Z.canvasSharedPtr+8>>2];return mf(ye,N,F,B),1}else return-4;return 0}function Vc(N,F,B){return $?qr(2,1,N,F,B):Bc(N,F,B)}function vf(N,F,B){var Z=Fu(N);return Z?Bc(N,F,B):Vc(N,F,B)}function xf(){throw"unwind"}function wf(N){var F=N.getExtension("ANGLE_instanced_arrays");if(F)return N.vertexAttribDivisor=function(B,Z){F.vertexAttribDivisorANGLE(B,Z)},N.drawArraysInstanced=function(B,Z,ue,pe){F.drawArraysInstancedANGLE(B,Z,ue,pe)},N.drawElementsInstanced=function(B,Z,ue,pe,ye){F.drawElementsInstancedANGLE(B,Z,ue,pe,ye)},1}function kf(N){var F=N.getExtension("OES_vertex_array_object");if(F)return N.createVertexArray=function(){return F.createVertexArrayOES()},N.deleteVertexArray=function(B){F.deleteVertexArrayOES(B)},N.bindVertexArray=function(B){F.bindVertexArrayOES(B)},N.isVertexArray=function(B){return F.isVertexArrayOES(B)},1}function Sf(N){var F=N.getExtension("WEBGL_draw_buffers");if(F)return N.drawBuffers=function(B,Z){F.drawBuffersWEBGL(B,Z)},1}function If(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var yt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(F){yt.lastError||(yt.lastError=F)},getNewId:function(N){for(var F=yt.counter++,B=N.length;B<F;B++)N[B]=null;return F},getSource:function(N,F,B,Z){for(var ue="",pe=0;pe<F;++pe){var ye=Z?l()[Z+pe*4>>2]:-1;ue+=on(l()[B+pe*4>>2],ye<0?void 0:ye)}return ue},createContext:function(N,F){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(ue,pe){var ye=N.getContextSafariWebGL2Fixed(ue,pe);return ue=="webgl"==ye instanceof WebGLRenderingContext?ye:null});var B=N.getContext("webgl",F);if(!B)return 0;var Z=yt.registerContext(B,F);return Z},registerContext:function(N,F){var B=fm(8);l()[B+4>>2]=Yc();var Z={handle:B,attributes:F,version:F.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=Z),yt.contexts[B]=Z,(typeof F.enableExtensionsByDefault=="undefined"||F.enableExtensionsByDefault)&&yt.initExtensions(Z),B},makeContextCurrent:function(N){return yt.currentContext=yt.contexts[N],d.ctx=Hc=yt.currentContext&&yt.currentContext.GLctx,!(N&&!Hc)},getContext:function(N){return yt.contexts[N]},deleteContext:function(N){yt.currentContext===yt.contexts[N]&&(yt.currentContext=null),typeof Me=="object"&&Me.removeAllHandlersOnTarget(yt.contexts[N].GLctx.canvas),yt.contexts[N]&&yt.contexts[N].GLctx.canvas&&(yt.contexts[N].GLctx.canvas.GLctxObject=void 0),Lx(yt.contexts[N].handle),yt.contexts[N]=null},initExtensions:function(N){if(N||(N=yt.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var F=N.GLctx;wf(F),kf(F),Sf(F),F.disjointTimerQueryExt=F.getExtension("EXT_disjoint_timer_query"),If(F);var B=F.getSupportedExtensions()||[];B.forEach(function(Z){!Z.includes("lose_context")&&!Z.includes("debug")&&F.getExtension(Z)})}}},Cf=["default","low-power","high-performance"];function Nf(N,F){var B=F>>2,Z=l()[B+6],ue={alpha:!!l()[B+0],depth:!!l()[B+1],stencil:!!l()[B+2],antialias:!!l()[B+3],premultipliedAlpha:!!l()[B+4],preserveDrawingBuffer:!!l()[B+5],powerPreference:Cf[Z],failIfMajorPerformanceCaveat:!!l()[B+7],majorVersion:l()[B+8],minorVersion:l()[B+9],enableExtensionsByDefault:l()[B+10],explicitSwapControl:l()[B+11],proxyContextToMainThread:l()[B+12],renderViaOffscreenBackBuffer:l()[B+13]},pe=Fu(N);if(!pe||ue.explicitSwapControl)return 0;var ye=yt.createContext(pe,ue);return ye}function Tf(N,F){return Nf(N,F)}var Vi={mappings:{},buffers:[null,[],[]],printChar:function(N,F){var B=Vi.buffers[N];F===0||F===10?((N===1?ne:J)(Hn(B,0)),B.length=0):B.push(F)},varargs:void 0,get:function(){Vi.varargs+=4;var N=l()[Vi.varargs-4>>2];return N},getStr:function(N){var F=on(N);return F},get64:function(N,F){return N}};function Wc(N){return $?qr(3,1,N):0}function Uc(N,F,B,Z,ue){if($)return qr(4,1,N,F,B,Z,ue)}function Gc(N,F,B,Z){if($)return qr(5,1,N,F,B,Z);for(var ue=0,pe=0;pe<B;pe++){var ye=l()[F>>2],Te=l()[F+4>>2];F+=8;for(var vt=0;vt<Te;vt++)Vi.printChar(N,i()[ye+vt]);ue+=Te}return l()[Z>>2]=ue,0}function $f(N){De(N)}$e.init();var Hc,_f=[null,Lc,Vc,Wc,Uc,Gc],Fx=!1,qc={__clock_gettime:Jp,__emscripten_init_main_thread_js:ef,__emscripten_thread_cleanup:tf,__pthread_create_js:nf,_emscripten_default_pthread_stack_size:sf,_emscripten_notify_thread_queue:rf,abort:af,emscripten_check_blocking_allowed:of,emscripten_get_heap_max:Mc,emscripten_get_now:Hr,emscripten_memcpy_big:uf,emscripten_num_logical_cores:lf,emscripten_receive_on_main_thread_js:cf,emscripten_resize_heap:hf,emscripten_set_canvas_element_size:vf,emscripten_unwind_to_js_event_loop:xf,emscripten_webgl_create_context:Tf,exit:Pc,fd_close:Wc,fd_seek:Uc,fd_write:Gc,memory:Ce||d.wasmMemory,setTempRet0:$f},Ox=Wp(),Af=d.___wasm_call_ctors=function(){return(Af=d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},Ef=d._init=function(){return(Ef=d._init=d.asm.init).apply(null,arguments)},Rf=d._init_with_threads_count=function(){return(Rf=d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},Df=d._get_threads_count=function(){return(Df=d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},Ff=d._register_tensor=function(){return(Ff=d._register_tensor=d.asm.register_tensor).apply(null,arguments)},Of=d._dispose_data=function(){return(Of=d._dispose_data=d.asm.dispose_data).apply(null,arguments)},Pf=d._dispose=function(){return(Pf=d._dispose=d.asm.dispose).apply(null,arguments)},Lf=d._Abs=function(){return(Lf=d._Abs=d.asm.Abs).apply(null,arguments)},zf=d._Add=function(){return(zf=d._Add=d.asm.Add).apply(null,arguments)},Mf=d._AddN=function(){return(Mf=d._AddN=d.asm.AddN).apply(null,arguments)},Bf=d._All=function(){return(Bf=d._All=d.asm.All).apply(null,arguments)},Vf=d._Any=function(){return(Vf=d._Any=d.asm.Any).apply(null,arguments)},Wf=d._ArgMax=function(){return(Wf=d._ArgMax=d.asm.ArgMax).apply(null,arguments)},Uf=d._AvgPool=function(){return(Uf=d._AvgPool=d.asm.AvgPool).apply(null,arguments)},Gf=d._BatchMatMul=function(){return(Gf=d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},Hf=d._Ceil=function(){return(Hf=d._Ceil=d.asm.Ceil).apply(null,arguments)},qf=d._ClipByValue=function(){return(qf=d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},jf=d._Conv2D=function(){return(jf=d._Conv2D=d.asm.Conv2D).apply(null,arguments)},Kf=d._Conv2DBackpropInput=function(){return(Kf=d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},Xf=d._Cos=function(){return(Xf=d._Cos=d.asm.Cos).apply(null,arguments)},Yf=d._Cosh=function(){return(Yf=d._Cosh=d.asm.Cosh).apply(null,arguments)},Zf=d._CropAndResize=function(){return(Zf=d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},Qf=d._Cumprod=function(){return(Qf=d._Cumprod=d.asm.Cumprod).apply(null,arguments)},Jf=d._Cumsum=function(){return(Jf=d._Cumsum=d.asm.Cumsum).apply(null,arguments)},em=d._DepthToSpace=function(){return(em=d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},tm=d._DepthwiseConv2dNative=function(){return(tm=d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},nm=d._Elu=function(){return(nm=d._Elu=d.asm.Elu).apply(null,arguments)},sm=d._Equal=function(){return(sm=d._Equal=d.asm.Equal).apply(null,arguments)},rm=d._Exp=function(){return(rm=d._Exp=d.asm.Exp).apply(null,arguments)},am=d._FlipLeftRight=function(){return(am=d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},im=d._Floor=function(){return(im=d._Floor=d.asm.Floor).apply(null,arguments)},om=d._FloorDiv=function(){return(om=d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},um=d._FusedBatchNorm=function(){return(um=d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},lm=d._FusedConv2D=function(){return(lm=d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},jc=d._FusedDepthwiseConv2D=function(){return(jc=d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},Kc=d._Gather=function(){return(Kc=d._Gather=d.asm.Gather).apply(null,arguments)},Ou=d._GatherNd=function(){return(Ou=d._GatherNd=d.asm.GatherNd).apply(null,arguments)},cm=d._Greater=function(){return(cm=d._Greater=d.asm.Greater).apply(null,arguments)},dm=d._GreaterEqual=function(){return(dm=d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},Wi=d._LeakyRelu=function(){return(Wi=d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},Pu=d._Less=function(){return(Pu=d._Less=d.asm.Less).apply(null,arguments)},Lu=d._LessEqual=function(){return(Lu=d._LessEqual=d.asm.LessEqual).apply(null,arguments)},Px=d._Log=function(){return(Px=d._Log=d.asm.Log).apply(null,arguments)},Ui=d._LogicalAnd=function(){return(Ui=d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},Gi=d._LogicalNot=function(){return(Gi=d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},hm=d._LogicalOr=function(){return(hm=d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},G=d._LogicalXor=function(){return(G=d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},ee=d._Max=function(){return(ee=d._Max=d.asm.Max).apply(null,arguments)},ce=d._MaxPool=function(){return(ce=d._MaxPool=d.asm.MaxPool).apply(null,arguments)},ke=d._Maximum=function(){return(ke=d._Maximum=d.asm.Maximum).apply(null,arguments)},Ze=d._Mean=function(){return(Ze=d._Mean=d.asm.Mean).apply(null,arguments)},Qe=d._Min=function(){return(Qe=d._Min=d.asm.Min).apply(null,arguments)},Be=d._Minimum=function(){return(Be=d._Minimum=d.asm.Minimum).apply(null,arguments)},ze=d._MirrorPad=function(){return(ze=d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},_t=d._Multiply=function(){return(_t=d._Multiply=d.asm.Multiply).apply(null,arguments)},ps=d._Neg=function(){return(ps=d._Neg=d.asm.Neg).apply(null,arguments)},fs=d._NonMaxSuppressionV3=function(){return(fs=d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},Hi=d._NonMaxSuppressionV4=function(){return(Hi=d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},jr=d._NonMaxSuppressionV5=function(){return(jr=d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},pm=d._NotEqual=function(){return(pm=d._NotEqual=d.asm.NotEqual).apply(null,arguments)},dn=d._OneHot=function(){return(dn=d._OneHot=d.asm.OneHot).apply(null,arguments)},dr=d._PadV2=function(){return(dr=d._PadV2=d.asm.PadV2).apply(null,arguments)},Xc=d._Pow=function(){return(Xc=d._Pow=d.asm.Pow).apply(null,arguments)},o$=d._Prelu=function(){return(o$=d._Prelu=d.asm.Prelu).apply(null,arguments)},u$=d._Prod=function(){return(u$=d._Prod=d.asm.Prod).apply(null,arguments)},l$=d._RealDiv=function(){return(l$=d._RealDiv=d.asm.RealDiv).apply(null,arguments)},c$=d._Relu=function(){return(c$=d._Relu=d.asm.Relu).apply(null,arguments)},d$=d._Relu6=function(){return(d$=d._Relu6=d.asm.Relu6).apply(null,arguments)},h$=d._ResizeBilinear=function(){return(h$=d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},p$=d._ResizeNearestNeighbor=function(){return(p$=d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},f$=d._Reverse=function(){return(f$=d._Reverse=d.asm.Reverse).apply(null,arguments)},m$=d._RotateWithOffset=function(){return(m$=d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},g$=d._Round=function(){return(g$=d._Round=d.asm.Round).apply(null,arguments)},b$=d._Rsqrt=function(){return(b$=d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},y$=d._ScatterNd=function(){return(y$=d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},v$=d._SelectV2=function(){return(v$=d._SelectV2=d.asm.SelectV2).apply(null,arguments)},x$=d._Sigmoid=function(){return(x$=d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},w$=d._Sin=function(){return(w$=d._Sin=d.asm.Sin).apply(null,arguments)},k$=d._Softmax=function(){return(k$=d._Softmax=d.asm.Softmax).apply(null,arguments)},S$=d._SparseFillEmptyRows=function(){return(S$=d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},I$=d._SparseReshape=function(){return(I$=d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},C$=d._SparseSegmentReduction=function(){return(C$=d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},N$=d._Sqrt=function(){return(N$=d._Sqrt=d.asm.Sqrt).apply(null,arguments)},T$=d._Square=function(){return(T$=d._Square=d.asm.Square).apply(null,arguments)},$$=d._SquaredDifference=function(){return($$=d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},_$=d._Step=function(){return(_$=d._Step=d.asm.Step).apply(null,arguments)},A$=d._StridedSlice=function(){return(A$=d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},E$=d._Sub=function(){return(E$=d._Sub=d.asm.Sub).apply(null,arguments)},R$=d._Sum=function(){return(R$=d._Sum=d.asm.Sum).apply(null,arguments)},D$=d._Tan=function(){return(D$=d._Tan=d.asm.Tan).apply(null,arguments)},F$=d._Tanh=function(){return(F$=d._Tanh=d.asm.Tanh).apply(null,arguments)},O$=d._Tile=function(){return(O$=d._Tile=d.asm.Tile).apply(null,arguments)},P$=d._TopK=function(){return(P$=d._TopK=d.asm.TopK).apply(null,arguments)},L$=d._Transform=function(){return(L$=d._Transform=d.asm.Transform).apply(null,arguments)},z$=d._Transpose=function(){return(z$=d._Transpose=d.asm.Transpose).apply(null,arguments)},M$=d.__FusedMatMul=function(){return(M$=d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},fm=d._malloc=function(){return(fm=d._malloc=d.asm.malloc).apply(null,arguments)},Lx=d._free=function(){return(Lx=d._free=d.asm.free).apply(null,arguments)},B$=d._emscripten_tls_init=function(){return(B$=d._emscripten_tls_init=d.asm.emscripten_tls_init).apply(null,arguments)},zx=d.___errno_location=function(){return(zx=d.___errno_location=d.asm.__errno_location).apply(null,arguments)},Yc=d._pthread_self=function(){return(Yc=d._pthread_self=d.asm.pthread_self).apply(null,arguments)},Mx=d._emscripten_main_thread_process_queued_calls=function(){return(Mx=d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},V$=d.__emscripten_thread_crashed=function(){return(V$=d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},Bx=d.__emscripten_thread_init=function(){return(Bx=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)},W$=d._emscripten_current_thread_process_queued_calls=function(){return(W$=d._emscripten_current_thread_process_queued_calls=d.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},U$=d._emscripten_main_browser_thread_id=function(){return(U$=d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},G$=d._emscripten_sync_run_in_main_thread_2=function(){return(G$=d._emscripten_sync_run_in_main_thread_2=d.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},Vx=d._emscripten_sync_run_in_main_thread_4=function(){return(Vx=d._emscripten_sync_run_in_main_thread_4=d.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},Wx=d._emscripten_run_in_main_runtime_thread_js=function(){return(Wx=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},mm=d._emscripten_dispatch_to_thread_=function(){return(mm=d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},gm=d.__emscripten_thread_free_data=function(){return(gm=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},H$=d.__emscripten_thread_exit=function(){return(H$=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},q$=d._memalign=function(){return(q$=d._memalign=d.asm.memalign).apply(null,arguments)},Ux=d._emscripten_stack_set_limits=function(){return(Ux=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},bm=d.stackSave=function(){return(bm=d.stackSave=d.asm.stackSave).apply(null,arguments)},Zc=d.stackRestore=function(){return(Zc=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},qi=d.stackAlloc=function(){return(qi=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)},j$=d.dynCall_iijjiiii=function(){return(j$=d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},K$=d.dynCall_jiji=function(){return(K$=d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},Gx=d.__emscripten_allow_main_runtime_queued_calls=21664;d.cwrap=an,d.keepRuntimeAlive=Ur,d.PThread=$e,d.PThread=$e,d.wasmMemory=Ce,d.ExitStatus=zu;var Qc;function zu(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}hs=function N(){Qc||ym(),Qc||(hs=N)};function ym(N){if(N=N||b,cr>0)return;if($){p(d),Au(),postMessage({cmd:"loaded"});return}if(ln(),cr>0)return;function F(){Qc||(Qc=!0,d.calledRun=!0,!ot&&(Au(),p(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),Bp()))}d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),F()},1)):F()}d.run=ym;function X$(N,F){if(rn=N,!F&&$)throw Lc(N),"unwind";Ur()||Mp(),Y$(N)}function Y$(N){rn=N,Ur()||($e.terminateAllThreads(),d.onExit&&d.onExit(N),ot=!0),v(N,new zu(N))}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();ym();var Jc;m&&(Jc={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!m.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!m.unhandledRejection.indexOf(N)>-1})});var ed;if(typeof WasmBackendModule!="undefined")ed=WasmBackendModule;else if(typeof r!="undefined")ed=r;else throw new Error("Could not find wasm module in post.js");if(Jc){var Z$=ed._dispose;ed._dispose=function(){Z$(),Jc.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),Jc.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),k_=Bt({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},i,o;a.ready=new Promise(function(G,ee){i=G,o=ee});var u;typeof process!="undefined"&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var l=Object.assign({},a),c=[],h="./this.program",d=(G,ee)=>{throw ee},p=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function b(G){return a.locateFile?a.locateFile(G,g):g+G}var y,v,x,k;function C(G){if(G instanceof Pu)return;R("exiting due to exception: "+G)}var $,A,E;m?(f?g=$d().dirname(g)+"/":g=__dirname+"/",E=()=>{A||($=ph(),A=$d())},y=function(ee,ce){return E(),ee=A.normalize(ee),$.readFileSync(ee,ce?void 0:"utf8")},x=G=>{var ee=y(G,!0);return ee.buffer||(ee=new Uint8Array(ee)),ee},v=(G,ee,ce)=>{E(),G=A.normalize(G),$.readFile(G,function(ke,Ze){ke?ce(ke):ee(Ze.buffer)})},process.argv.length>1&&(h=process.argv[1].replace(/\\/g,"/")),c=process.argv.slice(2),process.on("uncaughtException",function(G){if(!(G instanceof Pu))throw G}),process.on("unhandledRejection",function(G){throw G}),d=(G,ee)=>{if(_u())throw process.exitCode=G,ee;C(ee),process.exit(G)},a.inspect=function(){return"[Emscripten Module object]"}):(p||f)&&(f?g=self.location.href:typeof document!="undefined"&&document.currentScript&&(g=document.currentScript.src),s&&(g=s),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",y=G=>{var ee=new XMLHttpRequest;return ee.open("GET",G,!1),ee.send(null),ee.responseText},f&&(x=G=>{var ee=new XMLHttpRequest;return ee.open("GET",G,!1),ee.responseType="arraybuffer",ee.send(null),new Uint8Array(ee.response)}),v=(G,ee,ce)=>{var ke=new XMLHttpRequest;ke.open("GET",G,!0),ke.responseType="arraybuffer",ke.onload=()=>{if(ke.status==200||ke.status==0&&ke.response){ee(ke.response);return}ce()},ke.onerror=ce,ke.send(null)},k=G=>document.title=G);var O=a.print||console.log.bind(console),R=a.printErr||console.warn.bind(console);Object.assign(a,l),l=null,a.arguments&&(c=a.arguments),a.thisProgram&&(h=a.thisProgram),a.quit&&(d=a.quit);var D=4;function T(G){T.shown||(T.shown={}),T.shown[G]||(T.shown[G]=1,R(G))}function L(G,ee){if(typeof WebAssembly.Function=="function"){for(var ce={i:"i32",j:"i64",f:"f32",d:"f64"},ke={parameters:[],results:ee[0]=="v"?[]:[ce[ee[0]]]},Ze=1;Ze<ee.length;++Ze)ke.parameters.push(ce[ee[Ze]]);return new WebAssembly.Function(ke,G)}var Qe=[1,0,1,96],Be=ee.slice(0,1),ze=ee.slice(1),_t={i:127,j:126,f:125,d:124};Qe.push(ze.length);for(var Ze=0;Ze<ze.length;++Ze)Qe.push(_t[ze[Ze]]);Be=="v"?Qe.push(0):Qe=Qe.concat([1,_t[Be]]),Qe[1]=Qe.length-2;var ps=new Uint8Array([0,97,115,109,1,0,0,0].concat(Qe,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),fs=new WebAssembly.Module(ps),Hi=new WebAssembly.Instance(fs,{e:{f:G}}),jr=Hi.exports.f;return jr}var W=[],q;function j(){if(W.length)return W.pop();try{ur.grow(1)}catch(G){throw G instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":G}return ur.length-1}function K(G,ee){for(var ce=G;ce<G+ee;ce++){var ke=Ru(ce);ke&&q.set(ke,ce)}}var Q=0,ne=G=>{Q=G},J;a.wasmBinary&&(J=a.wasmBinary);var se=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Wr("no native wasm support detected");var te,oe=!1,re;function le(G,ee){G||Wr(ee)}function ge(G){var ee=a["_"+G];return ee}function we(G,ee,ce,ke,Ze){var Qe={string:function(dn){var dr=0;if(dn!=null&&dn!==0){var Xc=(dn.length<<2)+1;dr=Ou(Xc),nt(dn,dr,Xc)}return dr},array:function(dn){var dr=Ou(dn.length);return ot(dn,dr),dr}};function Be(dn){return ee==="string"?et(dn):ee==="boolean"?Boolean(dn):dn}var ze=ge(G),_t=[],ps=0;if(ke)for(var fs=0;fs<ke.length;fs++){var Hi=Qe[ce[fs]];Hi?(ps===0&&(ps=jc()),_t[fs]=Hi(ke[fs])):_t[fs]=ke[fs]}var jr=ze.apply(null,_t);function pm(dn){return ps!==0&&Kc(ps),Be(dn)}return jr=pm(jr),jr}function Ie(G,ee,ce,ke){ce=ce||[];var Ze=ce.every(function(Be){return Be==="number"}),Qe=ee!=="string";return Qe&&Ze&&!ke?ge(G):function(){return we(G,ee,ce,arguments,ke)}}var De=1,Le=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function Xe(G,ee,ce){for(var ke=ee+ce,Ze=ee;G[Ze]&&!(Ze>=ke);)++Ze;if(Ze-ee>16&&G.subarray&&Le)return Le.decode(G.subarray(ee,Ze));for(var Qe="";ee<Ze;){var Be=G[ee++];if(!(Be&128)){Qe+=String.fromCharCode(Be);continue}var ze=G[ee++]&63;if((Be&224)==192){Qe+=String.fromCharCode((Be&31)<<6|ze);continue}var _t=G[ee++]&63;if((Be&240)==224?Be=(Be&15)<<12|ze<<6|_t:Be=(Be&7)<<18|ze<<12|_t<<6|G[ee++]&63,Be<65536)Qe+=String.fromCharCode(Be);else{var ps=Be-65536;Qe+=String.fromCharCode(55296|ps>>10,56320|ps&1023)}}return Qe}function et(G,ee){return G?Xe(an,G,ee):""}function Ye(G,ee,ce,ke){if(!(ke>0))return 0;for(var Ze=ce,Qe=ce+ke-1,Be=0;Be<G.length;++Be){var ze=G.charCodeAt(Be);if(ze>=55296&&ze<=57343){var _t=G.charCodeAt(++Be);ze=65536+((ze&1023)<<10)|_t&1023}if(ze<=127){if(ce>=Qe)break;ee[ce++]=ze}else if(ze<=2047){if(ce+1>=Qe)break;ee[ce++]=192|ze>>6,ee[ce++]=128|ze&63}else if(ze<=65535){if(ce+2>=Qe)break;ee[ce++]=224|ze>>12,ee[ce++]=128|ze>>6&63,ee[ce++]=128|ze&63}else{if(ce+3>=Qe)break;ee[ce++]=240|ze>>18,ee[ce++]=128|ze>>12&63,ee[ce++]=128|ze>>6&63,ee[ce++]=128|ze&63}}return ee[ce]=0,ce-Ze}function nt(G,ee,ce){return Ye(G,an,ee,ce)}function Ce(G){for(var ee=0,ce=0;ce<G.length;++ce){var ke=G.charCodeAt(ce);ke>=55296&&ke<=57343&&(ke=65536+((ke&1023)<<10)|G.charCodeAt(++ce)&1023),ke<=127?++ee:ke<=2047?ee+=2:ke<=65535?ee+=3:ee+=4}return ee}var ct=typeof TextDecoder!="undefined"?new TextDecoder("utf-16le"):void 0;function ot(G,ee){Ft.set(G,ee)}function rn(G,ee,ce){for(var ke=0;ke<G.length;++ke)Ft[ee++>>0]=G.charCodeAt(ke);ce||(Ft[ee>>0]=0)}function $t(G,ee){return G%ee>0&&(G+=ee-G%ee),G}var On,Ft,an,Pn,Ln,nn,Hn,on,Gs;function Hs(G){On=G,a.HEAP8=Ft=new Int8Array(G),a.HEAP16=Pn=new Int16Array(G),a.HEAP32=nn=new Int32Array(G),a.HEAPU8=an=new Uint8Array(G),a.HEAPU16=Ln=new Uint16Array(G),a.HEAPU32=Hn=new Uint32Array(G),a.HEAPF32=on=new Float32Array(G),a.HEAPF64=Gs=new Float64Array(G)}var Fi=a.INITIAL_MEMORY||16777216,ur,qs=[],$u=[],Oi=[],un=!1,wc=!1,kc=0;function _u(){return se||kc>0}function Sc(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Nc(a.preRun.shift());Eu(qs)}function Ic(){un=!0,Eu($u)}function Cx(){wc=!0}function Cc(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)Tc(a.postRun.shift());Eu(Oi)}function Nc(G){qs.unshift(G)}function ds(G){$u.unshift(G)}function Tc(G){Oi.unshift(G)}var qn=0,Pi=null,lr=null;function Lp(G){qn++,a.monitorRunDependencies&&a.monitorRunDependencies(qn)}function $c(G){if(qn--,a.monitorRunDependencies&&a.monitorRunDependencies(qn),qn==0&&(Pi!==null&&(clearInterval(Pi),Pi=null),lr)){var ee=lr;lr=null,ee()}}a.preloadedImages={},a.preloadedAudios={};function Wr(G){a.onAbort&&a.onAbort(G),G="Aborted("+G+")",R(G),oe=!0,re=1,G+=". Build with -s ASSERTIONS=1 for more info.";var ee=new WebAssembly.RuntimeError(G);throw o(ee),ee}var zp="data:application/octet-stream;base64,";function _c(G){return G.startsWith(zp)}function Ur(G){return G.startsWith("file://")}var ln;ln="tfjs-backend-wasm.wasm",_c(ln)||(ln=b(ln));function Au(G){try{if(G==ln&&J)return new Uint8Array(J);if(x)return x(G);throw"both async and sync fetching of the wasm failed"}catch(ee){Wr(ee)}}function Mp(){if(!J&&(p||f)){if(typeof fetch=="function"&&!Ur(ln))return fetch(ln,{credentials:"same-origin"}).then(function(G){if(!G.ok)throw"failed to load wasm binary file at '"+ln+"'";return G.arrayBuffer()}).catch(function(){return Au(ln)});if(v)return new Promise(function(G,ee){v(ln,function(ce){G(new Uint8Array(ce))},ee)})}return Promise.resolve().then(function(){return Au(ln)})}function Bp(){var G={env:Mi,wasi_snapshot_preview1:Mi};function ee(Be,ze){var _t=Be.exports;a.asm=_t,te=a.asm.memory,Hs(te.buffer),ur=a.asm.__indirect_function_table,ds(a.asm.__wasm_call_ctors),$c("wasm-instantiate")}Lp("wasm-instantiate");function ce(Be){ee(Be.instance)}function ke(Be){return Mp().then(function(ze){return WebAssembly.instantiate(ze,G)}).then(function(ze){return ze}).then(Be,function(ze){R("failed to asynchronously prepare wasm: "+ze),Wr(ze)})}function Ze(){return!J&&typeof WebAssembly.instantiateStreaming=="function"&&!_c(ln)&&!Ur(ln)&&typeof fetch=="function"?fetch(ln,{credentials:"same-origin"}).then(function(Be){var ze=WebAssembly.instantiateStreaming(Be,G);return ze.then(ce,function(_t){return R("wasm streaming compile failed: "+_t),R("falling back to ArrayBuffer instantiation"),ke(ce)})}):ke(ce)}if(a.instantiateWasm)try{var Qe=a.instantiateWasm(G,ee);return Qe}catch(Be){return R("Module.instantiateWasm callback failed with error: "+Be),!1}return Ze().catch(o),{}}var Nx,Tx;function Eu(G){for(;G.length>0;){var ee=G.shift();if(typeof ee=="function"){ee(a);continue}var ce=ee.func;typeof ce=="number"?ee.arg===void 0?Ru(ce)():Ru(ce)(ee.arg):ce(ee.arg===void 0?null:ee.arg)}}function cr(G){return G}function Ac(G){var ee=/\b_Z[\w\d_]+/g;return G.replace(ee,function(ce){var ke=ce;return ce===ke?ce:ke+" ["+ce+"]"})}var hs=[];function Ru(G){var ee=hs[G];return ee||(G>=hs.length&&(hs.length=G+1),hs[G]=ee=ur.get(G)),ee}function $x(){var G=new Error;if(!G.stack){try{throw new Error}catch(ee){G=ee}if(!G.stack)return"(no stack trace available)"}return G.stack.toString()}function Li(G,ee){ur.set(G,ee),hs[G]=ee}function Vp(){Wr("")}function Ec(G,ee,ce){an.copyWithin(G,ee,ee+ce)}function Rc(){return 2147483648}function cn(G){try{return te.grow(G-On.byteLength+65535>>>16),Hs(te.buffer),1}catch(ee){}}function Dc(G){var ee=an.length;G=G>>>0;var ce=Rc();if(G>ce)return!1;for(var ke=1;ke<=4;ke*=2){var Ze=ee*(1+.2/ke);Ze=Math.min(Ze,G+100663296);var Qe=Math.min(ce,$t(Math.max(G,Ze),65536)),Be=cn(Qe);if(Be)return!0}return!1}var zi={mappings:{},buffers:[null,[],[]],printChar:function(G,ee){var ce=zi.buffers[G];ee===0||ee===10?((G===1?O:R)(Xe(ce,0)),ce.length=0):ce.push(ee)},varargs:void 0,get:function(){zi.varargs+=4;var G=nn[zi.varargs-4>>2];return G},getStr:function(G){var ee=et(G);return ee},get64:function(G,ee){return G}};function Wp(G){return 0}function _x(G,ee,ce,ke,Ze){}function Ax(G,ee,ce,ke){for(var Ze=0,Qe=0;Qe<ce;Qe++){var Be=nn[ee>>2],ze=nn[ee+4>>2];ee+=8;for(var _t=0;_t<ze;_t++)zi.printChar(G,an[Be+_t]);Ze+=ze}return nn[ke>>2]=Ze,0}function Up(G){ne(G)}var Fc=!1,Mi={abort:Vp,emscripten_memcpy_big:Ec,emscripten_resize_heap:Dc,fd_close:Wp,fd_seek:_x,fd_write:Ax,setTempRet0:Up},i$=Bp(),Ex=a.___wasm_call_ctors=function(){return(Ex=a.___wasm_call_ctors=a.asm.__wasm_call_ctors).apply(null,arguments)},Gp=a._init=function(){return(Gp=a._init=a.asm.init).apply(null,arguments)},Hp=a._init_with_threads_count=function(){return(Hp=a._init_with_threads_count=a.asm.init_with_threads_count).apply(null,arguments)},Oc=a._get_threads_count=function(){return(Oc=a._get_threads_count=a.asm.get_threads_count).apply(null,arguments)},Pc=a._register_tensor=function(){return(Pc=a._register_tensor=a.asm.register_tensor).apply(null,arguments)},qp=a._dispose_data=function(){return(qp=a._dispose_data=a.asm.dispose_data).apply(null,arguments)},$e=a._dispose=function(){return($e=a._dispose=a.asm.dispose).apply(null,arguments)},jp=a._Abs=function(){return(jp=a._Abs=a.asm.Abs).apply(null,arguments)},Lc=a._Add=function(){return(Lc=a._Add=a.asm.Add).apply(null,arguments)},Gr=a._AddN=function(){return(Gr=a._AddN=a.asm.AddN).apply(null,arguments)},Bi=a._All=function(){return(Bi=a._All=a.asm.All).apply(null,arguments)},Kp=a._Any=function(){return(Kp=a._Any=a.asm.Any).apply(null,arguments)},Rx=a._ArgMax=function(){return(Rx=a._ArgMax=a.asm.ArgMax).apply(null,arguments)},Xp=a._AvgPool=function(){return(Xp=a._AvgPool=a.asm.AvgPool).apply(null,arguments)},Dx=a._BatchMatMul=function(){return(Dx=a._BatchMatMul=a.asm.BatchMatMul).apply(null,arguments)},Hr=a._Ceil=function(){return(Hr=a._Ceil=a.asm.Ceil).apply(null,arguments)},Yp=a._ClipByValue=function(){return(Yp=a._ClipByValue=a.asm.ClipByValue).apply(null,arguments)},Zp=a._Conv2D=function(){return(Zp=a._Conv2D=a.asm.Conv2D).apply(null,arguments)},Qp=a._Conv2DBackpropInput=function(){return(Qp=a._Conv2DBackpropInput=a.asm.Conv2DBackpropInput).apply(null,arguments)},Jp=a._Cos=function(){return(Jp=a._Cos=a.asm.Cos).apply(null,arguments)},ef=a._Cosh=function(){return(ef=a._Cosh=a.asm.Cosh).apply(null,arguments)},tf=a._CropAndResize=function(){return(tf=a._CropAndResize=a.asm.CropAndResize).apply(null,arguments)},zc=a._Cumprod=function(){return(zc=a._Cumprod=a.asm.Cumprod).apply(null,arguments)},nf=a._Cumsum=function(){return(nf=a._Cumsum=a.asm.Cumsum).apply(null,arguments)},sf=a._DepthToSpace=function(){return(sf=a._DepthToSpace=a.asm.DepthToSpace).apply(null,arguments)},rf=a._DepthwiseConv2dNative=function(){return(rf=a._DepthwiseConv2dNative=a.asm.DepthwiseConv2dNative).apply(null,arguments)},af=a._Elu=function(){return(af=a._Elu=a.asm.Elu).apply(null,arguments)},of=a._Equal=function(){return(of=a._Equal=a.asm.Equal).apply(null,arguments)},Mc=a._Exp=function(){return(Mc=a._Exp=a.asm.Exp).apply(null,arguments)},uf=a._FlipLeftRight=function(){return(uf=a._FlipLeftRight=a.asm.FlipLeftRight).apply(null,arguments)},lf=a._Floor=function(){return(lf=a._Floor=a.asm.Floor).apply(null,arguments)},qr=a._FloorDiv=function(){return(qr=a._FloorDiv=a.asm.FloorDiv).apply(null,arguments)},Du=a._FusedBatchNorm=function(){return(Du=a._FusedBatchNorm=a.asm.FusedBatchNorm).apply(null,arguments)},cf=a._FusedConv2D=function(){return(cf=a._FusedConv2D=a.asm.FusedConv2D).apply(null,arguments)},df=a._FusedDepthwiseConv2D=function(){return(df=a._FusedDepthwiseConv2D=a.asm.FusedDepthwiseConv2D).apply(null,arguments)},hf=a._Gather=function(){return(hf=a._Gather=a.asm.Gather).apply(null,arguments)},Me=a._GatherNd=function(){return(Me=a._GatherNd=a.asm.GatherNd).apply(null,arguments)},pf=a._Greater=function(){return(pf=a._Greater=a.asm.Greater).apply(null,arguments)},ff=a._GreaterEqual=function(){return(ff=a._GreaterEqual=a.asm.GreaterEqual).apply(null,arguments)},mf=a._LeakyRelu=function(){return(mf=a._LeakyRelu=a.asm.LeakyRelu).apply(null,arguments)},gf=a._Less=function(){return(gf=a._Less=a.asm.Less).apply(null,arguments)},bf=a._LessEqual=function(){return(bf=a._LessEqual=a.asm.LessEqual).apply(null,arguments)},yf=a._Log=function(){return(yf=a._Log=a.asm.Log).apply(null,arguments)},Fu=a._LogicalAnd=function(){return(Fu=a._LogicalAnd=a.asm.LogicalAnd).apply(null,arguments)},Bc=a._LogicalNot=function(){return(Bc=a._LogicalNot=a.asm.LogicalNot).apply(null,arguments)},Vc=a._LogicalOr=function(){return(Vc=a._LogicalOr=a.asm.LogicalOr).apply(null,arguments)},vf=a._LogicalXor=function(){return(vf=a._LogicalXor=a.asm.LogicalXor).apply(null,arguments)},xf=a._Max=function(){return(xf=a._Max=a.asm.Max).apply(null,arguments)},wf=a._MaxPool=function(){return(wf=a._MaxPool=a.asm.MaxPool).apply(null,arguments)},kf=a._Maximum=function(){return(kf=a._Maximum=a.asm.Maximum).apply(null,arguments)},Sf=a._Mean=function(){return(Sf=a._Mean=a.asm.Mean).apply(null,arguments)},If=a._Min=function(){return(If=a._Min=a.asm.Min).apply(null,arguments)},yt=a._Minimum=function(){return(yt=a._Minimum=a.asm.Minimum).apply(null,arguments)},Cf=a._MirrorPad=function(){return(Cf=a._MirrorPad=a.asm.MirrorPad).apply(null,arguments)},Nf=a._Multiply=function(){return(Nf=a._Multiply=a.asm.Multiply).apply(null,arguments)},Tf=a._Neg=function(){return(Tf=a._Neg=a.asm.Neg).apply(null,arguments)},Vi=a._NonMaxSuppressionV3=function(){return(Vi=a._NonMaxSuppressionV3=a.asm.NonMaxSuppressionV3).apply(null,arguments)},Wc=a._NonMaxSuppressionV4=function(){return(Wc=a._NonMaxSuppressionV4=a.asm.NonMaxSuppressionV4).apply(null,arguments)},Uc=a._NonMaxSuppressionV5=function(){return(Uc=a._NonMaxSuppressionV5=a.asm.NonMaxSuppressionV5).apply(null,arguments)},Gc=a._NotEqual=function(){return(Gc=a._NotEqual=a.asm.NotEqual).apply(null,arguments)},$f=a._OneHot=function(){return($f=a._OneHot=a.asm.OneHot).apply(null,arguments)},Hc=a._PadV2=function(){return(Hc=a._PadV2=a.asm.PadV2).apply(null,arguments)},_f=a._Pow=function(){return(_f=a._Pow=a.asm.Pow).apply(null,arguments)},Fx=a._Prelu=function(){return(Fx=a._Prelu=a.asm.Prelu).apply(null,arguments)},qc=a._Prod=function(){return(qc=a._Prod=a.asm.Prod).apply(null,arguments)},Ox=a._RealDiv=function(){return(Ox=a._RealDiv=a.asm.RealDiv).apply(null,arguments)},Af=a._Relu=function(){return(Af=a._Relu=a.asm.Relu).apply(null,arguments)},Ef=a._Relu6=function(){return(Ef=a._Relu6=a.asm.Relu6).apply(null,arguments)},Rf=a._ResizeBilinear=function(){return(Rf=a._ResizeBilinear=a.asm.ResizeBilinear).apply(null,arguments)},Df=a._ResizeNearestNeighbor=function(){return(Df=a._ResizeNearestNeighbor=a.asm.ResizeNearestNeighbor).apply(null,arguments)},Ff=a._Reverse=function(){return(Ff=a._Reverse=a.asm.Reverse).apply(null,arguments)},Of=a._RotateWithOffset=function(){return(Of=a._RotateWithOffset=a.asm.RotateWithOffset).apply(null,arguments)},Pf=a._Round=function(){return(Pf=a._Round=a.asm.Round).apply(null,arguments)},Lf=a._Rsqrt=function(){return(Lf=a._Rsqrt=a.asm.Rsqrt).apply(null,arguments)},zf=a._ScatterNd=function(){return(zf=a._ScatterNd=a.asm.ScatterNd).apply(null,arguments)},Mf=a._SelectV2=function(){return(Mf=a._SelectV2=a.asm.SelectV2).apply(null,arguments)},Bf=a._Sigmoid=function(){return(Bf=a._Sigmoid=a.asm.Sigmoid).apply(null,arguments)},Vf=a._Sin=function(){return(Vf=a._Sin=a.asm.Sin).apply(null,arguments)},Wf=a._Softmax=function(){return(Wf=a._Softmax=a.asm.Softmax).apply(null,arguments)},Uf=a._SparseFillEmptyRows=function(){return(Uf=a._SparseFillEmptyRows=a.asm.SparseFillEmptyRows).apply(null,arguments)},Gf=a._SparseReshape=function(){return(Gf=a._SparseReshape=a.asm.SparseReshape).apply(null,arguments)},Hf=a._SparseSegmentReduction=function(){return(Hf=a._SparseSegmentReduction=a.asm.SparseSegmentReduction).apply(null,arguments)},qf=a._Sqrt=function(){return(qf=a._Sqrt=a.asm.Sqrt).apply(null,arguments)},jf=a._Square=function(){return(jf=a._Square=a.asm.Square).apply(null,arguments)},Kf=a._SquaredDifference=function(){return(Kf=a._SquaredDifference=a.asm.SquaredDifference).apply(null,arguments)},Xf=a._Step=function(){return(Xf=a._Step=a.asm.Step).apply(null,arguments)},Yf=a._StridedSlice=function(){return(Yf=a._StridedSlice=a.asm.StridedSlice).apply(null,arguments)},Zf=a._Sub=function(){return(Zf=a._Sub=a.asm.Sub).apply(null,arguments)},Qf=a._Sum=function(){return(Qf=a._Sum=a.asm.Sum).apply(null,arguments)},Jf=a._Tan=function(){return(Jf=a._Tan=a.asm.Tan).apply(null,arguments)},em=a._Tanh=function(){return(em=a._Tanh=a.asm.Tanh).apply(null,arguments)},tm=a._Tile=function(){return(tm=a._Tile=a.asm.Tile).apply(null,arguments)},nm=a._TopK=function(){return(nm=a._TopK=a.asm.TopK).apply(null,arguments)},sm=a._Transform=function(){return(sm=a._Transform=a.asm.Transform).apply(null,arguments)},rm=a._Transpose=function(){return(rm=a._Transpose=a.asm.Transpose).apply(null,arguments)},am=a.__FusedMatMul=function(){return(am=a.__FusedMatMul=a.asm._FusedMatMul).apply(null,arguments)},im=a._malloc=function(){return(im=a._malloc=a.asm.malloc).apply(null,arguments)},om=a._free=function(){return(om=a._free=a.asm.free).apply(null,arguments)},um=a.___errno_location=function(){return(um=a.___errno_location=a.asm.__errno_location).apply(null,arguments)},lm=a._emscripten_main_thread_process_queued_calls=function(){return(lm=a._emscripten_main_thread_process_queued_calls=a.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},jc=a.stackSave=function(){return(jc=a.stackSave=a.asm.stackSave).apply(null,arguments)},Kc=a.stackRestore=function(){return(Kc=a.stackRestore=a.asm.stackRestore).apply(null,arguments)},Ou=a.stackAlloc=function(){return(Ou=a.stackAlloc=a.asm.stackAlloc).apply(null,arguments)},cm=a.dynCall_iijjiiii=function(){return(cm=a.dynCall_iijjiiii=a.asm.dynCall_iijjiiii).apply(null,arguments)},dm=a.dynCall_jiji=function(){return(dm=a.dynCall_jiji=a.asm.dynCall_jiji).apply(null,arguments)};a.cwrap=Ie;var Wi;function Pu(G){this.name="ExitStatus",this.message="Program terminated with exit("+G+")",this.status=G}lr=function G(){Wi||Lu(),Wi||(lr=G)};function Lu(G){if(G=G||c,qn>0||(Sc(),qn>0))return;function ee(){Wi||(Wi=!0,a.calledRun=!0,!oe&&(Ic(),i(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Cc()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),ee()},1)):ee()}a.run=Lu;function Px(G){re=G,_u()||(a.onExit&&a.onExit(G),oe=!0),d(G,new Pu(G))}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();Lu();var Ui;u&&(Ui={uncaughtException:process.listeners("uncaughtException").filter(function(G){return!u.uncaughtException.indexOf(G)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(G){return!u.unhandledRejection.indexOf(G)>-1})});var Gi;if(typeof r!="undefined")Gi=r;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Gi=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Ui){var hm=Gi._dispose;Gi._dispose=function(){hm(),Ui.uncaughtException.forEach(function(G){process.removeListener("uncaughtException",G)}),Ui.unhandledRejection.forEach(function(G){process.removeListener("unhandledRejection",G)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),S_=1e-7,I_=1e-4,fh=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},xl=class{refCount(e){return jn("refCount")}incRef(e){return jn("incRef")}timerAvailable(){return!0}time(e){return jn("time")}read(e){return jn("read")}readSync(e){return jn("readSync")}readToGPU(e,t){return jn("readToGPU")}numDataIds(){return jn("numDataIds")}disposeData(e,t){return jn("disposeData")}write(e,t,n){return jn("write")}move(e,t,n,s,r){return jn("move")}memory(){return jn("memory")}floatPrecision(){return jn("floatPrecision")}epsilon(){return this.floatPrecision()===32?S_:I_}dispose(){return jn("dispose")}};function jn(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Fk(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,_d(e,t,n)}function C_(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,_d(e,n,s),_d(t,n,s)}function rl(e,t,n){return Math.max(e,Math.min(t,n))}function N_(e){return e%2===0?e:e+1}function _d(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function T_(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function $_(e,t){let n=Math.random();return t*n+(1-n)*e}function __(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function P(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Zn(e,t,n=""){P(_r(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function _a(e){P(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function pa(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||sn(e)&&!n)for(let s=0;s<e.length;++s)pa(e[s],t,n);else t.push(e);return t}function pt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function A_(e){return e.length===0}function _r(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function uo(e){return e%1===0}function E_(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function R_(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function D_(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Fk(t),t}function el(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function F_(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,i=()=>{if(e()){s();return}a++;let o=t(a);if(n!=null&&a>=n){r();return}setTimeout(i,o)};i()})}function O_(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function os(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),P(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),P(e.every(s=>uo(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function Ok(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:os(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(a!=null){if(a[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(a[i]==null||a[i]>o)&&e[o]===1&&(n.push(e[o]),s.push(o)),a[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),s.push(o))}return{newShape:n,keptDims:s}}function Pk(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function Lk(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function zk(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Mk(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function P_(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function sn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function zm(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function Bk(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function pr(e){return typeof e=="string"||e instanceof String}function Vk(e){return typeof e=="boolean"}function Wk(e){return typeof e=="number"}function mh(e){return Array.isArray(e)?mh(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Wk(e)?"float32":pr(e)?"string":Vk(e)?"bool":"float32"}function Ad(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ed(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function bo(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function Uk(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let i=0;i<a;i++)r[i]=n[e+i]}else{let a=t[0],i=t.slice(1),o=i.reduce((u,l)=>u*l)*(s?2:1);for(let u=0;u<a;u++)r[u]=Uk(e+u*o,i,n,s)}return r}function so(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Uk(0,e,t,n)}function Gg(e,t){let n=gh(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function gh(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function L_(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return so(e,new Float32Array(n));if(t==="int32")return so(e,new Int32Array(n));if(t==="bool")return so(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Hg(e){e.forEach(t=>{P(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function z_(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function M_(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function qg(e){return e&&e.then&&typeof e.then=="function"}var qx="tfjsflags",B_=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=V_,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(qg(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);qx in e&&e[qx].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=U_(s,r)})}};function V_(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(W_(t,s[0],s[1]),s.join("="))),t}function W_(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function U_(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function X(){return bh}var bh=null;function G_(e){bh=e}var vm;function Gk(){if(vm==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");vm=e}return vm}function H_(){let e=Gk();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function jg(e,t){let n=H_();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var yo="Abs",wl="Acos",kl="Acosh",Ar="Add",Aa="AddN",Sl="All",Il="Any",Ea="ArgMax",Cl="ArgMin",Nl="Asin",Tl="Asinh",$l="Atan",_l="Atanh",Al="Atan2",Ra="AvgPool",Kg="AvgPoolGrad",yh="AvgPool3D",Xg="AvgPool3DGrad",Da="BatchMatMul",vo="BatchToSpaceND",Yg="Bincount",q_="BroadcastTo",Zg="BroadcastArgs",Fa="Cast",Oa="Ceil",Er="ClipByValue",vh="Complex",xh="ComplexAbs",xo="Concat",Pa="Conv2D",Qg="Conv2DBackpropFilter",La="Conv2DBackpropInput",wh="Conv3D",Jg="Conv3DBackpropFilterV2",eb="Conv3DBackpropInputV2",za="Cos",Ma="Cosh",wo="Cumprod",Ba="Cumsum",ko="CropAndResize",tb="DenseBincount",So="DepthToSpace",Va="DepthwiseConv2dNative",nb="DepthwiseConv2dNativeBackpropFilter",sb="DepthwiseConv2dNativeBackpropInput",rb="Diag",kh="Dilation2D",Mm="Dilation2DBackpropInput",Bm="Dilation2DBackpropFilter",Wa="RealDiv",Sh="Einsum",Ua="Elu",ab="EluGrad",El="Erf",Io="Equal",Ga="Exp",Co="ExpandDims",No="Expm1",ib="FFT",Rl="Fill",To="FlipLeftRight",Ha="Floor",qa="FloorDiv",ja="FusedBatchNorm",$o="GatherV2",_o="GatherNd",Ao="Greater",Ka="GreaterEqual",Xa="Identity",ob="IFFT",Ih="Imag",Dl="IsFinite",Fl="IsInf",Ol="IsNan",Ya="LeakyRelu",Eo="Less",Ro="LessEqual",ub="LinSpace",Za="Log",Pl="Log1p",Do="LogicalAnd",Fo="LogicalNot",Ll="LogicalOr",j_="LogicalXor",K_="LogSoftmax";var Ch="LRN",lb="LRNGrad",Qa="Max",Ja="Maximum",ei="MaxPool",cb="MaxPoolGrad",Nh="MaxPool3D",db="MaxPool3DGrad",hb="MaxPoolWithArgmax",ti="Mean",ni="Min",si="Minimum",ri="MirrorPad",zl="Mod",pb="Multinomial",ai="Multiply",Oo="Neg",Po="NotEqual",Lo="NonMaxSuppressionV3",Ml="NonMaxSuppressionV4",zo="NonMaxSuppressionV5",Mo="OnesLike",Bo="OneHot",Vo="Pack",ii="PadV2";var oi="Pow",ui="Prelu",li="Prod",Bl="Range",Th="Real",Vl="Reciprocal",ci="Relu",Wo="Reshape",di="ResizeNearestNeighbor",fb="ResizeNearestNeighborGrad",hi="ResizeBilinear",mb="ResizeBilinearGrad",pi="Relu6",Uo="Reverse",Go="Round",fi="Rsqrt",Ho="ScatterNd",gb="SearchSorted",qo="Select",Wl="Selu",jo="Slice",mi="Sin",Ko="Sinh",Ul="Sign",gi="Sigmoid",Gl="Softplus",bi="Sqrt",yi="Sum",Xo="SpaceToBatchND",Yo="SplitV",vi="Softmax",$h="SparseFillEmptyRows",Hl="SparseReshape",_h="SparseSegmentMean",Ah="SparseSegmentSum",Eh="SparseToDense",xi="SquaredDifference",ql="Square",Zo="StridedSlice",jl="StringNGrams",Rh="StringSplit",Dh="StringToHashBucketFast",wi="Sub",Qo="Tan",ki="Tanh",Rr="Tile",Jo="TopK",eu="Transform",Qs="Transpose",bb="Unique",tu="Unpack",Fh="UnsortedSegmentSum";var nu="ZerosLike",Si="Step",Rd="FromPixels",su="RotateWithOffset",fa="_FusedMatMul",ma="FusedConv2D",ga="FusedDepthwiseConv2D";function hr(...e){X().getBool("IS_TEST")||X().getBool("PROD")||console.warn(...e)}function X_(...e){X().getBool("IS_TEST")||X().getBool("PROD")||console.log(...e)}var Dd=jg("kernelRegistry",()=>new Map),Vm=jg("gradRegistry",()=>new Map);function Wm(e,t){let n=Hk(e,t);return Dd.get(n)}function jx(e){return Vm.get(e)}function Fd(e){let t=Dd.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function ru(e){let{kernelName:t,backendName:n}=e,s=Hk(t,n);Dd.has(s)&&hr(`The kernel '${t}' for backend '${n}' is already registered`),Dd.set(s,e)}function Y_(e){let{kernelName:t}=e;Vm.has(t)&&X().getBool("DEBUG")&&hr(`Overriding the gradient for '${t}'`),Vm.set(t,e)}function Hk(e,t){return`${t}_${e}`}var w={};Ee(w,{arraysEqual:()=>_r,assert:()=>P,assertNonNegativeIntegerDimensions:()=>Hg,assertNonNull:()=>_a,assertShapesMatch:()=>Zn,bytesFromStringArray:()=>Bk,bytesPerElement:()=>zm,checkConversionForErrors:()=>zk,clamp:()=>rl,computeStrides:()=>bo,createScalarValue:()=>nA,createShuffledIndices:()=>D_,decodeString:()=>Od,distSquared:()=>__,encodeString:()=>Xl,fetch:()=>rA,fingerPrint64:()=>tA,flatten:()=>pa,getArrayFromDType:()=>Lk,getTypedArrayFromDType:()=>Pk,hasEncodingLoss:()=>P_,hexToLong:()=>Kl,indexToLoc:()=>M_,inferDtype:()=>mh,inferFromImplicitShape:()=>O_,isBoolean:()=>Vk,isFunction:()=>Ad,isInt:()=>uo,isNumber:()=>Wk,isPromise:()=>qg,isScalarShape:()=>A_,isString:()=>pr,isTypedArray:()=>sn,isValidDtype:()=>Mk,locToIndex:()=>z_,makeOnesTypedArray:()=>Gg,makeZerosNestedTypedArray:()=>L_,makeZerosTypedArray:()=>gh,nearestDivisor:()=>Ed,nearestLargerEven:()=>N_,now:()=>al,parseAxisParam:()=>os,randUniform:()=>$_,repeatedTry:()=>F_,rightPad:()=>el,shuffle:()=>Fk,shuffleCombo:()=>C_,sizeFromShape:()=>pt,sizeToSquarishShape:()=>R_,squeezeShape:()=>Ok,sum:()=>T_,swap:()=>_d,tanh:()=>E_,toNestedArray:()=>so,toTypedArray:()=>Oh});var Kx=$a(u_()),ta=Kx.default||Kx;function Kl(e){return ta.fromString(e,!0,16)}var qk=Kl("c3a5c85c97cb3127"),Jr=Kl("b492b66fbe98f273"),pn=Kl("9ae16a3b2f90404f");function Um(e){return e.xor(e.shru(47))}function jk(e,t,n){let s=e.slice(t,t+n);return ta.fromBytes(Array.from(s),!0,!0)}function dt(e,t){return jk(e,t,8)}function Xx(e,t){return jk(e,t,4)}function Ut(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function br(e,t,n=Kl("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Z_(e,t,n,s,r,a){r=r.add(e),a=Ut(a.add(r).add(s),21);let i=r;return r=r.add(t),r=r.add(n),a=a.add(Ut(r,44)),[r.add(s),a.add(i)]}function nd(e,t,n,s){return Z_(dt(e,t),dt(e,t+8),dt(e,t+16),dt(e,t+24),n,s)}function Q_(e,t=e.length){if(t>=8){let n=pn.add(t*2),s=dt(e,0).add(pn),r=dt(e,t-8),a=Ut(r,37).mul(n).add(s),i=Ut(s,25).add(r).mul(n);return br(a,i,n)}if(t>=4){let n=pn.add(t*2),s=Xx(e,0);return br(s.shl(3).add(t),Xx(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),i=t+(r<<2);return Um(pn.mul(a).xor(qk.mul(i))).mul(pn)}return pn}function J_(e,t=e.length){let n=pn.add(t*2),s=dt(e,0).mul(Jr),r=dt(e,8),a=dt(e,t-8).mul(n),i=dt(e,t-16).mul(pn);return br(Ut(s.add(r),43).add(Ut(a,30)).add(i),s.add(Ut(r.add(pn),18)).add(a),n)}function eA(e,t=e.length){let n=pn.add(t*2),s=dt(e,0).mul(pn),r=dt(e,8),a=dt(e,t-8).mul(n),i=dt(e,t-16).mul(pn),o=Ut(s.add(r),43).add(Ut(a,30)).add(i),u=br(o,s.add(Ut(r.add(pn),18)).add(a),n),l=dt(e,16).mul(n),c=dt(e,24),h=o.add(dt(e,t-32)).mul(n),d=u.add(dt(e,t-24)).mul(n);return br(Ut(l.add(c),43).add(Ut(h,30)).add(d),l.add(Ut(c.add(s),18)).add(h),n)}function tA(e,t=e.length){let n=ta.fromNumber(81,!0);if(t<=32)return t<=16?Q_(e,t):J_(e,t);if(t<=64)return eA(e,t);let s=n,r=n.mul(Jr).add(113),a=Um(r.mul(pn).add(113)).mul(pn),i=[ta.UZERO,ta.UZERO],o=[ta.UZERO,ta.UZERO];s=s.mul(pn).add(dt(e,0));let u=0,l=(t-1>>6)*64,c=l+(t-1&63)-63;do s=Ut(s.add(r).add(i[0]).add(dt(e,u+8)),37).mul(Jr),r=Ut(r.add(i[1]).add(dt(e,u+48)),42).mul(Jr),s=s.xor(o[1]),r=r.add(i[0]).add(dt(e,u+40)),a=Ut(a.add(o[0]),33).mul(Jr),i=nd(e,u,i[1].mul(Jr),s.add(o[0])),o=nd(e,u+32,a.add(o[1]),r.add(dt(e,u+16))),[a,s]=[s,a],u+=64;while(u!==l);let h=Jr.add(a.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Ut(s.add(r).add(i[0]).add(dt(e,u+8)),37).mul(h),r=Ut(r.add(i[1]).add(dt(e,u+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(dt(e,u+40))),a=Ut(a.add(o[0]),33).mul(h),i=nd(e,u,i[1].mul(h),s.add(o[0])),o=nd(e,u+32,a.add(o[1]),r.add(dt(e,u+16))),[a,s]=[s,a],br(br(i[0],o[0],h).add(Um(r).mul(qk)).add(a),br(i[1],o[1],h).add(s),h)}function nA(e,t){return t==="string"?Xl(e):Oh([e],t)}function sA(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function Oh(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=pa(e)),X().getBool("DEBUG")&&zk(e,t),sA(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function al(){return X().platform.now()}function rA(e,t){return X().platform.fetch(e,t)}function Xl(e,t="utf-8"){return t=t||"utf-8",X().platform.encode(e,t)}function Od(e,t="utf-8"){return t=t||"utf-8",X().platform.decode(e,t)}var aA=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new oA)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,i=al();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let u of s)u.dataSync();a=Promise.resolve({kernelMs:al()-i})}if(X().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<s.length;u++){let l=s[u];l.data().then(c=>{iA(c,l.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),s,a]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],r,o[2])})})}};function iA(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var oA=class{logKernelProfile(e,t,n,s,r,a){let i=typeof s=="number"?el(`${s}ms`,9):s.error,o=el(e,25),u=t.rank,l=t.size,c=el(t.shape.toString(),14),h="";for(let d in r){let p=r[d];if(p!=null){let f=p.shape||t.shape,m=f.length;h+=`${d}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${u}D ${c}	%c${l}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function uA(e,t,n){let s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<e.length;u++){let l=e[u],c=l.inputs;for(let h in c){let d=c[h],p=!1;for(let f=0;f<t.length;f++)if(s[d.id]){l.outputs.forEach(m=>s[m.id]=!0),p=!0,r[l.id]=!0;break}if(p)break}}let a={};a[n.id]=!0;let i={};for(let u=e.length-1;u>=0;u--){let l=e[u],c=l.inputs;for(let h=0;h<l.outputs.length;h++)if(a[l.outputs[h].id]){for(let d in c)a[c[d].id]=!0,i[l.id]=!0;break}}let o=[];for(let u=0;u<e.length;u++){let l=e[u];if(r[l.id]&&i[l.id]){let c={};for(let d in l.inputs){let p=l.inputs[d];s[p.id]&&(c[d]=p)}let h=Object.assign({},l);h.inputs=c,h.outputs=l.outputs,o.push(h)}}return o}function lA(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],i=[];if(a.outputs.forEach(u=>{let l=e[u.id];l!=null?i.push(l):i.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let o=a.gradient(i);for(let u in a.inputs){if(!(u in o))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(o)}.`);let l=n(()=>o[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let c=a.inputs[u];if(!_r(l.shape,c.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${c.shape}'`);if(e[c.id]==null)e[c.id]=l;else{let h=e[c.id];e[c.id]=s(h,l),h.dispose()}}}}var Yx=20,Bu=3,xm=7;function cA(e,t,n,s){let r=bo(t),a=dA(e,t,n,r),i=t.length,o=bd(e,t,n,r,a),u=["Tensor"];return s&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(l=>"    "+l).join(`
`)),u.join(`
`)}function dA(e,t,n,s){let r=pt(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,u=n==="complex64"?Hu(e):e;if(o>1)for(let l=0;l<r/a;l++){let c=l*a;for(let h=0;h<a;h++)i[h]=Math.max(i[h],Gu(u[c+h],0,n).length)}return i}function Gu(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(xm))} + ${parseFloat(e[1].toFixed(xm))}j`:pr(e)?s=`'${e}'`:n==="bool"?s=Kk(e):s=parseFloat(e.toFixed(xm)).toString(),el(s,t)}function Kk(e){return e===0?"false":"true"}function bd(e,t,n,s,r,a=!0){let i=n==="complex64"?2:1,o=t[0],u=t.length;if(u===0){if(n==="complex64"){let m=Hu(e);return[Gu(m[0],0,n)]}return n==="bool"?[Kk(e[0])]:[e[0].toString()]}if(u===1){if(o>Yx){let g=Bu*i,b=Array.from(e.slice(0,g)),y=Array.from(e.slice((o-Bu)*i,o*i));return n==="complex64"&&(b=Hu(b),y=Hu(y)),["["+b.map((v,x)=>Gu(v,r[x],n)).join(", ")+", ..., "+y.map((v,x)=>Gu(v,r[o-Bu+x],n)).join(", ")+"]"]}let m=n==="complex64"?Hu(e):Array.from(e);return["["+m.map((g,b)=>Gu(g,r[b],n)).join(", ")+"]"]}let l=t.slice(1),c=s.slice(1),h=s[0]*i,d=[];if(o>Yx){for(let m=0;m<Bu;m++){let g=m*h,b=g+h;d.push(...bd(e.slice(g,b),l,n,c,r,!1))}d.push("...");for(let m=o-Bu;m<o;m++){let g=m*h,b=g+h;d.push(...bd(e.slice(g,b),l,n,c,r,m===o-1))}}else for(let m=0;m<o;m++){let g=m*h,b=g+h;d.push(...bd(e.slice(g,b),l,n,c,r,m===o-1))}let p=u===2?",":"";d[0]="["+d[0]+p;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+p;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Hu(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ht=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=pt(e),n!=null){let s=n.length;P(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Lk(t,this.size),this.strides=bo(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return bs().makeTensor(this.values,this.shape,this.dtype)}},bs=null,eo=null,hA=null;function pA(e){bs=e}function fA(e){eo=e}function mA(e){hA=e}var ut=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=pt(e),this.strides=bo(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return eo.buffer(this.shape,this.dtype,e)}bufferSync(){return eo.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return so(this.shape,e,this.dtype==="complex64")}arraySync(){return so(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=bs().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Od(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),bs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=bs().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Od(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await bs().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(bs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return eo.print(this,e)}clone(){return this.throwIfDisposed(),eo.clone(this)}toString(e=!1){let t=this.dataSync();return cA(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),eo.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),bs().makeVariable(this,e,t,n)}};Object.defineProperty(ut,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function gA(){return jg("Tensor",()=>ut)}gA();var Pd=class extends ut{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!_r(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);bs().disposeTensor(this),this.dataId=e.dataId,bs().incRef(this,null)}dispose(){bs().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Pd,Symbol.hasInstance,{value:e=>e instanceof ut&&e.assign!=null&&e.assign instanceof Function});var Os={};Ee(Os,{assertTypesMatch:()=>Jk,getTensorsInContainer:()=>yb,isTensorInList:()=>vA,makeTypesMatch:()=>kt});var bA=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(bA||{}),Xk=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(Xk||{}),Yk=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(Yk||{}),Zk=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(Zk||{}),Qk=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(Qk||{}),yA={float32:Zk,int32:Xk,bool:Yk,complex64:Qk};function bn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return yA[e][t]}function Ph(e){return bn(e,"int32")}function kt(e,t){if(e.dtype===t.dtype)return[e,t];let n=bn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Jk(e,t){P(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function vA(e,t){return t.some(n=>n.id===e.id)}function yb(e){let t=[];return e0(e,t,new Set),t}function e0(e,t,n){if(e==null)return;if(e instanceof ut){t.push(e);return}if(!xA(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),e0(a,t,n))}}function xA(e){return Array.isArray(e)||typeof e=="object"}function wm(e){return e.kernelName!=null}var Zx=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Gm=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Zx}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(hr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new aA(this.backendInstance),!0}setupRegisteredKernels(){Fd(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Fd(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof xl)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,hr(`Initialization of backend ${e} failed`),hr(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return hr(`Initialization of backend ${e} failed`),hr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Gm.nextTensorId++}nextVariableId(){return Gm.nextVariableId++}clone(e){let t=M.runKernel(Xa,{x:e}),n={x:e},s=a=>({x:()=>{let i="float32",o={x:a},u={dtype:i};return M.runKernel(Fa,o,u)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Wm(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(o=>{r+=o.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,u=wm(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(wm(e)){let{kernelName:p,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=Wm(p,this.backendName);P(g!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),i=()=>{let b=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let y=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,b,y);let v=y.map(x=>x.rank!=null?x:this.makeTensorFromTensorInfo(x));if(s){let x=this.getTensorsForGradient(p,f,v);n=this.saveTensorsForBackwardMode(x)}return v}}else{let{forwardFunc:p}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>p(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,m,g),g}}let{inputs:l,attrs:c}=e,h=wm(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),s&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(p=>l[p]!=null?l[p].shape:null),outputShapes:t.map(p=>p.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=jx(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],i;s.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=r.map(u=>t[u]);let o=n.filter((u,l)=>a[l]);return i.concat(o)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&pr(e[0])&&(r=e.map(o=>Xl(o)));let a=s.write(r,t,n),i=new ut(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),n==="string"){let o=this.state.tensorInfo.get(a),u=Bk(r);this.state.numBytes+=u-o.bytes,o.bytes=u}return i}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:s,dtype:r}=e,a=new ut(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new Pd(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*zm(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Pd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*zm(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=jx(e);o!=null&&(s=o.gradFunc),s!=null&&(i.gradient=u=>(u=u.map((l,c)=>{if(l==null){let h=n[c],d=gh(h.size,h.dtype);return this.makeTensor(d,h.shape,h.dtype)}return l}),s(u.length>1?u:u[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=yb(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(r instanceof ut,()=>"The result y returned by f() must be a tensor.");let a=uA(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[r.id]=n==null?wA(r.shape):n,lA(i,a,u=>this.tidy(u),kA);let o=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let l of u.saved)l.dispose()}),this.state.activeTape=null),{value:r,grads:o}})}customGrad(e){return P(Ad(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(i=>i instanceof ut),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((i,o)=>{s[o]=i});let r=(i,o)=>(n=e(...t,o),P(n.value instanceof ut,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Ad(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,o)=>{let u=n.gradFunc(i,o),l=Array.isArray(u)?u:[u];P(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(l.every(h=>h instanceof ut),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return l.forEach((h,d)=>{c[d]=()=>h}),c};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=al(),n=await this.backend.time(e);return n.wallMs=al()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Zx;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},vb=Gm;vb.nextTensorId=0;vb.nextVariableId=0;function wA(e){let t=Gg(pt(e),"float32");return M.makeTensor(t,e,"float32")}function t0(){let e=Gk();if(e._tfengine==null){let t=new B_(e);e._tfengine=new vb(t)}return G_(e._tfengine.ENV),pA(()=>e._tfengine),e._tfengine}var M=t0();function kA(e,t){let n={a:e,b:t};return M.runKernel(Ar,n)}var Lh={};Ee(Lh,{isBrowser:()=>n0,isMobile:()=>CA,mockIsMobile:()=>IA});function SA(){return typeof navigator!="undefined"&&navigator!=null}var Hm;function IA(e){Hm=e}function CA(e){if(Hm!==void 0)return Hm;if(e||SA()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function n0(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Xn=X();Xn.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Xn.registerFlag("IS_BROWSER",()=>n0());Xn.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Xn.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Xn.registerFlag("PROD",()=>!1);Xn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Xn.getBool("DEBUG"));Xn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Xn.registerFlag("IS_TEST",()=>!1);Xn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Xn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Xn.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Xn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);function Ms(e,t){let n=e;if(sn(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||sn(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&X().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&s0(e,s,[]),s}function s0(e,t,n){if(n=n||[],!Array.isArray(e)&&!sn(e)){P(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}P(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),P(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)s0(e[r],s,n.concat(r))}function Qx(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,n,s="numeric"){if(e instanceof ut)return Qx(s,e.dtype,t,n),e;let r=mh(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Qx(s,r,t,n),e==null||!sn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let u=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${u}'`)}let a=Ms(e,r);!sn(e)&&!Array.isArray(e)&&(e=[e]);let o=r!=="string"?Oh(e,r):pa(e,[],!0);return M.makeTensor(o,a,r)}function Ld(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,i)=>_(a,`${t}[${i}]`,n,s))}var r0="__op";function z(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+r0;let r=(...a)=>{M.startScope(n);try{let i=s(...a);return qg(i)&&console.error("Cannot return a Promise inside of tidy."),M.endScope(i),i}catch(i){throw M.endScope(null),i}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function NA(e,t){let n=_(e,"real","complex"),s=_(t,"imag","complex");Zn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return M.runKernel(vh,r)}var wr=z({complex_:NA});function Dr(e,t,n,s){if(s==null&&(s=mh(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!sn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Hg(t);let r=pt(t),a=pt(n);P(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let i=0;i<n.length;++i){let o=n[i],u=i===n.length-1?o!==pt(t.slice(i)):!0;P(n[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!sn(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?Oh(e,s):pa(e,[],!0),M.makeTensor(e,t,s)}function ns(e,t,n){let s=Ms(e,n);return Dr(e,t,s,n)}var qm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},zd=4;async function TA(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<r.length;++i){let o=r[i],u=Array.isArray(e)?e[i].tensor:e[o];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${u.dtype}`);let l={name:o,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let c=new Promise(async h=>{let d=await u.bytes(),p=d.reduce((g,b)=>g+b.length,0)+zd*d.length,f=new Uint8Array(p),m=0;for(let g=0;g<d.length;g++){let b=d[g],y=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(y,m),m+=zd,f.set(b,m),m+=b.length}h(f)});s.push(c)}else s.push(u.data());t!=null&&(l.group=t),n.push(l)}let a=await Promise.all(s);return{data:$A(a),specs:n}}function a0(e,t){let n={},s,r=0;for(let a of t){let i=a.name,o=a.dtype,u=a.shape,l=pt(u),c;if("quantization"in a){let h=a.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${a.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${a.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=qm[h.dtype],p=e.slice(r,r+l*d),f=h.dtype==="uint8"?new Uint8Array(p):new Uint16Array(p);if(o==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){c=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=g*h.scale+h.min}}else if(h.dtype==="float16")s===void 0&&(s=FA()),c=s(f);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(o==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=Math.round(g*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=l*d}else if(o==="string"){let h=pt(a.shape);c=[];for(let d=0;d<h;d++){let p=new Uint32Array(e.slice(r,r+zd))[0];r+=zd;let f=new Uint8Array(e.slice(r,r+p));c.push(f),r+=p}}else{let h=qm[o],d=e.slice(r,r+l*h);if(o==="float32")c=new Float32Array(d);else if(o==="int32")c=new Int32Array(d);else if(o==="bool")c=new Uint8Array(d);else if(o==="complex64"){c=new Float32Array(d);let p=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let b=0;b<p.length;b++)p[b]=c[b*2],f[b]=c[b*2+1];let m=ns(p,u,"float32"),g=ns(f,u,"float32");n[i]=wr(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=l*h}o!=="complex64"&&(n[i]=ns(c,u,o))}return n}function $A(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var xb=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function Jx(e){return xb?Buffer.byteLength(e):new Blob([e]).size}function _A(e){if(xb)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function AA(e){if(xb){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function wb(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function ew(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function i0(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function kb(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Yl(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:Jx(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:Jx(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function EA(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function RA(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function DA(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function FA(){let e=EA(),t=RA(),n=DA();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let i=0;i<s.length;i++){let o=s[i],u=e[n[o>>10]+(o&1023)]+t[o>>10];a[i]=u}return new Float32Array(r)}}var St=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return St.instance==null&&(St.instance=new St),St.instance}static registerSaveRouter(e){St.getInstance().saveRouters.push(e)}static registerLoadRouter(e){St.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return St.getHandlers(e,"save")}static getLoadHandlers(e,t){return St.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?St.getInstance().loadRouters:St.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&s.push(i)}),s}},OA=e=>St.registerSaveRouter(e),PA=e=>St.registerLoadRouter(e),LA=e=>St.getSaveHandlers(e),zA=(e,t)=>St.getLoadHandlers(e,t),jm="tensorflowjs",Km=1,aa="models_store",fr="model_info_store";function o0(){if(!X().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Xm(e){let t=e.result;t.createObjectStore(aa,{keyPath:"modelPath"}),t.createObjectStore(fr,{keyPath:"modelPath"})}var ba=class{constructor(e){if(this.indexedDB=o0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(jm,Km);r.onupgradeneeded=()=>Xm(r),r.onsuccess=()=>{let a=r.result;if(t==null){let i=a.transaction(aa,"readonly"),u=i.objectStore(aa).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=l=>(a.close(),s(u.error)),i.oncomplete=()=>a.close()}else{let i=Yl(t),o=a.transaction(fr,"readwrite"),u=o.objectStore(fr),l=u.put({modelPath:this.modelPath,modelArtifactsInfo:i}),c;l.onsuccess=()=>{c=a.transaction(aa,"readwrite");let d=c.objectStore(aa).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=p=>{u=o.objectStore(fr);let f=u.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(d.error)),f.onerror=m=>(a.close(),s(d.error))}},l.onerror=h=>(a.close(),s(l.error)),o.oncomplete=()=>{c==null?a.close():c.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};ba.URL_SCHEME="indexeddb://";var u0=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ba.URL_SCHEME)?MA(e.slice(ba.URL_SCHEME.length)):null;St.registerSaveRouter(u0);St.registerLoadRouter(u0);function MA(e){return new ba(e)}function BA(e){return e.startsWith(ba.URL_SCHEME)?e.slice(ba.URL_SCHEME.length):e}var VA=class{constructor(){this.indexedDB=o0()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(jm,Km);n.onupgradeneeded=()=>Xm(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(fr,"readonly"),i=r.objectStore(fr).getAll();i.onsuccess=()=>{let o={};for(let u of i.result)o[u.modelPath]=u.modelArtifactsInfo;e(o)},i.onerror=o=>(s.close(),t(i.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=BA(e),new Promise((t,n)=>{let s=this.indexedDB.open(jm,Km);s.onupgradeneeded=()=>Xm(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(fr,"readwrite"),i=a.objectStore(fr),o=i.get(e),u;o.onsuccess=()=>{if(o.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let l=i.delete(e),c=()=>{u=r.transaction(aa,"readwrite");let d=u.objectStore(aa).delete(e);d.onsuccess=()=>t(o.result.modelArtifactsInfo),d.onerror=p=>n(o.error)};l.onsuccess=c,l.onerror=h=>(c(),r.close(),n(o.error))}},o.onerror=l=>(r.close(),n(o.error)),a.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},Ys="/",to="tensorflowjs_models",l0="info",WA="model_topology",UA="weight_specs",GA="weight_data",HA="model_metadata";function c0(e){return{info:[to,e,l0].join(Ys),topology:[to,e,WA].join(Ys),weightSpecs:[to,e,UA].join(Ys),weightData:[to,e,GA].join(Ys),modelMetadata:[to,e,HA].join(Ys)}}function d0(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function qA(e){let t=e.split(Ys);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Ys)}function jA(e){return e.startsWith(ya.URL_SCHEME)?e.slice(ya.URL_SCHEME.length):e}var ya=class{constructor(e){if(!X().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=c0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Yl(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,_A(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw d0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=AA(a),t}};ya.URL_SCHEME="localstorage://";var h0=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ya.URL_SCHEME)?KA(e.slice(ya.URL_SCHEME.length)):null;St.registerSaveRouter(h0);St.registerLoadRouter(h0);function KA(e){return new ya(e)}var XA=class{constructor(){P(X().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=to+Ys,n=Ys+l0;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=qA(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=jA(e);let t=c0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return d0(t),n}},ro="://",Cn=class{constructor(){this.managers={}}static getInstance(){return Cn.instance==null&&(Cn.instance=new Cn),Cn.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(ro)&&(e=e.slice(0,e.indexOf(ro))),P(e.length>0,()=>"scheme must not be an empty string.");let n=Cn.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=Cn.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Cn.getInstance().managers)}};function yd(e){if(e.indexOf(ro)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Cn.getSchemes().join(",")}`);return{scheme:e.split(ro)[0],path:e.split(ro)[1]}}async function p0(e,t,n=!1){P(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=St.getLoadHandlers(e);P(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),P(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=St.getSaveHandlers(t);P(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),P(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let i=a[0],o=yd(e).scheme,u=yd(e).path,l=o===yd(e).scheme,c=await r.load();n&&l&&await Cn.getManager(o).removeModel(u);let h=await i.save(c);return n&&!l&&await Cn.getManager(o).removeModel(u),h.modelArtifactsInfo}async function YA(){let e=Cn.getSchemes(),t={};for(let n of e){let s=await Cn.getManager(n).listModels();for(let r in s){let a=n+ro+r;t[a]=s[r]}}return t}async function ZA(e){let t=yd(e);return Cn.getManager(t.scheme).removeModel(t.path)}async function QA(e,t){return p0(e,t,!1)}async function JA(e,t){return p0(e,t,!0)}var eE=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(X().get("IS_BROWSER")){X().setPlatform("browser",new eE);try{Cn.registerManager(ya.URL_SCHEME,new XA)}catch(e){}try{Cn.registerManager(ba.URL_SCHEME,new VA)}catch(e){}}var tE={importFetch:()=>l_()},km,nE=class{constructor(){this.util=c_(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return X().global.fetch!=null?X().global.fetch(e,t):(km==null&&(km=tE.importFetch()),km(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};X().get("IS_NODE")&&!X().get("IS_BROWSER")&&X().setPlatform("node",new nE);function _e(e,t="float32",n){return t=t||"float32",Hg(e),new Ht(e,t,n)}function sE(e,t){let n=_(e,"x","cast");if(!Mk(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return M.runKernel(Fa,s,r)}var de=z({cast_:sE});function rE(e){let n={x:_(e,"x","clone","string_or_numeric")};return M.runKernel(Xa,n)}var Js=z({clone_:rE});function f0(e,t=!1){console.log(e.toString(t))}t0();var aE={buffer:_e,cast:de,clone:Js,print:f0};fA(aE);var mr={};Ee(mr,{browserFiles:()=>hE,browserHTTPRequest:()=>bE,concatenateArrayBuffers:()=>wb,copyModel:()=>QA,decodeWeights:()=>a0,encodeWeights:()=>TA,fromMemory:()=>vE,fromMemorySync:()=>v0,getLoadHandlers:()=>zA,getModelArtifactsForJSON:()=>kb,getModelArtifactsInfoForJSON:()=>Yl,getSaveHandlers:()=>LA,http:()=>Ib,isHTTPScheme:()=>Zm,listModels:()=>YA,loadWeights:()=>pE,moveModel:()=>JA,registerLoadRouter:()=>PA,registerSaveRouter:()=>OA,removeModel:()=>ZA,weightsLoaderFactory:()=>g0,withSaveHandler:()=>xE,withSaveHandlerSync:()=>wE});var iE="model",oE=".json",uE=".weights.bin";function tw(e){return new Promise(t=>setTimeout(t)).then(e)}var Ym=class{constructor(e){if(!X().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ym.URL_SCHEME)&&(e=e.slice(Ym.URL_SCHEME.length)),(e==null||e.length===0)&&(e=iE),this.modelJsonFileName=e+oE,this.weightDataFileName=e+uE}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=i0(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await tw(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await tw(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Yl(e)}}}},Md=Ym;Md.URL_SCHEME="downloads://";var lE=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let o=kb(r,u=>this.loadWeights(u));e(o)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,wb(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let i=a.target.result;n(i)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>ew(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let i=ew(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},cE=e=>X().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Md.URL_SCHEME)?dE(e.slice(Md.URL_SCHEME.length)):null;St.registerSaveRouter(cE);function dE(e="model"){return new Md(e)}function hE(e){return new lE(e)}function nw(e,t,n,s){i(e),n=n==null?0:n,s=s==null?1:s,o(n,s);let r=0,a=u=>(u.then(l=>{let c=n+ ++r/e.length*(s-n);return t(c),l}),u);function i(u){P(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function o(u,l){P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),P(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(e.map(a))}async function m0(e,t){t==null&&(t={});let n=t.fetchFunc==null?X().platform.fetch:t.fetchFunc,s=e.map(h=>n(h,t.requestInit,{isBinary:!0})),r=0,a=.5,o=(t.onProgress==null?await Promise.all(s):await nw(s,t.onProgress,r,a)).map(h=>h.arrayBuffer()),u=.5,l=1;return t.onProgress==null?await Promise.all(o):await nw(o,t.onProgress,u,l)}async function pE(e,t="",n,s){return g0(i=>m0(i,{requestInit:s}))(e,t,n)}function g0(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},i=s!=null?s.map(()=>!1):[],o=[];if(t.forEach((p,f)=>{let m=0;p.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,y=qm[b]*pt(g.shape),v=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:y})};s!=null?s.forEach((x,k)=>{x===g.name&&(v(),i[k]=!0)}):v(),o.push(g.name),m+=y})}),!i.every(p=>p)){let p=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${p.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let u=r.reduce((p,f,m)=>(f&&p.push(m),p),[]),l=[];u.forEach(p=>{t[p].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;l.push(m)})});let c=await e(l),h={},d=0;return u.forEach(p=>{let f=t[p].paths.length,m=0;for(let x=0;x<f;x++)m+=c[d+x].byteLength;let g=new ArrayBuffer(m),b=new Uint8Array(g),y=0;for(let x=0;x<f;x++){let k=new Uint8Array(c[d+x]);b.set(k,y),y+=k.byteLength}a[p].forEach(x=>{let k=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),C=a0(k,[x.manifestEntry]);for(let $ in C)h[$]=C[$]}),d+=f}),h}}var fE="application/octet-stream",mE="application/json",Sb=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=X().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=i0(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:mE}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:fE}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Yl(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return kb(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=gE(t),r=this.weightPathPrefix||n,a=[];for(let l of e)a.push(...l.weights);let i=[],o=[];for(let l of e)for(let c of l.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(c)):i.push(r+c+s);this.weightUrlConverter&&i.push(...await Promise.all(o));let u=await m0(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,wb(u)]}};Sb.URL_SCHEME_REGEX=/^https?:\/\//;function gE(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function Zm(e){return e.match(Sb.URL_SCHEME_REGEX)!=null}var b0=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>Zm(s)):n=Zm(e),n)return Ib(e,t)}return null};St.registerSaveRouter(b0);St.registerLoadRouter(b0);function Ib(e,t){return new Sb(e,t)}function bE(e,t){return Ib(e,t)}var Sm=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},y0=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},yE=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function vE(e,t,n,s){let r=arguments;return new yE(v0(...r))}function v0(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Sm(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Sm({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Sm({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function xE(e){return new y0(e)}function wE(e){return new y0(e)}var kE={};Ee(kE,{confusionMatrix:()=>EE});function SE(e,t,n=!1,s=!1){let r=_(e,"a","matMul"),a=_(t,"b","matMul");[r,a]=kt(r,a);let i={a:r,b:a},o={transposeA:n,transposeB:s};return M.runKernel(Da,i,o)}var Ve=z({matMul_:SE});function IE(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:_(e,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:s};return M.runKernel(Bo,a,i)}var Bd=z({oneHot_:IE});function CE(e){X().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}mA(CE);function ys(){return M}function il(){return M.memory()}function Y(e,t){return M.tidy(e,t)}function Fe(e){yb(e).forEach(n=>n.dispose())}function Yt(e){return M.keep(e)}function x0(e){return M.setBackend(e)}function w0(){return M.ready()}function k0(){return M.backendName}function S0(e){return M.findBackend(e)}function au(e,t,n=1){return M.registerBackend(e,t,n)}function zh(){return M.backend}function NE(e){let n={input:_(e,"input","imag")};return M.runKernel(Ih,n)}var Mh=z({imag_:NE});function TE(e){let n={x:_(e,"x","neg")};return M.runKernel(Oo,n)}var wt=z({neg_:TE});function $E(e){let n={input:_(e,"input","real")};return M.runKernel(Th,n)}var ol=z({real_:$E});function _E(e,t,n){let s=_(e,"x","transpose");if(t==null&&(t=s.shape.map((i,o)=>o).reverse()),P(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(i=>{P(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();let r={x:s},a={perm:t};return s.dtype==="complex64"?Y(()=>{let i=ol(s),o=Mh(s);return i=M.runKernel(Qs,{x:i},a),o=M.runKernel(Qs,{x:o},a),n&&(o=wt(o)),wr(i,o)}):M.runKernel(Qs,r,a)}var Ue=z({transpose_:_E});function AE(e,t,n){let s=_(e,"labels","confusionMatrix"),r=_(t,"predictions","confusionMatrix");P(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),P(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),P(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),P(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),P(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=Bd(de(s,"int32"),n),i=Bd(de(r,"int32"),n),o=Ue(a),u=Ve(o,i);return de(u,"int32")}var EE=z({confusionMatrix_:AE}),iu={};Ee(iu,{assertAndGetBroadcastShape:()=>it,getBroadcastDims:()=>I0,getReductionAxes:()=>Rt});function I0(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&i===1&&s.unshift(a)}return s}function Rt(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,i=t[a];(r==null||r===1&&i>1)&&n.unshift(a)}return n}function it(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let i=t[t.length-r-1];if(i==null&&(i=1),a===1)n.unshift(i);else if(i===1)n.unshift(a);else if(a!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else n.unshift(a)}return n}var Bh={};Ee(Bh,{fromPixels:()=>zE,fromPixelsAsync:()=>PE,toPixels:()=>LE});function C0(e,t,n){if(_a(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Ms(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Dr(e,t,s,n)}var Xr;function N0(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r&&r&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(Wm(Rd,M.backendName)!=null){let f={pixels:e},m={numChannels:t};return M.runKernel(Rd,f,m)}let[l,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],h;if(i)h=e.getContext("2d").getImageData(0,0,l,c).data;else if(s||n)h=e.data;else if(a||r||o){if(Xr==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Xr=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Xr=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Xr.canvas.width=l,Xr.canvas.height=c,Xr.drawImage(e,0,0,l,c),h=Xr.getImageData(0,0,l,c).data}let d;if(t===4)d=new Int32Array(h);else{let f=l*c;d=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)d[m*t+g]=h[m*4+g]}return C0(d,[c,l,t],"int32")}function RE(e){return e!=null&&e.data instanceof Uint8Array}function DE(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function FE(e){return e!=null&&e.width!==0&&e.height!==0}function OE(e){return DE()&&!(e instanceof ImageBitmap)&&FE(e)&&!RE(e)}async function PE(e,t=3){let n=null;if(X().getBool("WRAP_TO_IMAGEBITMAP")&&OE(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return N0(n,t)}async function LE(e,t){let n=_(e,"img","toPixels");if(!(e instanceof ut)){let l=n;n=de(l,"int32"),l.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o=n.dtype==="float32"?255:1,u=new Uint8ClampedArray(r*s*4);for(let l=0;l<s*r;++l){let c=[0,0,0,255];for(let d=0;d<a;d++){let p=i[l*a+d];if(n.dtype==="float32"){if(p<0||p>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${p}.`)}else if(n.dtype==="int32"&&(p<0||p>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${p}.`);a===1?(c[0]=p*o,c[1]=p*o,c[2]=p*o):c[d]=p*o}let h=l*4;u[h+0]=Math.round(c[0]),u[h+1]=Math.round(c[1]),u[h+2]=Math.round(c[2]),u[h+3]=Math.round(c[3])}if(t!=null){t.width=r,t.height=s;let l=t.getContext("2d"),c=new ImageData(u,r,s);l.putImageData(c,0,0)}return n!==e&&n.dispose(),u}var zE=z({fromPixels_:N0}),T0={};Ee(T0,{prepareAndValidate:()=>$0});function $0(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(pt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],i=1;for(let h=0;h<r.length-1;++h)i*=r[h];let o=e.shape,u=r.slice();u.pop();let l=1;for(let h=a;h<n;++h)l*=o[h],u.push(o[h]);let c=[...bo(e.shape).map(h=>h/l),1].slice(0,a);return[u,i,l,c]}var _0={};Ee(_0,{calculateShapes:()=>A0,validateInput:()=>Nb,validateUpdateShape:()=>Cb});function Cb(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+s])throw new Error(a+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function Nb(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Cb(n,t,e)}function A0(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,i=1;for(let h=r;h<a;++h)i*=n[h];let o=r<1?1:r,u=pt(t.shape)/o,l=[...bo(n.slice(0,r)),1],c=pt(n);return{sliceRank:r,numUpdates:u,sliceSize:i,strides:l,outputSize:c}}var It={};Ee(It,{assertParamsValid:()=>BE,computeFlatOffset:()=>HE,computeOutShape:()=>WE,getNormalizedAxes:()=>UE,isSliceContinous:()=>GE,maskToAxes:()=>VE,parseSliceParams:()=>M0,sliceInfo:()=>qE,startForAxis:()=>L0,startIndicesWithElidedDims:()=>F0,stopForAxis:()=>z0,stopIndicesWithElidedDims:()=>O0,stridesForAxis:()=>P0,stridesWithElidedDims:()=>E0});var Qm=-2,ME=-1;function BE(e,t,n){let s=e.shape.length;P(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),P(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)P(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function VE(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function WE(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function E0(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function R0(e,t,n){return n<=e?n:n-(t-1)}function D0(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function UE(e,t,n,s,r,a,i,o,u){let l=e.length,c=new Array(l),h=new Array(l),d=new Array(l);if(t.length&&n>0){let p=t[0],f=n+1;c=F0(i,p,f,s,e),h=O0(o,p,f,r,e),d=E0(a,p,f,e)}else for(let p=0;p<l;p++)c[p]=L0(i,s,a,e,p,u),h[p]=z0(o,r,a,e,p,u),d[p]=P0(a,p,u);return{begin:c,end:h,strides:d}}function F0(e,t,n,s,r){let a=[...r],i=D0(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{let u=R0(t,n,o),l=s[u];e&1<<u&&(l=0),a[o]=l}return a}function O0(e,t,n,s,r){let a=[...r],i=D0(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{let u=R0(t,n,o),l=s[u];e&1<<u&&(l=Number.MAX_SAFE_INTEGER),a[o]=l}for(let o=0;o<a.length;o++){let u=r[o];a[o]<0&&(a[o]+=u),a[o]=rl(0,a[o],r[o])}return a}function P0(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function L0(e,t,n,s,r,a){let i=t[r],o=n[r]||1;(e&1<<r||a&1<<r||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=s[r];return i<0&&(i+=u),i=rl(0,i,u-1),i}function z0(e,t,n,s,r,a){let i=t[r],o=n[r]||1;(e&1<<r||a&1<<r||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=s[r];return i<0&&(i+=u),o>0?i=rl(0,i,u):i=rl(-1,i,u-1),i}function GE(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function HE(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function M0(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(i=>{P(i!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((i,o)=>i>=0?i:(P(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-s[o])),[s,a]}function qE(e,t,n,s,r,a,i,o,u){let l;if(s==null?(l=new Array(t.length),l.fill(1)):l=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let v=0;v<h.dims;v++)c&&(1<<v&o)!==0&&h.numAddAxisAfterEllipsis++,1<<v&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};jE(h,d);let p=!0,f=!0,m=!0,g=[],b=[];for(let v=0;v<e.length;++v){if(d.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);let x=!!(d.shrinkAxisMask&1<<v),k=e[v];if(k===-1){g.push(x?1:-1);continue}let C=[d.beginMask&1<<v,d.endMask&1<<v],$=[d.strides[v]>0?0:-1,d.strides[v]>0?k:k-1];if(x&&d.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[v]===1;let A=!!(d.beginMask&1<<v&&d.endMask&1<<v);if(d.beginValid&&d.endValid){if(x){let D=d.begin[v]<0?k+d.begin[v]:d.begin[v];if(d.begin[v]=D,d.end[v]=d.begin[v]+1,D<0||D>=k)throw Error(`slice index ${d.begin[v]} of dimension ${v} out of bounds.`)}else d.begin[v]=sw(d.begin[v],0,d.strides[v],k,C,$),d.end[v]=sw(d.end[v],1,d.strides[v],k,C,$);let R=d.strides[v]===1&&d.begin[v]===0&&d.end[v]===k;p=p&&R,f=f&&(v===0&&d.strides[v]===1||R)}else p=p&&d.strides[v]===1&&A,f=f&&(v===0&&d.strides[v]===1||A);let E,O=!1;if(d.beginValid&&d.endValid?(E=d.end[v]-d.begin[v],O=!0):x?(E=1,O=!0):A&&k>=0&&(d.strides[v]<0?E=-k:E=k,O=!0),O){let R;E===0||E<0!=d.strides[v]<0?R=0:R=Math.trunc(E/d.strides[v])+(E%d.strides[v]!==0?1:0),g.push(R)}else g.push(-1)}for(let v=0;v<d.finalShapeGatherIndices.length;++v){let x=d.finalShapeGatherIndices[v];x>=0?b.push(g[x]):x===Qm&&b.push(1)}return{finalShapeSparse:b.filter((v,x)=>d.finalShapeGatherIndices[x]!==Qm),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function jE(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(Qm),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(ME),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function sw(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let i=e<0?s+e:e;return i<a[0]?a[0]:i>a[1]?a[1]:i}}var ae={};Ee(ae,{Serializable:()=>B0,SerializationMap:()=>na,registerClass:()=>Fr});var B0=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},na=class{constructor(){this.classNameMap={}}static getMap(){return na.instance==null&&(na.instance=new na),na.instance}static register(e){na.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Fr(e){P(e.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),P(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),na.register(e)}var KE={};Ee(KE,{TEST_EPSILON_FLOAT16:()=>V0,encodeStrings:()=>W0,expectArrayBuffersEqual:()=>tR,expectArraysClose:()=>YE,expectArraysEqual:()=>QE,expectNumbersClose:()=>JE,expectPromiseToFail:()=>ZE,expectValuesInRange:()=>eR,testEpsilon:()=>Tb});var XE=.001,V0=.1;function YE(e,t,n){return n==null&&(n=Tb()),Jm(e,t,(s,r)=>$b(s,r,n))}function Tb(){return M.backend.floatPrecision()===32?XE:V0}function Jm(e,t,n){let s=!0;if((sn(e)||sn(t))&&(s=!1),sn(e)&&sn(t)&&(s=!0),s){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Ms(e),o=Ms(t);if(!_r(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let r=sn(e)?e:pa(e),a=sn(t)?t:pa(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let i=0;i<a.length;++i){let o=r[i],u=a[i];if(!n(o,u))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${u}.
Actual:   ${r}.
Expected: ${a}.`)}typeof expect!="undefined"&&expect().nothing()}function ZE(e,t){e().then(()=>t.fail(),()=>t()),typeof expect!="undefined"&&expect().nothing()}function QE(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return pr(e)||pr(e[0])||pr(t)||pr(t[0])?Jm(e,n,(s,r)=>s==r):Jm(e,t,(s,r)=>$b(s,r,0))}function JE(e,t,n){if(n==null&&(n=Tb()),!$b(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect!="undefined"&&expect().nothing()}function $b(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function eR(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function tR(e,t){let n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function W0(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?W0(n):e[t]=Xl(n)}return e}var U0="0.0.0";function nR(e,t){let n=_(e,"a","add"),s=_(t,"b","add");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(Ar,r)}var ie=z({add_:nR});function sR(e,t){let n=_(e,"a","floorDiv"),s=_(t,"b","floorDiv");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(qa,r)}var G0=z({floorDiv_:sR});function rR(e,t){let n=_(e,"a","div"),s=_(t,"b","div");if([n,s]=kt(n,s),n.dtype==="int32"&&s.dtype==="int32")return G0(n,s);let r={a:n,b:s},a={};return M.runKernel(Wa,r,a)}var xe=z({div_:rR});function aR(e,t){let n=_(e,"a","mul"),s=_(t,"b","mul");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(ai,r)}var V=z({mul_:aR});function iR(e){let t=_(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return M.runKernel(xh,n)}else{let n={x:t};return M.runKernel(yo,n)}}var Wt=z({abs_:iR});function oR(e){let n={x:_(e,"x","acos")};return M.runKernel(wl,n)}var uR=z({acos_:oR});function lR(e){let n={x:_(e,"x","acosh")};return M.runKernel(kl,n)}var cR=z({acosh_:lR});function dR(e){P(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),P(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>_(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!_r(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return M.runKernel(Aa,s)}var hR=z({addN_:dR});function pR(e,t=null,n=!1){let r={x:_(e,"x","all","bool")},a={axis:t,keepDims:n};return M.runKernel(Sl,r,a)}var H0=z({all_:pR});function fR(e,t=null,n=!1){let r={x:_(e,"x","any","bool")},a={axis:t,keepDims:n};return M.runKernel(Il,r,a)}var eg=z({any_:fR});function mR(e,t=0){let s={x:_(e,"x","argMax")},r={axis:t};return M.runKernel(Ea,s,r)}var ul=z({argMax_:mR});function gR(e,t=0){let s={x:_(e,"x","argMin")},r={axis:t};return M.runKernel(Cl,s,r)}var bR=z({argMin_:gR});function yR(e){let n={x:_(e,"x","asin")};return M.runKernel(Nl,n)}var vR=z({asin_:yR});function xR(e){let n={x:_(e,"x","asinh")};return M.runKernel(Tl,n)}var wR=z({asinh_:xR});function kR(e){let n={x:_(e,"x","atan")};return M.runKernel($l,n)}var SR=z({atan_:kR});function IR(e,t){let n=_(e,"a","atan2"),s=_(t,"b","atan2");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(Al,r)}var CR=z({atan2_:IR});function NR(e){let n={x:_(e,"x","atanh")};return M.runKernel(_l,n)}var TR=z({atanh_:NR});function $R(e,t,n,s,r="NHWC",a){let i=e[3],o=[...t,i],u=K0(r);return Zl(e,o,n,a,s,null,null,u)}function q0(e,t,n,s,r,a,i="channelsLast"){let[o,u]=Vd(t),l;if(i==="channelsLast")l=[o,u,e[3],e[3]];else if(i==="channelsFirst")l=[o,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Zl(e,l,n,s,r,a,!1,i)}function _R(e,t,n,s,r,a,i="NDHWC"){let[o,u,l]=tg(t),c,h;if(i==="NDHWC")h="channelsLast",c=[o,u,l,e[4],e[4]];else if(i==="NCDHW")h="channelsFirst",c=[o,u,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return j0(e,c,n,s,r,!1,h,a)}function Zl(e,t,n,s,r,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if(o==="channelsLast")[u,l,c,h]=e;else if(o==="channelsFirst")[u,h,l,c]=e;else throw new Error(`Unknown dataFormat ${o}`);let[d,p,,f]=t,[m,g]=Vd(n),[b,y]=Vd(s),v=ao(d,b),x=ao(p,y),{padInfo:k,outHeight:C,outWidth:$}=RR(r,l,c,m,g,v,x,a,o),A=i?f*h:f,E;return o==="channelsFirst"?E=[u,A,C,$]:o==="channelsLast"&&(E=[u,C,$,A]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:C,outWidth:$,outChannels:A,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:p,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:y,inShape:e,outShape:E,filterShape:t}}function j0(e,t,n,s,r,a=!1,i="channelsLast",o){let[u,l,c,h,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,l,c,h,d]=e;else if(i==="channelsFirst")[u,d,l,c,h]=e;else throw new Error(`Unknown dataFormat ${i}`);let[p,f,m,,g]=t,[b,y,v]=tg(n),[x,k,C]=tg(s),$=ao(p,x),A=ao(f,k),E=ao(m,C),{padInfo:O,outDepth:R,outHeight:D,outWidth:T}=DR(r,l,c,h,b,y,v,$,A,E,o),L=a?g*d:g,W;return i==="channelsFirst"?W=[u,L,R,D,T]:i==="channelsLast"&&(W=[u,R,D,T,L]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:d,outDepth:R,outHeight:D,outWidth:T,outChannels:L,padInfo:O,strideDepth:b,strideHeight:y,strideWidth:v,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:$,effectiveFilterHeight:A,effectiveFilterWidth:E,dilationDepth:x,dilationHeight:k,dilationWidth:C,inShape:e,outShape:W,filterShape:t}}function AR(e,t,n,s,r){s==null&&(s=_b(e,t,n));let a=e[0],i=e[1],o=ua((a-t+2*s)/n+1,r),u=ua((i-t+2*s)/n+1,r);return[o,u]}function ER(e,t,n,s,r,a){r==null&&(r=_b(e,t,s));let i=e[0],o=e[1],u=e[2],l=ua((i-t+2*r)/s+1,a),c=ua((o-t+2*r)/s+1,a),h=ua((u-t+2*r)/s+1,a);return[l,c,h,n]}function _b(e,t,n,s=1){let r=ao(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Vd(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function tg(e){return typeof e=="number"?[e,e,e]:e}function ao(e,t){return t<=1?e:e+(e-1)*(t-1)}function RR(e,t,n,s,r,a,i,o,u){let l,c,h;if(typeof e=="number"){l={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let p=AR([t,n],a,s,e,o);c=p[0],h=p[1]}else if(e==="same"){c=Math.ceil(t/s),h=Math.ceil(n/r);let d=Math.max(0,(c-1)*s+a-t),p=Math.max(0,(h-1)*r+i-n),f=Math.floor(d/2),m=d-f,g=Math.floor(p/2),b=p-g;l={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(e==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else if(typeof e=="object"){let d=u==="channelsLast"?e[1][0]:e[2][0],p=u==="channelsLast"?e[1][1]:e[2][1],f=u==="channelsLast"?e[2][0]:e[3][0],m=u==="channelsLast"?e[2][1]:e[3][1];l={top:d,bottom:p,left:f,right:m,type:d===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=ua((t-a+d+p)/s+1,o),h=ua((n-i+f+m)/r+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:l,outHeight:c,outWidth:h}}function DR(e,t,n,s,r,a,i,o,u,l,c){let h,d,p,f;if(typeof e=="number"){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=ER([t,n,s,1],o,1,r,e,c);d=g[0],p=g[1],f=g[2]}else if(e==="same"){d=Math.ceil(t/r),p=Math.ceil(n/a),f=Math.ceil(s/i);let m=(d-1)*r+o-t,g=(p-1)*a+u-n,b=(f-1)*i+l-s,y=Math.floor(m/2),v=m-y,x=Math.floor(g/2),k=g-x,C=Math.floor(b/2),$=b-C;h={top:x,bottom:k,left:C,right:$,front:y,back:v,type:"SAME"}}else if(e==="valid")h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),p=Math.ceil((n-u+1)/a),f=Math.ceil((s-l+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function ua(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function kr(e){let[t,n,s]=Vd(e);return t===1&&n===1&&s===1}function Us(e,t){return kr(e)||kr(t)}function K0(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function xn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")P(uo(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{P(uo(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function FR(e,t){let s={x:_(e,"x","reshape","string_or_numeric")},r={shape:t};return M.runKernel(Wo,s,r)}var U=z({reshape_:FR});function OR(e,t,n,s,r){let a=_(e,"x","avgPool","float32"),i=1;P(Us(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=a,u=!1;a.rank===3&&(u=!0,o=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),xn("avgPool",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},h=M.runKernel(Ra,l,c);return h=de(h,a.dtype),u?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Ab=z({avgPool_:OR});function PR(e,t,n,s,r,a="NDHWC"){let i=_(e,"x","avgPool3d","float32"),o=i,u=!1;i.rank===4&&(u=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),P(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),xn("avgPool3d",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=M.runKernel(yh,l,c);return h=de(h,o.dtype),u?U(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var X0=z({avgPool3d_:PR});function LR(e,t=0){P(e.length>=1,()=>"Pass at least one tensor to concat");let n=Ld(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return Js(n[0]);let s=n,r={axis:t};return M.runKernel(xo,s,r)}var Lt=z({concat_:LR});function zR(e){let n={x:_(e,"x","sigmoid","float32")};return M.runKernel(gi,n)}var er=z({sigmoid_:zR});function MR(e,t,n){let s=_(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return M.runKernel(jo,r,a)}var qe=z({slice_:MR});function BR(e){let n={x:_(e,"x","tanh","float32")};return M.runKernel(ki,n)}var ll=z({tanh_:BR});function VR(e,t,n,s,r,a){let i=_(e,"forgetBias","basicLSTMCell"),o=_(t,"lstmKernel","basicLSTMCell"),u=_(n,"lstmBias","basicLSTMCell"),l=_(s,"data","basicLSTMCell"),c=_(r,"c","basicLSTMCell"),h=_(a,"h","basicLSTMCell"),d=Lt([l,h],1),p=Ve(d,o),f=ie(p,u),m=f.shape[0],g=f.shape[1]/4,b=[m,g],y=qe(f,[0,0],b),v=qe(f,[0,g],b),x=qe(f,[0,g*2],b),k=qe(f,[0,g*3],b),C=ie(V(er(y),ll(v)),V(c,er(ie(i,x)))),$=V(ll(C),er(k));return[C,$]}var WR=z({basicLSTMCell_:VR});function UR(e,t,n){let s=_(e,"x","batchToSpaceND"),r=t.reduce((o,u)=>o*u);P(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),P(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),P(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},i={blockShape:t,crops:n};return M.runKernel(vo,a,i)}var Eb=z({batchToSpaceND_:UR});function GR(e){let t;return e.rank===0||e.rank===1?t=U(e,[1,1,1,e.size]):e.rank===2?t=U(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function HR(e,t,n,s,r,a){a==null&&(a=.001);let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;s!=null&&(c=_(s,"offset","batchNorm")),P(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(l==null||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:GR(i),scale:l,offset:c,mean:o,variance:u},p={varianceEpsilon:a},f=M.runKernel(ja,d,p);return U(f,i.shape)}var Vh=z({batchNorm_:HR});function qR(e,t,n,s,r,a){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),P(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),P(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Vh(i,o,u,c,l,a)}var Y0=z({batchNorm2d_:qR});function jR(e,t,n,s,r,a){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),P(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),P(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Vh(i,o,u,c,l,a)}var Z0=z({batchNorm3d_:jR});function KR(e,t,n,s,r,a){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),P(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),P(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Vh(i,o,u,c,l,a)}var Q0=z({batchNorm4d_:KR});function XR(e,t,n){let s=_(e,"x","bincount"),r=_(t,"weights","bincount");P(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),P(n>=0,()=>`size must be non-negative, but got ${n}.`),P(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},i={size:n};return M.runKernel(Yg,a,i)}var J0=z({bincount_:XR});function YR(e,t){let n=_(e,"s0","broadcastArgs","int32"),s=_(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return M.runKernel(Zg,r)}var ZR=z({broadcastArgs_:YR});function QR(e,t){let n=_(e,"broadcastTo","x"),s=n.shape;if(t.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=U(n,l)}let r=n.shape,a=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])a[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return Js(n);let o={x:n},u={reps:a};return M.runKernel(Rr,o,u)}var vd=z({broadcastTo_:QR});function JR(e){let n={x:_(e,"x","ceil","float32")};return M.runKernel(Oa,n)}var eD=z({ceil_:JR});function tD(e,t,n){let s=_(e,"x","clipByValue");P(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return M.runKernel(Er,r,a)}var Yn=z({clipByValue_:tD});function nD(e){return Lt(e,0)}var eS=z({concat1d_:nD});function sD(e,t){return Lt(e,t)}var tS=z({concat2d_:sD});function rD(e,t){return Lt(e,t)}var nS=z({concat3d_:rD});function aD(e,t){return Lt(e,t)}var sS=z({concat4d_:aD});function iD(e,t,n,s,r="NHWC",a=[1,1],i){let o=_(e,"x","conv2d","float32"),u=_(t,"filter","conv2d","float32"),l=o,c=!1;o.rank===3&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),xn("conv2d",s,i);let h=r==="NHWC"?l.shape[3]:l.shape[1];P(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),P(Us(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let d={x:l,filter:u},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=M.runKernel(Pa,d,p);return c?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var va=z({conv2d_:iD});function oD(e,t,n,s,r="NWC",a=1,i){let o=_(e,"x","conv1d"),u=_(t,"filter","conv1d"),l=o,c=!1;o.rank===2&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1]])),P(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),P(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),xn("conv1d",s,i),P(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),P(Us(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),P(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let h=U(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=U(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=va(d,h,[1,n],s,"NHWC",[1,a],i);return c?U(g,[g.shape[2],g.shape[3]]):U(g,[g.shape[0],g.shape[2],g.shape[3]])}var rS=z({conv1d_:oD});function uD(e,t,n,s,r,a="NHWC",i){P(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,l=!1;t.rank===3&&(l=!0,u=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),P(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),P(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),P(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let c=a==="NHWC"?o[3]:o[1],h=a==="NHWC"?u.shape[3]:u.shape[1];P(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),P(h===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`),xn("conv2dDerInput",r,i);let d={dy:u,filter:n},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=M.runKernel(La,d,p);return l?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Rb=z({conv2DBackpropInput_:uD});function lD(e,t,n,s,r,a){let i=_(e,"x","conv2dTranspose"),o=_(t,"filter","conv2dTranspose");return Rb(n,i,o,s,r,"NHWC",a)}var aS=z({conv2dTranspose_:lD});function cD(e,t,n,s,r="NDHWC",a=[1,1,1]){let i=_(e,"x","conv3d"),o=_(t,"filter","conv3d"),u=i,l=!1;i.rank===4&&(l=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),P(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),P(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),P(Us(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),P(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let c={x:u,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},d=M.runKernel(wh,c,h);return l?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var iS=z({conv3d_:cD});function dD(e,t,n,s,r){P(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,o=!1;t.rank===4&&(o=!0,i=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let u=a[4],l=i.shape[4];P(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),P(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),P(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),P(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),P(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);let c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},d=M.runKernel(eb,c,h);return o?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var oS=z({conv3DBackpropInput_:dD});function hD(e,t,n,s,r){let a=_(e,"x","conv3dTranspose"),i=_(t,"filter","conv3dTranspose");return oS(n,a,i,s,r)}var uS=z({conv3dTranspose_:hD});function pD(e){let n={x:_(e,"x","cos","float32")};return M.runKernel(za,n)}var Db=z({cos_:pD});function fD(e){let n={x:_(e,"x","cosh","float32")};return M.runKernel(Ma,n)}var lS=z({cosh_:fD});function mD(e,t=0,n=!1,s=!1){let a={x:_(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:s};return M.runKernel(wo,a,i)}var ng=z({cumprod_:mD});function gD(e,t=0,n=!1,s=!1){let a={x:_(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:s};return M.runKernel(Ba,a,i)}var cS=z({cumsum_:gD});function bD(e,t,n,s=!1){let r=_(e,"x","denseBincount"),a=_(t,"weights","denseBincount");P(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),P(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),P(n>=0,()=>`size must be non-negative, but got ${n}.`),P(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let i={x:r,weights:a},o={size:n,binaryOutput:s};return M.runKernel(tb,i,o)}var yD=z({denseBincount_:bD});function vD(e,t,n="NHWC"){let s=_(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],i=n==="NHWC"?s.shape[3]:s.shape[1];P(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),P(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),P(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),P(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);let o={x:s},u={blockSize:t,dataFormat:n};return M.runKernel(So,o,u)}var xD=z({depthToSpace_:vD});function wD(e,t,n,s,r="NHWC",a=[1,1],i){let o=_(e,"x","depthwiseConv2d","float32"),u=_(t,"filter","depthwiseConv2d","float32"),l=o,c=!1;o.rank===3&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let h=r==="NHWC"?l.shape[3]:l.shape[1];P(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),xn("depthwiseConv2d",s,i);let d={x:l,filter:u},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=M.runKernel(Va,d,p);return c?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Wh=z({depthwiseConv2d_:wD});function kD(e){let n={x:_(e,"x","diag")};return M.runKernel(rb,n)}var SD=z({diag_:kD});function ID(e,t,n,s,r=[1,1],a="NHWC"){let i=_(e,"x","dilation2d"),o=_(t,"filter","dilation2d");P(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),P(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),P(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let u=i,l=!1;i.rank===3&&(u=U(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);let c={x:u,filter:o},h={strides:n,pad:s,dilations:r},d=M.runKernel(kh,c,h);return l?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var CD=z({dilation2d_:ID});function ND(e,t){let n=_(e,"a","equal","string_or_numeric"),s=_(t,"b","equal","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Io,r)}var ss=z({equal_:ND});function TD(e,t,n){let s=_(t,"a","where"),r=_(n,"b","where"),a=_(e,"condition","where","bool"),i=it(it(a.shape,s.shape),r.shape),o=vd(a,i),u=vd(s,i),l=vd(r,i),c={condition:o,t:u,e:l};return M.runKernel(qo,c)}var En=z({where_:TD});function $D(e){let n={x:_(e,"x","zerosLike")};return M.runKernel(nu,n)}var je=z({zerosLike_:$D});function _D(e,t){let n=_(e,"a","div"),s=_(t,"b","div");[n,s]=kt(n,s);let r=xe(n,s),a=je(r),i=ss(s,a);return En(i,a,r)}var AD=z({divNoNan_:_D});function ED(e,t){let n=_(e,"t1","dot"),s=_(t,"t2","dot");P((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(P(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let i=U(n,[1,-1]),o=U(s,[-1,1]),u=Ve(i,o);return U(u,[])}else if(n.rank===1&&s.rank===2){let i=U(n,[1,-1]),o=U(s,[s.shape[0],s.shape[1]]),u=Ve(i,o);return U(u,[u.size])}else if(n.rank===2&&s.rank===1){let i=U(s,[-1,1]),o=Ve(n,i);return U(o,[o.size])}else{let i=U(s,[s.shape[0],s.shape[1]]);return Ve(n,i)}}var RD=z({dot_:ED});function DD(e,...t){let n=t.map((r,a)=>_(r,`tensors${a}`,"einsum")),s={equation:e};return M.runKernel(Sh,n,s)}var FD=z({einsum_:DD});function OD(e){let n={x:_(e,"x","elu","float32")};return M.runKernel(Ua,n)}var Uh=z({elu_:OD});function PD(e){let t=_(e,"x","erf");P(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=de(t,"float32"));let n={x:t};return M.runKernel(El,n)}var LD=z({erf_:PD});function Fb(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function dS(e,t,n){let s=e.length+t.length,r=[],a=0,i=0;for(let o=0;o<s;o++)n.indexOf(o)===-1?r.push(e[a++]):r.push(t[i++]);return r}function hS(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function xa(e,t){let n=t.map(s=>1);return dS(e,n,t)}function zD(e,t,n){P(Fb(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function pS(e,t){if(Fb(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function Ob(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function MD(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function BD(e,t=null,n=!1){let r={x:_(e,"x","max")},a={reductionIndices:t,keepDims:n};return M.runKernel(Qa,r,a)}var Ps=z({max_:BD});function VD(e,t=null,n=!1){let r={x:_(e,"x","min")},a={axis:t,keepDims:n};return M.runKernel(ni,r,a)}var sg=z({min_:VD});function WD(e,t){let n=_(e,"base","pow"),s=_(t,"exp","pow");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(oi,r)}var wa=z({pow_:WD});function Se(e,t){if((sn(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&sn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Dr(e,[],[],t)}function UD(e){let n={x:_(e,"x","sqrt","float32")};return M.runKernel(bi,n)}var yn=z({sqrt_:UD});function GD(e){let t=_(e,"x","square"),n={};return M.runKernel("Square",{x:t},n)}var ht=z({square_:GD});function HD(e,t=null,n=!1){let s=_(e,"x","sum");s.dtype==="bool"&&(s=de(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return M.runKernel(yi,r,a)}var ve=z({sum_:HD});function qD(e,t="euclidean",n=null,s=!1){e=_(e,"x","norm");let r=fS(e,t,n),a=r.shape;if(s){let i=os(n,e.shape);a=xa(r.shape,i)}return U(r,a)}function fS(e,t,n=null){if(e.rank===0)return Wt(e);if(e.rank!==1&&n===null)return fS(U(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ve(Wt(e),n);if(t===1/0)return Ps(Wt(e),n);if(t===-1/0)return sg(Wt(e),n);if(t==="euclidean"||t===2)return yn(ve(wa(Wt(e),Se(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Ps(ve(Wt(e),n[0]),n[1]-1);if(t===1/0)return Ps(ve(Wt(e),n[1]),n[0]);if(t===-1/0)return sg(ve(Wt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return yn(ve(ht(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Gh=z({norm_:qD});function jD(e,t=null,n=!1){return Gh(e,"euclidean",t,n)}var KD=z({euclideanNorm_:jD});function XD(e){let n={x:_(e,"x","exp")};return M.runKernel(Ga,n)}var rs=z({exp_:XD});function YD(e,t=0){let n=_(e,"x","expandDims","string_or_numeric");P(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return M.runKernel(Co,s,r)}var Nn=z({expandDims_:YD});function ZD(e){let n={x:_(e,"x","expm1")};return M.runKernel(No,n)}var QD=z({expm1_:ZD});function JD(e,t){let n=_(e,"x","tile","string_or_numeric");P(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return M.runKernel(Rr,s,r)}var xs=z({tile_:JD});function eF(e,t,n,s="float32"){t==null&&(t=e);let r=_e([e,t],s),a=e<=t?e:t;for(let o=0;o<a;++o)r.set(1,o,o);let i=U(r.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return xs(Nn(i,0),[n[0],1,1]);if(n.length===2)return xs(Nn(Nn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return xs(Nn(Nn(Nn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var Pb=z({eye_:eF});function Ql(e,t,n){let s={shape:e,value:t,dtype:n};return M.runKernel(Rl,{},s)}function tF(e){let n={x:_(e,"x","floor","float32")};return M.runKernel(Ha,n)}var Hh=z({floor_:tF});function nF(e,t,n=0,s=0){let r=_(e,"x","gather"),a=_(t,"indices","gather","int32"),i={x:r,indices:a},o={axis:n,batchDims:s};return M.runKernel($o,i,o)}var qh=z({gather_:nF});function sF(e,t){let n=_(e,"a","greater","string_or_numeric"),s=_(t,"b","greater","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Ao,r)}var Qn=z({greater_:sF});function rF(e,t){let n=_(e,"a","greaterEqual","string_or_numeric"),s=_(t,"b","greaterEqual","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Ka,r)}var ou=z({greaterEqual_:rF});function aF(e){let n={x:_(e,"x","isFinite")};return M.runKernel(Dl,n)}var iF=z({isFinite_:aF});function oF(e){let n={x:_(e,"x","isInf")};return M.runKernel(Fl,n)}var uF=z({isInf_:oF});function lF(e){let n={x:_(e,"x","isNaN")};return M.runKernel(Ol,n)}var cF=z({isNaN_:lF});function dF(e,t=.2){let s={x:_(e,"x","leakyRelu")},r={alpha:t};return M.runKernel(Ya,s,r)}var Lb=z({leakyRelu_:dF});function hF(e,t){let n=_(e,"a","less","string_or_numeric"),s=_(t,"b","less","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Eo,r)}var mS=z({less_:hF});function pF(e,t){let n=_(e,"a","lessEqual","string_or_numeric"),s=_(t,"b","lessEqual","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Ro,r)}var uu=z({lessEqual_:pF});function fF(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return M.runKernel(ub,{},s)}function mF(e,t=5,n=1,s=1,r=.5){let a=_(e,"x","localResponseNormalization");P(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),P(uo(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;a.rank===3&&(o=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let u={x:i},l={depthRadius:t,bias:n,alpha:s,beta:r},c=M.runKernel(Ch,u,l);return o?U(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var gF=z({localResponseNormalization_:mF});function bF(e){let n={x:_(e,"x","log","float32")};return M.runKernel(Za,n)}var as=z({log_:bF});function yF(e){let n={x:_(e,"x","log1p")};return M.runKernel(Pl,n)}var zb=z({log1p_:yF});function vF(e,t){P(Ad(e),()=>"The f passed in variableGrads(f) must be a function"),P(t==null||Array.isArray(t)&&t.every(l=>l instanceof Pd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let l in M.registeredVariables)t.push(M.registeredVariables[l])}let s=n?t.filter(l=>!l.trainable):null,r=t.length;t=t.filter(l=>l.trainable),P(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:i,grads:o}=M.gradients(e,t,null,a);P(o.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return t.forEach((l,c)=>{o[c]!=null&&(u[l.name]=o[c])}),s!=null&&s.forEach(l=>u[l.name]=null),{value:i,grads:u}}function tr(e){return M.customGrad(e)}function xF(e){let n={x:_(e,"x","softplus")};return M.runKernel(Gl,n)}var Jl=z({softplus_:xF});function wF(e){let t=_(e,"x","logSigmoid");return tr(s=>({value:wt(Jl(wt(s))),gradFunc:i=>V(i,er(wt(s)))}))(t)}var kF=z({logSigmoid_:wF});function SF(e,t){let n=_(e,"a","sub"),s=_(t,"b","sub");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(wi,r)}var me=z({sub_:SF});function IF(e,t=-1){let n=_(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return tr((r,a)=>{let o=Ps(r,t,!0),u=me(r,o),l=me(de(u,"float32"),as(ve(rs(u),t,!0)));return a([l]),{value:l,gradFunc:(h,d)=>{let[p]=d,f=!0,m=rs(p);return me(h,V(ve(h,t,f),m))}}})(n)}var gS=z({logSoftmax_:IF});function CF(e,t=null,n=!1){let s=_(e,"x","logSumExp"),r=os(t,s.shape),a=Ps(s,r,!0),i=me(s,a),o=rs(i),u=ve(o,r),l=as(u),c=ie(U(a,l.shape),l);if(n){let h=xa(c.shape,r);return U(c,h)}return c}var bS=z({logSumExp_:CF});function NF(e,t){let n=_(e,"a","logicalAnd","bool"),s=_(t,"b","logicalAnd","bool");it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Do,r)}var Bs=z({logicalAnd_:NF});function TF(e){let n={x:_(e,"x","logicalNot","bool")};return M.runKernel(Fo,n)}var Mb=z({logicalNot_:TF});function $F(e,t){let n=_(e,"a","logicalOr","bool"),s=_(t,"b","logicalOr","bool");it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Ll,r)}var yS=z({logicalOr_:$F});function _F(e,t){let n=_(e,"a","logicalXor","bool"),s=_(t,"b","logicalXor","bool");return it(n.shape,s.shape),Bs(yS(e,t),Mb(Bs(e,t)))}var AF=z({logicalXor_:_F}),sd=2147483648;function EF(e,t,n="left"){let s=_(e,"sortedSequence","searchSorted"),r=_(t,"values","searchSorted"),a=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],o=U(s,[-1,a]),u=U(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(pt(u.shape)>=sd)throw new Error(`values tensor size must less than ${sd}`);if(o.shape[1]>=sd)throw new Error(`trailing dim_size must less than ${sd} for int32 output type, was ${o.shape[1]}`);let l={sortedSequence:o,values:u},c={side:n};return M.runKernel(gb,l,c)}var Bb=z({searchSorted_:EF});function RF(e,t){return Bb(e,t,"left")}function DF(e,t,n,s,r){let a=_(e,"x","maxPool"),i=1,o=a,u=!1;a.rank===3&&(u=!0,o=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),P(Us(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),xn("maxPool",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},h=M.runKernel(ei,l,c);return u?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var Vb=z({maxPool_:DF});function FF(e,t=[1,1,1],n,s,r,a="NDHWC"){let i=_(e,"x","maxPool3d"),o=i,u=!1;i.rank===4&&(u=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),P(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),xn("maxPool3d",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=M.runKernel(Nh,l,c);return u?U(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var vS=z({maxPool3d_:FF});function OF(e,t,n,s,r=!1){let i={x:_(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},u=M.runKernel(hb,i,o);return{result:u[0],indexes:u[1]}}var PF=z({maxPoolWithArgmax_:OF});function LF(e,t){let n=_(e,"a","maximum"),s=_(t,"b","maximum");[n,s]=kt(n,s),n.dtype==="bool"&&(n=de(n,"int32"),s=de(s,"int32")),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Ja,r)}var Or=z({maximum_:LF});function zF(e,t=null,n=!1){let r={x:_(e,"x","mean")},a={axis:t,keepDims:n};return M.runKernel(ti,r,a)}var Nt=z({mean_:zF});function Et(e,t="float32"){if(t==="complex64"){let s=Et(e,"float32"),r=Et(e,"float32");return wr(s,r)}let n=gh(pt(e),t);return M.makeTensor(n,e,t)}function $n(e,t="float32"){if(t==="complex64"){let s=$n(e,"float32"),r=Et(e,"float32");return wr(s,r)}let n=Gg(pt(e),t);return M.makeTensor(n,e,t)}function MF(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=_(e,"x","meshgrid",e instanceof ut?e.dtype:"float32");if(t===void 0)return[s];let r=_(t,"y","meshgrid",t instanceof ut?t.dtype:"float32"),a=pt(s.shape),i=pt(r.shape);return n==="xy"?(s=U(s,[1,-1]),r=U(r,[-1,1]),[Ve($n([i,1],s.dtype),s),Ve(r,$n([1,a],r.dtype))]):(s=U(s,[-1,1]),r=U(r,[1,-1]),[Ve(s,$n([1,i],s.dtype)),Ve($n([a,1],r.dtype),r)])}function BF(e,t){let n=_(e,"a","minimum"),s=_(t,"b","minimum");[n,s]=kt(n,s),n.dtype==="bool"&&(n=de(n,"int32"),s=de(s,"int32")),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(si,r)}var jh=z({minimum_:BF});function VF(e,t,n){P(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=_(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let o=0;o<s.rank;o++)P(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(t[o][0]>=0&&t[o][0]<=s.shape[o]-r&&t[o][1]>=0&&t[o][1]<=s.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},i={x:s};return M.runKernel(ri,i,a)}var WF=z({mirrorPad_:VF});function UF(e,t){let n=_(e,"a","mod"),s=_(t,"b","mod");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(zl,r)}var GF=z({mod_:UF});function HF(e,t=null,n=!1){e=_(e,"x","moments");let s=os(t,e.shape),r=Nt(e,s,n),a=r.shape;n||(a=xa(r.shape,s));let i=ht(me(de(e,"float32"),U(r,a))),o=Nt(i,s,n);return{mean:r,variance:o}}var Kh=z({moments_:HF});function qF(e,t,n,s){let r=_(t,"data","multiRNNCell"),a=Ld(n,"c","multiRNNCell"),i=Ld(s,"h","multiRNNCell"),o=r,u=[];for(let h=0;h<e.length;h++){let d=e[h](o,a[h],i[h]);u.push(d[0]),u.push(d[1]),o=d[1]}let l=[],c=[];for(let h=0;h<u.length;h+=2)l.push(u[h]),c.push(u[h+1]);return[l,c]}var jF=z({multiRNNCell_:qF});function KF(e,t,n,s=!1){let r=_(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let u={logits:i===1?U(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:s},c=M.runKernel(pb,u,l);return i===1?U(c,[c.size]):c}var XF=z({multinomial_:KF});function YF(e,t){let n=_(e,"a","notEqual","string_or_numeric"),s=_(t,"b","notEqual","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Po,r)}var cl=z({notEqual_:YF});function ZF(e){let n={x:_(e,"x","onesLike")};return M.runKernel(Mo,n)}var is=z({onesLike_:ZF});function QF(e,t){let n=_(e,"v1","outerProduct"),s=_(t,"v2","outerProduct");P(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=U(n,[-1,1]),a=U(s,[1,-1]);return Ve(r,a)}var JF=z({outerProduct_:QF});function e3(e,t,n=0){let s=_(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return M.runKernel(ii,a,r)}var Ii=z({pad_:e3});function t3(e,t,n=0){return P(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ii(e,[t],n)}var n3=z({pad1d_:t3});function s3(e,t,n=0){return P(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ii(e,t,n)}var r3=z({pad2d_:s3});function a3(e,t,n=0){return P(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ii(e,t,n)}var i3=z({pad3d_:a3});function o3(e,t,n=0){return P(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ii(e,t,n)}var u3=z({pad4d_:o3});function l3(e,t,n){let s=_(e,"x","spaceToBatchND");P(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),P(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),P(s.shape.reduce((i,o,u)=>u>0&&u<=t.length?i&&(o+n[u-1][0]+n[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return M.runKernel(Xo,r,a)}var Wb=z({spaceToBatchND_:l3});function c3(e,t,n,s,r,a,i){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let o=_(e,"x","maxPool"),u=o,l=!1;o.rank===3&&(l=!0,u=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(Us(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=q0(u.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=h3([c.filterHeight,c.filterWidth],h):d=[[0,0],[0,0]];let p=h[0]===1&&h[1]===1,[f,m]=d3([c.inHeight,c.inWidth],h,d),g=p?s:"valid",b=p?u:Wb(u,h,f),v=(n==="avg"?()=>Ab(b,t,a,g,i):()=>Vb(b,t,a,g,i))(),x=p?v:Eb(v,h,m);return l?U(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function d3(e,t,n){let s=n.map(c=>c[0]),r=n.map(c=>c[1]),a=e.concat(s,r),i=t.map((c,h)=>(c-a[h]%c)%c),o=r.map((c,h)=>c+i[h]),u=t.map((c,h)=>[s[h],o[h]]),l=t.map((c,h)=>[0,i[h]]);return[u,l]}function h3(e,t){let s=e.map((i,o)=>i+(i-1)*(t[o]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),a=s.map((i,o)=>i-r[o]);return s.map((i,o)=>[r[o],a[o]])}var p3=z({pool_:c3});function f3(e,t){let n=_(e,"x","prelu"),s=_(t,"alpha","prelu"),r={x:n,alpha:s};return M.runKernel(ui,r)}var Ub=z({prelu_:f3});function m3(e,t=null,n=!1){let s=_(e,"x","prod");s.dtype==="bool"&&(s=de(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return M.runKernel(li,r,a)}var g3=z({prod_:m3});function b3(e,t,n){let s=pt(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return M.makeTensor(r,e,n)}var y3=z({rand_:b3}),Gb=$a(hh()),Hb=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=Gb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},v3=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=Gb.alea(r.toString()),this.randn=new Hb(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},x3=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Gb.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function w3(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new v3(t,n,s,r),i=_e(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var k3=z({randomGamma_:w3});function S3(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new Hb(t,n,s,!1,r),i=_e(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var qb=z({randomNormal_:S3});function I3(e,t,n){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return qb(e,0,1,t,n)}var C3=z({randomStandardNormal_:I3});function N3(e,t=0,n=1,s="float32",r){let a=_e(e,s),i=new x3(t,n,null,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}var ec=z({randomUniform_:N3});function dl(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return M.runKernel(Bl,{},r)}function T3(e){let n={x:_(e,"x","reciprocal")};return M.runKernel(Vl,n)}var $3=z({reciprocal_:T3});function _3(e){let n={x:_(e,"x","relu")};return M.runKernel(ci,n)}var sr=z({relu_:_3});function A3(e){let n={x:_(e,"x","relu6")};return M.runKernel(pi,n)}var xS=z({relu6_:A3});function E3(e,t){let s={x:_(e,"x","reverse")},r={dims:t};return M.runKernel(Uo,s,r)}var Ss=z({reverse_:E3});function R3(e){let t=_(e,"x","reverse");return P(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Ss(t,0)}var D3=z({reverse1d_:R3});function F3(e,t){let n=_(e,"x","reverse");return P(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Ss(n,t)}var O3=z({reverse2d_:F3});function P3(e,t){let n=_(e,"x","reverse");return P(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Ss(n,t)}var L3=z({reverse3d_:P3});function z3(e,t){let n=_(e,"x","reverse");return P(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Ss(n,t)}var M3=z({reverse4d_:z3});function B3(e){let n={x:_(e,"x","round")};return M.runKernel(Go,n)}var wS=z({round_:B3});function V3(e){let n={x:_(e,"x","rsqrt","float32")};return M.runKernel(fi,n)}var kS=z({rsqrt_:V3});function W3(e){let n={x:_(e,"x","selu")};return M.runKernel(Wl,n)}var SS=z({selu_:W3});function U3(e,t,n,s,r,a=[1,1],i="NHWC"){let o=_(e,"x","separableConv2d"),u=_(t,"depthwiseFilter","separableConv2d"),l=_(n,"pointwiseFilter","separableConv2d"),c=o,h=!1;if(o.rank===3&&(h=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),P(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let d=u.shape[2],p=u.shape[3];P(l.shape[2]===d*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${l.shape[2]}.`);let f=Wh(c,u,s,r,i,a),g=va(f,l,1,"valid",i);return h?U(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var IS=z({separableConv2d_:U3});async function G3(e,t){let n=_(e,"x","setdiff1d"),s=_(t,"y","setdiff1d");P(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),P(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),P(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),i=new Set(a),o=0;for(let c=0;c<r.length;c++)i.has(r[c])||o++;let u=new Ht([o],n.dtype),l=new Ht([o],"int32");for(let c=0,h=0;c<r.length;c++)i.has(r[c])||(u.values[h]=r[c],l.values[h]=c,h++);return[u.toTensor(),l.toTensor()]}var H3=G3;function q3(e){let n={x:_(e,"x","sign")};return M.runKernel(Ul,n)}var j3=z({sign_:q3});function K3(e){let n={x:_(e,"x","sin","float32")};return M.runKernel(mi,n)}var CS=z({sin_:K3});function X3(e){let n={x:_(e,"x","sinh")};return M.runKernel(Ko,n)}var NS=z({sinh_:X3});function Y3(e,t,n){let s=_(e,"x","slice1d");return P(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),qe(s,[t],[n])}var Xh=z({slice1d_:Y3});function Z3(e,t,n){let s=_(e,"x","slice2d");return P(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),qe(s,t,n)}var jb=z({slice2d_:Z3});function Q3(e,t,n){let s=_(e,"x","slice3d");return P(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),qe(s,t,n)}var Yh=z({slice3d_:Q3});function J3(e,t,n){let s=_(e,"x","slice4d");return P(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),qe(s,t,n)}var hl=z({slice4d_:J3});function eO(e,t=-1){let n=_(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return M.runKernel(vi,s,r)}var Kb=z({softmax_:eO});function tO(e){P(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return M.runKernel(ib,t)}var Xb=z({fft_:tO});function nO(e){P(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return M.runKernel(ob,t)}var Wd=z({ifft_:nO});function sO(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=U(e,[n,t]);s=Wd(r)}else{let r=[n,2*(t-1)],a=U(ol(e),[n,t]),i=U(Mh(e),[n,t]),o=Ss(qe(a,[0,1],[n,t-2]),1),u=V(Ss(qe(i,[0,1],[n,t-2]),1),Se(-1)),l=Lt([a,o],1),c=Lt([i,u],1),h=U(wr(l,c),[r[0],r[1]]);s=Wd(h)}if(s=ol(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=U(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var TS=z({irfft_:sO});function rO(e,t,n=0){let r={x:_(e,"x","split")},a={numOrSizeSplits:t,axis:n};return M.runKernel(Yo,r,a)}var _n=z({split_:rO});function aO(e,t){P(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=qe(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=Lt([e,Et(f)],e.shape.length-1),n=t}else r=e;let a=je(r),i=U(wr(r,a),[s,n]),o=Xb(i),u=Math.floor(n/2)+1,l=ol(o),c=Mh(o),h=_n(l,[u,n-u],l.shape.length-1),d=_n(c,[u,n-u],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=u,U(wr(h[0],d[0]),p)}var Yb=z({rfft_:aO});function iO(e,t){let n=_(e,"a","squaredDifference"),s=_(t,"b","squaredDifference");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s},a={};return M.runKernel(xi,r,a)}var $S=z({squaredDifference_:iO});function oO(e,t){let n=_(e,"x","squeeze","string_or_numeric");return U(n,Ok(n.shape,t).newShape)}var Pr=z({squeeze_:oO});function uO(e,t=0){let n=Ld(e,"tensors","stack","string_or_numeric");P(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&P(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return M.runKernel(Vo,s,r)}var Wn=z({stack_:uO});function lO(e,t=0){let s={x:_(e,"x","step")},r={alpha:t};return M.runKernel(Si,s,r)}var tc=z({step_:lO});function cO(e,t,n,s,r=0,a=0,i=0,o=0,u=0){let c={x:_(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return M.runKernel(Zo,c,h)}var dO=z({stridedSlice_:cO});function hO(e){let n={x:_(e,"x","tan","float32")};return M.runKernel(Qo,n)}var pO=z({tan_:hO});function gn(e,t){_a(e);let n=Ms(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Dr(e,null,n,t)}function la(e,t,n){if(_a(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Ms(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Dr(e,t,s,n)}function fO(e,t,n){if(_a(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Ms(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Dr(e,t,s,n)}function mO(e,t,n){if(_a(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Ms(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Dr(e,t,s,n)}function gO(e,t,n){if(_a(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Ms(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Dr(e,t,s,n)}function bO(e,t=1,n=!0){let s=_(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},i={k:t,sorted:n},[o,u]=M.runKernel(Jo,a,i);return{values:o,indices:u}}var yO=z({topk_:bO});function vO(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new Hb(t,n,s,!0,r),i=_e(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var Zb=z({truncatedNormal_:vO});function xO(e,t=0){let n=_(e,"x","unique","string_or_numeric");P(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,i]=M.runKernel(bb,s,r);return{values:a,indices:i}}var wO=z({unique_:xO});function kO(e,t,n){let s=_(e,"x","unsortedSegmentSum"),r=_(t,"segmentIds","unsortedSegmentSum","int32");P(uo(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},i={numSegments:n};return M.runKernel(Fh,a,i)}var _S=z({unsortedSegmentSum_:kO});function SO(e,t=0){let n=_(e,"x","unstack","string_or_numeric");P(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return M.runKernel(tu,s,r)}var Vs=z({unstack_:SO});function IO(e,t){return Bb(e,t,"right")}function AS(e,t=!0,n,s){return M.makeVariable(e,t,n,s)}function ES(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=_e(e,"int32"),r=_e([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let i=s.indexToLoc(n[a]),o=a*e.length;r.values.set(i,o)}return r.toTensor()}async function CO(e){let t=_(e,"condition","whereAsync","bool"),n=await t.data(),s=ES(t.shape,n);return e!==t&&t.dispose(),s}var RS=CO;async function NO(e,t,n){let s=_(e,"tensor","boolMask"),r=_(t,"mask","boolMask","bool"),a=n==null?0:n,i=r.rank,o=s.shape;P(i>0,()=>"mask cannot be scalar"),Zn(o.slice(a,a+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=a;m<a+i;m++)u*=o[m];let l=o.slice(0,a).concat([u],o.slice(a+i)),c=U(s,l),h=U(r,[-1]),d=await RS(h),p=Pr(d,[1]),f=qh(c,p,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),p.dispose(),c.dispose(),h.dispose(),d.dispose(),f}var TO=NO;function $O(e,t,n,s,r=!0){let a=_(e,"v","movingAverage"),i=_(t,"x","movingAverage"),o=_(n,"decay","movingAverage");Jk(a,i),P(_r(a.shape,i.shape),()=>"Shape mismatch in v and x");let u=Se(1),l=me(u,o),c=V(me(i,a),l);if(r){P(s!=null,()=>"When using zeroDebias: true, step is required.");let h=_(s,"step","movingAverage");c=xe(c,me(u,wa(o,h)))}return ie(a,c)}var _O=z({movingAverage_:$O});function AO(e,t,n){let s=_(e,"indices","scatterND","int32"),r=_(t,"updates","scatterND");Nb(r,s,n);let a={indices:s,updates:r},i={shape:n};return M.runKernel(Ho,a,i)}var EO=z({scatterND_:AO});function RO(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function DO(e,t,n,s=0){let r=_(e,"sparseIndices","sparseToDense","int32"),a=_(t,"sparseValues","sparseToDense","string_or_numeric"),i=_(s,"defaultValue","sparseToDense",a.dtype);RO(r,a,n,i);let o={sparseIndices:r,sparseValues:a,defaultValue:i},u={outputShape:n};return M.runKernel(Eh,o,u)}var FO=z({sparseToDense_:DO});function OO(e,t){let n=_(t,"indices","gatherND","int32"),r={params:_(e,"x","gatherND","string_or_numeric"),indices:n};return M.runKernel(_o,r)}var PO=z({gatherND_:OO});function LO(e,t){if(t==null)return e.shape.slice();if(_r(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function zO(e,t,n,s){let r=_(e,"x","dropout");if(P(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),P(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof ut?r.clone():r;let a=LO(r,n),i=1-t,o=xe(Hh(ie(ec(a,0,1,"float32",s),i)),i);return V(r,o)}var DS=z({dropout_:zO});function FS(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Qb(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return gn(r,"float32")}async function MO(e,t,n=1){let s=_(e,"predictions","inTopK"),r=_(t,"targets","inTopK");P(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),P(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Zn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];P(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let i=await s.data(),o=await r.data(),[u,l]=[i.length/a,a],c=Pk("bool",u);for(let h=0;h<u;h++){let d=h*l,p=i.subarray(d,d+l),f=[];for(let m=0;m<p.length;m++)f.push({value:p[m],index:m});f.sort((m,g)=>g.value-m.value),c[h]=0;for(let m=0;m<n;m++)if(f[m].index===o[h]){c[h]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),ns(c,r.shape,"bool")}var BO=MO,pl={};Ee(pl,{conv2d:()=>UO,depthwiseConv2d:()=>jO,matMul:()=>XO});function VO(e,t,n,s,r,a="NHWC",i){let o=e;e.rank===3&&(o=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=U(t,[1,t.shape[0],t.shape[1],t.shape[2]])),P(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),P(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),P(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let l=a==="NHWC"?o.shape[3]:o.shape[1],c=a==="NHWC"?u.shape[3]:u.shape[1];P(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),P(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),xn("conv2dDerFilter",r,i);let h={x:o,dy:u},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return M.runKernel(Qg,h,d)}var Jb=z({conv2DBackpropFilter_:VO});function Zh(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return V(e,tc(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Qh(e,t){let n=t,s=Rt(e.shape,t.shape);return s.length>0&&(n=ve(n,s)),U(n,e.shape)}function Jh(e,t,n,s){if(t==="linear")return e;if(t==="relu")return sr(e);if(t==="elu")return Uh(e);if(t==="relu6")return xS(e);if(t==="prelu")return Ub(e,n);if(t==="leakyrelu")return Lb(e,s);if(t==="sigmoid")return er(e);throw new Error(`Unknown fused activation ${t}.`)}var ep=(e,t)=>!(e>0)||t==="linear";function WO({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",ep(M.state.gradientDepth,u)===!1){P(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=va(e,t,n,s,r,a,i);return o!=null&&(C=ie(C,o)),Jh(C,u,l,c)}let h=_(e,"x","conv2d","float32"),d=_(t,"filter","conv2d","float32"),p=h,f=!1;h.rank===3&&(f=!0,p=U(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),P(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),xn("fused conv2d",s,i);let m=r==="NHWC"?p.shape[3]:p.shape[1];P(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),P(Us(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let g=Zl(p.shape,d.shape,n,a,s,i),b;o!=null&&(b=_(o,"bias","fused conv2d"),[b]=kt(b,h),r==="NHWC"?it(g.outShape,b.shape):(P(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),P(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let y;if(l!=null){let C=l.shape;if(P(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)P(C[0]===1||C[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${g.outChannels}).`);else if(C.length===3)try{it(C,g.outShape)}catch($){let A=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(A)}y=_(l,"prelu weights","fused conv2d")}let v=(C,$)=>{P(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);let[A,E,O,R]=$,D=Zh(C,O,u);P(kr(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let T=Rb(E.shape,D,A,n,s),L=Jb(E,D,A.shape,n,s),W=[T,L];if(R!=null){let q=Qh(R,D);W.push(q)}return W},x={x:p,filter:d,bias:b,preluActivationWeights:y},k={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return o==null?tr(($,A,E)=>{let O=M.runKernel(ma,x,k);return E([A,$,O]),f&&(O=U(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:v}})(p,d):tr(($,A,E,O)=>{let R=M.runKernel(ma,x,k);return O([A,$,R,E]),f&&(R=U(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:v}})(p,d,b)}var UO=z({fusedConv2d_:WO});function GO(e,t,n,s,r,a=[1,1],i){let o=e;e.rank===3&&(o=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={x:o,dy:u},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return M.runKernel(nb,l,c)}var OS=z({depthwiseConv2dNativeBackpropFilter_:GO});function HO(e,t,n,s,r,a=[1,1],i){let o=t,u=!1;t.rank===3&&(u=!0,o=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},h=M.runKernel(sb,l,c);return u?U(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var PS=z({depthwiseConv2dNativeBackpropInput_:HO});function qO({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(ep(M.state.gradientDepth,u)===!1){let k=Wh(e,t,n,s,r,a,i);return o!=null&&(k=ie(k,o)),Jh(k,u,l,c)}let h=_(e,"x","depthwiseConv2d","float32"),d=_(t,"filter","depthwiseConv2d","float32"),p=h,f=!1;h.rank===3&&(f=!0,p=U(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(p.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),P(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),P(p.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),a==null&&(a=[1,1]),P(Us(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),xn("fused depthwiseConv2d",s,i);let m=Zl(p.shape,d.shape,n,a,s,i,!0),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=kt(g,h),it(m.outShape,g.shape));let b;l!=null&&(b=_(l,"prelu weights","fused depthwiseConv2d"));let y=(k,C)=>{P(kr(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[$,A,E,O]=C,R=Zh(k,E,u),D=PS(A.shape,R,$,n,s,a,i),T=OS(A,R,$.shape,n,s,a,i);if(O!=null){let L=Qh(g,R);return[D,T,L]}return[D,T]},v={x:p,filter:d,bias:g,preluActivationWeights:b},x={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return o==null?tr((C,$,A)=>{let E=M.runKernel(ga,v,x);return A([$,C,E]),f&&(E=U(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:y}})(p,d):tr((C,$,A,E)=>{let O=M.runKernel(ga,v,x);return E([$,C,O,A]),f&&(O=U(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:y}})(p,d,g)}var jO=z({fusedDepthwiseConv2d_:qO});function KO({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(ep(M.state.gradientDepth,a)===!1){let R=Ve(e,t,n,s);return r!=null&&(R=ie(R,r)),Jh(R,a,i,o)}let u=_(e,"a","fused matMul"),l=_(t,"b","fused matMul");[u,l]=kt(u,l);let c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=s?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=s?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=pt(f),b=pt(m);P(c===h,()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${s} must match.`);let v=it(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,p]),x=n?U(u,[g,c,d]):U(u,[g,d,c]),k=s?U(l,[b,p,h]):U(l,[b,h,p]),C;r!=null&&(C=_(r,"bias","fused matMul"),[C]=kt(C,u),it(v,C.shape));let $;i!=null&&($=_(i,"prelu weights","fused matMul"));let A=(R,D)=>{let[T,L,W,q]=D,j=Zh(U(R,W.shape),W,a),K,Q;if(!n&&!s?(K=Ve(j,L,!1,!0),Q=Ve(T,j,!0,!1)):!n&&s?(K=Ve(j,L,!1,!1),Q=Ve(j,T,!0,!1)):n&&!s?(K=Ve(L,j,!1,!0),Q=Ve(T,j,!1,!1)):(K=Ve(L,j,!0,!0),Q=Ve(j,T,!0,!0)),r!=null){let ne=Qh(q,j);return[K,Q,ne]}else return[K,Q]},E={a:x,b:k,bias:C,preluActivationWeights:$},O={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};return r==null?tr((D,T,L)=>{let W=M.runKernel(fa,E,O);return L([D,T,W]),{value:U(W,v),gradFunc:A}})(x,k):tr((D,T,L,W)=>{let q=M.runKernel(fa,E,O);return W([D,T,q,L]),{value:U(q,v),gradFunc:A}})(x,k,C)}var XO=z({fusedMatMul_:KO});function YO(e){return Qb(e,.54,.46)}var ZO=z({hammingWindow_:YO});function QO(e){return Qb(e,.5,.5)}var LS=z({hannWindow_:QO});function JO(e,t,n,s=!1,r=0){let a=0,i=[];for(;a+t<=e.size;)i.push(qe(e,a,t)),a+=n;if(s)for(;a<e.size;){let o=a+t-e.size,u=Lt([qe(e,a,t-o),Ql([o],r)]);i.push(u),a+=n}return i.length===0?la([],[0,t]):U(Lt(i),[i.length,t])}var zS=z({frame_:JO});function eP(e,t,n,s,r=LS){s==null&&(s=FS(t));let a=zS(e,t,n),i=V(a,r(t));return Yb(i,s)}var tP=z({stft_:eP});function nP(e,t,n,s,r="bilinear",a=0){let i=_(e,"image","cropAndResize"),o=_(t,"boxes","cropAndResize","float32"),u=_(n,"boxInd","cropAndResize","int32"),l=o.shape[0];P(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),P(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),P(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),P(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),P(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),P(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let c={image:i,boxes:o,boxInd:u},h={method:r,extrapolationValue:a,cropSize:s};return M.runKernel(ko,c,h)}var sP=z({cropAndResize_:nP});function rP(e){let t=_(e,"image","flipLeftRight","float32");P(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return M.runKernel(To,n,{})}var aP=z({flipLeftRight_:rP});function iP(e){let t=_(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];P(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),P(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,xs(t,r)}var oP=z({grayscaleToRGB_:iP});function uP(e,t,n=0,s=.5){let r=_(e,"image","rotateWithOffset","float32");P(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},i={radians:t,fillValue:n,center:s};return M.runKernel(su,a,i)}var lP=z({rotateWithOffset_:uP});function lu(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let i=e.shape[0];return n=Math.min(n,i),P(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),P(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),P(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),P(t.rank===1,()=>"scores must be a 1D tensor"),P(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),P(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function cP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=_(e,"boxes","nonMaxSuppression","float32"),i=_(t,"scores","nonMaxSuppression","float32"),o=lu(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;let u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return M.runKernel(Lo,{boxes:a,scores:i},u)}var dP=z({nonMaxSuppression_:cP});function hP(e,t,n){let s=pP(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function pP(e,t,n){return mP(e,t,n||fP)}function fP(e,t){return e>t?1:e<t?-1:0}function mP(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);let o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}function MS(e,t,n,s,r){return ey(e,t,n,s,r,0)}function BS(e,t,n,s,r,a){return ey(e,t,n,s,r,0,!1,a,!0)}function VS(e,t,n,s,r,a){return ey(e,t,n,s,r,a,!0)}function ey(e,t,n,s,r,a,i=!1,o=!1,u=!1){let l=[];for(let g=0;g<t.length;g++)t[g]>r&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(rw);let c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&l.length>0;){let g=l.pop(),{score:b,boxIndex:y,suppressBeginIndex:v}=g;if(b<r)break;let x=!1;for(let k=h.length-1;k>=v;--k){let C=gP(e,y,h[k]);if(C>=s){x=!0;break}if(g.score=g.score*bP(s,c,C),g.score<=r)break}g.suppressBeginIndex=h.length,x||(g.score===b?(h.push(y),d.push(g.score)):g.score>r&&hP(l,g,rw))}let p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=d),u&&(m.validOutputs=p),m}function gP(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-a)*(u-i),f=(h-l)*(d-c);if(p<=0||f<=0)return 0;let m=Math.max(a,l),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(u,d),v=Math.max(b-m,0)*Math.max(y-g,0);return v/(p+f-v)}function bP(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function rw(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function yP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),o=lu(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;let u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=MS(l,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),gn(h,"int32")}var vP=yP;function xP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),u=lu(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;let l={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},h=M.runKernel(zo,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}var wP=z({nonMaxSuppressionWithScore_:xP});async function kP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),u=lu(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;let l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:d,selectedScores:p}=VS(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:gn(d,"int32"),selectedScores:gn(p)}}var SP=kP;function IP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),u=lu(i,o,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,d={boxes:i,scores:o},p={maxOutputSize:l,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:a},f=M.runKernel(Ml,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}var CP=z({nonMaxSuppressionPadded_:IP});async function NP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),u=lu(i,o,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=BS(d,p,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:gn(f,"int32"),validOutputs:Se(m,"int32")}}var TP=NP;function $P(e,t,n=!1,s=!1){let r=_(e,"images","resizeBilinear");P(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),P(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),P(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,i=!1;r.rank===3&&(i=!0,a=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},l=M.runKernel(hi,o,u);return i?U(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var _P=z({resizeBilinear_:$P});function AP(e,t,n=!1,s=!1){let r=_(e,"images","resizeNearestNeighbor");P(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),P(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),P(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,i=!1;r.rank===3&&(i=!0,a=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},l=M.runKernel(di,o,u);return i?U(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var EP=z({resizeNearestNeighbor_:AP});function RP(e,t="binary",n=!1,s=.5){let r=_(e,"image","threshold"),a=.2989,i=.587,o=.114,u=r.shape[0]*r.shape[1],l=V(gn([s]),255),c,h,d,p;if(P(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),P(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),P(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),P(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[c,h,d]=_n(r,[1,1,1],-1);let g=V(c,a),b=V(h,i),y=V(d,o);p=ie(ie(g,b),y)}else p=e;if(t==="otsu"){let g=J0(de(wS(p),"int32"),ns([]),256);l=DP(g,u)}let f=n?uu(p,l):Qn(p,l);return de(V(f,255),"int32")}function DP(e,t){let n=gn([-1]),s=gn([0]),r=gn([0]),a,i,o,u,l,c;for(let h=0;h<e.size-1;h++){a=qe(e,0,h+1),i=qe(e,h+1),l=xe(ve(a),t),c=xe(ve(i),t);let d=ve(V(a,dl(0,a.size)));o=xe(d,ve(a));let p=Ql(i.shape,a.size),f=ie(dl(0,i.size),p),m=V(i,f);u=xe(ve(m),ve(i));let g=me(o,u),b=me(o,u),y=V(l,c);r=V(V(y,g),b);let v=Qn(r,s);s=En(v,r,s),n=En(v,gn([h]),n)}return n}var FP=z({threshold_:RP});function OP(e,t,n="nearest",s="constant",r=0,a){let i=_(e,"image","transform","float32"),o=_(t,"transforms","transform","float32");P(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),P(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let u={image:i,transforms:o},l={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return M.runKernel(eu,u,l)}var PP=z({transform_:OP});function LP(e,t,n){P(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),P(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=_(e,"a","bandPart");P(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);let o=U(dl(0,a,1,"int32"),[-1,1]),u=dl(0,i,1,"int32"),l=me(o,u),c=Bs(uu(l,Se(+t,"int32")),ou(l,Se(-n,"int32"))),h=Et([a,i],s.dtype);return U(Wn(Vs(U(s,[-1,a,i])).map(d=>En(c,d,h))),r)}var zP=z({bandPart_:LP});function MP(e){let t;if(Array.isArray(e)){t=!1,P(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)P(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=_n(e,e.shape[0],0).map(r=>Pr(r,[0]));P(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(M.tidy(()=>{let a=s[r];if(r>0)for(let i=0;i<r;++i){let o=V(ve(V(n[i],a)),n[i]);a=me(a,o)}return xe(a,Gh(a,"euclidean"))}));return t?Wn(n,0):n}var BP=z({gramSchmidt_:MP});function VP(e,t=!1){if(P(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return aw(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((u,l)=>u*l),s=Vs(U(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(u=>{let[l,c]=aw(u,t);r.push(l),a.push(c)});let i=U(Wn(r,0),e.shape),o=U(Wn(a,0),e.shape);return[i,o]}}function aw(e,t=!1){return M.tidy(()=>{P(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=Pb(n),a=Js(e),i=la([[1]],[1,1]),o=Js(i),u=n>=s?s:n;for(let l=0;l<u;++l){let c=a,h=o,d=r;[o,a,r]=M.tidy(()=>{let p=qe(a,[l,l],[n-l,1]),f=Gh(p),m=qe(a,[l,l],[1,1]),g=En(Qn(m,0),la([[-1]]),la([[1]])),b=me(m,V(g,f)),y=xe(p,b);y.shape[0]===1?o=Js(i):o=Lt([i,qe(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let v=wt(xe(Ve(g,b),f)),x=qe(a,[l,0],[n-l,s]),k=V(v,o),C=Ue(o);if(l===0)a=me(x,Ve(k,Ve(C,x)));else{let E=me(x,Ve(k,Ve(C,x)));a=Lt([qe(a,[0,0],[l,s]),E],0)}let $=Ue(k),A=qe(r,[0,l],[n,r.shape[1]-l]);if(l===0)r=me(A,Ve(Ve(A,o),$));else{let E=me(A,Ve(Ve(A,o),$));r=Lt([qe(r,[0,0],[n,l]),E],1)}return[o,a,r]}),Fe([c,h,d])}return!t&&n>s&&(r=qe(r,[0,0],[n,s]),a=qe(a,[0,0],[s,s])),[r,a]})}var WP=z({qr_:VP}),UP=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(UP||{});function GP(e,t,n=3){let s=_(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=_(t,"weights","computeWeightedLoss"));let a=r==null?s:V(s,r);if(n===0)return a;if(n===2)return ve(a);if(n===1){if(r==null)return Nt(a);{let i=s.size/r.size,o=xe(ve(a),ve(r));return i>1?xe(o,Se(i)):o}}if(n===3){if(r==null)return xe(ve(a),Se(s.size));{let i=V(r,$n(s.shape)),o=de(ve(cl(i,Se(0))),"float32");return xe(ve(a),o)}}throw Error(`Unknown reduction: ${n}`)}var rr=z({computeWeightedLoss_:GP});function HP(e,t,n,s=3){let r=_(e,"labels","absoluteDifference"),a=_(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=_(n,"weights","absoluteDifference")),Zn(r.shape,a.shape,"Error in absoluteDifference: ");let o=Wt(me(r,a));return rr(o,i,s)}var qP=z({absoluteDifference_:HP});function jP(e,t,n,s,r=3){let a=_(e,"labels","cosineDistance"),i=_(t,"predictions","cosineDistance"),o=null;s!=null&&(o=_(s,"weights","cosineDistance")),Zn(a.shape,i.shape,"Error in cosineDistance: ");let u=Se(1),l=me(u,ve(V(a,i),n,!0));return rr(l,o,r)}var KP=z({cosineDistance_:jP});function XP(e,t,n,s=3){let r=_(e,"labels","hingeLoss"),a=_(t,"predictions","hingeLoss"),i=null;n!=null&&(i=_(n,"weights","hingeLoss")),Zn(r.shape,a.shape,"Error in hingeLoss: ");let o=Se(1);r=me(V(Se(2),r),o);let u=sr(me(o,V(r,a)));return rr(u,i,s)}var YP=z({hingeLoss_:XP});function ZP(e,t,n,s=1,r=3){let a=_(e,"labels","huberLoss"),i=_(t,"predictions","huberLoss"),o=null;n!=null&&(o=_(n,"weights","huberLoss")),Zn(a.shape,i.shape,"Error in huberLoss: ");let u=Se(s),l=Wt(me(i,a)),c=jh(l,u),h=me(l,c),d=ie(V(Se(.5),ht(c)),V(u,h));return rr(d,o,r)}var QP=z({huberLoss_:ZP});function JP(e,t,n,s=1e-7,r=3){let a=_(e,"labels","logLoss"),i=_(t,"predictions","logLoss"),o=null;n!=null&&(o=_(n,"weights","logLoss")),Zn(a.shape,i.shape,"Error in logLoss: ");let u=Se(1),l=Se(s),c=wt(V(a,as(ie(i,l)))),h=V(me(u,a),as(ie(me(u,i),l))),d=me(c,h);return rr(d,o,r)}var eL=z({logLoss_:JP});function tL(e,t,n,s=3){let r=_(e,"labels","meanSquaredError"),a=_(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=_(n,"weights","meanSquaredError")),Zn(r.shape,a.shape,"Error in meanSquaredError: ");let o=$S(r,a);return rr(o,i,s)}var nL=z({meanSquaredError_:tL});function sL(e,t){let n=_(e,"labels","sigmoidCrossEntropyWithLogits"),s=_(t,"logits","sigmoidCrossEntropyWithLogits");Zn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=sr(s),a=V(s,n),i=zb(rs(wt(Wt(s))));return ie(me(r,a),i)}function rL(e,t,n,s=0,r=3){let a=_(e,"multiClassLabels","sigmoidCrossEntropy"),i=_(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","sigmoidCrossEntropy")),Zn(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){let l=Se(s),c=Se(1),h=Se(.5);a=ie(V(a,me(c,l)),V(h,l))}let u=sL(a,i);return rr(u,o,r)}var aL=z({sigmoidCrossEntropy_:rL});function iL(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return tr((r,a,i)=>{let u=bS(a,[n],!0),l=me(de(a,"float32"),u);i([r,l]);let c=wt(V(l,r));return{value:ve(c,[n]),gradFunc:(p,f)=>{let[m,g]=f,b=xa(p.shape,[n]);return[V(U(p,b),me(de(m,"float32"),rs(g))),V(U(p,b),me(rs(g),de(m,"float32")))]}}})(e,t)}function oL(e,t,n,s=0,r=3){let a=_(e,"onehotLabels","softmaxCrossEntropy"),i=_(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","softmaxCrossEntropy")),Zn(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){let l=Se(s),c=Se(1),h=Se(a.shape[1]);a=ie(V(a,me(c,l)),xe(l,h))}let u=iL(a,i);return rr(u,o,r)}var uL=z({softmaxCrossEntropy_:oL});function lL(e,t,n,s){let r=_(e,"indices","sparseFillEmptyRows","int32"),a=_(t,"values","sparseFillEmptyRows"),i=_(n,"denseShape","sparseFillEmptyRows","int32"),o=_(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let u={indices:r,values:a,denseShape:i,defaultValue:o},l=M.runKernel($h,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var cL=z({sparseFillEmptyRows_:lL});function dL(e,t,n){let s=_(e,"inputIndices","sparseReshape","int32"),r=_(t,"inputShape","sparseReshape","int32"),a=_(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let i={inputIndices:s,inputShape:r,newShape:a},o=M.runKernel(Hl,i);return{outputIndices:o[0],outputShape:o[1]}}var hL=z({sparseReshape_:dL});function pL(e,t,n){let s=_(e,"data","sparseSegmentMean"),r=_(t,"indices","sparseSegmentMean","int32"),a=_(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let i={data:s,indices:r,segmentIds:a};return M.runKernel(_h,i)}var fL=z({sparseSegmentMean_:pL});function mL(e,t,n){let s=_(e,"data","sparseSegmentSum"),r=_(t,"indices","sparseSegmentSum","int32"),a=_(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let i={data:s,indices:r,segmentIds:a};return M.runKernel(Ah,i)}var gL=z({sparseSegmentSum_:mL});function bL(e,t,n,s,r,a,i,o){let u=_(e,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=_(t,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},d=M.runKernel(jl,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}var yL=z({stringNGrams_:bL});function vL(e,t,n=!0){let s=_(e,"input","stringSplit","string"),r=_(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},i={input:s,delimiter:r},o=M.runKernel(Rh,i,a);return{indices:o[0],values:o[1],shape:o[2]}}var xL=z({stringSplit_:vL});function wL(e,t){let n=_(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return M.runKernel(Dh,r,s)}var kL=z({stringToHashBucketFast_:wL}),SL={fft:Xb,ifft:Wd,rfft:Yb,irfft:TS},IL={hammingWindow:ZO,hannWindow:LS,frame:zS,stft:tP},gr={flipLeftRight:aP,grayscaleToRGB:oP,resizeNearestNeighbor:EP,resizeBilinear:_P,rotateWithOffset:lP,cropAndResize:sP,nonMaxSuppression:dP,nonMaxSuppressionAsync:vP,nonMaxSuppressionWithScore:wP,nonMaxSuppressionWithScoreAsync:SP,nonMaxSuppressionPadded:CP,nonMaxSuppressionPaddedAsync:TP,threshold:FP,transform:PP},WS={bandPart:zP,gramSchmidt:BP,qr:WP},CL={absoluteDifference:qP,computeWeightedLoss:rr,cosineDistance:KP,hingeLoss:YP,huberLoss:QP,logLoss:eL,meanSquaredError:nL,sigmoidCrossEntropy:aL,softmaxCrossEntropy:uL},NL={sparseFillEmptyRows:cL,sparseReshape:hL,sparseSegmentMean:fL,sparseSegmentSum:gL},TL={stringNGrams:yL,stringSplit:xL,stringToHashBucketFast:kL},Lr=class extends B0{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(a)}else this.applyGradients(r);return Fe(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return vF(e,t)}dispose(){this.iterations_!=null&&Fe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Se(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Lr,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var ty=class extends Lr{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:Y(()=>je(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:Y(()=>je(r).variable(a))});let i=Array.isArray(e)?e[s].tensor:e[n];if(i==null)return;let o=this.accumulatedGrads[s].variable,u=this.accumulatedUpdates[s].variable;Y(()=>{let l=ie(V(o,this.rho),V(ht(i),1-this.rho)),c=V(xe(yn(ie(u,this.epsilon)),yn(ie(o,this.epsilon))),i),h=ie(V(u,this.rho),V(ht(c),1-this.rho));o.assign(l),u.assign(h);let d=ie(V(c,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Fe(this.accumulatedGrads.map(e=>e.variable)),Fe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};ty.className="Adadelta";Fr(ty);var ny=class extends Lr{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:Y(()=>Ql(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[s].variable;Y(()=>{let o=ie(i,ht(a));i.assign(o);let u=ie(V(xe(a,yn(ie(o,M.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Fe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};ny.className="Adagrad";Fr(ny);var sy=class extends Lr{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Y(()=>{this.accBeta1=Se(t).variable(),this.accBeta2=Se(n).variable()}),s==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);Y(()=>{let n=me(1,this.accBeta1),s=me(1,this.accBeta2);t.forEach((r,a)=>{let i=M.registeredVariables[r],o=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:Y(()=>je(i).variable(o))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:Y(()=>je(i).variable(o))});let u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;let l=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,h=ie(V(l,this.beta1),V(u,1-this.beta1)),d=ie(V(c,this.beta2),V(ht(u),1-this.beta2)),p=xe(h,n),f=xe(d,s);l.assign(h),c.assign(d);let m=ie(V(xe(p,ie(yn(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Fe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Y(()=>{this.accBeta1.assign(wa(this.beta1,this.iterations_+1)),this.accBeta2.assign(wa(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};sy.className="Adam";Fr(sy);var ry=class extends Lr{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Y(()=>{this.iteration=Se(0).variable(),this.accBeta1=Se(t).variable()}),s==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);Y(()=>{let n=me(1,this.accBeta1),s=xe(-this.learningRate,ie(V(this.iteration,this.decay),1));t.forEach((r,a)=>{let i=M.registeredVariables[r],o=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:je(i).variable(o)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:je(i).variable(o)});let u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;let l=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,h=ie(V(l,this.beta1),V(u,1-this.beta1)),d=V(c,this.beta2),p=Wt(u),f=Or(d,p);l.assign(h),c.assign(f);let m=ie(V(xe(s,n),xe(h,ie(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(ie(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Fe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};ry.className="Adamax";Fr(ry);var tp=class extends Lr{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=M.registeredVariables[n];Y(()=>{let i=ie(V(this.c,r),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Yt(Se(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};tp.className="SGD";Fr(tp);var ay=class extends tp{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Se(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${n}/momentum`,variable:Y(()=>je(r).variable(!1))});let a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[n];i!=null&&Y(()=>{let o,u=ie(V(this.m,a),i);this.useNesterov?o=ie(V(this.c,ie(i,V(u,this.m))),r):o=ie(V(this.c,u),r),a.assign(u),r.assign(o)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Fe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};ay.className="Momentum";Fr(ay);var iy=class extends Lr{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=M.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:Y(()=>je(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:Y(()=>je(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:Y(()=>je(r).variable(a))});let i=Array.isArray(e)?e[s].tensor:e[n];if(i==null)return;let o=this.accumulatedMeanSquares[s].variable,u=this.accumulatedMoments[s].variable;Y(()=>{let l=ie(V(o,this.decay),V(ht(i),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,h=ie(V(c,this.decay),V(i,1-this.decay)),d=xe(V(i,this.learningRate),yn(me(l,ie(ht(h),this.epsilon)))),p=ie(V(u,this.momentum),d);o.assign(l),c.assign(h),u.assign(p);let f=me(r,p);r.assign(f)}else{let c=ie(V(o,this.decay),V(ht(i),1-this.decay)),h=ie(V(u,this.momentum),xe(V(i,this.learningRate),yn(ie(c,this.epsilon))));o.assign(c),u.assign(h);let d=me(r,h);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Fe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Fe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Fe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};iy.className="RMSProp";Fr(iy);var Yr=class{static sgd(e){return new tp(e)}static momentum(e,t,n=!1){return new ay(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new iy(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new sy(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new ty(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new ry(e,t,n,s,r)}static adagrad(e,t=.1){return new ny(e,t)}},Ki={sgd:Yr.sgd,momentum:Yr.momentum,adadelta:Yr.adadelta,adagrad:Yr.adagrad,rmsprop:Yr.rmsprop,adamax:Yr.adamax,adam:Yr.adam},$L=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function US(){return new Promise(e=>$L(()=>e()))}var I={};Ee(I,{ERF_A1:()=>ML,ERF_A2:()=>BL,ERF_A3:()=>VL,ERF_A4:()=>WL,ERF_A5:()=>UL,ERF_P:()=>zL,PARALLELIZE_THRESHOLD:()=>oy,SELU_SCALE:()=>HS,SELU_SCALEALPHA:()=>GS,applyActivation:()=>Jh,assertAndGetBroadcastShape:()=>it,assertAxesAreInnerMostDims:()=>zD,assertParamsConsistent:()=>_L,assignToTypedArray:()=>XL,axesAreInnerMostDims:()=>Fb,calculateShapes:()=>A0,checkEinsumDimSizes:()=>tz,checkPadOnDimRoundingMode:()=>xn,combineLocations:()=>dS,complexWithEvenIndex:()=>qL,complexWithOddIndex:()=>jL,computeConv2DInfo:()=>Zl,computeConv3DInfo:()=>j0,computeDefaultPad:()=>_b,computeDilation2DInfo:()=>$R,computeOptimalWindowSize:()=>EL,computeOutAndReduceShapes:()=>hS,computeOutShape:()=>AL,computePool2DInfo:()=>q0,computePool3DInfo:()=>_R,convertConv2DDataFormat:()=>K0,decodeEinsumEquation:()=>JL,eitherStridesOrDilationsAreOne:()=>Us,expandShapeToKeepDim:()=>xa,exponent:()=>ZL,exponents:()=>YL,fromStringArrayToUint8:()=>kz,fromUint8ToStringArray:()=>wz,getAxesPermutation:()=>pS,getBroadcastDims:()=>I0,getComplexWithIndex:()=>KL,getEinsumComputePath:()=>nz,getEinsumPermutation:()=>ez,getFusedBiasGradient:()=>Qh,getFusedDyActivation:()=>Zh,getImageCenter:()=>RL,getInnerMostAxes:()=>MD,getPermuted:()=>FL,getReductionAxes:()=>Rt,getReshaped:()=>DL,getReshapedPermuted:()=>OL,getSliceBeginCoords:()=>PL,getSliceSize:()=>LL,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>iz,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>oz,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>uz,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>dz,getSparseReshapeInputOutputMismatchErrorMessage:()=>pz,getSparseReshapeInputOutputMultipleErrorMessage:()=>hz,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>lz,getSparseReshapeNegativeOutputDimErrorMessage:()=>cz,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>bz,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>fz,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>mz,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>gz,getUndoAxesPermutation:()=>Ob,isIdentityPermutation:()=>sz,log:()=>X_,mergeRealAndImagArrays:()=>GL,prepareAndValidate:()=>$0,prepareSplitSize:()=>az,segment_util:()=>qS,shouldFuse:()=>ep,slice_util:()=>It,splitRealAndImagArrays:()=>HL,tupleValuesAreOne:()=>kr,upcastType:()=>bn,validateInput:()=>Nb,validateUpdateShape:()=>Cb,warn:()=>hr});function _L(e,t){let n=e[0].length;e.forEach((r,a)=>{P(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),P(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let i=0;i<n;i++)P(i===t||r[i]===s[i],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function AL(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var oy=30;function EL(e){return e<=oy?e:Ed(e,Math.floor(Math.sqrt(e)))}function RL(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function DL(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let i=0;i<a;++i)r=r.concat([e[i+1]/t[i],t[i]]);r=r.concat(e.slice(a+1))}return r}function FL(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?a.push(i):r.push(i);s.push(...r),s.push(0),s.push(...a)}return s}function OL(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function PL(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function LL(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var GS=1.7580993408473768,HS=1.0507009873554805,zL=.3275911,ML=.254829592,BL=-.284496736,VL=1.421413741,WL=-1.453152027,UL=1.061405429;function GL(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function HL(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function qL(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function jL(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function KL(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function XL(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function YL(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function ZL(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var Im="->",QL=/->/g,iw=",",ow="...";function JL(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(QL,"").length)/Im.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Im}").`);let[s,r]=e.split(Im);P(s.indexOf(ow)===-1,()=>`The ellipsis notation ("${ow}") is not supported yet.`);let a=s.split(iw),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let d=0;d<r.length;++d){let p=r[d];if(!a.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);o.indexOf(p)===-1&&o.push(p)}for(let d=0;d<s.length;++d){let p=s[d];o.indexOf(p)===-1&&p!==iw&&o.push(p)}let u=new Array(a.length);for(let d=0;d<i;++d){if(new Set(a[d].split("")).size!==a[d].length)throw new Error(`Found duplicate axes in input component ${a[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let p=0;p<a[d].length;++p)u[d].push(o.indexOf(a[d][p]))}let l=o.length,c=r.length,h=[];for(let d=c;d<l;++d)h.push(d);return{allDims:o,summedDims:h,idDims:u}}function ez(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function tz(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let i=0;i<t[r].length;++i)s[t[r][i]]===void 0?s[t[r][i]]=a[i]:P(s[t[r][i]]===a[i],()=>`Expected dimension ${s[t[r][i]]} at axis ${i} of input shaped ${JSON.stringify(a)}, but got dimension ${a[i]}`)}}function nz(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let i=0;i<r;++i)s.push([]);let a=[];for(let i=0;i<n.length;++i){let o=n[i],u=rz(t,o);for(let l of u)a.indexOf(l)===-1&&(s[i].push(l),a.push(l))}return{path:n,steps:s}}function sz(e){return e.every((t,n)=>t===n)}function rz(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function az(e,t,n=0){let s=[];if(typeof t=="number")P(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);P(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let i=t.reduce((o,u)=>u>0?o+u:o);t[a]=e.shape[n]-i}P(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function iz(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function oz(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function uz(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function lz(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function cz(e,t){return`size ${e} must be non-negative, not ${t}`}function dz(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function hz(e,t){let n=pt(e),s=pt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function pz(e,t){let n=pt(e),s=pt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function fz(){return"segment ids must be >= 0"}function mz(){return"segment ids are not increasing"}function gz(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function bz(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var qS={};Ee(qS,{collectGatherOpShapeInfo:()=>xz,computeOutShape:()=>vz,segOpComputeOptimalWindowSize:()=>yz});function yz(e,t){let n=!1,s;for(e<=oy?(s=e,n=!0):s=Ed(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=Ed(e,s+1);return s}function vz(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function xz(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);let i=e.shape[n],o=[],u=1,l=1,c=1;for(let h=0;h<s;++h)o.push(e.shape[h]),u*=e.shape[h];for(let h=s;h<n;h++)o.push(e.shape[h]),l*=e.shape[h];for(let h=s;h<r;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function wz(e){try{return e.map(t=>Od(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function kz(e){return e.map(t=>Xl(t))}var Ts={};Ee(Ts,{nonMaxSuppressionV3Impl:()=>MS,nonMaxSuppressionV4Impl:()=>BS,nonMaxSuppressionV5Impl:()=>VS,whereImpl:()=>ES});var js=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,js.prototype)}},ws=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ws.prototype)}},H=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,H.prototype)}},Oe=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Oe.prototype)}},jS=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,jS.prototype)}},KS=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function ka(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Es(e,t){if(!e)throw new jS(t)}function uw(e,t){let n=0;for(let s of e)s===t&&n++;return n}function Tn(e){return e.length===1?e[0]:e}function mt(e){return Array.isArray(e)?e:[e]}function Ks(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function sa(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var es={};function uy(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function rg(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>rg(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:rg(s))}}}function nc(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,i;if(a in n)i=n[a];else if(a in es)i=es[a];else if(i=t[a],i==null)throw new H(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let a=e;if(a.className==null||a.config==null)throw new H(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let i=a.className,o,u;if(i in n?[o,u]=n[i]:i in es?[o,u]=es.className:i in t&&([o,u]=t[i]),o==null)throw new H(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let p of Object.keys(es))l[p]=es[p];for(let p of Object.keys(n))l[p]=n[p];let c=a.config;c.customObjects=l;let h={...es};for(let p of Object.keys(n))es[p]=n[p];rg(a.config);let d=u(o,a.config,n,r);return es={...h},d}else{let l={...es};for(let h of Object.keys(n))es[h]=n[h];let c=new o(a.config);return es={...l},c}}}function Sz(e,t){return e<t?-1:e>t?1:0}function rd(e,t){return-1*Sz(e,t)}function yr(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function Iz(e){if(e==null)throw new H(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ci(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new H(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function ly(e,t,n=0,s=1/0){return Es(n>=0),Es(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function Gt(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>Gt(n,`element ${s+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${XS(e)}.`)}function XS(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>XS(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function Cz(e,t,n){let s=n!=null?n():w.now(),r;return(...i)=>{let o=n!=null?n():w.now();return o-s<t||(s=o,r=e(...i)),r}}function YS(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var Nz=0;function ZS(){return Nz++}var ad={};function np(e=""){return e in ad||(ad[e]=0),ad[e]+=1,e+ad[e].toString()}var Tz=["channelsFirst","channelsLast"],$z=["nearest","bilinear"],_z=["valid","same","causal"],Az=["max","avg"],Ez=["sum","mul","concat","ave"],Xi=new Map;function Tt(e){Ci(Tz,"DataFormat",e)}function Rz(e){Ci($z,"InterpolationFormat",e)}function Jn(e){Ci(_z,"PaddingMode",e)}function QS(e){Ci(Az,"PoolMode",e)}var tl=[],lw="/";function ca(e,t){tl.push(e);try{let n=t();return tl.pop(),n}catch(n){throw tl.pop(),n}}function Dz(){return tl.length===0?"":tl.join(lw)+lw}function JS(e){if(!tI(e))throw new Error("Not a valid tensor name: '"+e+"'");return Dz()+e}function eI(e){if(!tI(e))throw new Error("Not a valid tensor name: '"+e+"'");Xi.has(e)||Xi.set(e,0);let t=Xi.get(e);if(Xi.set(e,Xi.get(e)+1),t>0){let n=`${e}_${t}`;return Xi.set(n,1),n}else return e}var Fz=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function tI(e){return!!e.match(Fz)}function Oz(e){return e===parseInt(e.toString(),10)}function vr(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function lo(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function Sr(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function Is(e,t){if(t<e)throw new H(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}var Cm;function Ot(){return Cm==null&&(Cm=zh().epsilon()),Cm}function Cs(){return"channelsLast"}function sp(e,t){return de(e,t)}function sc(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),U(e,n)}function Pz(e,t){return Y(()=>{if(e.shape.length!==2)throw new H(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=sc(e,1);return ag(n,[1,t,1])})}function Lz(e){let t=[vr(e.shape)];return U(e,t)}function zz(e){if(e.rank<=1)throw new H(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],vr(e.shape,1)];return U(e,t)}function da(e,t,n){return Y(()=>{switch(e.rank){case 1:return Xh(e,t,n);case 2:return jb(e,[t,0],[n,e.shape[1]]);case 3:return Yh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return hl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return qe(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return qe(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new H(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Nm(e,t,n){return Y(()=>{switch(e.rank){case 1:return Xh(e,t,n);case 2:return jb(e,[0,t],[e.shape[0],n]);case 3:return Yh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return hl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function id(e,t,n,s){return Y(()=>{switch(e.rank){case 1:return Xh(e,t,n);case 2:switch(s){case 1:return da(e,t,n);case 2:return Nm(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return da(e,t,n);case 2:return Yh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Nm(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return da(e,t,n);case 2:return hl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return hl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Nm(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function cy(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Lt(e,t)}function cw(e,t){switch(e.rank){case 1:return eS([e,t]);case 2:return tS([e,t],0);case 3:return nS([e,t],0);case 4:return sS([e,t],0);default:throw new H(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function ag(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new H(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return xs(e,t)}function rp(e,t=0,n=1,s,r){return qb(e,t,n,s,r)}function Ls(e,t,n,s){if(e.rank<2||t.rank<2)throw new Oe(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Oe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return pl.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?ig(e.rank,s,Cs()):null,activation:n});{let r=e.shape.slice(),a=r.pop();e=U(e,[-1,a]);let i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=U(Ue(t,c),[u,-1]);let h=[...r,...l],d=!1,p=!1;return U(pl.matMul({a:e,b:t,transposeA:d,transposeB:p,bias:s?ig(e.rank,s,Cs()):null,activation:n}),h)}}function nI(e,t,n){return Y(()=>(Array.isArray(t)?t=gn(t,"int32"):t=de(t,"int32"),qh(e,t,n)))}function rc(e){return V(e,e)}function ig(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new H(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1,1,1]):U(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,1,1,s[0]]):U(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1,1]):U(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,1,s[0]]):U(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1]):U(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,s[0]]):U(t,[1].concat(s))}else if(e<3)return t;throw new H(`Unsupported input rank by biasAdd: ${t.rank}`)}function $s(e,t,n){return Y(()=>(n==null&&(n=Cs()),Tt(n),ie(e,ig(e.rank,t,n))))}function Mz(e,t=1){if(t!==1)throw new Oe(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Uh(e)}function Bz(e){return Y(()=>xe(e,ie(Wt(e),1)))}function sI(e,t,n,s){return Y(()=>DS(e,t,n,s))}function Vz(e){return Y(()=>{let t=ie(.5,V(.2,e));return Yn(t,0,1)})}function ac(e,t,n=!1){return n?e():t()}var Wz=["fanIn","fanOut","fanAvg"],Uz=["normal","uniform","truncatedNormal"];function Gz(e){Ci(Wz,"FanMode",e)}function Hz(e){Ci(Uz,"Distribution",e)}var us=class extends ae.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},dy=class extends us{apply(e,t){return Et(e,t)}};dy.className="Zeros";ae.registerClass(dy);var ap=class extends us{apply(e,t){return $n(e,t)}};ap.className="Ones";ae.registerClass(ap);var hy=class extends us{constructor(e){if(super(),typeof e!="object")throw new H(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new H(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Y(()=>V(Se(this.value),$n(e,t)))}getConfig(){return{value:this.value}}};hy.className="Constant";ae.registerClass(hy);var py=class extends us{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ec(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};py.className="RandomUniform";ae.registerClass(py);var fy=class extends us{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Oe(`randomNormal does not support dType ${t}.`);return rp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};fy.className="RandomNormal";ae.registerClass(fy);var my=class extends us{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Oe(`truncatedNormal does not support dType ${t}.`);return Zb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};my.className="TruncatedNormal";ae.registerClass(my);var gy=class extends us{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return Y(()=>{if(e.length!==2||e[0]!==e[1])throw new H("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,Pb(e[0]))})}getConfig(){return{gain:this.gain}}};gy.className="Identity";ae.registerClass(gy);function qz(e,t="channelsLast"){let n,s;if(Tt(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=vr(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=vr(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=vr(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var Rn=class extends us{constructor(e){if(super(),e.scale<0)throw new H(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,Gz(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,Hz(this.distribution),this.seed=e.seed}apply(e,t){let n=qz(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Oe(`${this.getClassName()} does not support dType ${t}.`);return Zb(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return ec(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Rn.className="VarianceScaling";ae.registerClass(Rn);var ip=class extends Rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};ip.className="GlorotUniform";ae.registerClass(ip);var op=class extends Rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};op.className="GlorotNormal";ae.registerClass(op);var up=class extends Rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};up.className="HeNormal";ae.registerClass(up);var lp=class extends Rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};lp.className="HeUniform";ae.registerClass(lp);var cp=class extends Rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};cp.className="LeCunNormal";ae.registerClass(cp);var dp=class extends Rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};dp.className="LeCunNormal";ae.registerClass(dp);var by=class extends us{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Oe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Y(()=>{if(e.length<2)throw new Oe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=rp(n,0,1,"float32"),r=WS.gramSchmidt(s);return e[0]>e[1]&&(r=Ue(r)),V(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};by.className="Orthogonal";ae.registerClass(by);var dw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function hw(e,t={}){return nc(e,ae.SerializationMap.getMap().classNameMap,t,"initializer")}function xt(e){return uy(e)}function gt(e){if(typeof e=="string"){let t=e in dw?dw[e]:e;if(t==="GlorotNormal")return new op;if(t==="GlorotUniform")return new ip;if(t==="HeNormal")return new up;if(t==="HeUniform")return new lp;if(t==="LeCunNormal")return new cp;if(t==="LeCunUniform")return new dp;{let n={};return n.className=t,n.config={},hw(n)}}else return e instanceof us?e:hw(e)}function og(e){return Array.isArray(e)&&Array.isArray(e[0])}function Ud(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Pe(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new H(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function st(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new H(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Gd(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var pw="Variable",jz=class{constructor(e,t="float32",n=pw,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=ZS(),n=n==null?pw:n,this.originalName=JS(n),this.name=eI(this.originalName),this.trainable_=s,this.constraint=r,this.val=AS(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),Kz(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function Kz(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function ug(e){return e.map(t=>t.read())}function yy(e){e.forEach(t=>{t[0].write(t[1])})}var Pt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Fs=class{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=ZS(),a!=null&&(this.originalName=JS(a),this.name=eI(this.originalName)),this.rank=t.length}},Xz=0,hp=class{constructor(e,t){this.callArgs=t,this.id=Xz++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},Yz=0,He=class extends ae.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Yz++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Ks(n)+"_"+np(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new ws(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new H(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Tn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Tn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new js(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new js(`Layer ${this.name} is not connected, no input to return.`);return Tn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new js(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new js(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Tn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=mt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=mt(this.inputSpec);if(e.length!==t.length)throw new H(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new H(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let i=s.shape;for(let o in r.axes){let u=Number(o),l=r.axes[o],c=u>=0?i[u]:i[i.length+u];if(l!=null&&[l,null].indexOf(c)===-1)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${l} but got shape ${i}.`)}}if(r.shape!=null)for(let i=0;i<r.shape.length;++i){let o=r.shape[i],u=s.shape[i];if(o!=null&&u!=null&&o!==u)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=mt(e),s=!0;for(let a of n)if(!(a instanceof Fs)){s=!1;break}let r=!0;for(let a of n)if(a instanceof Fs){r=!1;break}if(s===r)throw new H("Arguments to apply() must be all SymbolicTensors or all Tensors");return ca(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of mt(e))a.push(i.shape);this.build(Tn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),i=mt(a),o=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),o.push(u);if(a=Tn(o),this.activityRegularizer!=null)throw new Oe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=Zz(e),i=this.computeOutputShape(a),o,u=Qz(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((l,c)=>new Fs(u,l,this,mt(e),t,this.name,c)):o=new Fs(u,i,this,mt(e),t,this.name),this.addInboundNode(e,o,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Oe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new js(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new js(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ws(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Gd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ug(e?this.trainableWeights:this.weights)}setWeights(e){Y(()=>{let t=this.weights;if(t.length!==e.length)throw new H(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=ug(t);for(let r=0;r<s.length;++r){let a=s[r],i=t[r],o=e[r];if(!w.arraysEqual(a.shape,o.shape))throw new H(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}yy(n)})}addWeight(e,t,n,s,r,a,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new H(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=o!=null?o():gt("zeros"));let u=s.apply(t,n),l=new jz(u,n,e,a,i);return u.dispose(),r!=null&&this.addLoss(()=>r.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=mt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,i=null){let o=mt(e);t=mt(t),n=mt(n),s=mt(s),r=Ud(r),a=Ud(a);let u=[],l=[],c=[];for(let h of o)u.push(h.sourceLayer),l.push(h.nodeIndex),c.push(h.tensorIndex);new hp({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function Zz(e){e=mt(e);let t=[];for(let n of e)t.push(n.shape);return Tn(t)}function Qz(e){return"float32"}function rI(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let i=s.inputTensors[a],o=s.inboundLayers[a],u=s.nodeIndices[a],l=rI(i,o,u);for(let c of l)r.indexOf(c)===-1&&r.push(c)}return r}}}var cu=class extends He{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:np("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new H("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new H("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new H("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new Fs(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new hp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new H(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};cu.className="InputLayer";ae.registerClass(cu);function aI(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new H("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new cu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function Jz(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return de(t,e.dtype)}catch(n){throw new H(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var ia=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ia)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=Jz(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new H(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Fs){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Fs){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Fe(this.id2Mask)}},Hd=new KS,qd=new KS;function eM(e){Hd!=null&&Hd.setMaxEntries(e),qd!=null&&qd.setMaxEntries(e)}function qu(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),i=a?e:[e],o=i.map(f=>f.name),u=[],l=t.names();for(let f of o)l.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let c=o.join(",")+"|"+t.names().sort().join(","),h=Hd.get(c),d;if(h==null){let f=tM(i,t);h=f.sorted,d=f.recipientCounts,Hd.put(c,h),qd.put(c,d)}d={},r||Object.assign(d,qd.get(c));let p=new ia(t);for(let f=0;f<h.length;++f){if(s!=null){let E=il().numTensors;E>s.maxNumTensors&&(s.maxNumTensors=E),E<s.minNumTensors&&(s.minNumTensors=E)}let m=h[f],g=m.sourceLayer;if(g instanceof cu)continue;let b=[],y=[],v=[],x=!1;for(let E of m.inputs){let O=p.getValue(E),R=p.getMask(E);b.push(O),y.push(R),R!=null&&(x=!0),r||(d[E.name]--,d[E.name]===0&&!t.hasKey(E)&&o.indexOf(E.name)===-1&&!O.isDisposed&&E.sourceLayer.stateful!==!0&&v.push(O))}x&&(n=n||{},n.mask=y[0]);let k=mt(g.apply(b,n)),C=null;g.supportsMasking&&(C=g.computeMask(b,y));let $=sM(m),A=Array.isArray($)?$:[$];for(let E=0;E<A.length;++E){p.hasKey(A[E])||p.add(A[E],k[E],Array.isArray(C)?C[0]:C);let O=o.indexOf(A[E].name);O!==-1&&(u[O]=k[E])}r||Fe(v)}return p.disposeMasks(),a?u:u[0]}function tM(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=fw(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:i,recipientMap:o}=fw(a,t);for(let u of i)r.has(u.name)||(n.push(u),r.add(u.name));for(let u in o)s[u]==null&&(s[u]=new Set),o[u].forEach(l=>s[u].add(l))}}return{sorted:n,recipientCounts:nM(s)}}function nM(e){let t={};for(let n in e)t[n]=e[n].size;return t}function fw(e,t){let n=new Set,s=[],r={};for(let o of t.names())n.add(o);let a=[],i=[];for(a.push(e);a.length>0;){let o=a[a.length-1];if(n.has(o.name)){a.pop();continue}let u=i[i.length-1]===a.length-1;if(o.inputs.length===0||u)a.pop(),s.push(o),n.add(o.name),u&&i.pop();else{i.push(a.length-1);for(let l of o.inputs)r[l.name]==null&&(r[l.name]=new Set),r[l.name].add(o.name),!n.has(l.name)&&a.push(l)}}return{sorted:s,recipientMap:r}}function sM(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var rM=X();rM.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,eM);var iI={kernelName:yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,tc(de(n,"float32"),-1))}}},aM={kernelName:wl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=ht(de(n,"float32")),r=yn(me(Se(1),s));return wt(xe(e,r))}}}},iM={kernelName:kl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=yn(me(ht(de(n,"float32")),1));return xe(e,s)}}}},oM={kernelName:Ar,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=e,u=Rt(n.shape,r);return u.length>0&&(o=ve(o,u)),U(o,n.shape)},b:()=>{let o=e,u=Rt(s.shape,r);return u.length>0&&(o=ve(o,u)),U(o,s.shape)}}}},uM={kernelName:Aa,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},lM={kernelName:Ea,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>je(n)}}},cM={kernelName:Cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>je(n)}}},dM={kernelName:Nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,yn(me(Se(1),ht(de(n,"float32")))))}}},hM={kernelName:Tl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=yn(ie(Se(1),ht(de(n,"float32"))));return xe(e,s)}}}},pM={kernelName:Al,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=ie(ht(n),ht(s)),u=V(e,xe(s,o)),l=Rt(n.shape,r);return l.length>0&&(u=ve(u,l)),U(u,n.shape)},b:()=>{let o=ie(ht(n),ht(s)),u=wt(V(e,xe(n,o))),l=Rt(s.shape,r);return l.length>0&&(u=ve(u,l)),U(u,s.shape)}}}},fM={kernelName:$l,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ie(ht(de(n,"float32")),1))}}},mM={kernelName:_l,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,me(Se(1),ht(de(n,"float32"))))}}};function gM(e,t,n,s,r,a){let i=_(e,"dy","avgPool3dGrad"),o=_(t,"input","avgPool3dGrad"),u=i,l=o,c=!1;o.rank===4&&(c=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),xn("avgPool3dGrad",r,a);let h={dy:u,input:l},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},p=M.runKernel(Xg,h,d);return c?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var bM=z({avgPool3dGrad_:gM}),yM={kernelName:yh,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>bM(e,s,r,a,i,o)}}};function vM(e,t,n,s,r){let a=_(e,"dy","avgPoolGrad"),i=_(t,"input","avgPoolGrad");P(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,u=a,l=!1;i.rank===3&&(l=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),P(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let c={dy:u,input:o},h={filterSize:n,strides:s,pad:r},d=M.runKernel(Kg,c,h);return l?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var xM=z({avgPoolGrad_:vM}),wM={kernelName:Ra,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>xM(e,s,r,a,i)}}},kM={kernelName:Da,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:i}=n;return!a&&!i?{a:()=>Ve(e,r,!1,!0),b:()=>Ve(s,e,!0,!1)}:!a&&i?{a:()=>Ve(e,r,!1,!1),b:()=>Ve(e,s,!0,!1)}:a&&!i?{a:()=>Ve(r,e,!1,!0),b:()=>Ve(s,e,!1,!1)}:{a:()=>Ve(r,e,!0,!0),b:()=>Ve(e,s,!0,!0)}}},SM={kernelName:vo,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>Wb(e,s,r)}}},IM={kernelName:q_,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let u=r.length-1;u>=0;u--)if(r[u]===a[u])i[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>ve(e,o,!0)}}},CM={kernelName:Fa,gradFunc:e=>({x:()=>e.clone()})},NM={kernelName:Oa,gradFunc:e=>({x:()=>je(e)})},TM={kernelName:Er,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>En(Bs(ou(s,r),uu(s,a)),e,je(e))}}},$M={kernelName:xh,inputsToSave:["x"],gradFunc:iI.gradFunc},_M={kernelName:xo,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(u=>u.shape),{axis:r}=n,a=os(r,t[0].shape)[0],i=s.map(u=>u[a]);return _n(e,i,a).map(u=>()=>u)}},AM={kernelName:Pa,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return P(kr(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Rb(s.shape,e,r,i,o,u),filter:()=>Jb(s,e,r.shape,i,o,u)}}},EM={kernelName:La,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>va(e,r,a,i,o,1,u),filter:()=>Jb(e,s,r.shape,a,i,o,u)}}};function RM(e,t,n,s,r){let a=e;e.rank===4&&(a=U(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),P(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),P(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),P(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),P(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:a,dy:i},u={strides:s,pad:r,filterShape:n};return M.runKernel(Jg,o,u)}var DM=z({conv3DBackpropFilter_:RM}),FM={kernelName:wh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;P(kr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[i,o]=t;return{x:()=>oS(i.shape,e,o,r,a),filter:()=>DM(i,e,o.shape,r,a)}}},OM={kernelName:za,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(wt(CS(de(n,"float32"))),e)}}},PM={kernelName:Ma,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(NS(de(n,"float32")),e)}}},LM={kernelName:Ba,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{let o=pS([r],s.rank),u=cS(e,r,a,!i);return o!=null&&(u=Ue(u,o)),u}}}},zM={kernelName:Va,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=s==null?[1,1]:s;P(kr(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[u,l]=t;return P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),P(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),P(Us(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),xn("depthwiseConv2d",a,i),{x:()=>PS(u.shape,e,l,r,a,o,i),filter:()=>OS(u,e,l.shape,r,a,o,i)}}},MM={kernelName:kh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>M.runKernel(Mm,a,n),filter:()=>M.runKernel(Bm,i,n)}}},BM={kernelName:Ua,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>M.runKernel(ab,s)}}},VM={kernelName:El,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=V(rs(wt(ht(n))),2/Math.sqrt(Math.PI));return{x:()=>V(e,s)}}},WM={kernelName:Ga,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,n)}}},UM={kernelName:Co,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>U(e,n.shape)}}},GM={kernelName:No,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,rs(n))}}},HM={kernelName:Ha,gradFunc:e=>({x:()=>je(e)})},qM={kernelName:qa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=xe(e,de(s,"float32")),u=Rt(n.shape,r);return u.length>0?U(ve(o,u),n.shape):o},b:()=>{let o=V(e,de(n,"float32")),u=Rt(s.shape,r);u.length>0&&(o=U(ve(o,u),s.shape));let l=ht(s);return wt(xe(o,de(l,"float32")))}}}},jM={kernelName:ja,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,i,o]=t,u=o==null?Se(1):o,l=Rt(a.shape,r.shape),c=[];if(a.rank===1){for(let x=0;x<r.shape.length-1;++x)c.push(r.shape[x]);c.push(1)}let h=me(r,a),d=V(e,u),p=kS(ie(i,Se(s))),f=V(V(V(p,p),p),Se(-.5));return{x:()=>a.rank===1?U(V(V(e,xs(U(p,[1,1,1,a.shape[0]]),c)),u),r.shape):U(V(V(e,p),u),r.shape),mean:()=>{let x=V(V(p,Se(-1)),d);return a.rank===1&&(x=ve(x,l)),U(x,a.shape)},variance:()=>{let x=V(V(f,h),d);return a.rank===1&&(x=ve(x,l)),U(x,a.shape)},scale:()=>{let x=V(h,p),k=V(e,x);return a.rank===1&&(k=ve(k,l)),U(k,a.shape)},offset:()=>{let x=e;return a.rank===1&&(x=ve(x,l)),U(x,a.shape)}}}},KM={kernelName:$o,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,i=os(a,s.shape)[0];return{x:()=>{let u=s.shape,l=r.size,c=u.slice(0,i),h=c.length,d=u.slice(a,u.length).slice(1),p=d.length,f=mw(0,h),m=mw(h+1,h+1+p),g=gw([c,[l],d]),b=U(e,g),y=U(r,[l]),v=gw([[h],f,m]),x=Ue(b,v),k=_S(x,y,s.shape[i]),C=Ob(v);return k=Ue(k,C),k},indices:()=>r}}};function mw(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function gw(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var XM={kernelName:Ka,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>je(n),b:()=>je(s)}}},YM={kernelName:Xa,gradFunc:e=>({x:()=>de(e,"float32")})},ZM={kernelName:Dl,gradFunc:e=>({x:()=>je(e)})},QM={kernelName:Fl,gradFunc:e=>({x:()=>je(e)})},JM={kernelName:Ol,gradFunc:e=>({x:()=>je(e)})},eB={kernelName:Ya,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=Qn(s,0);return{x:()=>En(a,e,V(e,r))}}},tB={kernelName:Pl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ie(n,1))}}},nB={kernelName:Za,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,de(n,"float32"))}}},sB={kernelName:K_,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let i=rs(s);return me(e,V(ve(e,r,!0),i))}}}};function rB(e,t,n,s=5,r=1,a=1,i=.5){let o={x:e,y:t,dy:n},u={depthRadius:s,bias:r,alpha:a,beta:i};return M.runKernel(lb,o,u)}var aB=z({localResponseNormalizationBackprop_:rB}),iB={kernelName:Ch,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>aB(s,r,e,a,i,o,u)}}};function oI(e,t,n,s){return t.rank<n.rank&&(t=U(t,xa(t.shape,s))),e.rank<n.rank&&(e=U(e,xa(e.shape,s))),{x:()=>V(e,de(ss(n,t),e.dtype))}}var bw={kernelName:Qa,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],i=t[1],o=os(r,a.shape),u=oI(e,i,a,o);return{x:()=>u.x()}}},oB={kernelName:Ja,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>V(e,de(ou(n,s),"float32")),b:()=>V(e,de(mS(n,s),"float32"))}}};function uB(e,t,n,s,r,a,i){let o=_(e,"dy","maxPool3dGrad"),u=_(t,"input","maxPool3dGrad"),l=_(n,"output","maxPool3dGrad"),c=o,h=u,d=l,p=!1;u.rank===4&&(p=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=U(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=U(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),P(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),P(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),xn("maxPool3dGrad",a,i);let f={dy:c,input:h,output:d},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=M.runKernel(db,f,m);return p?U(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var lB=z({maxPool3dGrad_:uB}),cB={kernelName:Nh,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>lB(e,s,r,a,i,o,u)}}};function dB(e,t,n,s,r,a,i){let o=_(e,"dy","maxPoolGrad"),u=_(t,"input","maxPoolGrad"),l=_(n,"output","maxPoolGrad");P(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),P(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),P(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),xn("maxPoolGrad",a,i);let c={dy:o,input:u,output:l},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return M.runKernel(cb,c,h)}var hB=z({maxPoolGrad_:dB}),pB={kernelName:ei,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>hB(e,s,r,a,i,o)}}},fB={kernelName:ti,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=os(r,s.shape),o=hS(s.shape,a)[1],u=pt(o);return{x:()=>{let c=s.shape.slice();a.forEach(p=>{c[p]=1});let h=U(e,c);return xe(V(h,$n(s.shape,"float32")),u)}}}},mB={kernelName:ni,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,i]=t,o=os(r,a.shape),u=oI(e,i,a,o);return{x:()=>u.x()}}},gB={kernelName:si,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>V(e,de(uu(n,s),"float32")),b:()=>V(e,de(Qn(n,s),"float32"))}}},bB={kernelName:ri,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(i=>i[0]);return{x:()=>qe(e,a,s.shape)}}},yB={kernelName:zl,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=Rt(n.shape,r);return o.length>0?U(ve(e,o),n.shape):e},b:()=>{let o=V(e,wt(Hh(xe(n,s)))),u=Rt(s.shape,r);return u.length>0?U(ve(o,u),s.shape):o}}}},vB={kernelName:ai,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=V(e,de(s,"float32")),u=Rt(n.shape,r);return u.length>0?U(ve(o,u),n.shape):o},b:()=>{let o=V(e,de(n,"float32")),u=Rt(s.shape,r);return u.length>0?U(ve(o,u),s.shape):o}}}},xB={kernelName:Oo,gradFunc:e=>({x:()=>wt(e)})},wB={kernelName:Bo,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Et(n.shape,"float32")}}},kB={kernelName:Mo,gradFunc:e=>({x:()=>je(e)})},SB={kernelName:Vo,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return Vs(e,s).map(a=>()=>a)}},yw={kernelName:ii,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(i=>i[0]);return{x:()=>qe(e,a,s.shape)}}},IB={kernelName:oi,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,i=s,o=it(a.shape,i.shape);return{a:()=>{let c=de(i,"float32"),h=V(e,V(c,wa(a,me(c,Se(1))))),d=Rt(a.shape,o);return d.length>0&&(h=ve(h,d)),U(h,a.shape)},b:()=>{let c=Qn(a,0),h=En(c,as(a),je(a)),d=V(e,V(r,h)),p=Rt(i.shape,o);return p.length>0&&(d=ve(d,p)),U(d,i.shape)}}}},CB={kernelName:ui,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=Qn(n,0);return{x:()=>En(r,e,V(e,s)),alpha:()=>{let a=En(r,je(e),V(e,n)),i=Rt(s.shape,e.shape);return i.length>0&&(a=ve(a,i)),U(a,s.shape)}}}};function NB(e,t,n){let s=e.shape.slice();s[n]=1;let r=U(t,s),a=ng(e,n,!0,!1),i=ng(e,n,!0,!0),o=V(a,i);return V(r,o)}function TB(e,t,n){let s=e.shape.length,r=s-n.length,a=I.getAxesPermutation(n,s),i=e;a!=null&&(i=Ue(e,a));let o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce((d,p)=>d*p,1);o.push(l);let c=i.reshape(o),h=NB(c,t,r);if(h=h.reshape(i.shape),a!=null){let d=I.getUndoAxesPermutation(a);h=Ue(h,d)}return h}var $B={kernelName:li,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=[];return r==null?a=s.shape.map((i,o)=>o):typeof r=="number"?a=[r]:a=r,{x:()=>TB(s,e,a)}}},_B={kernelName:Wa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=xe(e,de(s,"float32")),u=Rt(n.shape,r);return u.length>0?U(ve(o,u),n.shape):o},b:()=>{let o=V(e,de(n,"float32")),u=Rt(s.shape,r);u.length>0&&(o=U(ve(o,u),s.shape));let l=ht(s);return wt(xe(o,de(l,"float32")))}}}},AB={kernelName:Vl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,wt(ht(n)))}}},EB={kernelName:pi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=V(uu(n,6),tc(n));return{x:()=>V(e,de(s,"float32"))}}},RB={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,de(tc(n),"float32"))}}},DB={kernelName:Wo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,n.shape)}}},FB={kernelName:hi,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>M.runKernel(mb,r,n)}}},OB={kernelName:di,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>M.runKernel(fb,r,n)}}},PB={kernelName:Uo,gradFunc:(e,t,n)=>{let{dims:s}=n,r=os(s,e.shape);return{x:()=>Ss(e,r)}}},LB={kernelName:Go,gradFunc:e=>({x:()=>je(e)})},zB={kernelName:fi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>wt(xe(e,V(wa(n,1.5),2)))}}},MB={kernelName:qo,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>de(je(n),"float32"),t:()=>V(e,de(n,e.dtype)),e:()=>V(e,de(Mb(n),e.dtype))}}},BB={kernelName:Wl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Qn(n,Se(0)),r=Se(GS),a=Se(HS),i=V(e,a),o=V(V(e,r),rs(de(n,"float32")));return En(s,i,o)}}}},VB={kernelName:gi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(n,me(Se(1),n)))}}},WB={kernelName:Ul,gradFunc:e=>({x:()=>je(e)})},UB={kernelName:mi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(Db(de(n,"float32")),e)}}},GB={kernelName:Ko,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(lS(de(n,"float32")),e)}}},HB={kernelName:jo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,i=s.shape,[o,u]=M0(s,r,a),l=[];for(let c=0;c<e.rank;c++)l.push([o[c],i[c]-o[c]-u[c]]);return{x:()=>Ii(e,l)}}},qB={kernelName:vi,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,i=V(e,s);return{logits:()=>me(i,V(ve(i,[r],a),s))}}},jB={kernelName:Gl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,er(n))}}},vw={kernelName:Xo,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>Eb(e,s,r)}}},xw={kernelName:Yo,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>Lt(e,s)}}},KB={kernelName:bi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,V(yn(de(n,"float32")),2))}}},XB={kernelName:ql,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(de(n,"float32"),2))}}},YB={kernelName:xi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Se(2);return{a:()=>V(e,V(r,me(n,s))),b:()=>V(e,V(r,me(s,n)))}}},ZB={kernelName:Si,gradFunc:e=>({x:()=>je(e)})},QB={kernelName:wi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=e,u=Rt(n.shape,r);return u.length>0&&(o=ve(o,u)),U(o,n.shape)},b:()=>{let o=e,u=Rt(s.shape,r);return u.length>0&&(o=ve(o,u)),U(wt(o),s.shape)}}}},JB={kernelName:yi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;os(a,s.shape).forEach(l=>{r[l]=1});let o=U(e,r),u=V(o,$n(s.shape,"float32"));return{x:()=>u}}},eV={kernelName:Qo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ht(Db(n)))}}},tV={kernelName:ki,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(me(Se(1),ht(n)),e)}}},nV={kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let i=je(s);if(s.rank===1)for(let o=0;o<r[0];++o)i=ie(i,qe(e,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)i=ie(i,qe(e,[o*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)for(let l=0;l<r[2];++l)i=ie(i,qe(e,[o*s.shape[0],u*s.shape[1],l*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)for(let l=0;l<r[2];++l)for(let c=0;c<r[3];++c)i=ie(i,qe(e,[o*s.shape[0],u*s.shape[1],l*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}},sV={kernelName:Qs,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=Ob(r);return{x:()=>Ue(e,a)}}},rV={kernelName:tu,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>Wn(e,r)}}},aV={kernelName:Fh,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>iV(e,n)}}};function iV(e,t){let n=Or(t,je(t)),s=qh(e,n),r=ou(t,Se(0,"int32")),a=s.rank-r.rank;for(let o=0;o<a;++o)r=Nn(r,o+1);r=Bs(r,$n(s.shape,"bool"));let i=je(s);return En(r,s,i)}var oV={kernelName:nu,gradFunc:e=>({x:()=>je(e)})},uV=[iI,aM,iM,oM,uM,lM,cM,dM,hM,pM,fM,mM,yM,wM,kM,SM,IM,CM,NM,TM,$M,_M,EM,AM,FM,OM,PM,LM,zM,MM,_B,BM,VM,WM,UM,GM,qM,HM,jM,KM,XM,YM,ZM,QM,JM,eB,tB,nB,sB,iB,bw,bw,oB,cB,pB,fB,mB,gB,bB,yB,vB,xB,wB,kB,SB,yw,yw,IB,CB,$B,AB,EB,RB,DB,FB,OB,PB,LB,zB,MB,BB,VB,WB,UB,GB,HB,qB,jB,vw,vw,xw,xw,KB,YB,XB,ZB,QB,JB,eV,tV,nV,sV,rV,aV,oV];for(let e of uV)Y_(e);var lV={};Ee(lV,{maxNorm:()=>cV,minMaxNorm:()=>pV,nonNeg:()=>hV,unitNorm:()=>dV});function vy(e,t){return Y(()=>yn(ve(V(e,e),t,!0)))}var ic=class extends ae.Serializable{getConfig(){return{}}},xy=class extends ic{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>{let t=vy(e,this.axis),n=Yn(t,0,this.maxValue);return V(e,xe(n,ie(Ot(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};xy.className="MaxNorm";ae.registerClass(xy);var wy=class extends ic{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>xe(e,ie(Ot(),vy(e,this.axis))))}getConfig(){return{axis:this.axis}}};wy.className="UnitNorm";ae.registerClass(wy);var ky=class extends ic{apply(e){return sr(e)}};ky.className="NonNeg";ae.registerClass(ky);var Sy=class extends ic{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>{let t=vy(e,this.axis),n=ie(V(this.rate,Yn(t,this.minValue,this.maxValue)),V(1-this.rate,t));return V(e,xe(n,ie(Ot(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Sy.className="MinMaxNorm";ae.registerClass(Sy);var ww={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function zt(e){return uy(e)}function kw(e,t={}){return nc(e,ae.SerializationMap.getMap().classNameMap,t,"constraint")}function Mt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in ww?ww[e]:e,config:{}};return kw(n)}else return e instanceof ic?e:kw(e)}function cV(e){return new xy(e)}function dV(e){return new wy(e)}function hV(){return new ky}function pV(e){return new Sy(e)}var fV={};Ee(fV,{constant:()=>bV,glorotNormal:()=>IV,glorotUniform:()=>SV,heNormal:()=>CV,heUniform:()=>NV,identity:()=>wV,leCunNormal:()=>TV,leCunUniform:()=>$V,ones:()=>gV,orthogonal:()=>_V,randomNormal:()=>vV,randomUniform:()=>yV,truncatedNormal:()=>xV,varianceScaling:()=>kV,zeros:()=>mV});function mV(){return new dy}function gV(){return new ap}function bV(e){return new hy(e)}function yV(e){return new py(e)}function vV(e){return new fy(e)}function xV(e){return new my(e)}function wV(e){return new gy(e)}function kV(e){return new Rn(e)}function SV(e){return new ip(e)}function IV(e){return new op(e)}function CV(e){return new up(e)}function NV(e){return new lp(e)}function TV(e){return new cp(e)}function $V(e){return new dp(e)}function _V(e){return new by(e)}var AV={};Ee(AV,{Layer:()=>He,RNN:()=>zr,RNNCell:()=>lc,activation:()=>QW,add:()=>o4,alphaDropout:()=>G4,average:()=>u4,averagePooling1d:()=>Av,averagePooling2d:()=>Ev,averagePooling3d:()=>Rv,avgPool1d:()=>b4,avgPool2d:()=>v4,avgPool3d:()=>w4,avgPooling1d:()=>y4,avgPooling2d:()=>x4,avgPooling3d:()=>k4,batchNormalization:()=>f4,bidirectional:()=>P4,concatenate:()=>l4,conv1d:()=>UW,conv2d:()=>GW,conv2dTranspose:()=>HW,conv3d:()=>qW,conv3dTranspose:()=>jW,convLstm2d:()=>R4,convLstm2dCell:()=>D4,cropping2D:()=>XW,dense:()=>JW,depthwiseConv2d:()=>ZW,dot:()=>p4,dropout:()=>e4,elu:()=>LW,embedding:()=>i4,flatten:()=>n4,gaussianDropout:()=>U4,gaussianNoise:()=>W4,globalAveragePooling1d:()=>S4,globalAveragePooling2d:()=>I4,globalMaxPool1d:()=>z4,globalMaxPool2d:()=>M4,globalMaxPooling1d:()=>tC,globalMaxPooling2d:()=>nC,gru:()=>N4,gruCell:()=>T4,input:()=>SW,inputLayer:()=>PW,layerNormalization:()=>m4,leakyReLU:()=>MW,lstm:()=>$4,lstmCell:()=>_4,masking:()=>H4,maxPool1d:()=>B4,maxPool2d:()=>V4,maxPooling1d:()=>sC,maxPooling2d:()=>rC,maxPooling3d:()=>C4,maximum:()=>c4,minimum:()=>d4,multiply:()=>h4,permute:()=>a4,prelu:()=>BW,reLU:()=>zW,repeatVector:()=>s4,reshape:()=>r4,rnn:()=>F4,separableConv2d:()=>KW,simpleRNN:()=>A4,simpleRNNCell:()=>E4,softmax:()=>VW,spatialDropout1d:()=>t4,stackedRNNCells:()=>O4,thresholdedReLU:()=>WW,timeDistributed:()=>L4,upSampling2d:()=>YW,zeroPadding2d:()=>g4});async function Zr(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let i=a;t.push(i.data()),n.push(r),s.push(i)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];Fe(s)}}function uI(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var EV=125,fl=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},RV=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},DV=class extends fl{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let i=Y(()=>ie(this.totals[s],V(r,n)));this.totals[s]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:Y(()=>{let s=V(xe(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),Yt(t[n])}))}},FV=class extends fl{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let o=a[i];e.push(o.data()),t.push(r),n.push(i)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},OV=class extends fl{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||US,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=EV),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=Cz(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Zr(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Zr(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Zr(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Zr(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Zr(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Zr(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Zr(e),await this.trainEnd(e))}};function lI(e,t){return e==null&&(e={}),e instanceof fl?[e]:Array.isArray(e)&&e[0]instanceof fl?e:mt(e).map(s=>new OV(s,t))}var _s=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),_s.checkForDuplicate(t),_s.constructors[e]==null&&(_s.constructors[e]=[]),_s.constructors[e].push(t)}static checkForDuplicate(e){for(let t in _s.constructors)_s.constructors[+t].forEach(s=>{if(s===e)throw new H("Duplicate callback constructor.")})}static clear(){_s.constructors={}}static createCallbacks(e){let t=[];for(let n in _s.constructors){let s=+n;e>=s&&t.push(..._s.constructors[s])}return t.map(n=>new n)}},cI=_s;cI.constructors={};function dI(e,t,n,s,r,a,i,o,u){let l=new FV,c=[new DV,...cI.createCallbacks(t)];e!=null&&c.push(...e),c.push(l);let h=new RV(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function zs(e,t={},n=!1){return nc(e,ae.SerializationMap.getMap().classNameMap,t,"layer",n)}function jd(e,t){return Y(()=>{e.dtype!=="float32"&&(e=de(e,"float32"));let n=ve(rc(e),t,!0),s=Ql(n.shape,Ot()),r=yn(Or(n,s));return xe(e,r)})}function Ni(e,t){return Y(()=>Nt(rc(me(t,e)),-1))}function pp(e,t){return Y(()=>Nt(Wt(me(t,e)),-1))}function du(e,t){return Y(()=>{let n=me(e,t),s=Yn(Wt(e),Ot(),Number.MAX_VALUE),r=Wt(xe(n,s));return V(100,Nt(r,-1))})}function PV(e,t){return Y(()=>{let n=Yn(t,Ot(),Number.MAX_VALUE),s=as(ie(1,n)),r=Yn(e,Ot(),Number.MAX_VALUE),a=as(ie(1,r));return Nt(rc(me(s,a)),-1)})}function LV(e,t){return Y(()=>{let n=Or(0,me(1,V(e,t)));return Nt(rc(n),-1)})}function zV(e,t){return Y(()=>{let n=Or(0,me(1,V(e,t)));return Nt(n,-1)})}function MV(e,t){return Y(()=>{let n=ve(V(e,t),-1),s=Ps(V(me(1,e),t),-1);return Or(0,ie(1,me(s,n)))})}function BV(e,t){return Y(()=>{let n=Math.log(2),s=me(t,e),r=me(ie(s,Jl(V(-2,s))),n);return Nt(r,-1)})}function ml(e,t,n=!1){return Y(()=>{if(n)t=Kb(t);else{let s=ve(t,t.shape.length-1,!0);t=xe(t,s)}return t=Yn(t,Ot(),1-Ot()),wt(ve(V(de(e,"float32"),as(t)),t.shape.length-1))})}function Kd(e,t,n=!1){return Y(()=>{let s=de(Hh(Lz(e)),"int32");t=Yn(t,Ot(),1-Ot());let r=t.shape,a=U(Bd(s,r[r.length-1]),r);return ml(a,t,n)})}function VV(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new H(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Y(()=>{let n=sr(t),s=wt(Wt(t));return ie(me(n,V(t,e)),zb(rs(s)))})}function fp(e,t){return Y(()=>{let n;return n=Yn(t,Ot(),1-Ot()),n=as(xe(n,me(1,n))),Nt(VV(e,n),-1)})}function WV(e,t){return Y(()=>{let n=Yn(e,Ot(),1),s=Yn(t,Ot(),1);return ve(V(e,as(xe(n,s))),-1)})}function UV(e,t){return Y(()=>{let n=as(ie(Ot(),t));return Nt(me(t,V(e,n)),-1)})}function Iy(e,t){return Y(()=>{let n=jd(e,-1),s=jd(t,-1),r=V(n,s);return wt(ve(r,-1))})}var Xd={meanSquaredError:Ni,meanAbsoluteError:pp,meanAbsolutePercentageError:du,meanSquaredLogarithmicError:PV,squaredHinge:LV,hinge:zV,categoricalHinge:MV,logcosh:BV,categoricalCrossentropy:ml,sparseCategoricalCrossentropy:Kd,binaryCrossentropy:fp,kullbackLeiblerDivergence:WV,poisson:UV,cosineProximity:Iy};function Tm(e){if(typeof e=="string"){if(e in Xd)return Xd[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new H(t)}else return e}function Cy(e,t){return Y(()=>{let n=V(.5,is(t)),s=sp(Qn(t,n),e.dtype);return Nt(ss(e,s),-1)})}function Ny(e,t){return Y(()=>sp(ss(ul(e,-1),ul(t,-1)),"float32"))}function hI(e,t){return Y(()=>de(ve(Bs(ss(e,1),ss(t,1))),"float32"))}function GV(e,t){return Y(()=>de(ve(Bs(ss(e,1),ss(t,0))),"float32"))}function HV(e,t){return Y(()=>de(ve(Bs(ss(e,0),ss(t,1))),"float32"))}function pI(e,t){return Y(()=>{let n=hI(e,t),s=HV(e,t),r=ie(n,s);return de(En(Qn(r,0),xe(n,r),0),"float32")})}function qV(e,t){return Y(()=>{let n=hI(e,t),s=GV(e,t),r=ie(n,s);return de(En(Qn(r,0),xe(n,r),0),"float32")})}function fI(e,t){return fp(e,t)}function mI(e,t){return e.rank===t.rank&&(e=Pr(e,[e.rank-1])),t=ul(t,-1),t.dtype!==e.dtype&&(t=de(t,e.dtype)),de(ss(e,t),"float32")}var jV=Ni,KV=Ni,XV=pp,YV=pp,ZV=du,QV=du,Ty=ml,JV=Iy,gI=Kd,Yd={binaryAccuracy:Cy,categoricalAccuracy:Ny,precision:pI,categoricalCrossentropy:Ty,sparseCategoricalCrossentropy:gI,mse:jV,MSE:KV,mae:XV,MAE:YV,mape:ZV,MAPE:QV,cosine:JV};function eW(e){if(typeof e=="string"&&e in Yd)return Yd[e];if(typeof e!="string"&&e!=null)return e;throw new H(`Unknown metric ${e}`)}function od(e){if(Es(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(Xd))if(Xd[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Yd))if(Yd[n]===e){t=n;break}return t!==void 0?t:e.name}}function tW(e){let t={Adagrad:()=>Ki.adagrad(.01),Adadelta:()=>Ki.adadelta(1,.95,Ot()),Adam:()=>Ki.adam(.001,.9,.999,Ot()),Adamax:()=>Ki.adamax(.002,.9,.999,Ot(),0),RMSProp:()=>Ki.rmsprop(.001,.9,0,Ot()),SGD:()=>Ki.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new H(`Unknown Optimizer ${e}`)}var Sw=1*1024*1024;function Iw(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!lg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>Sw&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Sw}.`)}}function lg(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!lg(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!lg(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function nW(e,t,n,s=console.log){let r=rW(e),a=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(t*c)));let i;if(!r){a.push("Receives inputs"),i=[];for(let c in e.nodesByDepth)i.push(...e.nodesByDepth[c])}s("_".repeat(t)),Zd(a,n,s),s("=".repeat(t));let o=e.layers;for(let c=0;c<o.length;++c)r?aW(o[c],n,s):iW(o[c],n,i,s),s((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let u=sW(e),l=Gd(e.nonTrainableWeights);s(`Total params: ${u+l}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${l}`),s("_".repeat(t))}function sW(e){let t;return e.collectedTrainableWeights!=null?t=Gd(e.collectedTrainableWeights):t=Gd(e.trainableWeights),t}function rW(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let i of r.inboundNodes)if(s.indexOf(i)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Zd(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function aW(e,t,n){let s,r;try{r=e.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch(u){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(u){s="multiple"}let a=e.name,i=e.getClassName(),o=[`${a} (${i})`,r,s,e.countParams().toString()];Zd(o,t,n)}function iW(e,t,n,s){let r,a;try{a=e.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch(h){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(h){r="multiple"}let i=[];for(let h of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){let p=h.inboundLayers[d].name,f=h.nodeIndices[d],m=h.tensorIndices[d];i.push(`${p}[${f}][${m}]`)}let o=e.name,u=e.getClassName(),l=i.length===0?"":i[0],c=[`${o} (${u})`,a,r,e.countParams().toString(),l];Zd(c,t,s);for(let h=1;h<i.length;++h)Zd(["","","","",i[h]],t,s)}function bI(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Qd(e,t){if(e===null)return null;if(typeof e=="string")return sa(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];bI(t,r,a)?n.push(a):n.push(Qd(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=sa(s);n[a]=Qd(r,a)}}return n}}function cg(e,t){if(e==null)return null;if(typeof e=="string")return Ks(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];bI(t,r,a)?n.push(a):n.push(cg(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=Ks(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=cg(r,s)}return n}}var yI="0.0.0",As=class extends He{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=np(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],yr(this.inputs).length!==this.inputs.length)throw new H(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);yr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(x)}for(let b of this.inputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;Es(v===0,"input layer has >1 nodes"),Es(x===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(x)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let y=this.inputLayers[b];if(!(y instanceof cu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},n={},s={},r={},a={},i=[],o=(b,y,v,x,k,C)=>{(x==null||k==null||C==null)&&(x=b.sourceLayer,k=b.nodeIndex,C=b.tensorIndex);let $=x.inboundNodes[k];if(v.indexOf($)!==-1)throw new ws(`The tensor ${b.name} at layer "${x.name}" is part of a cycle.`);if(y.indexOf($)!==-1)return;this.containerNodes.add(As.nodeKey(x,k)),x.id in a||(a[x.id]=Object.keys(a).length),v.indexOf($)===-1&&v.push($);let A=$.inboundLayers.length;for(let E=0;E<A;E++){let O=$.inputTensors[E],R=$.inboundLayers[E],D=$.nodeIndices[E],T=$.tensorIndices[E];o(O,y,v,R,D,T)}for(y.push($);v.indexOf($)>=0;)v.splice(v.indexOf($),1);i.push($)},u=[],l=[];for(let b of this.outputs)o(b,u,l);let c=i.slice().reverse();for(let b of c){n[b.id]=b,b.id in t||(t[b.id]=0);let y=t[b.id],v=s[b.outboundLayer.id]==null?0:s[b.outboundLayer.id];y=Math.max(y,v),s[b.outboundLayer.id]=y,r[b.outboundLayer.id]=b.outboundLayer,t[b.id]=y;for(let x=0;x<b.inboundLayers.length;x++){let k=b.inboundLayers[x],C=b.nodeIndices[x],$=k.inboundNodes[C],A=t[$.id]==null?0:t[$.id];t[$.id]=Math.max(y+1,A),n[$.id]=$}}let h={};for(let b in t){let y=t[b];y in h||(h[y]=[]),h[y].push(n[b])}let d={};for(let b in s){let y=s[b];y in d||(d[y]=[]),d[y].push(r[b])}let p=Object.keys(d).map(b=>parseInt(b,10)).sort(rd);this.layers=[];for(let b of p){let y=d[b];y.sort((v,x)=>{let k=a[v.id],C=a[x.id];return k<C?-1:k>C?1:0});for(let v of y)v instanceof As&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=d,p=Object.keys(h).map(b=>parseInt(b,10)).sort(rd);let f=this.inputs.slice(),m=[];for(let b of p)for(let y of h[b]){let v=y.outboundLayer;if(v!=null){for(let x of y.inputTensors)if(f.indexOf(x)===-1)throw new ws(`Graph disconnected: cannot obtain value for tensor ${x} at layer "${v.name}". The following previous layers were accessed without issue: ${m}`);for(let x of y.outputTensors)f.push(x);m.push(v.name)}}this.nodesByDepth=h;let g=this.layers.map(b=>b.name);for(let b of g){let y=g.filter(v=>v===b).length;if(y!==1)throw new ws(`The name "${b}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new hp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new H("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new H(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,s++}let r=[];for(let a in e){let i=a;if(n[a]==null){let o=a.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(n[i]!=null)r.push([n[i],e[a]]);else if(t)throw new H(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new H(`${a.length} of ${s} weights are not set: ${a}`)}yy(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${yI}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=cg(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Y(()=>{e=mt(e);let n=new ia;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return qu(this.outputs,n,t)})}computeMask(e,t){return Y(()=>{e=mt(e);let n;return t==null?n=ka(null,e.length):n=mt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Ud(e);if(t.length!==this.inputLayers.length)throw new H(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],u=t[i],l=o.name+"_0_0";n[l]=u}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(rd);if(s.length>1)for(let i of s){let o=this.nodesByDepth[i];for(let u of o){let l=u.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(l.id)!==-1)continue;let c=[];for(let f=0;f<u.inboundLayers.length;f++){let m=u.inboundLayers[f],g=u.nodeIndices[f],b=u.tensorIndices[f],y=`${m.name}_${g}_${b}`,v=n[y];c.push(v)}let h=l.computeOutputShape(Tn(c)),d=Ud(h),p=l.inboundNodes.indexOf(u);for(let f=0;f<d.length;f++){let m=`${l.name}_${p}_${f}`;n[m]=d[f]}}}let r=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],c=`${o.name}_${u}_${l}`;a.push(c)}for(let i=0;i<a.length;i++){let o=a[i];Es(o in n),r.push(n[o])}return Tn(r)}runInternalGraph(e,t){t==null&&(t=ka(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let u=this.inputs[o],l=e[o],c=t[o];n[u.id]=[l,c]}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(rd);for(let o of s){let u=this.nodesByDepth[o];for(let l of u){let c=l.outboundLayer,h=l.inputTensors,d=l.outputTensors,p=new Array;for(let f of h)f.id in n&&p.push(n[f.id]);if(p.length===h.length){let f={},m,g,b,y;if(l.callArgs!=null&&(f=l.callArgs),p.length===1){let[v,x]=p[0];f.mask==null&&(f.mask=x),b=mt(c.call(v,f)),y=mt(c.computeMask(v,x)),m=[v],g=[x]}else m=p.map(v=>v[0]),g=p.map(v=>v[1]),f.mask==null&&(f.mask=g),b=mt(c.call(m,f)),y=mt(c.computeMask(m,g));if(c.activityRegularizer)throw new Oe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<d.length;++v){let x=d[v],k=b[v],C=y[v];n[x.id]=[k,C]}}}}let r=[],a=[],i=[];for(let o of this.outputs){Es(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[u,l]=n[o.id];i.push(u.shape),r.push(u),a.push(l)}return[r,a,i]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof As?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=As.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new H(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new H("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new H(`No such layer: ${e}`)}calculateLosses(){return Y(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=As.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),o=a.getConfig(),u=[];for(let c=0;c<a.inboundNodes.length;c++){let h=a.inboundNodes[c],d=As.nodeKey(a,c),p={};if(this.containerNodes.has(d)){if(h.callArgs)try{JSON.stringify(h.callArgs),p=h.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(h.inboundLayers.length>0){let f=[];for(let m=0;m<h.inboundLayers.length;m++){let g=h.inboundLayers[m],b=h.nodeIndices[m],y=h.tensorIndices[m],v=As.nodeKey(g,b),x=t[v];x==null&&(x=0),f.push([g.name,x,y,p])}u.push(f)}}}let l={};l.name=a.name,l.className=i,l.config=o,l.inboundNodes=u,n.push(l)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],o=this.inputLayersNodeIndices[a],u=As.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let c=this.inputLayersTensorIndices[a];s.push([i.name,l,c])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],o=this.outputLayersNodeIndices[a],u=As.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let c=this.outputLayersTensorIndices[a];r.push([i.name,l,c])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function i(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function o(m,g){let b=[],y;for(let v of g){let x=v[0],k=v[1],C=v[2];if(y=v[3]==null?{}:v[3],!(x in r)){i(m,g);return}let $=r[x];if($.inboundNodes.length<=k){i(m,g);return}let A=$.inboundNodes[k];b.push(A.outputTensors[C])}b.length>0&&m.apply(Tn(b),y)}function u(m){let g=m.name,b=zs(m,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(s),r[g]=b,m.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new H(`Corrupted configuration, expected array for nodeData: ${v}`);i(b,v)})}let l=t.name,c=t.layers;for(let m of c)u(m);for(;!Iz(a);)for(let m of c){let g=r[m.name];if(g.name in a){let b=a[g.name];delete a[g.name];for(let y of b)o(g,y)}}let h=[],d=[],p=t.inputLayers;for(let m of p){let g=m[0],b=m[1],y=m[2];Es(g in r);let x=r[g].inboundNodes[b].outputTensors;h.push(x[y])}let f=t.outputLayers;for(let m of f){let g=m[0],b=m[1],y=m[2];Es(g in r);let x=r[g].inboundNodes[b].outputTensors;d.push(x[y])}return new e({inputs:h,outputs:d,name:l})}get stateful(){if(this._stateful)throw new H("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Y(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function oW(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function vI(e,t){return oW(e,t,"classWeight")}async function xI(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=Y(()=>{if(e.shape.length===1)return Js(e);if(e.shape.length===2){if(e.shape[1]>1)return ul(e,1);if(e.shape[1]===1)return U(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());Fe(r);let i=[];return a.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),gn(i,"float32")}else return null}function uW(e,t){return V(e,t)}var lW=32;function wI(e,t){let n,s,r=t;n=r.xs,s=r.ys,w.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=Cw("input",e.inputNames,n),i=Cw("output",e.outputNames,s),o=a[0].shape[0];w.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let u=0;u<a.length;u++)w.assert(a[u].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${a[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let u=0;u<i.length;u++)w.assert(i[u].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:a,ys:i}}function Cw(e,t,n){if(n instanceof ut)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new H(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function cW(e){if(e.length===3)throw new Oe("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function dW(e,t,n){let s=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,i;if(r)if(Nw(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=cW(n.validationData);a=g.xs,i=g.ys}let o=e.makeTrainFunction(),u=e.getDedupedMetricsNames(),l;r?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let c=lI(n.callbacks,n.yieldEvery),h=n.verbose==null?1:n.verbose,{callbackList:d,history:p}=dI(c,h,n.epochs,null,null,hW(t,n),null,r,l);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await d.onEpochBegin(f);let b=0,y=0;for(s||(m=await t.iterator());!s||b<n.batchesPerEpoch;){let v=await m.next();if(s&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){let{xs:x,ys:k}=wI(e,v.value),C={};C.batch=y,C.size=x[0].shape[0],await d.onBatchBegin(y,C);let $=[];if(n.classWeight!=null){let O=vI(n.classWeight,e.outputNames);for(let R=0;R<O.length;++R)$.push(await xI(k[R],null,O[R]))}let A=x.concat(k).concat($),E=o(A);Fe(A);for(let O=0;O<u.length;++O){let R=u[O],D=E[O];C[R]=D,Yt(D)}await d.onBatchEnd(y,C),uI(C),y++,b++}if(s?b>=n.batchesPerEpoch:v.done){if(r){let x;Nw(n.validationData)?x=mt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):x=mt(e.evaluate(a,i,{batchSize:n.validationBatchSize==null?lW:n.validationBatchSize,verbose:0}));for(let k=0;k<e.metricsNames.length;++k)g[`val_${e.metricsNames[k]}`]=x[k]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function hW(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Nw(e){return typeof e.iterator=="function"}function pW(e){return typeof e.next=="function"}async function fW(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Oe("Verbose mode is not implemented yet.");w.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=pW(t)?t:await t.iterator(),o=0,u=0;for(;!s||u<n.batches;){let l=await i.next();if(a=Y(()=>{if(l.value){let{xs:c,ys:h}=wI(e,l.value),d=c.concat(h),p=Y(()=>r(d));if(Fe(d),u===0)for(let m=0;m<p.length;++m)a.push(Se(0));let f=d[0].shape[0];for(let m=0;m<p.length;++m){let g=p[m],b=a[m];a[m]=Y(()=>ie(a[m],V(f,g))),u>0&&Fe(b)}Fe(p),o+=f,++u}return a}),l.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<a.length;++l){let c=a[l];a[l]=xe(a[l],o),Fe(c)}return Tn(a)}function dg(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function ju(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>da(s,t,n-t)):da(e,t,n-t)}function $y(e,t){return Y(()=>e==null?null:Array.isArray(e)?e.map(n=>$y(n,t)):nI(e,t.dtype==="int32"?t:de(t,"int32")))}function hg(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function mW(e,t,n,s,r,a,i,o,u,l,c,h,d,p,f){r==null&&(r=32),a==null&&(a=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(u!=null&&l!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new H("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,p,"steps_per_epoch"),b;g!=null&&(b=Is(0,g)),i==null&&(i=1);let{callbackList:y,history:v}=dI(o,i,a,d,g,p,r,m,h);y.setModel(e),e.history=v,await y.onTrainBegin(),e.stopTraining_=!1;for(let x=d;x<a;++x){await y.onEpochBegin(x);let k={};if(p!=null)throw new Oe("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Oe("batch shuffling is not implemneted yet");c&&w.shuffle(b);let C=gn(b),$=hg(g,r);for(let A=0;A<$.length;++A){let E={};if(await y.onBatchBegin(A,E),Y(()=>{let O=$[A][0],R=$[A][1],D=da(C,O,R-O);E.batch=A,E.size=R-O;let T=$y(n,D),L=t(T);for(let W=0;W<s.length;++W){let q=s[W],j=L[W];E[q]=j,Yt(j)}if(A===$.length-1&&m){let W=e.testLoop(u,l,r);for(let q=0;q<s.length;++q){let j=s[q],K=W[q];Yt(K),k["val_"+j]=K}}}),await y.onBatchEnd(A,E),uI(E),e.stopTraining_)break}C.dispose()}if(await y.onEpochEnd(x,k),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}async function gW(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,i,o,u,l,c,h,d;try{let p=s.batchSize==null?32:s.batchSize;dg(p);let f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,p);r=m[0],a=m[1],d=m[2];let g=!1,b;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)u=s.validationData[0],l=s.validationData[1];else throw s.validationData.length===3?new Oe("validationData including sample weights is not supported yet."):new H(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let E=!0,O=await e.standardizeUserData(u,l,null,null,E,p);c=O[0],h=O[1],b=c.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;let E=Math.floor(r[0].shape[0]*(1-s.validationSplit)),O=r[0].shape[0];c=ju(r,E,O),i=r,r=ju(r,0,E),h=ju(a,E,O),o=a,a=ju(a,0,E),b=c.concat(h)}else s.validationSteps!=null&&(g=!0);let y=r.concat(a).concat(d);e.checkTrainableWeightsConsistency();let v=e.makeTrainFunction(),x=e.getDedupedMetricsNames(),k,C;g?(e.makeTestFunction(),k=e.testFunction,C=x.slice().concat(x.map(E=>"val_"+E))):(k=null,b=[],C=x.slice());let $=lI(s.callbacks,s.yieldEvery);return await mW(e,v,y,x,p,s.epochs,s.verbose,$,k,b,s.shuffle,C,s.initialEpoch,null,null)}finally{e.isTraining=!1,vs(r,t),vs(a,n),vs(i,t),vs(o,n),vs(c,u),vs(h,l),d!=null&&Fe(d)}}function kI(e){let t=[];e instanceof ut&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(sc(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function vs(e,t){if(e==null)return;let n=[];if(t instanceof ut)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof ut)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function bW(e){return e instanceof ut}function pg(e){return Array.isArray(e)}function Tw(e){return!bW(e)&&!pg(e)}function $w(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(pg(e)&&e.length>0)i=!0;else if(Tw(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new H(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let a;if(Tw(e)){e=e,a=[];for(let i of t){if(e[i]==null)throw new H(`No data provided for "${i}". Need data for each key in: ${t}`);a.push(e[i])}}else if(pg(e)){if(e=e,e.length!==t.length)throw new H(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new H(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=kI(a),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=a[i];if(o.shape.length!==n[i].length)throw new H(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let u=0;u<n[i].length;++u){if(u===0&&!s)continue;let l=o.shape[u],c=n[i][u];if(c!=null&&c>=0&&l!==c)throw new H(`${r} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${r} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return a}function yW(e,t,n){let s=yr(e.map(a=>a.shape[0]));s.sort();let r=yr(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new H(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new H(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!w.arraysEqual(s,r))throw new H(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function vW(e,t,n){let s=[Ni,fp,ml];for(let r=0;r<e.length;++r){let a=e[r],i=t[r],o=n[r];if(i!=null){if(i===ml&&a.shape[a.shape.length-1]===1)throw new H(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){let u=a.shape.slice(1),l=o.slice(1);for(let c=0;c<u.length;++c){let h=u[c],d=l[c];if(d!=null&&h!==d)throw new H(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function _w(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new H(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new H(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=a[i];if(o.shape.length!==n[i].length)throw new H(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let u=0;u<n[i].length;++u){if(u===0&&!s)continue;let l=o.shape[u],c=n[i][u];if(c!=null&&c!==l)throw new H(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function xW(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var wW="layers-model",io=class extends As{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new H("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");nW(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=tW(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Lr))throw new H("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new H(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Tm(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new H(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Tm(i))}else{let a=Tm(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],o=this.outputNames[a];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ca("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=xW(e.metrics,this.outputNames),r=(a,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,a])};ca("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=s[a];(u=>{let l="",c,h,d;for(let p of u){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===fp?["accuracy","acc"].indexOf(p)!==-1?h=Cy:["crossentropy","ce"].indexOf(p)!==-1&&(h=fI):this.lossFunctions[a]===Kd?["accuracy","acc"].indexOf(p)!==-1?h=mI:["crossentropy","ce"].indexOf(p)!==-1&&(h=gI):["accuracy","acc"].indexOf(p)!==-1?h=Ny:["crossentropy","ce"].indexOf(p)!==-1&&(h=Ty);let g;["accuracy","acc"].indexOf(p)!==-1?g="acc":["crossentropy","ce"].indexOf(p)!==-1&&(g="ce"),d=h,c=l+g}else d=eW(p),c=l+od(p);let f;ca(c,()=>{f=d}),r(a,c,f)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;dg(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let i=a[0].concat(a[1]);this.makeTestFunction();let o=this.testFunction,u=this.testLoop(o,i,s,n.verbose,n.steps);return Tn(u)}finally{vs(a[0],e),vs(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),fW(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new H(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new H(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new H("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new ia;if(e instanceof ut&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new H(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)a.add(this.inputs[o],e[o])}else for(let o of this.inputs){let u=e[o.name];if(u==null)throw new H(`No value is provided for the model's input ${o.name}`);a.add(o,u)}let i=qu(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=ka(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(i=>i.name);for(let i=0;i<e.length;++i){let o=a.indexOf(e[i]);if(o!==-1&&(t[i]=r[o],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new H(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return Y(()=>{let s=this.checkNumSamples(e);if(n)throw new Oe("Verbose predictLoop() is not implemented yet.");let r=hg(s,t),a=this.outputs.map(i=>[]);for(let i=0;i<r.length;++i)Y(()=>{let u=r[i][0],l=r[i][1],c=ju(e,u,l),h=[];if(Array.isArray(c))for(let p=0;p<c.length;++p)h.push({key:this.inputs[p],value:c[p]});else h.push({key:this.inputs[0],value:c});let d=new ia(h);return qu(this.outputs,d)}).forEach((u,l)=>a[l].push(u));return Tn(a.map(i=>Lt(i,0)))})}predict(e,t={}){let n=kI(e);_w(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return dg(s),this.predictLoop(n,s)}finally{vs(n,e)}}predictOnBatch(e){_w(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new ws("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===Kd?r.push(i.slice(0,i.length-1).concat([1])):r.push(i)}if(e=$w(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=$w(t,this.feedOutputNames,r,!1,"target"),yW(e,t,null),vW(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new H(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[i,o]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(s!=null){let l=vI(s,this.outputNames);u=[];for(let c=0;c<l.length;++c)u.push(await xI(o[c],null,l[c]))}return[i,o,u]}testLoop(e,t,n,s=0,r){return Y(()=>{let a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new Oe("Verbose mode is not implemented yet.");if(r!=null)throw new Oe("steps mode in testLoop() is not implemented yet");{let o=hg(a,n),u=gn(Is(0,a));for(let l=0;l<o.length;++l){let c=o[l][0],h=o[l][1],d=da(u,c,h-c),p=$y(t,d),f=e(p);if(l===0)for(let m=0;m<f.length;++m)i.push(Se(0));for(let m=0;m<f.length;++m){let g=f[m];i[m]=ie(i[m],V(h-c,g))}}for(let l=0;l<i.length;++l)i[l]=xe(i[l],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;uw(e,s)>1&&(r+=`_${uw(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let c=[];for(let f=0;f<this.inputs.length;++f)c.push({key:this.inputs[f],value:n[f]});let h=new ia(c),d=qu(this.outputs,h,{training:!0}),p;for(let f=0;f<this.lossFunctions.length;++f){let m=this.lossFunctions[f],g=m(s[f],d[f]);r[f]!=null&&(g=uW(g,r[f]));let b=Nt(g);t.push(b),f===0?p=g:p=ie(p,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],b=this.metricsTensors[f][1];m=Nt(g(s[b],d[b]))}Yt(m),a.push(m)}return p=Nt(p),this.calculateLosses().forEach(f=>{p=ie(p,f)}),p},o=this.collectedTrainableWeights.map(c=>c.read()),u=!0;return[this.optimizer_.minimize(i,u,o)].concat(a)}}makeTestFunction(){this.testFunction=e=>Y(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:s[u]});let i=new ia(a),o=qu(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let l=this.lossFunctions[u],c=Nt(l(r[u],o[u]));u===0?n=c:n=ie(n,c),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let l=this.metricsTensors[u][0],c=this.metricsTensors[u][1],h=Nt(l(r[c],o[c]));t.push(h)}return t})}async fit(e,t,n={}){return gW(this,e,t,n)}async fitDataset(e,t){return dW(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],i=this.makeTrainFunction()(s.concat(r)),o=[];for(let u of i){let l=await u.data();o.push(l[0])}return Fe(i),vs(n[0],e),vs(n[1],t),Tn(o)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=il().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-il().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Ks(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Ks(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=Ks(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Ks(od(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Ks(od(e)));{let e={};for(let t in this.metrics)e[t]=Ks(od(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Qd(e.optimizer_config),n=zs(t),s;if(typeof e.loss=="string")s=sa(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>sa(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=sa(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>sa(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=sa(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=mr.getSaveHandlers(e);if(u.length===0)throw new H(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new H(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new H("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await mr.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,i={modelTopology:this.toJSON(r,s),format:wW,generatedBy:`TensorFlow.js tfjs-layers v${yI}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:l,specs:c}=await mr.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...c),n.data=mr.concatenateArrayBuffers([n.data,l])}return this.userDefinedMetadata!=null&&(Iw(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){Iw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};io.className="Model";ae.registerClass(io);var SI=class extends io{};SI.className="Functional";ae.registerClass(SI);async function kW(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=Qd(n),r=zs(s,t);if(e.weightsManifest!=null){let a=await mr.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(o=>o.originalName)),i={};for(let o of r.weights)i[o.originalName]=a[o.originalName];r.loadWeights(i),Fe(a)}return r}var fg=class extends io{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:np("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new H(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof fg||e instanceof io,n;if(t){if(n=e,n.outputs.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new H("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new H("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=aI({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new H(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=rI(this.outputs[0])}this.inboundNodes=[],new hp({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ka(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(st(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new io({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new ws("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new ws("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new ws("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new ws("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new H("Legacy serialization format not supported yet.");r=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof fg))throw new Oe(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of r){let l=zs(o,void 0,s);s&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new H("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new H("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},II=fg;II.className="Sequential";ae.registerClass(II);function SW(e){return aI(e)}var Fn=class extends ae.Serializable{getConfig(){return{}}},CI=class extends Fn{apply(e,t=1){return Mz(e,t)}};CI.className="elu";ae.registerClass(CI);var NI=class extends Fn{apply(e){return SS(e)}};NI.className="selu";ae.registerClass(NI);var TI=class extends Fn{apply(e){return sr(e)}};TI.className="relu";ae.registerClass(TI);var $I=class extends Fn{apply(e){return Y(()=>jh(6,sr(e)))}};$I.className="relu6";ae.registerClass($I);var _I=class extends Fn{apply(e){return e}};_I.className="linear";ae.registerClass(_I);var AI=class extends Fn{apply(e){return er(e)}};AI.className="sigmoid";ae.registerClass(AI);var EI=class extends Fn{apply(e){return Vz(e)}};EI.className="hardSigmoid";ae.registerClass(EI);var RI=class extends Fn{apply(e){return Jl(e)}};RI.className="softplus";ae.registerClass(RI);var DI=class extends Fn{apply(e){return Bz(e)}};DI.className="softsign";ae.registerClass(DI);var FI=class extends Fn{apply(e){return ll(e)}};FI.className="tanh";ae.registerClass(FI);var _y=class extends Fn{apply(e,t=-1){return Kb(e,t)}};_y.className="softmax";ae.registerClass(_y);var OI=class extends Fn{apply(e,t=-1){return gS(e,t)}};OI.className="logSoftmax";ae.registerClass(OI);var PI=class extends Fn{apply(e,t=1){return Y(()=>V(er(V(e,t)),e))}};PI.className="swish";ae.registerClass(PI);var LI=class extends Fn{apply(e){return Y(()=>V(e,ll(Jl(e))))}};LI.className="mish";ae.registerClass(LI);function Ir(e){return e.getClassName()}function $m(e,t={}){return nc(e,ae.SerializationMap.getMap().classNameMap,t,"activation")}function Cr(e){if(e==null){let t={};return t.className="linear",t.config={},$m(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},$m(t)}else return e instanceof Fn?e:$m(e)}function Ay(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var zI=class extends ae.Serializable{},oc=class extends zI{constructor(e){super(),Ay(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Y(()=>{let t=Et([1]);return this.hasL1&&(t=ie(t,ve(V(this.l1,Wt(e))))),this.hasL2&&(t=ie(t,ve(V(this.l2,rc(e))))),U(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};oc.className="L1L2";ae.registerClass(oc);function IW(e){return Ay(e),new oc({l1:e!=null?e.l1:null,l2:0})}function CW(e){return Ay(e),new oc({l2:e!=null?e.l2:null,l1:0})}var Aw={l1l2:"L1L2"};function lt(e){return uy(e)}function Ew(e,t={}){return nc(e,ae.SerializationMap.getMap().classNameMap,t,"regularizer")}function bt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Aw?Aw[e]:e,config:{}};return Ew(n)}else return e instanceof zI?e:Ew(e)}var Ey=class extends He{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Pe(e);let n=sr(e);return this.maxValue!=null&&(n=Yn(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Ey.className="ReLU";ae.registerClass(Ey);var Ry=class extends He{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Pe(e);return Lb(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Ry.className="LeakyReLU";ae.registerClass(Ry);var Dy=class extends He{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=gt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=bt(e.alphaRegularizer),this.alphaConstraint=Mt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new H(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=st(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Pt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Pe(e),Ub(e,this.alpha.read())}getConfig(){let e={alphaInitializer:xt(this.alphaInitializer),alphaRegularizer:lt(this.alphaRegularizer),alphaConstraint:zt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Dy.className="PReLU";ae.registerClass(Dy);var Fy=class extends He{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Oe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Pe(e);return Uh(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Fy.className="ELU";ae.registerClass(Fy);var Oy=class extends He{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Pe(e);return V(n,de(Qn(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Oy.className="ThresholdedReLU";ae.registerClass(Oy);var Py=class extends He{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new _y().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Pe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Py.className="Softmax";ae.registerClass(Py);function oo(e,t,n){if(typeof e=="number")return ka(e,t);if(e.length!==t)throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!Oz(r))throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function ks(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),i;return n==="same"?i=e:i=e-a+1,Math.floor((i+s-1)/s)}function Rs(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+Sr([n-t,0]);else if(s==="same")e=e*t;else throw new H(`Unsupport padding mode: ${s}.`);return e}function Ly(e,t){return Y(()=>(Tt(t),t==="channelsFirst"?Ue(e,[0,2,3,1]):e))}function MI(e,t){return Y(()=>(Tt(t),t==="channelsFirst"?Ue(e,[0,2,3,4,1]):e))}function NW(e,t,n,s=1,r="valid",a,i=1){return Y(()=>{if(a==null&&(a=Cs()),Tt(a),e.shape.length!==3)throw new H(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new H(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new H(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=Ue(e,[0,2,1])),r==="causal")throw new Oe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=rS(e,t,s,r==="same"?"same":"valid","NWC",i);return n!=null&&(o=$s(o,n)),o})}function Rw(e,t,n,s=[1,1],r="valid",a,i,o=null){return Y(()=>{if(a==null&&(a=Cs()),Tt(a),e.rank!==3&&e.rank!==4)throw new H(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new H(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Ly(e,a);if(r==="causal")throw new Oe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=pl.conv2d({x:u,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),a==="channelsFirst"&&(u=Ue(u,[0,3,1,2])),u})}function TW(e,t,n,s=[1,1,1],r="valid",a,i){return Y(()=>{if(a==null&&(a=Cs()),Tt(a),e.rank!==4&&e.rank!==5)throw new H(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new H(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=MI(e,a);if(r==="causal")throw new Oe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=iS(o,t,s,r==="same"?"same":"valid","NDHWC",i),n!=null&&(o=$s(o,n)),a==="channelsFirst"&&(o=Ue(o,[0,4,1,2,3])),o})}var zy=class extends He{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",zy.verifyArgs(t),this.rank=e,Gt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Oe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=oo(t.kernelSize,e,"kernelSize"),this.strides=oo(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Jn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Tt(this.dataFormat),this.activation=Cr(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Mt(t.biasConstraint),this.biasRegularizer=bt(t.biasRegularizer),this.activityRegularizer=bt(t.activityRegularizer),this.dilationRate=oo(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new H(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new H(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new H(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Es("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!ly(e.kernelSize,"number",1,3))throw new H(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ir(this.activation),useBias:this.useBias,biasInitializer:xt(this.biasInitializer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},uc=class extends zy{constructor(e,t){super(e,t),this.kernel=null,uc.verifyArgs(t),this.filters=t.filters,Gt(this.filters,"filters"),this.kernelInitializer=gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Mt(t.kernelConstraint),this.kernelRegularizer=bt(t.kernelRegularizer)}build(e){e=st(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Y(()=>{e=Pe(e);let n,s=this.bias==null?null:this.bias.read(),r=YS(this.activation.getClassName());if(r!=null&&this.rank===2)n=Rw(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=NW(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=Rw(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=TW(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Oe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=st(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=ks(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:xt(this.kernelInitializer),kernelRegularizer:lt(this.kernelRegularizer),kernelConstraint:zt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new H(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},BI=class extends uc{constructor(e){super(2,e),BI.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ly(e.kernelSize,"number",1,2))throw new H(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},mp=BI;mp.className="Conv2D";ae.registerClass(mp);var VI=class extends uc{constructor(e){super(3,e),VI.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new H(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},gp=VI;gp.className="Conv3D";ae.registerClass(gp);var My=class extends mp{constructor(e){if(super(e),this.inputSpec=[new Pt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=st(e),e.length!==4)throw new H("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Y(()=>{let n=Pe(e);if(n.shape.length!==4)throw new H(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let o=s[a],u=s[i],l=this.kernelSize[0],c=this.kernelSize[1],h=this.strides[0],d=this.strides[1],p=Rs(o,h,l,this.padding),f=Rs(u,d,c,this.padding),m=[r,p,f,this.filters];this.dataFormat!=="channelsLast"&&(n=Ue(n,[0,2,3,1]));let g=aS(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ue(g,[0,3,1,2])),this.bias!=null&&(g=$s(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=st(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[s]=Rs(t[s],o,a,this.padding),t[r]=Rs(t[r],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};My.className="Conv2DTranspose";ae.registerClass(My);var By=class extends gp{constructor(e){if(super(e),this.inputSpec=[new Pt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=st(e),e.length!==5)throw new H("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Y(()=>{let n=Pe(e);if(n.shape.length!==5)throw new H(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,i,o;this.dataFormat==="channelsFirst"?(o=2,a=3,i=4):(o=1,a=2,i=3);let u=s[o],l=s[a],c=s[i],h=this.kernelSize[0],d=this.kernelSize[1],p=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],b=Rs(u,f,h,this.padding),y=Rs(l,m,d,this.padding),v=Rs(c,g,p,this.padding),x=[r,b,y,v,this.filters];this.dataFormat!=="channelsLast"&&(n=Ue(n,[0,2,3,4,1]));let k=uS(n,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=Ue(k,[0,4,1,2,3])),this.bias!==null&&(k=$s(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(e){e=st(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=Rs(t[s],l,i,this.padding),t[r]=Rs(t[r],c,o,this.padding),t[a]=Rs(t[a],h,u,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};By.className="Conv3DTranspose";ae.registerClass(By);var WI=class extends uc{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new H("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new H("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new H(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=gt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=bt(t.depthwiseRegularizer),this.depthwiseConstraint=Mt(t.depthwiseConstraint),this.pointwiseInitializer=gt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=bt(t.pointwiseRegularizer),this.pointwiseConstraint=Mt(t.pointwiseConstraint)}build(e){if(e=st(e),e.length<this.rank+2)throw new H(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Pt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Y(()=>{e=Pe(e);let n;if(this.rank===1)throw new Oe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ue(e,[0,2,3,1])),n=IS(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=$s(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ue(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=xt(this.depthwiseInitializer),e.pointwiseInitializer=xt(this.pointwiseInitializer),e.depthwiseRegularizer=lt(this.depthwiseRegularizer),e.pointwiseRegularizer=lt(this.pointwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseConstraint),e.pointwiseConstraint=zt(this.pointwiseConstraint),e}};WI.className="SeparableConv";var Vy=class extends WI{constructor(e){super(2,e)}};Vy.className="SeparableConv2D";ae.registerClass(Vy);var UI=class extends uc{constructor(e){super(1,e),UI.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ly(e.kernelSize,"number",1,1))throw new H(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Wy=UI;Wy.className="Conv1D";ae.registerClass(Wy);var Uy=class extends He{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Y(()=>{if(e=Pe(e),this.dataFormat==="channelsLast"){let n=id(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return id(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=id(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return id(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Uy.className="Cropping2D";ae.registerClass(Uy);var Gy=class extends He{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,Rz(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Y(()=>{let n=Pe(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=Ue(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],i=this.interpolation==="nearest"?gr.resizeNearestNeighbor(n,[r,a]):gr.resizeBilinear(n,[r,a]);return Ue(i,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?gr.resizeNearestNeighbor(n,[r,a]):gr.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};Gy.className="UpSampling2D";ae.registerClass(Gy);function $W(e,t,n=[1,1],s="valid",r,a){return Y(()=>{r==null&&(r=Cs()),Tt(r);let i=Ly(e,r);if(e.rank!==4)throw new H(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new H(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Wh(i,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}var Hy=class extends zy{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=gt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Mt(e.depthwiseConstraint),this.depthwiseRegularizer=bt(e.depthwiseRegularizer)}build(e){if(e=st(e),e.length<4)throw new H(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{e=Pe(e);let n=$W(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=$s(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=st(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=ks(t,this.kernelSize[0],this.padding,this.strides[0]),a=ks(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=xt(this.depthwiseInitializer),e.depthwiseRegularizer=lt(this.depthwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseRegularizer),e}};Hy.className="DepthwiseConv2D";ae.registerClass(Hy);function GI(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new H("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function HI(e,t,n,s=!1,r,a,i=!1,o=!1){return Y(()=>{let u=t.shape.length;if(u<3)throw new H(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(Is(2,u));if(t=Ue(t,l),a!=null)throw new Oe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=de(de(r,"bool"),"float32"),r.rank===u-1&&(r=Nn(r,-1)),r=Ue(r,l)),s&&(t=Ss(t,0),r!=null&&(r=Ss(r,0)));let c=[],h,d=n,p=t.shape[0],f=Vs(t),m;r!=null&&(m=Vs(r));for(let b=0;b<p;++b){let y=f[b],v=Y(()=>e(y,d));if(r==null)h=v[0],d=v[1];else{let x=Y(()=>{let k=m[b],C=me(is(k),k),$=ie(V(v[0],k),V(d[0],C)),A=d.map((E,O)=>ie(V(v[1][O],k),V(E,C)));return{output:$,newStates:A}});h=x.output,d=x.newStates}o&&c.push(h)}let g;return o&&(g=Wn(c,1)),[h,g,d]})}var qI=class extends He{constructor(e){super(e);let t;if(e.cell==null)throw new H("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new vp({cells:e.cell}):t=e.cell,t.stateSize==null)throw new H("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Pt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Is(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){og(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return Y(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Oe("Constants support is not implemented in RNN yet.");og(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Pt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new H(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Pt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Y(()=>{if(!this.stateful)throw new js("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Et([n,s])):this.states_=[Et([n,this.cell.stateSize])];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Et([n,s])):this.states_[0]=Et([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,i=[n,a];if(!w.arraysEqual(r.shape,i))throw new H(`State ${s} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>Yt(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=GI(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new Pt({shape:u.shape}));i=i.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Fs){let u=[e].concat(a),l=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=l;let h=super.apply(u,t);return this.inputSpec=c,h}else return super.apply(e,t)}call(e,t){return Y(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=Pe(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new H(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:s},u=HI((p,f)=>{let m=this.cell.call([p].concat(f),i);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=u[0],c=u[1],h=u[2];this.stateful&&this.resetStates(h,s);let d=this.returnSequences?c:l;return this.returnState?[d].concat(h):d})}getInitialState(e){return Y(()=>{let t=Et(e.shape);return t=ve(t,[1,2]),t=sc(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?ag(t,[1,n]):t):this.cell.stateSize>1?[ag(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===qI.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=zs(s,n);return new e(Object.assign(t,{cell:r}))}},zr=qI;zr.className="RNN";ae.registerClass(zr);var lc=class extends He{},bp=class extends lc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Gt(this.units,"units"),this.activation=Cr(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=bt(e.kernelRegularizer),this.recurrentRegularizer=bt(e.recurrentRegularizer),this.biasRegularizer=bt(e.biasRegularizer),this.kernelConstraint=Mt(e.kernelConstraint),this.recurrentConstraint=Mt(e.recurrentConstraint),this.biasConstraint=Mt(e.biasConstraint),this.dropout=lo([1,Sr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lo([1,Sr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=st(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{if(e=e,e.length!==2)throw new H(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Nr({ones:()=>is(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Nr({ones:()=>is(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?r=Ls(V(e,a),this.kernel.read()):r=Ls(e,this.kernel.read()),this.bias!=null&&(r=$s(r,this.bias.read())),i!=null&&(n=V(n,i));let o=ie(r,Ls(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ir(this.activation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:lt(this.kernelRegularizer),recurrentRegularizer:lt(this.recurrentRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};bp.className="SimpleRNNCell";ae.registerClass(bp);var qy=class extends zr{constructor(e){e.cell=new bp(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};qy.className="SimpleRNN";ae.registerClass(qy);var yp=class extends lc{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new H("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Gt(this.units,"units"),this.activation=Cr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Cr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=bt(e.kernelRegularizer),this.recurrentRegularizer=bt(e.recurrentRegularizer),this.biasRegularizer=bt(e.biasRegularizer),this.kernelConstraint=Mt(e.kernelConstraint),this.recurrentConstraint=Mt(e.recurrentConstraint),this.biasConstraint=Mt(e.biasConstraint),this.dropout=lo([1,Sr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lo([1,Sr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=st(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{if(e=e,e.length!==2)throw new H(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Nr({ones:()=>is(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Nr({ones:()=>is(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,i,o,u;0<this.dropout&&this.dropout<1&&(e=V(e,r[0]));let l=Ls(e,this.kernel.read());this.useBias&&(l=$s(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=V(s,a[0]));let c=this.recurrentKernel.read(),[h,d]=_n(c,[2*this.units,this.units],c.rank-1),p=Ls(s,h),[f,m,g]=_n(l,3,l.rank-1),[b,y]=_n(p,2,p.rank-1);i=this.recurrentActivation.apply(ie(f,b)),o=this.recurrentActivation.apply(ie(m,y));let v=Ls(V(o,s),d);u=this.activation.apply(ie(g,v));let x=ie(V(i,s),V(ie(1,wt(i)),u));return[x,x]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ir(this.activation),recurrentActivation:Ir(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:lt(this.kernelRegularizer),recurrentRegularizer:lt(this.recurrentRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};yp.className="GRUCell";ae.registerClass(yp);var jy=class extends zr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new yp(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};jy.className="GRU";ae.registerClass(jy);var cc=class extends lc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Gt(this.units,"units"),this.activation=Cr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Cr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=bt(e.kernelRegularizer),this.recurrentRegularizer=bt(e.recurrentRegularizer),this.biasRegularizer=bt(e.biasRegularizer),this.kernelConstraint=Mt(e.kernelConstraint),this.recurrentConstraint=Mt(e.recurrentConstraint),this.biasConstraint=Mt(e.biasConstraint),this.dropout=lo([1,Sr([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=lo([1,Sr([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=st(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends us{apply(i,o){let u=r.apply([a]),l=new ap().apply([a]),c=r.apply([a*2]);return cw(cw(u,l),c)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Y(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new H(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Nr({ones:()=>is(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Nr({ones:()=>is(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,o,u,l,c;0<this.dropout&&this.dropout<1&&(e=V(e,a[0]));let h=Ls(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=V(s,i[0])),h=ie(h,Ls(s,this.recurrentKernel.read())),this.useBias&&(h=$s(h,this.bias.read()));let[d,p,f,m]=_n(h,4,h.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(p),l=ie(V(u,r),V(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);let g=V(c,this.activation.apply(l));return[g,g,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ir(this.activation),recurrentActivation:Ir(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:lt(this.kernelRegularizer),recurrentRegularizer:lt(this.recurrentRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};cc.className="LSTMCell";ae.registerClass(cc);var Ky=class extends zr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cc(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Ky.className="LSTM";ae.registerClass(Ky);var vp=class extends lc{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Y(()=>{e=e;let n=e.slice(1),s=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?s.push(n.splice(0,i.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=s[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(let i of r.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){og(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{ca(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(zs(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return ug(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}yy(t)}};vp.className="StackedRNNCells";ae.registerClass(vp);function Nr(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>a!=null?a(t(),n):sI(t(),n),o=()=>ac(i,t,s);return!r||r<=1?Yt(o().clone()):Array(r).fill(void 0).map(o).map(l=>Yt(l.clone()))}var jI=class extends zr{constructor(e){if(e.unroll)throw new Oe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Oe("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Pt({ndim:5})]}call(e,t){return Y(()=>{if(this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new H("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Y(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Et(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){Y(()=>{if(!this.stateful)throw new js("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Et(r)):this.states_=[Et(r)];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Et(r)):this.states_[0]=Et(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let i=0;i<this.states_.length;++i){let o=e[i],u=r;if(!w.arraysEqual(o.shape,u))throw new H(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${o.shape}`);this.states_[i]=o}}this.states_=this.states_.map(i=>Yt(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o=t==="channelsFirst",u=e[o?3:2],l=e[o?4:3],c=ks(u,s[0],r,a[0],i[0]),h=ks(l,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}};jI.className="ConvRNN2D";var xp=class extends cc{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super({...e,units:t}),this.filters=t,Gt(this.filters,"filters"),this.kernelSize=oo(n,2,"kernelSize"),this.kernelSize.forEach(o=>Gt(o,"kernelSize")),this.strides=oo(s||1,2,"strides"),this.strides.forEach(o=>Gt(o,"strides")),this.padding=r||"valid",Jn(this.padding),this.dataFormat=a||"channelsLast",Tt(this.dataFormat),this.dilationRate=oo(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Gt(o,"dilationRate"))}build(e){var t;e=st(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let u=this.biasInitializer,l=this.filters;o=new(t=class extends us{apply(c,h){let d=u.apply([l]),p=$n([l]),f=u.apply([l*2]);return cy([d,p,f])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Y(()=>{if(e.length!==3)throw new H(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Nr({ones:()=>is(s),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,u=(Q,ne,J)=>!ne||!ne[J]?Q:V(ne[J],Q),l=u(s,o,0),c=u(s,o,1),h=u(s,o,2),d=u(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Nr({ones:()=>is(r),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let p=this.recurrentDropoutMask,f=u(r,p,0),m=u(r,p,1),g=u(r,p,2),b=u(r,p,3),y=3,[v,x,k,C]=_n(this.kernel.read(),i,y),[$,A,E,O]=this.useBias?_n(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,v,$,this.padding),c=this.inputConv(c,x,A,this.padding),h=this.inputConv(h,k,E,this.padding),d=this.inputConv(d,C,O,this.padding);let[R,D,T,L]=_n(this.recurrentKernel.read(),i,y);f=this.recurrentConv(f,R),m=this.recurrentConv(m,D),g=this.recurrentConv(g,T),b=this.recurrentConv(b,L);let W=this.recurrentActivation.apply(ie(l,f)),q=this.recurrentActivation.apply(ie(c,m)),j=ie(V(q,a),V(W,this.activation.apply(ie(h,g)))),K=V(this.recurrentActivation.apply(ie(d,b)),this.activation.apply(j));return[K,K,j]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=va(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?$s(r,n,this.dataFormat):r}recurrentConv(e,t){return va(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};xp.className="ConvLSTM2DCell";ae.registerClass(xp);var Xy=class extends jI{constructor(e){let t=new xp(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Xy.className="ConvLSTM2D";ae.registerClass(Xy);var wp=class extends He{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return ac(()=>sI(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};wp.className="Dropout";ae.registerClass(wp);var Yy=class extends wp{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Yy.className="SpatialDropout1D";ae.registerClass(Yy);var Zy=class extends He{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Gt(this.units,"units"),this.activation=Cr(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Mt(e.kernelConstraint),this.biasConstraint=Mt(e.biasConstraint),this.kernelRegularizer=bt(e.kernelRegularizer),this.biasRegularizer=bt(e.biasRegularizer),this.activityRegularizer=bt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=st(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=st(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e),s=YS(this.activation.getClassName()),r;return s!=null?r=Ls(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=Ls(n,this.kernel.read()),this.bias!=null&&(r=$s(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:Ir(this.activation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:lt(this.kernelRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Zy.className="Dense";ae.registerClass(Zy);var Qy=class extends He{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=st(e);for(let t of e.slice(1))if(t==null)throw new H(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],vr(e,1)]}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=Ue(n,s)}return zz(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Qy.className="Flatten";ae.registerClass(Qy);var Jy=class extends He{constructor(e){super(e),this.supportsMasking=!0,this.activation=Cr(e.activation)}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);return this.activation.apply(n)})}getConfig(){let e={activation:Ir(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Jy.className="Activation";ae.registerClass(Jy);var ev=class extends He{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Y(()=>(e=Pe(e),Pz(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};ev.className="RepeatVector";ae.registerClass(ev);var tv=class extends He{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let o=0;o<s.length;++o){let u=s[o];if(this.isUnknown(u))if(a===null)a=o;else throw new H("Can only specifiy one unknown dimension.");else r*=u}let i=vr(e);if(a!==null){if(r===0||i%r!==0)throw new H(n);s[a]=i/r}else if(i!==r)throw new H(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return U(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};tv.className="Reshape";ae.registerClass(tv);var nv=class extends He{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Is(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Pt({ndim:this.dims.length+1})]}computeOutputShape(e){e=st(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return Ue(Pe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};nv.className="Permute";ae.registerClass(nv);var sv=class extends He{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Pe(e),s=-1;return eg(cl(n,this.maskValue),s)}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e),s=-1,r=!0,a=eg(cl(n,this.maskValue),s,r);return V(n,de(a,n.dtype))})}};sv.className="Masking";ae.registerClass(sv);var rv=class extends He{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(mt(e.inputLength))}this.inputDim=e.inputDim,Gt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Gt(this.outputDim,"outputDim"),this.embeddingsInitializer=gt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=bt(e.embeddingsRegularizer),this.activityRegularizer=bt(e.activityRegularizer),this.embeddingsConstraint=Mt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Y(()=>this.maskZero?(e=Pe(e),cl(e,je(e))):null)}computeOutputShape(e){if(e=st(e),this.inputLength==null)return[...e,this.outputDim];let t=mt(this.inputLength);if(t.length!==e.length-1)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);n.dtype!=="int32"&&(n=sp(n,"int32"));let s=nI(this.embeddings.read(),U(n,[n.size]));return U(s,st(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:xt(this.embeddingsInitializer),embeddingsRegularizer:lt(this.embeddingsRegularizer),activityRegularizer:lt(this.activityRegularizer),embeddingsConstraint:zt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};rv.className="Embedding";ae.registerClass(rv);var Ti=class extends He{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Oe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new H("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[st(e)]),e=e,e.length<2)throw new H(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=yr(t),t.length>1)throw new H(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&yr(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Y(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=Sr(s);for(let a of e){let i=a.rank;for(let o=0;o<r-i;++o)a=sc(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let o of e){let u=o.rank;if(u==null){let l=o.shape,c=l[0],h=l.slice(1).concat([c]),d=U(o,[c].concat(vr(l.slice(1))));d=Ue(d,[1,0]),d=U(d,h),n.push(d),r=!0}else if(u>1){let l=Is(1,u).concat([0]);n.push(Ue(o,l)),r=!0}else n.push(o)}let a=this.mergeFunction(n),i=a.rank;if(r){if(i==null){let o=a.shape,u=o.length,l=o[u-1],c=[l].concat(o.slice(0,o.length-1));a=U(Ue(U(a,[-1,l]),[1,0]),c)}else if(i>1){let o=[i-1].concat(Is(0,i-1));a=Ue(a,o)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=yr(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return Y(()=>{if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an Array");if(!Array.isArray(e))throw new H("`inputs` should be an Array");if(t.length!==e.length)throw new H(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Nn(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=Bs(n,t[s]);return n})}},av=class extends Ti{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ie(t,e[n]);return t})}};av.className="Add";ae.registerClass(av);var iv=class extends Ti{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=V(t,e[n]);return t})}};iv.className="Multiply";ae.registerClass(iv);var ov=class extends Ti{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ie(t,e[n]);return V(1/e.length,t)})}};ov.className="Average";ae.registerClass(ov);var uv=class extends Ti{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Or(t,e[n]);return t})}};uv.className="Maximum";ae.registerClass(uv);var lv=class extends Ti{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=jh(t,e[n]);return t})}};lv.className="Minimum";ae.registerClass(lv);var cv=class extends Ti{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new H("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let i of n)if(w.arraysEqual(i,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new H("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Y(()=>cy(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new H("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new H("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new H(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Y(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(de(is(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Nn(t[a],-1)):s.push(t[a]);let r=Lt(s,this.axis);return H0(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};cv.className="Concatenate";ae.registerClass(cv);function Vu(e,t){for(;e<0;)e+=t;return e}function _W(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Oe("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Oe("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return Y(()=>{let i;if(s>r){i=s-r;let u=[];for(let l=0;l<i;++l)u.push(1);t=U(t,t.shape.concat(u))}else if(r>s){i=r-s;let u=[];for(let l=0;l<i;++l)u.push(1);e=U(e,e.shape.concat(u))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?o=ve(V(e,t),a[0]):o=ve(V(Ue(e,[1,0]),t),a[1]);else{let u=a[0]!==e.shape.length-1,l=a[1]===t.shape.length-1;o=Ve(e,t,u,l)}if(i>0){let u;s>r?u=s+r-3:u=s-1;let l=[];for(let c=u;c<u+i;++c)l.push(c);o=Pr(o,l)}return o.shape.length===1&&(o=Nn(o,1)),o})}var dv=class extends Ti{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Oe("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new H(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new H(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>Vu(r,e[a].shape.length)):s=[Vu(this.axes,t.shape.length),Vu(this.axes,n.shape.length)],this.normalize&&(t=jd(t,s[0]),n=jd(n,s[1])),_W(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Vu(this.axes,e.length),Vu(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Oe("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};dv.className="Dot";ae.registerClass(dv);var hv=class extends He{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);return ac(()=>ie(rp(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};hv.className="GaussianNoise";ae.registerClass(hv);var pv=class extends He{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);return this.rate>0&&this.rate<1?ac(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return V(n,rp(n.shape,1,r))},()=>n,t.training||!1):n})}};pv.className="GaussianDropout";ae.registerClass(pv);var fv=class extends He{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Pe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Y(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return ac(()=>{let r=Pe(e),a=1.6732632423543772,i=1.0507009873554805,o=-a*i,u=ou(ec(n),this.rate);u=sp(u,"float32");let l=((1-this.rate)*(1+this.rate*o**2))**-.5,c=-l*o*this.rate,h=ie(V(r,u),V(ie(u,-1),o));return ie(V(h,l),c)},()=>Pe(e),t.training||!1)}return e})}};fv.className="AlphaDropout";ae.registerClass(fv);function gl(e,t,n,s,r,a=.001){let i;if(e.rank===2)i=Y0(e,t,n,s,r,a);else if(e.rank===3)i=Z0(e,t,n,s,r,a);else if(e.rank===4)i=Q0(e,t,n,s,r,a);else throw new Oe(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function AW(e,t,n,s,r=.001){return Y(()=>{let a=Kh(e,s),i=a.mean,o=a.variance;return[gl(e,i,o,n,t,r),i,o]})}function EW(e,t,n,s,r=.001){return Y(()=>{let a=Kh(e,s),i=a.mean,o=a.variance,u=[];for(let f of Is(0,e.rank))s.indexOf(f)!==-1?u.push(1):u.push(e.shape[f]);let l=U(i,u),c=U(o,u),h=t==null?null:U(t,u),d=n==null?null:U(n,u);return[gl(e,l,c,d,h,r),i,o]})}function RW(e,t,n,s,r=.001){return w.arraysEqual(s.slice().sort(),Is(0,e.rank-1))?AW(e,t,n,s,r):EW(e,t,n,s,r)}var mv=class extends He{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=gt(e.betaInitializer||"zeros"),this.gammaInitializer=gt(e.gammaInitializer||"ones"),this.movingMeanInitializer=gt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=gt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Mt(e.betaConstraint),this.gammaConstraint=Mt(e.gammaConstraint),this.betaRegularizer=bt(e.betaRegularizer),this.gammaRegularizer=bt(e.gammaRegularizer)}build(e){e=st(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new H(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Pt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Y(()=>{let n=t.training==null?!1:t.training,s=Pe(e),r=s.shape,a=r.length,i=Is(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);let u=ka(1,a);u[o]=r[o];let l=i.slice();l.sort();let c=!w.arraysEqual(l,Is(0,a).slice(0,a-1)),h=()=>{if(c){let b=U(this.movingMean.read(),u),y=U(this.movingVariance.read(),u),v=this.center?U(this.beta.read(),u):null,x=this.scale?U(this.gamma.read(),u):null;return gl(s,b,y,v,x,this.epsilon)}else return gl(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return h();let[d,p,f]=RW(s,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(b,y,v)=>{Y(()=>{let x=1-v,k=b.read(),C=V(me(k,y),x);b.write(me(k,C))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,f,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xt(this.betaInitializer),gammaInitializer:xt(this.gammaInitializer),movingMeanInitializer:xt(this.movingMeanInitializer),movingVarianceInitializer:xt(this.movingVarianceInitializer),betaRegularizer:lt(this.betaRegularizer),gammaRegularizer:lt(this.gammaRegularizer),betaConstraint:zt(this.betaConstraint),gammaConstraint:zt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};mv.className="BatchNormalization";ae.registerClass(mv);var gv=class extends He{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=gt(e.betaInitializer||"zeros"),this.gammaInitializer=gt(e.gammaInitializer||"ones"),this.betaRegularizer=bt(e.betaRegularizer),this.gammaRegularizer=bt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=st(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==yr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=Pe(e),s=n.shape,r=s.length;return Y(()=>{let{mean:i,variance:o}=Kh(n,this.axis,!0),u=ka(1,r);for(let f of this.axis)u[f]=s[f];let l=f=>f!=null&&f.shape.length!==r?U(f,u):f,c=this.scale?l(this.gamma.read()):null,h=this.center?l(this.beta.read()):null,d=[],p=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(d.push(s[f]),p.push(1)):(d.push(1),p.push(s[f]));return i=xs(i,d),o=xs(o,d),c!=null&&(c=xs(c,p)),h!=null&&(h=xs(h,p)),gl(n,i,o,h,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xt(this.betaInitializer),gammaInitializer:xt(this.gammaInitializer),betaRegularizer:lt(this.betaRegularizer),gammaRegularizer:lt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};gv.className="LayerNormalization";ae.registerClass(gv);function DW(e,t,n){return Y(()=>{if(e.rank!==4)throw new H(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new H("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Cs()),n!=="channelsLast"&&n!=="channelsFirst")throw new H(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Ii(e,s)})}var bv=class extends He{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Cs():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new H(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new H(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new H(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=st(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return Y(()=>DW(Pe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};bv.className="ZeroPadding2D";ae.registerClass(bv);function kp(e,t,n,s,r,a){return Y(()=>{Tt(r),QS(a),Jn(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=Cs()),a==null&&(a="max"),e=Ly(e,r);let i,o=s==="same"?"same":"valid";return a==="max"?i=Vb(e,t,n,o):i=Ab(e,t,n,o),r==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}function KI(e,t,n,s,r,a){return Y(()=>{Tt(r),QS(a),Jn(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Cs()),a==null&&(a="max"),e=MI(e,r);let i,o=s==="same"?"same":"valid";return a==="max"?i=vS(e,t,n,o):i=X0(e,t,n,o),r==="channelsFirst"&&(i=Ue(i,[0,4,1,2,3])),i})}var XI=class extends He{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new H(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Gt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new H(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Gt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Jn(this.padding),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){e=st(e);let t=ks(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Y(()=>{this.invokeCallHook(e,t),e=sc(Pe(e),2);let n=this.poolingFunction(Pe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Pr(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},yv=class extends XI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),Jn(s),kp(e,t,n,s,r,"max")}};yv.className="MaxPooling1D";ae.registerClass(yv);var vv=class extends XI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),Jn(s),kp(e,t,n,s,r,"avg")}};vv.className="AveragePooling1D";ae.registerClass(vv);var YI=class extends He{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new H(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Gt(this.poolSize,"poolSize"),Gt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),Jn(this.padding),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=st(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=ks(t,this.poolSize[0],this.padding,this.strides[0]),n=ks(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Y(()=>(this.invokeCallHook(e,t),this.poolingFunction(Pe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xv=class extends YI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),Jn(s),kp(e,t,n,s,r,"max")}};xv.className="MaxPooling2D";ae.registerClass(xv);var wv=class extends YI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),Jn(s),kp(e,t,n,s,r,"avg")}};wv.className="AveragePooling2D";ae.registerClass(wv);var ZI=class extends He{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new H(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Gt(this.poolSize,"poolSize"),Gt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),Jn(this.padding),this.inputSpec=[new Pt({ndim:5})]}computeOutputShape(e){e=st(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=ks(t,this.poolSize[0],this.padding,this.strides[0]),n=ks(n,this.poolSize[1],this.padding,this.strides[1]),s=ks(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Y(()=>(this.invokeCallHook(e,t),this.poolingFunction(Pe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},kv=class extends ZI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),Jn(s),KI(e,t,n,s,r,"max")}};kv.className="MaxPooling3D";ae.registerClass(kv);var Sv=class extends ZI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),Jn(s),KI(e,t,n,s,r,"avg")}};Sv.className="AveragePooling3D";ae.registerClass(Sv);var QI=class extends He{constructor(e){super(e),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Oe}},Iv=class extends QI{constructor(e){super(e||{})}call(e,t){return Y(()=>{let n=Pe(e);return Nt(n,1)})}};Iv.className="GlobalAveragePooling1D";ae.registerClass(Iv);var Cv=class extends QI{constructor(e){super(e||{})}call(e,t){return Y(()=>{let n=Pe(e);return Ps(n,1)})}};Cv.className="GlobalMaxPooling1D";ae.registerClass(Cv);var JI=class extends He{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Oe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Nv=class extends JI{call(e,t){return Y(()=>{let n=Pe(e);return this.dataFormat==="channelsLast"?Nt(n,[1,2]):Nt(n,[2,3])})}};Nv.className="GlobalAveragePooling2D";ae.registerClass(Nv);var Tv=class extends JI{call(e,t){return Y(()=>{let n=Pe(e);return this.dataFormat==="channelsLast"?Ps(n,[1,2]):Ps(n,[2,3])})}};Tv.className="GlobalMaxPooling2D";ae.registerClass(Tv);var eC=class extends He{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=zs(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},$v=class extends eC{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=st(e),e.length<3)throw new H(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=st(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Y(()=>(e=Pe(e),HI((a,i)=>[Pe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};$v.className="TimeDistributed";ae.registerClass($v);function FW(e){Ci(Ez,"BidirectionalMergeMode",e)}var OW="concat",_v=class extends eC{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=zs(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=zs(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?OW:e.mergeMode,FW(this.mergeMode),e.weights)throw new Oe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):Tn(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=GI(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new H("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let l=n.map(c=>new Pt({shape:c.shape}));this.forwardLayer.stateSpec=l.slice(0,u/2),this.backwardLayer.stateSpec=l.slice(u/2),i.push(...l)}if(s!=null)throw new Oe("Support for constants in Bidirectional layers is not implemented yet.");let o=a[0]instanceof Fs;for(let u of a)if(u instanceof Fs!==o)throw new H("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let u=[e].concat(a),l=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=l;let h=super.apply(u,t);return this.inputSpec=c,h}else return super.apply(e,t)}call(e,t){return Y(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),u=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Ss(r,1));let i;return this.mergeMode==="concat"?i=cy([s,r]):this.mergeMode==="sum"?i=ie(s,r):this.mergeMode==="ave"?i=V(.5,ie(s,r)):this.mergeMode==="mul"?i=V(s,r):this.mergeMode==null&&(i=[s,r]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ca(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),ca(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=zs(t.layer);if(delete t.layer,t.numConstants!=null)throw new Oe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};_v.className="Bidirectional";ae.registerClass(_v);function PW(e){return new cu(e)}function LW(e){return new Fy(e)}function zW(e){return new Ey(e)}function MW(e){return new Ry(e)}function BW(e){return new Dy(e)}function VW(e){return new Py(e)}function WW(e){return new Oy(e)}function UW(e){return new Wy(e)}function GW(e){return new mp(e)}function HW(e){return new My(e)}function qW(e){return new gp(e)}function jW(e){return new By(e)}function KW(e){return new Vy(e)}function XW(e){return new Uy(e)}function YW(e){return new Gy(e)}function ZW(e){return new Hy(e)}function QW(e){return new Jy(e)}function JW(e){return new Zy(e)}function e4(e){return new wp(e)}function t4(e){return new Yy(e)}function n4(e){return new Qy(e)}function s4(e){return new ev(e)}function r4(e){return new tv(e)}function a4(e){return new nv(e)}function i4(e){return new rv(e)}function o4(e){return new av(e)}function u4(e){return new ov(e)}function l4(e){return new cv(e)}function c4(e){return new uv(e)}function d4(e){return new lv(e)}function h4(e){return new iv(e)}function p4(e){return new dv(e)}function f4(e){return new mv(e)}function m4(e){return new gv(e)}function g4(e){return new bv(e)}function Av(e){return new vv(e)}function b4(e){return Av(e)}function y4(e){return Av(e)}function Ev(e){return new wv(e)}function v4(e){return Ev(e)}function x4(e){return Ev(e)}function Rv(e){return new Sv(e)}function w4(e){return Rv(e)}function k4(e){return Rv(e)}function S4(e){return new Iv(e)}function I4(e){return new Nv(e)}function tC(e){return new Cv(e)}function nC(e){return new Tv(e)}function sC(e){return new yv(e)}function rC(e){return new xv(e)}function C4(e){return new kv(e)}function N4(e){return new jy(e)}function T4(e){return new yp(e)}function $4(e){return new Ky(e)}function _4(e){return new cc(e)}function A4(e){return new qy(e)}function E4(e){return new bp(e)}function R4(e){return new Xy(e)}function D4(e){return new xp(e)}function F4(e){return new zr(e)}function O4(e){return new vp(e)}function P4(e){return new _v(e)}function L4(e){return new $v(e)}var z4=tC,M4=nC,B4=sC,V4=rC;function W4(e){return new hv(e)}function U4(e){return new pv(e)}function G4(e){return new fv(e)}function H4(e){return new sv(e)}var q4={};Ee(q4,{MAPE:()=>sU,MSE:()=>iU,binaryAccuracy:()=>j4,binaryCrossentropy:()=>K4,categoricalAccuracy:()=>Y4,categoricalCrossentropy:()=>Z4,cosineProximity:()=>eU,mape:()=>rU,meanAbsoluteError:()=>tU,meanAbsolutePercentageError:()=>nU,meanSquaredError:()=>aU,mse:()=>oU,precision:()=>Q4,recall:()=>J4,sparseCategoricalAccuracy:()=>X4});function j4(e,t){return Cy(e,t)}function K4(e,t){return fI(e,t)}function X4(e,t){return mI(e,t)}function Y4(e,t){return Ny(e,t)}function Z4(e,t){return Ty(e,t)}function Q4(e,t){return pI(e,t)}function J4(e,t){return qV(e,t)}function eU(e,t){return Iy(e,t)}function tU(e,t){return pp(e,t)}function nU(e,t){return du(e,t)}function sU(e,t){return du(e,t)}function rU(e,t){return du(e,t)}function aU(e,t){return Ni(e,t)}function iU(e,t){return Ni(e,t)}function oU(e,t){return Ni(e,t)}var uU={};Ee(uU,{modelFromJSON:()=>kW});var lU={};Ee(lU,{l1:()=>dU,l1l2:()=>cU,l2:()=>hU});function cU(e){return new oc(e)}function dU(e){return IW(e)}function hU(e){return CW(e)}var pU=X();pU.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var aC=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(aC||{}),Dw;(e=>{let t;(n=>{n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Dw||(Dw={}));var fU={};function iC(e){return fU[e]}function S(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let o=a.inputIndexStart,u=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?o+1:a.inputIndexEnd;if(a.type==="tensor")return fn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(o,u).map(d=>fn(d,n,s,r));let l=fn(t.inputNames.slice(o)[0],n,s,r),c=l.dataSync();return a.type==="number"?c[0]:w.toNestedArray(l.shape,c)}let i=t.attrParams[e];return i&&i.value}function fn(e,t,n,s){let[r,a]=Bn(e);if(s!=null){let o=s.getHashTableHandleByName(r);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[Jd(r,o)]);return i!==void 0?t[Jd(r,i)][a]:void 0}function mU(e,t,n){return t[Jd(e,n.currentContextId)]}function Ds(e,t){let[n,s,r]=Bn(e);return[Jd(n,t&&t.currentContextId),s,r]}function Jd(e,t){return t?`${e}-${t}`:e}function Bn(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function xd(e,t,n){let s=S("pad",e,t,n);if(s==="explicit"){s=S("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function Xs(e){return e.kept?e:Js(e)}var oC={};Ee(oC,{json:()=>gU});var gU=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],uC={};Ee(uC,{json:()=>bU});var bU=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lC={};Ee(lC,{json:()=>yU});var yU=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],cC={};Ee(cC,{json:()=>vU});var vU=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],dC={};Ee(dC,{json:()=>xU});var xU=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],hC={};Ee(hC,{json:()=>wU});var wU=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],pC={};Ee(pC,{json:()=>kU});var kU=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],fC={};Ee(fC,{json:()=>SU});var SU=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],mC={};Ee(mC,{json:()=>IU});var IU=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],gC={};Ee(gC,{json:()=>CU});var CU=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],bC={};Ee(bC,{json:()=>NU});var NU=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],yC={};Ee(yC,{json:()=>TU});var TU=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],vC={};Ee(vC,{json:()=>$U});var $U=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],xC={};Ee(xC,{json:()=>_U});var _U=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],wC={};Ee(wC,{json:()=>AU});var AU=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],kC={};Ee(kC,{json:()=>EU});var EU=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],SC={};Ee(SC,{json:()=>RU});var RU=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],IC={};Ee(IC,{json:()=>DU});var DU=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],CC={};Ee(CC,{json:()=>FU});var FU=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Fw=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[oC,uC,lC,cC,dC,hC,pC,fC,mC,gC,bC,yC,vC,xC,wC,kC,SC,IC,CC],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],i=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),o=[],u=[],l={},c={};t!=null&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach(f=>{let m=i[f];m.inputNames.forEach((g,b)=>{let[y,,v]=Ds(g),x=i[y];if(x.outputs!=null){let k=x.outputs.indexOf(v);if(k!==-1){let C=`${y}:${k}`;m.inputNames[b]=C}}m.inputs.push(x),x.children.push(m)})}),Object.keys(c).length===0?h.forEach(f=>{let m=i[f];m.children.length===0&&u.push(m)}):Object.keys(c).forEach(f=>{let[m]=Ds(f),g=i[m];g!=null&&(g.signatureKey=c[f],u.push(g))}),Object.keys(l).length>0?Object.keys(l).forEach(f=>{let[m]=Ds(f),g=i[m];g&&(g.signatureKey=l[f],o.push(g))}):o=s;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let p={nodes:i,inputs:o,outputs:u,weights:r,placeholders:s,signature:t,functions:d};return a.length>0&&(p.initNodes=a),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=iC(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,i;switch(r.type){case"string":i=mg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=mg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":i=kg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=kg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":i=bg(e.attr,r.tfName,r.defaultValue||0),i===void 0&&!!r.tfDeprecatedName&&(i=bg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":i=wg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=wg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":i=gg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=gg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":i=Ig(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Ig(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":i=xg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=xg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":i=Sg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Sg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":i=yg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=yg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":i=vg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=vg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":i=Ow(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Ow(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:i,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((c,h)=>(c[h.name]=this.mapNode(h),h.op==="Const"&&s.push(c[h.name]),c),{}));let a=[],i=[];e.signature.inputArg.forEach(c=>{let[h]=Ds(c.name),d={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Dv(c.type),type:"dtype"}},children:[]};d.signatureKey=c.name,a.push(d),r[h]=d}),Object.keys(r).forEach(c=>{let h=r[c];h.inputNames.forEach((d,p)=>{let[f,,m]=Ds(d),g=r[f];if(g.outputs!=null){let b=g.outputs.indexOf(m);if(b!==-1){let y=`${f}:${b}`;h.inputNames[p]=y}}h.inputs.push(g),g.children.push(h)})});let u=e.ret;e.signature.outputArg.forEach(c=>{let[h,d]=Ds(u[c.name]),p=r[h];p!=null&&(p.defaultOutput=d,i.push(p))});let l=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:i,weights:s,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function OU(e){let t=X().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function NC(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):OU(e);return t?n:n.toLowerCase()}function mg(e,t,n,s=!1){let r=e[t];return r!=null?NC(r.s,s):n}function gg(e,t,n){let s=e[t];return s?s.b:n}function bg(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function Dv(e){switch(typeof e=="string"&&(e=aC[e]),e){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function Ow(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function yg(e,t,n){let s=e[t];return s&&s.type?Dv(s.type):n}function vg(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>Dv(r)):n}function TC(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function xg(e,t,n){let s=e[t];return s&&s.shape?TC(s.shape):n}function wg(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function kg(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>NC(a,s)):n}function Sg(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>TC(r)):n}function Ig(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var PU=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return fn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return fn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return bg(this.node.rawAttrs,e,t);if(n.s!=null)return mg(this.node.rawAttrs,e,t);if(n.b!=null)return gg(this.node.rawAttrs,e,t);if(n.shape!=null)return xg(this.node.rawAttrs,e,t);if(n.type!=null)return yg(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return wg(this.node.rawAttrs,e,t);if(n.list.s!=null)return kg(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Sg(this.node.rawAttrs,e,t);if(n.list.b!=null)return Ig(this.node.rawAttrs,e,t);if(n.list.type!=null)return vg(this.node.rawAttrs,e,t)}return t}},Qt={};Ee(Qt,{OP_SCOPE_SUFFIX:()=>r0,abs:()=>Wt,acos:()=>uR,acosh:()=>cR,add:()=>ie,addN:()=>hR,all:()=>H0,any:()=>eg,argMax:()=>ul,argMin:()=>bR,asin:()=>vR,asinh:()=>wR,atan:()=>SR,atan2:()=>CR,atanh:()=>TR,avgPool:()=>Ab,avgPool3d:()=>X0,basicLSTMCell:()=>WR,batchNorm:()=>Vh,batchNorm2d:()=>Y0,batchNorm3d:()=>Z0,batchNorm4d:()=>Q0,batchToSpaceND:()=>Eb,bincount:()=>J0,booleanMaskAsync:()=>TO,broadcastArgs:()=>ZR,broadcastTo:()=>vd,buffer:()=>_e,cast:()=>de,ceil:()=>eD,clipByValue:()=>Yn,clone:()=>Js,complex:()=>wr,concat:()=>Lt,concat1d:()=>eS,concat2d:()=>tS,concat3d:()=>nS,concat4d:()=>sS,conv1d:()=>rS,conv2d:()=>va,conv2dTranspose:()=>aS,conv3d:()=>iS,conv3dTranspose:()=>uS,cos:()=>Db,cosh:()=>lS,cosineWindow:()=>Qb,cumprod:()=>ng,cumsum:()=>cS,denseBincount:()=>yD,depthToSpace:()=>xD,depthwiseConv2d:()=>Wh,diag:()=>SD,dilation2d:()=>CD,div:()=>xe,divNoNan:()=>AD,dot:()=>RD,dropout:()=>DS,einsum:()=>FD,elu:()=>Uh,enclosingPowerOfTwo:()=>FS,equal:()=>ss,erf:()=>LD,euclideanNorm:()=>KD,exp:()=>rs,expandDims:()=>Nn,expm1:()=>QD,eye:()=>Pb,fft:()=>Xb,fill:()=>Ql,floor:()=>Hh,floorDiv:()=>G0,fused:()=>pl,gather:()=>qh,gatherND:()=>PO,greater:()=>Qn,greaterEqual:()=>ou,ifft:()=>Wd,imag:()=>Mh,image:()=>gr,inTopKAsync:()=>BO,irfft:()=>TS,isFinite:()=>iF,isInf:()=>uF,isNaN:()=>cF,leakyRelu:()=>Lb,less:()=>mS,lessEqual:()=>uu,linalg:()=>WS,linspace:()=>fF,localResponseNormalization:()=>gF,log:()=>as,log1p:()=>zb,logSigmoid:()=>kF,logSoftmax:()=>gS,logSumExp:()=>bS,logicalAnd:()=>Bs,logicalNot:()=>Mb,logicalOr:()=>yS,logicalXor:()=>AF,losses:()=>CL,lowerBound:()=>RF,matMul:()=>Ve,max:()=>Ps,maxPool:()=>Vb,maxPool3d:()=>vS,maxPoolWithArgmax:()=>PF,maximum:()=>Or,mean:()=>Nt,meshgrid:()=>MF,min:()=>sg,minimum:()=>jh,mirrorPad:()=>WF,mod:()=>GF,moments:()=>Kh,movingAverage:()=>_O,mul:()=>V,multiRNNCell:()=>jF,multinomial:()=>XF,neg:()=>wt,norm:()=>Gh,notEqual:()=>cl,oneHot:()=>Bd,ones:()=>$n,onesLike:()=>is,op:()=>z,outerProduct:()=>JF,pad:()=>Ii,pad1d:()=>n3,pad2d:()=>r3,pad3d:()=>i3,pad4d:()=>u3,pool:()=>p3,pow:()=>wa,prelu:()=>Ub,print:()=>f0,prod:()=>g3,rand:()=>y3,randomGamma:()=>k3,randomNormal:()=>qb,randomStandardNormal:()=>C3,randomUniform:()=>ec,range:()=>dl,real:()=>ol,reciprocal:()=>$3,relu:()=>sr,relu6:()=>xS,reshape:()=>U,reverse:()=>Ss,reverse1d:()=>D3,reverse2d:()=>O3,reverse3d:()=>L3,reverse4d:()=>M3,rfft:()=>Yb,round:()=>wS,rsqrt:()=>kS,scalar:()=>Se,scatterND:()=>EO,searchSorted:()=>Bb,selu:()=>SS,separableConv2d:()=>IS,setdiff1dAsync:()=>H3,sigmoid:()=>er,sign:()=>j3,signal:()=>IL,sin:()=>CS,sinh:()=>NS,slice:()=>qe,slice1d:()=>Xh,slice2d:()=>jb,slice3d:()=>Yh,slice4d:()=>hl,softmax:()=>Kb,softplus:()=>Jl,spaceToBatchND:()=>Wb,sparse:()=>NL,sparseToDense:()=>FO,spectral:()=>SL,split:()=>_n,sqrt:()=>yn,square:()=>ht,squaredDifference:()=>$S,squeeze:()=>Pr,stack:()=>Wn,step:()=>tc,stridedSlice:()=>dO,string:()=>TL,sub:()=>me,sum:()=>ve,tan:()=>pO,tanh:()=>ll,tensor:()=>ns,tensor1d:()=>gn,tensor2d:()=>la,tensor3d:()=>C0,tensor4d:()=>fO,tensor5d:()=>mO,tensor6d:()=>gO,tile:()=>xs,topk:()=>yO,transpose:()=>Ue,truncatedNormal:()=>Zb,unique:()=>wO,unsortedSegmentSum:()=>_S,unstack:()=>Vs,upperBound:()=>IO,variable:()=>AS,where:()=>En,whereAsync:()=>RS,zeros:()=>Et,zerosLike:()=>je});var LU=(e,t,n,s=Qt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(S("a",e,t,n),S("b",e,t,n))];case"AddN":return[s.addN(S("tensors",e,t,n))];case"FloorMod":case"Mod":return[s.mod(S("a",e,t,n),S("b",e,t,n))];case"Mul":return[s.mul(S("a",e,t,n),S("b",e,t,n))];case"RealDiv":case"Div":return[s.div(S("a",e,t,n),S("b",e,t,n))];case"DivNoNan":return[s.divNoNan(S("a",e,t,n),S("b",e,t,n))];case"FloorDiv":return[s.floorDiv(S("a",e,t,n),S("b",e,t,n))];case"Sub":return[s.sub(S("a",e,t,n),S("b",e,t,n))];case"Minimum":return[s.minimum(S("a",e,t,n),S("b",e,t,n))];case"Maximum":return[s.maximum(S("a",e,t,n),S("b",e,t,n))];case"Pow":return[s.pow(S("a",e,t,n),S("b",e,t,n))];case"SquaredDifference":return[s.squaredDifference(S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},zU=(e,t,n,s=Qt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs(S("x",e,t,n))];case"Acos":return[s.acos(S("x",e,t,n))];case"Acosh":return[s.acosh(S("x",e,t,n))];case"Asin":return[s.asin(S("x",e,t,n))];case"Asinh":return[s.asinh(S("x",e,t,n))];case"Atan":return[s.atan(S("x",e,t,n))];case"Atan2":return[s.atan2(S("x",e,t,n),S("y",e,t,n))];case"Atanh":return[s.atanh(S("x",e,t,n))];case"Ceil":return[s.ceil(S("x",e,t,n))];case"Complex":return[s.complex(S("real",e,t,n),S("imag",e,t,n))];case"Cos":return[s.cos(S("x",e,t,n))];case"Cosh":return[s.cosh(S("x",e,t,n))];case"Elu":return[s.elu(S("x",e,t,n))];case"Erf":return[s.erf(S("x",e,t,n))];case"Exp":return[s.exp(S("x",e,t,n))];case"Expm1":return[s.expm1(S("x",e,t,n))];case"Floor":return[s.floor(S("x",e,t,n))];case"Log":return[s.log(S("x",e,t,n))];case"Log1p":return[s.log1p(S("x",e,t,n))];case"Imag":return[s.imag(S("x",e,t,n))];case"Neg":return[s.neg(S("x",e,t,n))];case"Reciprocal":return[s.reciprocal(S("x",e,t,n))];case"Real":return[s.real(S("x",e,t,n))];case"Relu":return[s.relu(S("x",e,t,n))];case"Round":return[s.round(S("x",e,t,n))];case"Selu":return[s.selu(S("x",e,t,n))];case"Sigmoid":return[s.sigmoid(S("x",e,t,n))];case"Sin":return[s.sin(S("x",e,t,n))];case"Sign":return[s.sign(S("x",e,t,n))];case"Sinh":return[s.sinh(S("x",e,t,n))];case"Softplus":return[s.softplus(S("x",e,t,n))];case"Sqrt":return[s.sqrt(S("x",e,t,n))];case"Square":return[s.square(S("x",e,t,n))];case"Tanh":return[s.tanh(S("x",e,t,n))];case"Tan":return[s.tan(S("x",e,t,n))];case"ClipByValue":return[s.clipByValue(S("x",e,t,n),S("clipValueMin",e,t,n),S("clipValueMax",e,t,n))];case"Relu6":return[s.relu6(S("x",e,t,n))];case"Rsqrt":return[s.rsqrt(fn(e.inputNames[0],t,n))];case"Prod":return[s.prod(S("x",e,t,n),S("axes",e,t,n))];case"LeakyRelu":return[s.leakyRelu(S("x",e,t,n),S("alpha",e,t,n))];case"Prelu":return[s.prelu(S("x",e,t,n),S("alpha",e,t,n))];case"IsNan":return[s.isNaN(fn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ts(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];w.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function Pw(e){return!(typeof e=="number"||e.some(t=>t<0))}function Wu(e,t,n){let s=Cg(e,n),r=!Pw(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=Cg(a.shape,s)}),!Pw(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Cg(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var MU=class{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Se(0),Yt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),ts(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Yt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return ns([],[0].concat(this.elementShape));let n=this.readMany(e);return ts(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Wn(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return ns([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return ts(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Lt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Vs(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];Y(()=>{t=U(t,[1,n,r]);for(let o=0;o<e.length;++o){let u=o===0?0:s[o-1],l=[0,u,0],c=[1,e[o],r];a[o]=U(qe(t,l,c),this.elementShape)}return a});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,a)}},co=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);ts(t,r.shape,"TensorList shape mismatch: "),Yt(r)}),this.idTensor=Se(0),this.maxNumElements=s,Yt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new co([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ts(e,this.elementShape,"TensorList shape mismatch: ");let s=Wu(this.elementShape,this.tensors,e);return Y(()=>{let r=this.tensors.map(a=>U(a,s));return Wn(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Wu(this.elementShape,this.tensors,e),s=this.tensors.pop();return ts(s.shape,e,"TensorList shape mismatch: "),U(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ts(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Yt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new co([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);ts(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=Wu(this.elementShape,this.tensors,t);return U(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ts(this.elementShape,t.shape,"TensorList shape mismatch: "),Yt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ts(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=Wu(this.elementShape,this.tensors,n);return e.length===0?ns([],[0].concat(s)):Y(()=>{let r=e.map(a=>U(this.tensors[a],s));return Wn(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ts(this.elementShape,t,"TensorList shape mismatch: ");let n=Wu(this.elementShape,this.tensors,t);return this.size()===0?ns([],[0].concat(n)):Y(()=>{let s=this.tensors.map(r=>U(r,n));return Lt(s,0)})}};function BU(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);ts(r,t,"TensorList shape mismatch: ");let a=Vs(e);return new co(a,t,s)}function VU(e,t,n,s){return new co([],e,t,s)}function WU(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new co([],n,e.dtype,s),i=Vs(e,0);return t.forEach((o,u)=>{a.setItem(o,i[u])}),a}function UU(e,t,n){let s=0,r=t.map(c=>(s+=c,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),i=Cg(a,n),o=s===0?0:e.size/s,u=Y(()=>{let c=[];e=U(e,[1,s,o]);for(let h=0;h<t.length;++h){let d=h===0?0:r[h-1],p=[0,d,0],f=[1,t[h],o];c[h]=U(qe(e,p,f),i)}return e.dispose(),c}),l=new co([],n,e.dtype,t.length);for(let c=0;c<u.length;c++)l.setItem(c,u[c]);return l}var GU=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=S("thenBranch",e,t,n),r=S("elseBranch",e,t,n),a=S("cond",e,t,n),i=S("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=S("body",e,t,n),r=S("cond",e,t,n),a=S("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map(c=>c.id),u=await i[0].data();i.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let l=a;for(;u[0];){let c=l;l=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);let h=l.map(p=>p.id);c.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()});let d=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await d[0].data(),d.forEach(p=>{!p.kept&&o.indexOf(p.id)===-1&&h.indexOf(p.id)===-1&&p.dispose()})}return l}case"LoopCond":{let s=S("pred",e,t,n);return[Xs(s)]}case"Switch":{let s=S("pred",e,t,n),r=S("data",e,t,n);return r.kept||(r=Xs(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>fn(r,t,n)!==void 0);if(s){let r=fn(s,t,n);return[Xs(r)]}return}case"Enter":{let s=S("frameName",e,t,n),r=S("tensor",e,t,n);return n.enterFrame(s),[Xs(r)]}case"Exit":{let s=S("tensor",e,t,n);return n.exitFrame(),[Xs(s)]}case"NextIteration":{let s=S("tensor",e,t,n);return n.nextIteration(),[Xs(s)]}case"TensorArrayV3":{let s=S("size",e,t,n),r=S("dtype",e,t,n),a=S("elementShape",e,t,n),i=S("dynamicSize",e,t,n),o=S("clearAfterRead",e,t,n),u=S("identicalElementShapes",e,t,n),l=S("name",e,t,n),c=new MU(l,r,s,a,u,i,o);return n.addTensorArray(c),[c.idTensor,Se(1)]}case"TensorArrayWriteV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=S("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=S("tensorArrayId",e,t,n),r=S("tensor",e,t,n),a=S("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Se(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("elementShape",e,t,n),i=S("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{let s=S("indices",e,t,n),r=S("tensor",e,t,n),a=S("elementShape",e,t,n),i=S("numElements",e,t,n),o=WU(r,s,a,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=S("elementShape",e,t,n),r=S("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let i=S(a,e,t,n),o=e.op==="TensorListReserve"?-1:i,u=VU(s,r,i,o);return n.addTensorList(u),[u.idTensor]}case"TensorListGather":{let s=S("tensorListId",e,t,n),r=S("indices",e,t,n),a=S("elementShape",e,t,n),i=S("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),i=S("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),i=BU(s,r,a);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id),a=S("dtype",e,t,n),i=S("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{let s=S("tensorListId",e,t,n),r=S("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("lengths",e,t,n),i=UU(s,a,r);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id);return[Se(r.size(),"int32")]}case"TensorListResize":{let s=S("tensorListId",e,t,n),r=S("size",e,t,n),i=n.getTensorList(s.id).resize(r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Lw(e,t,n){let[s,r]=S("fusedOps",e,t,n),a=s==="biasadd",i=!a,o=r==="prelu",u=s==="fusedbatchnorm",l=S("numArgs",e,t,n);if(a){if(o&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=S("strides",e,t,n),h=xd(e,t,n),d=S("dataFormat",e,t,n).toUpperCase(),p=S("dilations",e,t,n),[f,m]=S("args",e,t,n);i&&(m=f,f=void 0);let g=S("leakyreluAlpha",e,t,n);return{stride:c,pad:h,dataFormat:d,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var HU=(e,t,n,s=Qt)=>{switch(e.op){case"Conv1D":{let r=S("stride",e,t,n),a=S("pad",e,t,n),i=S("dataFormat",e,t,n).toUpperCase(),o=S("dilation",e,t,n);return[s.conv1d(S("x",e,t,n),S("filter",e,t,n),r,a,i,o)]}case"Conv2D":{let r=S("strides",e,t,n),a=xd(e,t,n),i=S("dataFormat",e,t,n).toUpperCase(),o=S("dilations",e,t,n);return[s.conv2d(S("x",e,t,n),S("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Lw(e,t,n);return[s.fused.conv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Lw(e,t,n);return[s.fused.depthwiseConv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=S("outputShape",e,t,n),a=S("strides",e,t,n),i=xd(e,t,n);return[s.conv2dTranspose(S("x",e,t,n),S("filter",e,t,n),r,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=S("strides",e,t,n),a=xd(e,t,n),i=S("dilations",e,t,n),o=S("dataFormat",e,t,n).toUpperCase();return[s.depthwiseConv2d(S("input",e,t,n),S("filter",e,t,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"Conv3D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("dataFormat",e,t,n).toUpperCase(),o=S("dilations",e,t,n);return[s.conv3d(S("x",e,t,n),S("filter",e,t,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("kernelSize",e,t,n);return[s.avgPool(S("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("kernelSize",e,t,n);return[s.maxPool(S("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("kernelSize",e,t,n),o=S("includeBatchInIndex",e,t,n),{result:u,indexes:l}=s.maxPoolWithArgmax(S("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a,o);return[u,l]}case"AvgPool3D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("kernelSize",e,t,n);return[s.avgPool3d(S("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("kernelSize",e,t,n);return[s.maxPool3d(S("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("dilations",e,t,n),o=r[1],u=r[2],l=i[1],c=i[2];return[s.dilation2d(S("x",e,t,n),S("filter",e,t,n),[o,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},qU=(e,t,n,s=Qt)=>{switch(e.op){case"Fill":{let r=S("shape",e,t,n),a=S("dtype",e,t,n),i=S("value",e,t,n);return[s.fill(r,i,a)]}case"LinSpace":{let r=S("start",e,t,n),a=S("stop",e,t,n),i=S("num",e,t,n);return[s.linspace(r,a,i)]}case"Multinomial":{let r=S("logits",e,t,n),a=S("numSamples",e,t,n),i=S("seed",e,t,n);return[s.multinomial(r,a,i)]}case"OneHot":{let r=S("indices",e,t,n),a=S("depth",e,t,n),i=S("onValue",e,t,n),o=S("offValue",e,t,n);return[s.oneHot(r,a,i,o)]}case"Ones":return[s.ones(S("shape",e,t,n),S("dtype",e,t,n))];case"OnesLike":return[s.onesLike(S("x",e,t,n))];case"RandomStandardNormal":return[s.randomStandardNormal(S("shape",e,t,n),S("dtype",e,t,n),S("seed",e,t,n))];case"RandomUniform":return[s.randomUniform(S("shape",e,t,n),S("minval",e,t,n),S("maxval",e,t,n),S("dtype",e,t,n))];case"Range":{let r=S("start",e,t,n),a=S("stop",e,t,n),i=S("step",e,t,n);return[s.range(r,a,i,S("dtype",e,t,n))]}case"TruncatedNormal":{let r=S("shape",e,t,n),a=S("mean",e,t,n),i=S("stdDev",e,t,n),o=S("seed",e,t,n);return[s.truncatedNormal(r,a,i,S("dtype",e,t,n),o)]}case"Zeros":return[s.zeros(S("shape",e,t,n),S("dtype",e,t,n))];case"ZerosLike":return[s.zerosLike(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function _m(e,t,n){let s=S("boxes",e,t,n),r=S("scores",e,t,n),a=S("maxOutputSize",e,t,n),i=S("iouThreshold",e,t,n),o=S("scoreThreshold",e,t,n),u=S("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}}var jU=async(e,t,n,s,r=Qt)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=_m(e,t,n),h=await r.image.nonMaxSuppressionWithScoreAsync(a,i,o,u,l,c);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=_m(e,t,n),c=S("padToMaxOutputSize",e,t,n),h=await r.image.nonMaxSuppressionPaddedAsync(a,i,o,u,l,c);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=_m(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,i,o,u,l)]}case"Where":{let a=r.cast(S("condition",e,t,n),"bool"),i=[await r.whereAsync(a)];return a.dispose(),i}case"ListDiff":return r.setdiff1dAsync(S("x",e,t,n),S("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},KU=(e,t,n,s=Qt)=>{switch(e.op){case"LowerBound":{let r=S("sortedSequence",e,t,n),a=S("values",e,t,n);return[s.lowerBound(r,a)]}case"TopKV2":{let r=S("x",e,t,n),a=S("k",e,t,n),i=S("sorted",e,t,n),o=s.topk(r,a,i);return[o.values,o.indices]}case"UpperBound":{let r=S("sortedSequence",e,t,n),a=S("values",e,t,n);return[s.upperBound(r,a)]}case"Unique":{let r=S("x",e,t,n),a=s.unique(r);return[a.values,a.indices]}case"UniqueV2":{let r=S("x",e,t,n),a=S("axis",e,t,n),i=s.unique(r,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},XU=(e,t,n,s=Qt)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=S("default",e,t,n);return[fn(e.name,t,n)||r];case"Placeholder":return[fn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=S("x",e,t,n);return[Xs(c)]}case"IdentityN":return S("x",e,t,n).map(c=>Xs(c));case"Snapshot":let a=S("x",e,t,n);return[Xs(a)];case"Shape":return[s.tensor1d(S("x",e,t,n).shape,"int32")];case"ShapeN":return S("x",e,t,n).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(S("x",e,t,n).size,"int32")];case"Rank":return[s.scalar(S("x",e,t,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":let i=S("x",e,t,n),o=S("data",e,t,n),u=S("message",e,t,n),l=S("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,l));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},YU=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Se(0),this.tensorMap=new Map,Yt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Se(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),Y(()=>{let s=Vs(t),r=n.length,a=s.length;w.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let i=0;i<r;i++){let o=n[i],u=s[i];Yt(u),this.tensorMap.set(o,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return Y(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],i=this.findWithDefault(a,t);s.push(i)}return Wn(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},ZU=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=S("keyDType",e,t,n),a=S("valueDType",e,t,n),i=new YU(r,a);return s.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),i=S("values",e,t,n);return[await s.getHashTableById(r.id).import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),i=S("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=S("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},QU=(e,t,n,s=Qt)=>{switch(e.op){case"ResizeBilinear":{let r=S("images",e,t,n),a=S("size",e,t,n),i=S("alignCorners",e,t,n),o=S("halfPixelCenters",e,t,n);return[s.image.resizeBilinear(r,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{let r=S("images",e,t,n),a=S("size",e,t,n),i=S("alignCorners",e,t,n),o=S("halfPixelCenters",e,t,n);return[s.image.resizeNearestNeighbor(r,[a[0],a[1]],i,o)]}case"CropAndResize":{let r=S("image",e,t,n),a=S("boxes",e,t,n),i=S("boxInd",e,t,n),o=S("cropSize",e,t,n),u=S("method",e,t,n),l=S("extrapolationValue",e,t,n);return[s.image.cropAndResize(r,a,i,o,u,l)]}case"ImageProjectiveTransformV3":{let r=S("images",e,t,n),a=S("transforms",e,t,n),i=S("outputShape",e,t,n),o=S("fillValue",e,t,n),u=S("interpolation",e,t,n),l=S("fillMode",e,t,n);return[s.image.transform(r,a,u.toLowerCase(),l.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},JU=(e,t,n,s=Qt)=>{switch(e.op){case"Equal":return[s.equal(S("a",e,t,n),S("b",e,t,n))];case"NotEqual":return[s.notEqual(S("a",e,t,n),S("b",e,t,n))];case"Greater":return[s.greater(S("a",e,t,n),S("b",e,t,n))];case"GreaterEqual":return[s.greaterEqual(S("a",e,t,n),S("b",e,t,n))];case"Less":return[s.less(S("a",e,t,n),S("b",e,t,n))];case"LessEqual":return[s.lessEqual(S("a",e,t,n),S("b",e,t,n))];case"LogicalAnd":return[s.logicalAnd(S("a",e,t,n),S("b",e,t,n))];case"LogicalNot":return[s.logicalNot(S("a",e,t,n))];case"LogicalOr":return[s.logicalOr(S("a",e,t,n),S("b",e,t,n))];case"Select":case"SelectV2":return[s.where(S("condition",e,t,n),S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},eG=(e,t,n,s=Qt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(S("a",e,t,n),S("b",e,t,n),S("transposeA",e,t,n),S("transposeB",e,t,n))];case"Einsum":return[s.einsum(S("equation",e,t,n),...S("tensors",e,t,n))];case"Transpose":return[s.transpose(S("x",e,t,n),S("perm",e,t,n))];case"_FusedMatMul":let[r,a]=S("fusedOps",e,t,n),i=r==="biasadd",o=a==="prelu",u=S("numArgs",e,t,n),l=S("leakyreluAlpha",e,t,n);if(i){if(o&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,h]=S("args",e,t,n);return[s.fused.matMul({a:S("a",e,t,n),b:S("b",e,t,n),transposeA:S("transposeA",e,t,n),transposeB:S("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},tG=(e,t,n,s=Qt)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm(S("x",e,t,n),S("axis",e,t,n),S("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"FusedBatchNormV3":return[s.batchNorm(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"LRN":return[s.localResponseNormalization(S("x",e,t,n),S("radius",e,t,n),S("bias",e,t,n),S("alpha",e,t,n),S("beta",e,t,n))];case"Softmax":return[s.softmax(S("x",e,t,n))];case"LogSoftmax":return[s.logSoftmax(S("x",e,t,n))];case"SparseToDense":return[s.sparseToDense(S("sparseIndices",e,t,n),S("outputShape",e,t,n),S("sparseValues",e,t,n),S("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},nG=(e,t,n,s=Qt)=>{switch(e.op){case"Max":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.max(S("x",e,t,n),o,u)]}case"Mean":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.mean(S("x",e,t,n),o,u)]}case"Min":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.min(S("x",e,t,n),o,u)]}case"Sum":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.sum(S("x",e,t,n),o,u)]}case"All":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.all(S("x",e,t,n),o,u)]}case"Any":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.any(S("x",e,t,n),o,u)]}case"ArgMax":{let o=S("axis",e,t,n);return[s.argMax(S("x",e,t,n),o)]}case"ArgMin":{let o=S("axis",e,t,n);return[s.argMin(S("x",e,t,n),o)]}case"Prod":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.prod(S("x",e,t,n),o,u)]}case"Cumprod":{let o=S("axis",e,t,n),u=S("exclusive",e,t,n),l=S("reverse",e,t,n);return[s.cumprod(S("x",e,t,n),o,u,l)]}case"Cumsum":{let o=S("axis",e,t,n),u=S("exclusive",e,t,n),l=S("reverse",e,t,n);return[s.cumsum(S("x",e,t,n),o,u,l)]}case"Bincount":let r=S("x",e,t,n),a=S("weights",e,t,n),i=S("size",e,t,n);return[s.bincount(r,a,i)];case"DenseBincount":{let o=S("x",e,t,n),u=S("weights",e,t,n),l=S("size",e,t,n),c=S("binaryOutput",e,t,n);return[s.denseBincount(o,u,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},sG=(e,t,n,s=Qt)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=S("n",e,t,n),a=S("axis",e,t,n),i=S("tensors",e,t,n);return i=i.slice(0,r),[s.concat(i,a)]}case"Gather":{let r=S("x",e,t,n),a=S("indices",e,t,n);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{let r=S("axis",e,t,n),a=S("batchDims",e,t,n),i=S("x",e,t,n),o=S("indices",e,t,n);return[s.gather(i,s.cast(o,"int32"),r,a)]}case"Reverse":{let r=S("dims",e,t,n),a=[];for(let o=0;o<r.length;o++)r[o]&&a.push(o);let i=S("x",e,t,n);return[s.reverse(i,a)]}case"ReverseV2":{let r=S("axis",e,t,n),a=S("x",e,t,n);return[s.reverse(a,r)]}case"Slice":{let r=S("begin",e,t,n),a=S("size",e,t,n);return[s.slice(S("x",e,t,n),r,a)]}case"StridedSlice":{let r=S("begin",e,t,n),a=S("end",e,t,n),i=S("strides",e,t,n),o=S("beginMask",e,t,n),u=S("endMask",e,t,n),l=S("ellipsisMask",e,t,n),c=S("newAxisMask",e,t,n),h=S("shrinkAxisMask",e,t,n),d=S("x",e,t,n);return[s.stridedSlice(d,r,a,i,o,u,l,c,h)]}case"Pack":return Y(()=>{let r=S("axis",e,t,n),a=S("tensors",e,t,n),i=a[0].shape,o=s.squeeze(a[0]).shape,u=a.map(l=>{let c=w.arraysEqual(l.shape,i);if(!c&&!w.arraysEqual(s.squeeze(l).shape,o))throw new Error("the input tensors shape does not match");return c?l:s.reshape(l,i)});return[s.stack(u,r)]});case"Unpack":{let r=S("axis",e,t,n),a=S("tensor",e,t,n);return s.unstack(a,r)}case"Tile":{let r=S("reps",e,t,n);return[s.tile(S("x",e,t,n),r)]}case"Split":case"SplitV":{let r=S("axis",e,t,n),a=S("numOrSizeSplits",e,t,n),i=S("x",e,t,n);return s.split(i,a,r)}case"ScatterNd":{let r=S("indices",e,t,n),a=S("values",e,t,n),i=S("shape",e,t,n);return[s.scatterND(r,a,i)]}case"GatherNd":{let r=S("x",e,t,n),a=S("indices",e,t,n);return[s.gatherND(r,a)]}case"SparseToDense":{let r=S("sparseIndices",e,t,n),a=S("outputShape",e,t,n),i=S("sparseValues",e,t,n),o=S("defaultValue",e,t,n);return[s.sparseToDense(r,i,a,i.dtype===o.dtype?o:s.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},rG=(e,t,n,s=Qt)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(S("indices",e,t,n),S("values",e,t,n),S("denseShape",e,t,n),S("defaultValue",e,t,n));return[r,a,i,o]}case"SparseReshape":{let{outputIndices:r,outputShape:a}=s.sparse.sparseReshape(S("inputIndices",e,t,n),S("inputShape",e,t,n),S("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},aG=(e,t,n,s=Qt)=>{switch(e.op){case"FFT":return[s.fft(S("x",e,t,n))];case"IFFT":return[s.ifft(S("x",e,t,n))];case"RFFT":return[s.rfft(S("x",e,t,n))];case"IRFFT":return[s.irfft(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},iG=(e,t,n,s=Qt)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:a}=s.string.stringNGrams(S("data",e,t,n),S("dataSplits",e,t,n),S("separator",e,t,n),S("nGramWidths",e,t,n),S("leftPad",e,t,n),S("rightPad",e,t,n),S("padWidth",e,t,n),S("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{let{indices:r,values:a,shape:i}=s.string.stringSplit(S("input",e,t,n),S("delimiter",e,t,n),S("skipEmpty",e,t,n));return[r,a,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(S("input",e,t,n),S("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},oG=(e,t,n,s=Qt)=>{switch(e.op){case"Cast":return[s.cast(S("x",e,t,n),S("dtype",e,t,n))];case"ExpandDims":{let r=S("axis",e,t,n);return[s.expandDims(S("x",e,t,n),r)]}case"Squeeze":{let r=S("axis",e,t,n);return[s.squeeze(S("x",e,t,n),r)]}case"Reshape":return[s.reshape(S("x",e,t,n),S("shape",e,t,n))];case"MirrorPad":return[s.mirrorPad(S("x",e,t,n),S("padding",e,t,n),S("mode",e,t,n))];case"PadV2":case"Pad":return[s.pad(S("x",e,t,n),S("padding",e,t,n),S("constantValue",e,t,n))];case"SpaceToBatchND":{let r=S("blockShape",e,t,n),a=S("paddings",e,t,n);return[s.spaceToBatchND(S("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=S("blockShape",e,t,n),a=S("crops",e,t,n);return[s.batchToSpaceND(S("x",e,t,n),r,a)]}case"DepthToSpace":{let r=S("blockSize",e,t,n),a=S("dataFormat",e,t,n).toUpperCase();return[s.depthToSpace(S("x",e,t,n),r,a)]}case"BroadcastTo":return[s.broadcastTo(S("x",e,t,n),S("shape",e,t,n))];case"BroadcastArgs":return[s.broadcastArgs(S("s0",e,t,n),S("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function zw(e,t,n,s,r=Y){let a=((i,o,u)=>{switch(i.category){case"arithmetic":return r(()=>LU(i,o,u));case"basic_math":return r(()=>zU(i,o,u));case"control":return GU(i,o,u);case"convolution":return r(()=>HU(i,o,u));case"creation":return r(()=>qU(i,o,u));case"dynamic":return jU(i,o,u);case"evaluation":return r(()=>KU(i,o,u));case"image":return r(()=>QU(i,o,u));case"graph":return r(()=>XU(i,o,u));case"logical":return r(()=>JU(i,o,u));case"matrices":return r(()=>eG(i,o,u));case"normalization":return r(()=>tG(i,o,u));case"reduction":return r(()=>nG(i,o,u));case"slice_join":return r(()=>sG(i,o,u));case"sparse":return r(()=>rG(i,o,u));case"spectral":return r(()=>aG(i,o,u));case"string":return r(()=>iG(i,o,u));case"transformation":return r(()=>oG(i,o,u));case"hash_table":return ZU(i,o,u,s);case"custom":let l=iC(i.op);if(l&&l.customExecutor)return l.customExecutor(new PU(i,o,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(a)?a.then(i=>[].concat(i)):[].concat(a)}var Mw=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Bw(e,t,n,s){let r=new Set,a=[],i=null,o=null,u=new Set,l=Object.keys(e).map(d=>Bn(d)[0]),c=[];s!=null&&(c=s.map(d=>Bn(d.name)[0]));let h=[...t];for(;h.length>0;){let d=h.pop();if(($C(d)||hG(d)||pG(d))&&i==null&&(i=d,o=i.children.map(p=>p.name).filter(p=>r.has(p))),r.add(d.name),n[d.name]==null&&l.indexOf(d.name)===-1&&c.indexOf(d.name)===-1){if(d.inputs.length===0){a.push(d.name);continue}d.inputs.forEach(p=>{u.has(p.name)||(u.add(p.name),h.push(p))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}function uG(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map(c=>Bn(c)[0]).map(c=>e.nodes[c]),o=e.initNodes;i.forEach(c=>{s.has(c.name)&&a.push(c)}),e.weights.forEach(c=>{s.has(c.name)&&a.push(c)}),o!=null&&o.forEach(c=>{s.has(c.name)&&a.push(c)});let u=new Set,l=[];for(;a.length>0;){let c=a.pop();u.add(c.name),t[c.name]||l.push(c),c.children.forEach(h=>{!u.has(h.name)&&s.has(h.name)&&h.inputs.every(d=>u.has(d.name))&&a.push(h)})}return l}var lG=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],cG=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],dG=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function $C(e){return lG.indexOf(e.op)>=0}function hG(e){return cG.indexOf(e.op)>=0}function pG(e){return dG.indexOf(e.op)>=0}var Ng=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Ng(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=Bw(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let i=t.map(u=>u.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${s}]`)}return uG(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(c=>this.graph.nodes[Bn(c)[0]]),r=t.map(c=>Bn(c)[0]),a=r.map(c=>this.graph.nodes[c]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(s,a),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,a),this.compiledMap.set(i,o));let u={},l={};return Y(()=>{let c=new Mw(this.weightMap,u,l,this.functionExecutorMap),h={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=Bn(f),b=[];b[g]=e[f],h[m]=b});let d=this.getFrozenTensorIds(h),p={};for(let f=0;f<o.length;f++){let m=o[f];if(!h[m.name]){let g=zw(m,h,c,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);h[m.name]=g,this.checkTensorForDisposal(m.name,m,h,c,d,r,p)}}return this.parent==null&&c.dispose(d),t.map(f=>fn(f,h,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let u=mU(o.name,n,s);u!=null&&u.forEach(l=>{if(l&&!l.kept&&!r.has(l.id)){let c=i[l.id];if(c===1){if(!this.keepTensorForDebug)l.dispose();else{let[h,d]=Ds(t.name,s);this.intermediateTensors[h]?this.intermediateTensors[h][d]=l:(this.intermediateTensors[h]=[],this.intermediateTensors[h][d]=l)}delete i[l.id]}else c!=null&&i[l.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=X().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();let a=new Mw(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let i=t.map(l=>fn(l,this.tensorsMap,a)),o=i.map(l=>l.id),u=Object.keys(e).map(l=>e[l].id);return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,i)=>(r[this.inputs[i].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(y=>this.graph.nodes[Bn(y)[0]]),i=n.map(y=>Bn(y)[0]),o=i.map(y=>this.graph.nodes[y]);o.length===0&&(o=this._outputs);let{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=Bw(e,o,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(y=>({node:y,contexts:t.currentContext})),p={...this.weightMap};Object.keys(e).forEach(y=>{let[v,x]=Bn(y),k=[];k[x]=e[y],p[v]=k});let f={},m=this.getFrozenTensorIds(p),g={};for(;d.length>0;){let y=this.processStack(a,d,t,p,g,m,i,f,u);await Promise.all(y)}c==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=o.filter(y=>!$C(y)&&!fn(y.name,p,t)).map(y=>y.name);if(b.length>0){let y="";throw c!=null&&(y=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${r}]. Consider providing the following inputs: [${l}]. ${y}`)}return p}processStack(e,t,n,s,r,a,i,o,u){let l=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let h="";if(c.node.op==="Enter"&&S("isConstant",c.node,s,n)&&([h]=Ds(c.node.name,n)),s[c.node.name]==null){let d=zw(c.node,s,n,this._resourceManager);h||([h]=Ds(c.node.name,n));let p=n.currentContext;w.isPromise(d)?l.push(d.then(f=>(s[h]=f,n.currentContext=p,this.checkTensorForDisposal(h,c.node,s,n,a,i,o),this.processChildNodes(c.node,t,n,s,r,u),f))):(s[h]=d,this.checkTensorForDisposal(h,c.node,s,n,a,i,o),this.processChildNodes(c.node,t,n,s,r,u))}else this.processChildNodes(c.node,t,n,s,r,u)}return l}processChildNodes(e,t,n,s,r,a){e.children.forEach(i=>{let[o]=Ds(i.name,n);r[o]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!fn(u,s,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!fn(u,s,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=Bn(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((o,u)=>a[u]===-1||a[u]===o);w.assert(i,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&w.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=Bn(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Bn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},fG=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},mG="?tfjs-format=file",gG="model.json",bG=class{constructor(e,t={},n=mr){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new fG}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return w.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let r=this.artifacts.userDefinedMetadata;r.signature!=null&&(n=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Ng(Fw.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=Fw.Instance.transformGraph(e.modelInitializer);this.initializer=new Ng(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let s=n instanceof ut?[n]:n,r={};return s.forEach((a,i)=>r[this.structuredOutputKeys[i]]=a),r}return n}normalizeInputs(e){if(!(e instanceof ut)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function _C(e,t={},n=mr){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=yG(e));let s=new bG(e,t,n);return await s.load(),s}function yG(e){return e.endsWith("/")||(e=e+"/"),`${e}${gG}${mG}`}var vG={};Ee(vG,{CSVDataset:()=>VC,Dataset:()=>hu,FileDataSource:()=>KC,TextLineDataset:()=>BC,URLDataSource:()=>XC,array:()=>WG,csv:()=>JG,func:()=>eH,generator:()=>tH,microphone:()=>sH,version_data:()=>rH,webcam:()=>nH,zip:()=>UG});var xG=$a(hh()),wG=$a(hh());function kG(e,t){return eh(e,t)}function eh(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(ho(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let i in e){let o=e[i],u=eh(o,t,n,s);a[i]=u}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function SG(e,t=EC){return AC(e,t)}function AC(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(ho(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let i in s){let o=e.map(l=>l[i]),u=AC(o,t,n);a[i]=u}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function EC(e){return e===null?null:ho(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function RC(e,t){let n=new Map;eh(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let i=await a;n.set(r,i)}}return eh(e,t,n)}function ho(e){let t=!1;if(X().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=Rk();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof ut)&&!(e instanceof Promise)&&!t)}function IG(e){return e==null||CG(e)||Array.isArray(e)||typeof e=="object"&&e instanceof ut||w.isTypedArray(e)}function CG(e){return e===null||typeof e!="object"&&typeof e!="function"}function NG(e){return kG(e,TG)}function TG(e){return e instanceof ut?{value:e.clone(),recurse:!1}:ho(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var DC=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},FC=class extends DC{constructor(){super(FC.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},OC=FC;OC.INITIAL_CAPACITY=32;function PC(e){return new AG(e)}function Fv(e){return new EG(e)}function $G(e,t){return new LC(e,t)}function _G(e,t=zC.FAIL){return new BG(e,t)}var qt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new zG(this,e)}filter(e){return new PG(this,e)}map(e){return new LG(this,e)}mapAsync(e){return new Vw(this,e)}serialMapAsync(e){return new Vw(this,e).serial()}flatmap(e){return new MG(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new OG(this,e,t)}columnMajorBatch(e,t=!0,n=EC){return this.rowMajorBatch(e,t).map(r=>SG(r,n))}concatenate(e,t){return new LC(PC([this,e]),t)}take(e){return e<0||e==null?this:new FG(this,e)}skip(e){return e<0||e==null?this:new DG(this,e)}prefetch(e){return new MC(this,e)}shuffle(e,t){return new VG(this,e,t)}serial(){return new RG(this)}},AG=class extends qt{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:NG(e),done:!1}}},EG=class extends qt{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},RG=class extends qt{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},DG=class extends qt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Fe(e.value)}return this.upstream.next()}},FG=class extends qt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},OG=class extends qt{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},PG=class extends qt{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Fe(e.value)}}},LG=class extends qt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Os.getTensorsInContainer(e.value),n=this.transform(e.value),s=Os.getTensorsInContainer(n);for(let r of t)Os.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},zG=class extends qt{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Vw=class extends qt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Os.getTensorsInContainer(e.value),n=await this.transform(e.value),s=Os.getTensorsInContainer(n);for(let r of t)Os.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},Ov=class extends qt{constructor(){super(),this.outputQueue=new OC,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},MG=class extends Ov{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Os.getTensorsInContainer(e.value),n=this.transform(e.value),s=Os.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)Os.isTensorInList(r,s)||r.dispose();return!0}},LC=class extends qt{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},zC=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(zC||{}),BG=class extends qt{constructor(e,t=0){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof qt?{value:a.next().then(o=>(t++,o.done&&n++,o.value)),recurse:!1}:{value:null,recurse:!0}}let r=await RC(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},MC=class extends qt{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new DC(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},VG=class extends MC{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=wG.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},hu=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),Mn(async()=>(await n.iterator()).columnMajorBatch(e,t,GG),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Mn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Mn(async()=>(await t.iterator()).filter(s=>Y(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Mn(async()=>(await t.iterator()).map(n=>Y(()=>e(n))),this.size)}mapAsync(e){let t=this;return Mn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Mn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Mn(async()=>{let s=Fv(async()=>({value:await t.iterator(),done:!1}));return $G(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Mn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=xG.alea(t||w.now().toString());return Mn(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Mn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};hu.MAX_BUFFER_SIZE=1e4;function Mn(e,t=null){return new class extends hu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function WG(e){return Mn(async()=>PC(e),e.length)}function UG(e){if(!ho(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Mn(async()=>{let n=await RC(e,s=>{if(s instanceof hu)return{value:s.iterator(),recurse:!1};if(ho(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return _G(n,1)},t)}function GG(e){if(e===null)return null;let t=e[0];return IG(t)?{value:HG(e),recurse:!1}:{value:null,recurse:!0}}function HG(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ut?Wn(e):ns(e)}var BC=class extends hu{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},ud='"',Uu=Symbol("out"),Ww=Symbol("field"),ld=Symbol("quote"),Am=Symbol("quoteafterquote"),Uw=Symbol("quoteinquote"),VC=class extends hu{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new BC(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[r],u=null;if(o==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let l=Number(o);if(isNaN(l))i&&i.dtype==="bool"?u=this.getBoolean(o):u=o;else if(!i||!i.dtype)u=l;else switch(i.dtype){case"float32":u=l;break;case"int32":u=Math.floor(l);break;case"bool":u=this.getBoolean(o);break;default:u=l}}i&&i.isLabel?s[a]=u:n[a]=u}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=Uu;for(let i=0;i<r;i++)switch(a){case Uu:switch(e.charAt(i)){case ud:s=i+1,a=ld;break;case this.delimiter:if(s=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Uu;break;default:a=Ww,s=i;break}break;case Ww:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i)),a=Uu,s=i+1;break;default:}break;case ld:switch(e.charAt(i)){case ud:a=Am;break;default:}break;case Am:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i-1)),a=Uu,s=i+1;break;case ud:a=ld;break;default:a=Uw;break}break;case Uw:switch(e.charAt(i)){case ud:a=ld;break;default:}break;default:}if(a===Am?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},WC=class extends qt{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!X().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new WC(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),ns(n,t)}},UC=class extends qt{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=gn([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,i=r+n,o=s+a;this.cropBox=la([a,r,o,i],[1,4])}else this.cropBox=la([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!X().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new UC(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Bh.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return Y(()=>{let t=Nn(de(e,"float32"),0),n;n=gr.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return U(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},GC=class{},HC=class extends qt{split(e){return new qG(this,e)}},qG=class extends HC{constructor(e,t){super(),this.upstream=e,this.impl=new jG(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},jG=class extends Ov{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},KG=class extends qt{decodeUTF8(){return new XG(this)}},XG=class extends HC{constructor(e){super(),this.upstream=e,this.impl=new YG(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},YG=class extends Ov{constructor(e){if(super(),this.upstream=e,X().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Rk();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return X().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},qC=class extends KG{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(X().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=i=>{let o=r.result;if(o instanceof ArrayBuffer&&(o=new Uint8Array(o)),!(o instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(o)},r.onabort=i=>n(new Error("Aborted")),r.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function ZG(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=QG(e));let a=await(n||w.fetch)(s,r);if(a.ok){let i=new Uint8Array(await a.arrayBuffer());return new qC(i,t)}else throw new Error(a.statusText)}var QG=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function jC(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var KC=class extends GC{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(jC(this.input)&&X().get("IS_NODE")){let e=ph();this.input=e.readFileSync(this.input.slice(7))}return new qC(this.input,this.options)}},XC=class extends GC{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return jC(this.url)?new KC(this.url,this.fileOptions).iterator():ZG(this.url,this.fileOptions)}};function JG(e,t={}){return new VC(new XC(e),t)}function eH(e){let t=Fv(e);return Mn(async()=>t)}function tH(e){return Mn(async()=>{let t=await e();return Fv(()=>t.next())})}async function nH(e,t){return UC.create(e,t)}async function sH(e){return WC.create(e)}var rH="0.0.0";function be(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var aH=Ts.whereImpl,YC=class extends xl{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new fh(this,ys())}nextDataId(){return YC.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,X().get("IS_NODE")&&I.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return I.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>w.decodeString(s));return _e(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,t)}makeOutput(e,t,n){return ys().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){be([e],"where");let t=this.readSync(e.dataId);return aH(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},ZC=YC;ZC.nextDataId=0;var Pv={};Ee(Pv,{addImpl:()=>JC,bincountImpl:()=>zv,bincountReduceImpl:()=>e1,ceilImpl:()=>t1,concatImpl:()=>Mv,equalImpl:()=>n1,expImpl:()=>r1,expm1Impl:()=>i1,floorImpl:()=>o1,gatherNdImpl:()=>u1,gatherV2Impl:()=>l1,greaterEqualImpl:()=>d1,greaterImpl:()=>c1,lessEqualImpl:()=>p1,lessImpl:()=>h1,linSpaceImpl:()=>f1,logImpl:()=>m1,maxImpl:()=>g1,maximumImpl:()=>b1,minimumImpl:()=>y1,multiplyImpl:()=>Bv,negImpl:()=>v1,notEqualImpl:()=>x1,prodImpl:()=>w1,rangeImpl:()=>Wv,rsqrtImpl:()=>k1,scatterImpl:()=>no,sigmoidImpl:()=>jH,simpleAbsImpl:()=>QC,sliceImpl:()=>nh,sparseFillEmptyRowsImpl:()=>I1,sparseReshapeImpl:()=>C1,sparseSegmentReductionImpl:()=>Uv,sqrtImpl:()=>YH,squaredDifferenceImpl:()=>N1,stridedSliceImpl:()=>T1,stringNGramsImpl:()=>Gv,stringSplitImpl:()=>Hv,stringToHashBucketFastImpl:()=>qv,subImpl:()=>$1,tileImpl:()=>_1,topKImpl:()=>E1,transposeImpl:()=>Vv,uniqueImpl:()=>R1});function QC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var iH=e=>{let{x:t}=e.inputs,n=e.backend;be(t,"abs");let s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=QC(r),n.makeOutput(s,t.shape,t.dtype)},oH={kernelName:yo,backendName:"cpu",kernelFunc:iH};function Dt(e){return(t,n,s,r,a)=>{let i=I.assertAndGetBroadcastShape(t,n),o=i.length,u=w.computeStrides(i),l=w.sizeFromShape(i),c=w.getTypedArrayFromDType(a,l),h=t.length,d=n.length,p=w.computeStrides(t),f=w.computeStrides(n),m=I.getBroadcastDims(t,i),g=I.getBroadcastDims(n,i);if(m.length+g.length===0)for(let b=0;b<c.length;++b)c[b]=e(s[b%s.length],r[b%r.length]);else for(let b=0;b<c.length;++b){let y=w.indexToLoc(b,o,u),v=y.slice(-h);m.forEach($=>v[$]=0);let x=w.locToIndex(v,h,p),k=y.slice(-d);g.forEach($=>k[$]=0);let C=w.locToIndex(k,d,f);c[b]=e(s[x],r[C])}return[c,i]}}function Vn(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64"),u=n.data.get(o.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}var uH={kernelName:vh,backendName:"cpu",kernelFunc:Vn};function th(e,t,n="float32"){if(n==="complex64"){let r=th(e,t,"float32"),a=th(e,t,"float32");return Vn({inputs:{real:r,imag:a},backend:e})}let s=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Ws(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var lH={kernelName:Xa,backendName:"cpu",kernelFunc:Ws};function Sa(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var cH={kernelName:Th,backendName:"cpu",kernelFunc:Sa};function Tr(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Ws({inputs:{x:r},backend:n});let i=th(n,r.shape,r.dtype),o=Tr({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Vn({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}if(r.dtype==="complex64"){let i=Sa({inputs:{input:r},backend:n}),o=Tr({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=Ws({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32"){let i=n.data.get(r.dataId).values,o=Int32Array.from(i);return n.makeTensorInfo(r.shape,"int32",o)}if(a==="bool"){let i=n.data.get(r.dataId).values,o=w.toTypedArray([0],r.dtype),[u,l]=Dt((c,h)=>c!==h?1:0)(r.shape,[],i,o,"bool");return n.makeTensorInfo(l,"bool",u)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var dH={kernelName:Fa,backendName:"cpu",kernelFunc:Tr};function jt(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;be([i,o],e);let l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,h=i.dtype==="string"?I.fromUint8ToStringArray(l):l,d=i.dtype==="string"?I.fromUint8ToStringArray(c):c,p=s||i.dtype,[f,m]=t(i.shape,o.shape,h,d,p);return u.makeTensorInfo(m,p,f)}:({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;if(i.dtype==="complex64"||o.dtype==="complex64"){let l=Tr({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),c=u.data.get(l.dataId),h=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,p=u.data.get(h.dataId).values,f=u.data.get(d.dataId).values,m=Tr({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),b=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,v=u.data.get(b.dataId).values,x=u.data.get(y.dataId).values,[k,C,$]=n(i.shape,o.shape,p,f,v,x),A=u.makeTensorInfo($,"float32",k),E=u.makeTensorInfo($,"float32",C),O=Vn({inputs:{real:A,imag:E},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(A),u.disposeIntermediateTensorInfo(E),O}else{let l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,h=s||i.dtype,[d,p]=t(i.shape,o.shape,l,c,h);return u.makeTensorInfo(p,h,d)}}}function Lv(e){return(t,n,s,r,a,i)=>{let o=I.assertAndGetBroadcastShape(t,n),u=w.sizeFromShape(o),l=o.length,c=w.computeStrides(o),h=w.getTypedArrayFromDType("float32",u),d=w.getTypedArrayFromDType("float32",u),p=I.getBroadcastDims(t,o),f=I.getBroadcastDims(n,o),m=I.mergeRealAndImagArrays(s,r),g=I.mergeRealAndImagArrays(a,i),b=t.length,y=w.computeStrides(t),v=n.length,x=w.computeStrides(n);if(p.length+f.length===0)for(let k=0;k<h.length;k++){let C=k%m.length,$=k%g.length,A=e(m[C*2],m[C*2+1],g[$*2],g[$*2+1]);h[k]=A.real,d[k]=A.imag}else for(let k=0;k<h.length;k++){let C=w.indexToLoc(k,l,c),$=C.slice(-b);p.forEach(D=>$[D]=0);let A=w.locToIndex($,b,y),E=C.slice(-v);f.forEach(D=>E[D]=0);let O=w.locToIndex(E,v,x),R=e(m[A*2],m[A*2+1],g[O*2],g[O*2+1]);h[k]=R.real,d[k]=R.imag}return[h,d,o]}}var JC=Dt((e,t)=>e+t),hH=Lv((e,t,n,s)=>({real:e+n,imag:t+s})),po=jt(Ar,JC,hH),pH={kernelName:Ar,backendName:"cpu",kernelFunc:po};function zv(e,t,n,s,r){let a=w.sizeFromShape(s),i=w.makeZerosTypedArray(r,n);for(let o=0;o<e.length;o++){let u=e[o];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(a>0?i[u]+=t[o]:i[u]+=1)}return i}function e1(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],i=_e([r,n],t.dtype);for(let o=0;o<r;o++)for(let u=0;u<a;u++){let l=e.get(o,u);if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s?i.set(1,o,l):t.size>0?i.set(i.get(o,l)+t.get(o,u),o,l):i.set(i.get(o,l)+1,o,l))}return i}function Mr(e){return(t,n,s)=>{let r=w.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function rt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:i}=s;if(be(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=a,u=o.data.get(i.dataId).values,l=w.sizeFromShape(i.shape),c=n||i.dtype,h=w.getArrayFromDType(c,l);for(let d=0;d<l;++d)h[d]=t(u[d],r);return o.makeTensorInfo(i.shape,c,h)}}function pu(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:i}=s;if(be(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,r);return o.makeTensorInfo(i.shape,l,c)}}var t1=Mr(e=>Math.ceil(e)),fH=pu(Oa,t1),mH={kernelName:Oa,backendName:"cpu",kernelFunc:fH};function Mv(e,t,n,s){let r=w.getArrayFromDType(n,w.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);r.set(i.vals,a),a+=o})}else{let a=0;e.forEach(i=>{let o=n==="string"?I.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let l=0;l<i.shape[0];++l){let c=l*t[1]+a;for(let h=0;h<i.shape[1];++h)r[c+h]=o[u++]}a+=i.shape[1]})}return r}var n1=Dt((e,t)=>e===t?1:0),s1=jt(Io,n1,null,"bool"),gH={kernelName:Io,backendName:"cpu",kernelFunc:s1},r1=Mr(e=>Math.exp(e)),a1=pu(Ga,r1,"float32"),bH={kernelName:Ga,backendName:"cpu",kernelFunc:a1},i1=Mr(e=>Math.expm1(e)),yH=pu(No,i1),vH={kernelName:No,backendName:"cpu",kernelFunc:yH},o1=Mr(e=>Math.floor(e)),xH=pu(Ha,o1),wH={kernelName:Ha,backendName:"cpu",kernelFunc:xH};function u1(e,t,n,s,r,a,i,o,u){let l=_e([s,a],n);for(let c=0;c<s;c++){let h=[],d=0;for(let p=0;p<r;p++){let f=e[c*r+p];d+=f*i[p],h.push(f)}if(d<0||d>=u/a)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let p=0;p<a;p++)l.values[c*a+p]=t.get(...t.indexToLoc(d*a+p))}return l}function l1(e,t,n){let s=_e(n,e.dtype);for(let r=0;r<s.size;++r){let i=s.indexToLoc(r).slice(),o=i[0],u=i[2],l=t.locToIndex([o,u]);i[2]=t.values[l];let c=e.locToIndex(i);0<=c&&c<e.values.length&&(s.values[r]=e.values[c])}return s}var c1=Dt((e,t)=>e>t?1:0),kH=jt(Ao,c1,null,"bool"),SH={kernelName:Ao,backendName:"cpu",kernelFunc:kH},d1=Dt((e,t)=>e>=t?1:0),IH=jt(Ka,d1,null,"bool"),CH={kernelName:Ka,backendName:"cpu",kernelFunc:IH},h1=Dt((e,t)=>e<t?1:0),NH=jt(Eo,h1,null,"bool"),TH={kernelName:Eo,backendName:"cpu",kernelFunc:NH},p1=Dt((e,t)=>e<=t?1:0),$H=jt(Ro,p1,null,"bool"),_H={kernelName:Ro,backendName:"cpu",kernelFunc:$H};function f1(e,t,n){let s=(t-e)/(n-1),r=w.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var m1=Mr(e=>Math.log(e)),AH=pu(Za,m1),EH={kernelName:Za,backendName:"cpu",kernelFunc:AH};function g1(e,t,n,s){let r=w.getTypedArrayFromDType(s,w.sizeFromShape(n));for(let a=0;a<r.length;++a){let i=a*t,o=e[i];for(let u=0;u<t;++u){let l=e[i+u];(Number.isNaN(l)||l>o)&&(o=l)}r[a]=o}return r}var b1=Dt((e,t)=>Math.max(e,t)),RH=jt(Ja,b1),DH={kernelName:Ja,backendName:"cpu",kernelFunc:RH},y1=Dt((e,t)=>Math.min(e,t)),FH=jt(si,y1),OH={kernelName:si,backendName:"cpu",kernelFunc:FH},Bv=Dt((e,t)=>e*t),PH=Lv((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Sp=jt(ai,Bv,PH),LH={kernelName:ai,backendName:"cpu",kernelFunc:Sp};function v1(e,t,n){let s=w.createScalarValue(-1,n);return Bv([],t,s,e,n)}function zH(e){let{inputs:t,backend:n}=e,{x:s}=t;be(s,"neg");let r=n.data.get(s.dataId).values,[a,i]=v1(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}var MH={kernelName:Oo,backendName:"cpu",kernelFunc:zH},x1=Dt((e,t)=>e!==t?1:0),BH=jt(Po,x1,null,"bool"),VH={kernelName:Po,backendName:"cpu",kernelFunc:BH};function Vv(e,t,n,s,r){let a=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),u=w.computeStrides(r),l=w.getTypedArrayFromDType(n,w.sizeFromShape(r));for(let c=0;c<i;++c){let h=w.indexToLoc(c,a,o),d=new Array(h.length);for(let f=0;f<d.length;f++)d[f]=h[s[f]];let p=w.locToIndex(d,a,u);l[p]=e[c]}return l}function Dn(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;be(r,"transpose");let i=r.shape.length,o=new Array(i);for(let h=0;h<o.length;h++)o[h]=r.shape[a[h]];let u=s.data.get(r.dataId).values,l=Vv(u,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}var WH={kernelName:Qs,backendName:"cpu",kernelFunc:Dn};function w1(e,t,n,s){let[r,a]=I.computeOutAndReduceShapes(e,s),i=bn(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(r),i),u=w.sizeFromShape(a);for(let l=0;l<o.length;++l){let c=l*u,h=1;for(let d=0;d<u;++d)h*=n[c+d];o[l]=h}return{outVals:o,outShape:r,outDtype:i}}function UH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"prod");let o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=I.getAxesPermutation(u,o),c=u,h=r,d=[];l!=null&&(h=Dn({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(h),c=I.getInnerMostAxes(c.length,o));let p=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=w1(h.shape,h.dtype,p,c),b=m;return i&&(b=I.expandShapeToKeepDim(m,u)),d.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(b,g,f)}var GH={kernelName:li,backendName:"cpu",kernelFunc:UH};function Wv(e,t,n,s){let r=e===t,a=e<t&&n<0,i=t<e&&n>1;if(r||a||i)return w.makeZerosTypedArray(0,s);let o=Math.abs(Math.ceil((t-e)/n)),u=w.makeZerosTypedArray(o,s);t<e&&n===1&&(n=-1),u[0]=e;for(let l=1;l<u.length;l++)u[l]=u[l-1]+n;return u}var k1=Mr(e=>1/Math.sqrt(e)),HH=pu(fi,k1),qH={kernelName:fi,backendName:"cpu",kernelFunc:HH};function no(e,t,n,s,r,a,i,o,u,l){let c=[s/r,r],h=e.values,d=t.values;if(s===0)return _e(n,t.dtype);let p=_e(c,t.dtype);typeof u=="string"||typeof u=="number"?p.values.fill(u):typeof u=="boolean"&&p.values.fill(+u);for(let f=0;f<a;f++){let m=[],g=0;for(let b=0;b<i;b++){let y=h[f*i+b];m.push(y),g+=y*o[b]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let b=0;b<r;b++)l?p.values[g*r+b]+=d[f*r+b]:p.values[g*r+b]=t.rank===0?d[0]:d[f*r+b]}return p}var jH=Mr(e=>1/(1+Math.exp(-e))),S1=rt(gi,e=>1/(1+Math.exp(-e))),KH={kernelName:gi,backendName:"cpu",kernelFunc:S1};function nh(e,t,n,s,r){let a=It.isSliceContinous(s,t,n),i=w.sizeFromShape(n),o=w.computeStrides(s);if(a){let h=It.computeFlatOffset(t,o);return r==="string"?e.slice(h,h+i):e.subarray(h,h+i)}let u=r==="string"?I.fromUint8ToStringArray(e):e,l=_e(s,r,u),c=_e(n,r);for(let h=0;h<c.size;++h){let d=c.indexToLoc(h),p=d.map((f,m)=>f+t[m]);c.set(l.get(...p),...d)}return r==="string"?I.fromStringArrayToUint8(c.values):c.values}function Ia(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;be(r,"slice");let[o,u]=It.parseSliceParams(r,a,i);It.assertParamsValid(r,o,u);let l=n.data.get(r.dataId).values,c=nh(l,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,c)}var XH={kernelName:jo,backendName:"cpu",kernelFunc:Ia};function I1(e,t,n,s,r,a,i){let o=t[0],u=a[0],l=new Array(u),c=new Array(o),h=t[1];if(u===0){if(o!==0)throw new Error(I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=w.getArrayFromDType(n,0),b=w.getArrayFromDType(r,0);return[g,[0,h],b,l,c]}let d=!0,p=0,f=new Array(u).fill(0);for(let g=0;g<o;++g){let b=e[g*h];if(b<0)throw new Error(I.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=u)throw new Error(I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,u));++f[b],d=d&&b>=p,p=b}let m=!0;for(let g=0;g<u;++g){let b=f[g]===0;l[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let g=e,b=s;for(let y=0;y<o;++y)c[y]=y;return[g,[o,h],b,l,c]}else{let g=f[u-1],b=w.getArrayFromDType(n,g*h),y=w.getArrayFromDType(r,g),v=new Array(u).fill(0);for(let x=0;x<o;++x){let k=e[x*h],C=v[k],$=(k===0?0:f[k-1])+C;v[k]++;for(let A=0;A<h;++A)b[$*h+A]=e[x*h+A];y[$]=s[x],c[x]=$}for(let x=0;x<u;++x)if(v[x]===0){let C=x===0?0:f[x-1];b[C*h+0]=x;for(let $=1;$<h;++$)b[C*h+$]=0;y[C]=i}return[b,[g,h],y,l,c]}}function C1(e,t,n,s,r){let a=w.sizeFromShape(s),i=t[0],o=r.length,u=[],l=1,c=-1;for(let g=0;g<o;++g){let b=r[g];if(b===-1){if(c!==-1)throw new Error(I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,g));c=g,u.push(1)}else{if(b<0)throw new Error(I.getSparseReshapeNegativeOutputDimErrorMessage(g,b));l*=b,u.push(b)}}if(c!==-1){if(l<=0)throw new Error(I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/l);if(l*g!==a)throw new Error(I.getSparseReshapeInputOutputMultipleErrorMessage(s,u));u[c]=g}if(w.sizeFromShape(u)!==a)throw new Error(I.getSparseReshapeInputOutputMismatchErrorMessage(s,u));let d=s.length,p=[];if(d>0){p[d-1]=1;for(let g=d-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}let f=[];if(o>0){f[o-1]=1;for(let g=o-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let m=w.getArrayFromDType(n,i*o);for(let g=0;g<i;++g){let b=0;for(let y=0;y<d;++y)b+=e[g*d+y]*p[y];for(let y=0;y<o;++y)m[g*o+y]=Math.trunc(b/f[y]),b%=f[y]}return[m,[i,o],u]}function Uv(e,t,n,s,r,a=!1,i=0){let o=s.length,u=[t[0],e.length/t[0]],l=u[1],h=o>0?r[o-1]+1:0;if(h<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=h;let p=d.reduce((v,x)=>v*x,1),f=w.getArrayFromDType(n,p);if(o===0)return h>0&&f.fill(i),[f,d];if(h<=0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,b=0,y=r[m];for(;;){let v=0;if(g<o){if(v=r[g],y===v){++g;continue}if(y>=v)throw new Error(I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=h)throw new Error(I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,h));y>b&&f.fill(i,b*l,y*l);for(let x=m;x<g;++x){let k=s[x];if(k<0||k>=u[0])throw new Error(I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,s[x],u[0]));for(let C=0;C<l;C++)f[y*l+C]+=e[k*l+C]}if(a)for(let x=0;x<l;x++)f[y*l+x]/=g-m;if(m=g,++g,b=y+1,y=v,g>o)break}return b<h&&f.fill(i,b*l,h*l),[f,d]}var YH=Mr(e=>Math.sqrt(e)),ZH=rt(bi,e=>Math.sqrt(e)),QH={kernelName:bi,backendName:"cpu",kernelFunc:ZH},N1=Dt((e,t)=>{let n=e-t;return n*n}),JH=jt(xi,N1),eq={kernelName:xi,backendName:"cpu",kernelFunc:JH};function T1(e,t,n,s){let r=_e(e,t.dtype);for(let a=0;a<r.size;a++){let i=r.indexToLoc(a),o=new Array(i.length);for(let u=0;u<o.length;u++)o[u]=i[u]*n[u]+s[u];r.set(t.get(...o),...i)}return r}var tq=class{constructor(e,t,n,s,r,a){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){let o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(r-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o),d=0;d+=u*this.leftPad.length;for(let b=0;b<c;++b)d+=e[h+b].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[s+i]=new Uint8Array(d);let f=n[s+i],m=0,g=b=>b.forEach(y=>f[m++]=y);for(let b=0;b<u;++b)g(this.leftPad),g(this.separator);for(let b=0;b<c-1;++b)g(e[h+b]),g(this.separator);if(c>0){g(e[h+c-1]);for(let b=0;b<l;++b)g(this.separator),g(this.rightPad)}else{for(let b=0;b<l-1;++b)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let u=1;u<s;++u){let l=t[u]>=o;if(l=l&&t[u]<=n,!l)throw new Error(`Invalid split value ${t[u]}, must be in [${o}, ${n}]`);o=t[u]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let r=s-1,a=w.getArrayFromDType("int32",s);if(n===0||s===0){let o=new Array(n);for(let u=0;u<=r;++u)a[u]=0;return[o,a]}a[0]=0;for(let o=1;o<=r;++o){let u=t[o]-t[o-1],l=0;this.nGramWidths.forEach(c=>{l+=this.getNumNGrams(u,c)}),this.preserveShort&&u>0&&l===0&&(l=1),a[o]=a[o-1]+l}let i=new Array(a[r]);for(let o=0;o<r;++o){let u=t[o],l=a[o];if(this.nGramWidths.forEach(c=>{let h=t[o+1]-t[o],d=this.getNumNGrams(h,c);this.createNGrams(e,u,i,l,d,c),l+=d}),this.preserveShort&&l===a[o]){let c=t[o+1]-t[o];if(c===0)continue;let h=c+2*this.padWidth,d=1;this.createNGrams(e,u,i,l,d,h)}}return[i,a]}};function Gv(e,t,n,s,r,a,i,o){return new tq(n,s,r,a,i,o).compute(e,t)}function nq(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],i=e.indexOf(a);for(;i!==-1;){let o=e.subarray(0,i);(!n||o.length!==0)&&s.push(o),e=e.subarray(i+1),i=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let i=e.subarray(r,a);(!n||i.length!==0)&&s.push(i),r=a+1}}function Hv(e,t,n){let s=e.length,r=[],a=0,i=0,o=new Array(s);for(let d=0;d<s;++d){let p=r.length;nq(e[d],t,n,r);let f=r.length-p;o[d]=f,a+=f,i=Math.max(i,f)}let u=w.getArrayFromDType("int32",a*2),l=new Array(a),c=[s,i],h=0;for(let d=0;d<s;++d)for(let p=0;p<o[d];++p)u[h*2]=d,u[h*2+1]=p,l[h]=r[h],++h;return[u,l,c]}function qv(e,t){let n=w.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=w.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var $1=Dt((e,t)=>e-t),sq=Lv((e,t,n,s)=>({real:e-n,imag:t-s})),jv=jt(wi,$1,sq),rq={kernelName:wi,backendName:"cpu",kernelFunc:jv};function _1(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=_e(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),i=new Array(e.rank);for(let u=0;u<i.length;u++)i[u]=a[u]%e.shape[u];let o=e.locToIndex(i);s.values[r]=e.values[o]}return s}var Ku=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function A1(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let o=s-n+1,u=t-n+1,l=Math.log(o),c=.5*Math.exp(2*l/3),h=.5*Math.sqrt(l*c*(o-c)/o)*Math.sign(u-o/2),d=Math.max(n,Math.floor(t-u*c/o+h)),p=Math.min(s,Math.floor(t+(o-u)*c/o+h));A1(e,t,d,p)}let r=e[t],a=n,i=s;for(w.swap(e,n,t),Ku(e[s],r)>0&&w.swap(e,n,s);a<i;){for(w.swap(e,a,i),a++,i--;Ku(e[a],r)<0;)a=a+1;for(;Ku(e[i],r)>0;)i=i-1}Ku(e[n],r)===0?w.swap(e,n,i):(i=i+1,w.swap(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function E1(e,t,n,s,r){let a=t[t.length-1],[i,o]=[e.length/a,a],u=w.getTypedArrayFromDType(n,i*s),l=w.getTypedArrayFromDType("int32",i*s);for(let h=0;h<i;h++){let d=h*o,p=e.subarray(d,d+o),f=new Array(p.length);p.forEach((y,v)=>f[v]={value:y,index:v}),s<f.length&&(A1(f,s),f=f.slice(0,s)),r&&f.sort(Ku);let m=h*s,g=u.subarray(m,m+s),b=l.subarray(m,m+s);for(let y=0;y<s;y++)g[y]=f[y].value,b[y]=f[y].index}let c=t.slice();return c[c.length-1]=s,[_e(c,n,u),_e(c,"int32",l)]}function R1(e,t,n,s){let r=w.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let i={},o=new Int32Array(n[r]),u=new Ht(a,s,e),l=[],c=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=e[f].toString();else{let g=[];for(let b=0;b<a[0];b++)for(let y=0;y<a[2];y++)g.push(u.get(b,f,y));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,l.push(f)}}let h=a.slice();h[1]=Object.keys(i).length;let d=new Ht(h,s);l.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let b=0;b<a[2];b++)d.set(u.get(g,f,b),g,m,b)});let p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}au("cpu",()=>new ZC,1);var D1=rt(Ua,e=>e>=0?e:Math.exp(e)-1),aq={kernelName:Ua,backendName:"cpu",kernelFunc:D1};function F1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;be([r],"leakyRelu");let i=w.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,u=w.getTypedArrayFromDType("float32",i);for(let l=0;l<o.length;l++)u[l]=o[l]<0?a*o[l]:o[l];return n.makeTensorInfo(r.shape,"float32",u)}var iq={kernelName:Ya,backendName:"cpu",kernelFunc:F1},oq=Dt((e,t)=>e<0?t*e:e);function O1(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;be([s,r],"prelu");let a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,u]=oq(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}var uq={kernelName:ui,backendName:"cpu",kernelFunc:O1},P1=rt(ci,e=>Math.max(0,e)),lq={kernelName:ci,backendName:"cpu",kernelFunc:P1},L1=rt(pi,e=>Math.min(Math.max(0,e),6)),cq={kernelName:pi,backendName:"cpu",kernelFunc:L1};function sh(e,t,n,s,r){if(n==="linear")return Ws({inputs:{x:t},backend:e});if(n==="relu")return P1({inputs:{x:t},backend:e});if(n==="elu")return D1({inputs:{x:t},backend:e});if(n==="relu6")return L1({inputs:{x:t},backend:e});if(n==="prelu")return O1({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return F1({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return S1({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ft(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=w.sizeFromShape(r.shape),o=w.inferFromImplicitShape(a,i),u=w.sizeFromShape(o);w.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let l=n.data.get(r.dataId);if(l.complexTensorInfos!=null){let c=l.complexTensorInfos.real,h=l.complexTensorInfos.imag;c.shape=o,h.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var dq={kernelName:Wo,backendName:"cpu",kernelFunc:ft};function z1(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;be([r,a],"matMul");let u=r.shape.length,l=a.shape.length,c=i?r.shape[u-2]:r.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],p=o?a.shape[l-2]:a.shape[l-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),v=iu.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);w.assert(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,c,d]:[g,d,c],k=o?[b,p,h]:[b,h,p],C=ft({inputs:{x:r},backend:n,attrs:{shape:x}}),$=ft({inputs:{x:a},backend:n,attrs:{shape:k}}),A=i?C.shape[1]:C.shape[2],E=i?C.shape[2]:C.shape[1],O=o?$.shape[1]:$.shape[2],R=Math.max(g,b),D=n.data.get(C.dataId).values,T=n.data.get($.dataId).values,L=w.computeStrides(C.shape),W=w.computeStrides($.shape),[q,j,K]=i?[L[0],1,L[1]]:[L[0],L[1],1],[Q,ne,J]=o?[1,W[1],W[0]]:[W[1],1,W[0]],se=E*O,te=_e([R,E,O],C.dtype),oe=te.values,re=n.blockSize;for(let le=0;le<R;le++)for(let ge=0;ge<E;ge+=re)for(let we=0;we<O;we+=re)for(let Ie=0;Ie<A;Ie+=re){let De=Math.min(ge+re,E),Le=Math.min(we+re,O),Xe=Math.min(Ie+re,A);for(let et=ge;et<De;et++)for(let Ye=we;Ye<Le;Ye++){let nt=0;for(let Ce=Ie;Ce<Xe;Ce++){let ct=Math.min(le,g-1)*q,ot=Math.min(le,b-1)*J,rn=D[ct+et*j+Ce*K],$t=T[Ce*Q+Ye*ne+ot];nt+=rn*$t}oe[le*se+(et*O+Ye)]+=nt}}return n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo($),n.makeTensorInfo(v,te.dtype,te.values)}var hq={kernelName:Da,backendName:"cpu",kernelFunc:z1};function pq(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s,d,p,f,m=[];d=z1({inputs:{a:r,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=po({inputs:{a:d,b:i},backend:n}),m.push(d),d=p),c&&(f=sh(n,d,c,o,h),m.push(d),d=f);for(let b of m)n.disposeIntermediateTensorInfo(b);return d}var fq={kernelName:fa,backendName:"cpu",kernelFunc:pq},mq=rt(wl,e=>Math.acos(e)),gq={kernelName:wl,backendName:"cpu",kernelFunc:mq},bq=rt(kl,e=>Math.acosh(e)),yq={kernelName:kl,backendName:"cpu",kernelFunc:bq};function vq(e){let{inputs:t,backend:n}=e,s=t;be(t,"addN");let r=s.map(o=>n.data.get(o.dataId).values),a=_e(s[0].shape,s[0].dtype),i=a.values;for(let o=0;o<s.length;o++){let u=r[o];for(let l=0;l<i.length;l++)i[l]+=u[l]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var xq={kernelName:Aa,backendName:"cpu",kernelFunc:vq};function wq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"all");let o=w.parseAxisParam(a,r.shape),u=o,l=I.getAxesPermutation(u,r.shape.length),c=r;l!=null&&(c=Dn({inputs:{x:r},backend:n,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,r.shape.length)),I.assertAxesAreInnerMostDims("all",u,c.shape.length);let[h,d]=I.computeOutAndReduceShapes(c.shape,u),p=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){let y=b*p,v=m[y];for(let x=0;x<p;++x){let k=m[y+x];v=v&&k}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(h,c.dtype,f);if(i){let b=I.expandShapeToKeepDim(h,o),y=ft({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var kq={kernelName:Sl,backendName:"cpu",kernelFunc:wq};function Sq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"any");let o=w.parseAxisParam(a,r.shape),u=o,l=I.getAxesPermutation(u,r.shape.length),c=r;l!=null&&(c=Dn({inputs:{x:r},backend:n,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,r.shape.length)),I.assertAxesAreInnerMostDims("any",u,c.shape.length);let[h,d]=I.computeOutAndReduceShapes(c.shape,u),p=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){let y=b*p,v=m[y];for(let x=0;x<p;++x){let k=m[y+x];v=v||k}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(h,c.dtype,f);if(i){let b=I.expandShapeToKeepDim(h,o),y=ft({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var Iq={kernelName:Il,backendName:"cpu",kernelFunc:Sq};function Cq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;be(r,"argMax");let i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=Dn({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[c,h]=I.computeOutAndReduceShapes(u.shape,i),d=w.sizeFromShape(c),p=w.makeZerosTypedArray(d,"int32"),f=w.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let g=0;g<p.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let k=m[b+x];k>y&&(y=k,v=x)}p[g]=v}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",p)}var Nq={kernelName:Ea,backendName:"cpu",kernelFunc:Cq};function Tq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;be(r,"argMin");let i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=Dn({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[c,h]=I.computeOutAndReduceShapes(u.shape,i),d=w.sizeFromShape(c),p=w.makeZerosTypedArray(d,"int32"),f=w.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let g=0;g<p.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let k=m[b+x];k<y&&(y=k,v=x)}p[g]=v}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",p)}var $q={kernelName:Cl,backendName:"cpu",kernelFunc:Tq},_q=rt(Nl,e=>Math.asin(e)),Aq={kernelName:Nl,backendName:"cpu",kernelFunc:_q},Eq=rt(Tl,e=>Math.asinh(e)),Rq={kernelName:Tl,backendName:"cpu",kernelFunc:Eq},Dq=rt($l,e=>Math.atan(e)),Fq={kernelName:$l,backendName:"cpu",kernelFunc:Dq},Oq=Dt((e,t)=>Math.atan2(e,t)),Pq=jt(Al,Oq),Lq={kernelName:Al,backendName:"cpu",kernelFunc:Pq},zq=rt(_l,e=>Math.atanh(e)),Mq={kernelName:_l,backendName:"cpu",kernelFunc:zq};function Kv(e,t,n,s,r,a){let i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=_e(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let x=0;x<r.batchSize;++x){let k=x*b,C=x*s[0];for(let $=0;$<r.inChannels;++$)for(let A=0;A<r.outHeight;++A){let E=A*i-d,O=Math.max(0,E),R=Math.min(r.inHeight,c+E),D=k+A*y;for(let T=0;T<r.outWidth;++T){let L=T*o-p,W=Math.max(0,L),q=Math.min(r.inWidth,h+L),j=f,K=0,Q=0;for(let J=O;J<R;J+=u){let se=C+J*s[1];for(let te=W;te<q;te+=l){let oe=se+te*s[2],re=e[oe+$];a==="max"&&re>j?j=re:a==="avg"&&(K+=re,Q++)}if(isNaN(j))break}let ne=D+T*v+$;g[ne]=a==="avg"?K/Q:j}}}return m}function M1(e,t,n,s,r=!1,a=!1){let i=_e(s.outShape,"int32"),o=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=_e(t,n,e);for(let g=0;g<s.batchSize;++g)for(let b=0;b<s.inChannels;++b)for(let y=0;y<s.outHeight;++y){let v=y*o-p,x=v;for(;x<0;)x+=l;let k=Math.min(s.inHeight,h+v);for(let C=0;C<s.outWidth;++C){let $=C*u-f,A=$;for(;A<0;)A+=c;let E=Math.min(s.inWidth,d+$),O=Number.NEGATIVE_INFINITY,R=-1;for(let D=x;D<k;D+=l){let T=D-v;for(let L=A;L<E;L+=c){let W=L-$,q=m.get(g,D,L,b);q>O&&(O=q,r?R=a?((g*s.inHeight+D)*s.inWidth+L)*s.inChannels+b:(D*s.inWidth+L)*s.inChannels+b:R=T*d+W)}}i.set(R,g,y,C,b)}}return i}function B1(e,t,n,s,r,a){let i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,y=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=_e(r.outShape,n),x=v.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],$=r.outShape[3]*r.outShape[4],A=r.outShape[4];for(let E=0;E<r.batchSize;++E){let O=E*k,R=E*s[0];for(let D=0;D<r.inChannels;++D)for(let T=0;T<r.outDepth;++T){let L=T*i-m,W=L;for(;W<0;)W+=l;let q=Math.min(r.inDepth,d+L),j=O+T*C;for(let K=0;K<r.outHeight;++K){let Q=K*o-g,ne=Q;for(;ne<0;)ne+=c;let J=Math.min(r.inHeight,p+Q),se=j+K*$;for(let te=0;te<r.outWidth;++te){let oe=te*u-b,re=oe;for(;re<0;)re+=h;let le=Math.min(r.inWidth,f+oe),ge=se+te*A,we=y,Ie=0,De=0;for(let Xe=W;Xe<q;Xe+=l){let et=R+Xe*s[1];for(let Ye=ne;Ye<J;Ye+=c){let nt=et+Ye*s[2];for(let Ce=re;Ce<le;Ce+=h){let ct=nt+Ce*s[3],ot=e[ct+D];if(a==="max"&&ot>we?we=ot:a==="avg"&&(Ie+=ot,De++),isNaN(we))break}if(isNaN(we))break}if(isNaN(we))break}let Le=ge+D;x[Le]=a==="avg"?Ie/De:we}}}}return v}function Bq(e,t){let n=_e(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let y=b*s-d,v=y;for(;v<0;)v+=i;let x=Math.min(t.inDepth,l+y);for(let k=0;k<t.outHeight;++k){let C=k*r-p,$=C;for(;$<0;)$+=o;let A=Math.min(t.inHeight,c+C);for(let E=0;E<t.outWidth;++E){let O=E*a-f,R=O;for(;R<0;)R+=u;let D=Math.min(t.inWidth,h+O),T=Number.NEGATIVE_INFINITY,L=-1;for(let W=v;W<x;W+=i){let q=W-y;for(let j=$;j<A;j+=o){let K=j-C;for(let Q=R;Q<D;Q+=u){let ne=Q-O,J=e.get(m,W,j,Q,g);J>=T&&(T=J,L=q*c*h+K*c+ne)}}}n.set(L,m,b,k,E,g)}}}return n}function Vq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;be(r,"avgPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(r.shape,a,i,l,o,u),h;if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))h=Ws({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,p=w.computeStrides(r.shape),f=Kv(d,r.shape,r.dtype,p,c,"avg");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}var Wq={kernelName:Ra,backendName:"cpu",kernelFunc:Vq};function Uq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s;be(r,"avgPool3d");let c=I.computePool3DInfo(r.shape,a,i,1,o,u,l),h=n.data.get(r.dataId).values,d=B1(h,r.shape,r.dtype,w.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var Gq={kernelName:yh,backendName:"cpu",kernelFunc:Uq};function Hq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;be([r,a],"avgPool3DGrad");let c=I.computePool3DInfo(a.shape,i,o,1,u,l),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,v=c.dilationWidth,x=c.effectiveFilterDepth,k=c.effectiveFilterHeight,C=c.effectiveFilterWidth,$=x-1-c.padInfo.front,A=C-1-c.padInfo.left,E=k-1-c.padInfo.top,O=_e(a.shape,"float32"),R=1/(f*m*g),D=n.bufferSync(r);for(let T=0;T<c.batchSize;++T)for(let L=0;L<c.inChannels;++L)for(let W=0;W<c.inDepth;++W)for(let q=0;q<c.inHeight;++q)for(let j=0;j<c.inWidth;++j){let K=W-$,Q=q-E,ne=j-A,J=0;for(let se=0;se<x;se+=b){let te=(K+se)/h;if(!(te<0||te>=c.outDepth||Math.floor(te)!==te))for(let oe=0;oe<k;oe+=y){let re=(Q+oe)/d;if(!(re<0||re>=c.outHeight||Math.floor(re)!==re))for(let le=0;le<C;le+=v){let ge=(ne+le)/p;if(ge<0||ge>=c.outWidth||Math.floor(ge)!==ge)continue;J+=D.get(T,te,re,ge,L)}}}O.set(J*R,T,W,q,j,L)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}var qq={kernelName:Xg,backendName:"cpu",kernelFunc:Hq};function jq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;be([r,a],"avgPoolGrad");let{filterSize:o,strides:u,pad:l}=s,c=I.computePool2DInfo(i.shape,o,u,1,l),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,v=y-1-c.padInfo.left,x=b-1-c.padInfo.top,k=_e(i.shape,"float32"),C=1/(p*f),$=n.data.get(r.dataId).values,A=_e(r.shape,"float32",$);for(let E=0;E<c.batchSize;++E)for(let O=0;O<c.inChannels;++O)for(let R=0;R<c.inHeight;++R)for(let D=0;D<c.inWidth;++D){let T=R-x,L=D-v,W=0;for(let q=0;q<b;q+=m){let j=(T+q)/h;if(!(j<0||j>=c.outHeight||Math.floor(j)!==j))for(let K=0;K<y;K+=g){let Q=(L+K)/d;if(Q<0||Q>=c.outWidth||Math.floor(Q)!==Q)continue;W+=A.get(E,j,Q,O)}}k.set(W*C,E,R,D,O)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var Kq={kernelName:Kg,backendName:"cpu",kernelFunc:jq};function Xq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:u}=t;w.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),be([r,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);let c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,p=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,b=p.length,y=d.length,v=h.length,x=0,k=0,C=0,$=0;for(let A=0;A<c.length;++A)m[A]=f[x++]+(c[A]-h[k++])*p[C++]/Math.sqrt(d[$++]+l),x>=g&&(x=0),k>=v&&(k=0),C>=b&&(C=0),$>=y&&($=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var Yq={kernelName:ja,backendName:"cpu",kernelFunc:Xq};function Zq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;be([r],"batchToSpaceND");let o=a.reduce((b,y)=>b*y),u=I.getReshaped(r.shape,a,o),l=I.getPermuted(u.length,a.length),c=I.getReshapedPermuted(r.shape,a,o),h=I.getSliceBeginCoords(i,a.length),d=I.getSliceSize(c,i,a.length),p=ft({inputs:{x:r},backend:n,attrs:{shape:u}}),f=Dn({inputs:{x:p},backend:n,attrs:{perm:l}}),m=ft({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Ia({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var Qq={kernelName:vo,backendName:"cpu",kernelFunc:Zq};function Jq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=zv(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}var e6={kernelName:Yg,backendName:"cpu",kernelFunc:Jq};function t6(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=I.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var n6={kernelName:Zg,backendName:"cpu",kernelFunc:t6},s6=rt(Er,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),r6={kernelName:Er,backendName:"cpu",kernelFunc:s6},a6=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let l=0;l<o.length;l++){let c=o[l],h=u[l];s[l]=Math.hypot(c,h)}return n.makeOutput(s,t.shape,"float32")},i6={kernelName:xh,backendName:"cpu",kernelFunc:a6};function fo(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var o6={kernelName:Ih,backendName:"cpu",kernelFunc:fo};function mo(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=I.computeOutShape(t.map(m=>m.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(m=>w.sizeFromShape(m.shape)>0);if(o.length===1)return Ws({inputs:{x:o[0]},backend:n});let u=o.map(m=>m.shape);if(I.assertParamsConsistent(u,a),o[0].dtype==="complex64"){let m=o.map(x=>Sa({inputs:{input:x},backend:n})),g=o.map(x=>fo({inputs:{input:x},backend:n})),b=mo({inputs:m,backend:n,attrs:{axis:a}}),y=mo({inputs:g,backend:n,attrs:{axis:a}}),v=Vn({inputs:{real:b,imag:y},backend:n});return m.forEach(x=>n.disposeIntermediateTensorInfo(x)),g.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),v}let l=o.map(m=>{let g=w.sizeFromShape(m.shape.slice(a));return ft({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),c=l.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));i=I.computeOutShape(l.map(m=>m.shape),1);let h=l[0].shape[0]===1,d=Mv(c,i,t[0].dtype,h),p=I.computeOutShape(o.map(m=>m.shape),a),f=n.makeTensorInfo(p,t[0].dtype,d);return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var u6={kernelName:xo,backendName:"cpu",kernelFunc:mo};function V1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s;be([r,a],"conv2d");let h=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,v=d.dataFormat==="channelsLast",x=new Ht(d.outShape,r.dtype),k=w.computeStrides(r.shape),C=w.computeStrides(a.shape),$=k[0],A=v?k[1]:k[2],E=v?k[2]:1,O=v?1:k[1],R=x.strides[0],D=v?x.strides[1]:x.strides[2],T=v?x.strides[2]:1,L=v?1:x.strides[1],W=n.data.get(r.dataId).values,q=n.data.get(a.dataId).values,j=x.values;for(let K=0;K<d.batchSize;++K){let Q=K*$,ne=K*R;for(let J=0;J<d.outHeight;++J){let se=ne+J*D,te=J*d.strideHeight-y;for(let oe=0;oe<p;++oe){let re=te+oe*m;if(re<0||re>=d.inHeight)continue;let le=oe*C[0],ge=Q+re*A;for(let we=0;we<d.outWidth;++we){let Ie=se+we*T,De=we*d.strideWidth-b;for(let Le=0;Le<f;++Le){let Xe=De+Le*g;if(Xe<0||Xe>=d.inWidth)continue;let et=le+Le*C[1],Ye=ge+Xe*E,nt=et;for(let Ce=0;Ce<d.inChannels;++Ce){let ct=W[Ye+Ce*O];for(let ot=0;ot<d.outChannels;++ot)j[Ie+ot*L]+=ct*q[nt+ot];nt+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,j)}var l6={kernelName:Pa,backendName:"cpu",kernelFunc:V1};function c6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=s;be([r,a],"conv2dBackpropFilter");let h=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(r.shape,c,i,1,o,l,!1,h),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=d,b=d.dataFormat==="channelsLast",y=new Ht(d.filterShape,"float32"),v=d.padInfo.left,x=d.padInfo.top,k=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,$=new Ht(r.shape,r.dtype,k),A=new Ht(a.shape,a.dtype,C);for(let E=0;E<m;++E){let O=Math.max(0,Math.ceil((x-E)/p)),R=Math.min(d.outHeight,(d.inHeight+x-E)/p);for(let D=0;D<g;++D){let T=Math.max(0,Math.ceil((v-D)/f)),L=Math.min(d.outWidth,(d.inWidth+v-D)/f);for(let W=0;W<d.inChannels;++W)for(let q=0;q<d.outChannels;++q){let j=0;for(let K=0;K<d.batchSize;++K)for(let Q=O;Q<R;++Q){let ne=E+Q*p-x;for(let J=T;J<L;++J){let se=D+J*f-v;b?j+=$.get(K,ne,se,W)*A.get(K,Q,J,q):j+=$.get(K,W,ne,se)*A.get(K,q,Q,J)}}y.set(j,E,D,W,q)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var d6={kernelName:Qg,backendName:"cpu",kernelFunc:c6};function h6(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s;be([r,a],"conv2dBackpropInput");let h=w.computeStrides(a.shape),d=w.computeStrides(r.shape),p=I.convertConv2DDataFormat(l),f=I.computeConv2DInfo(i,a.shape,o,1,u,c,!1,p),m=new Ht(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,y=n.data.get(a.dataId).values,[v,x,k]=h,{batchSize:C,filterHeight:$,filterWidth:A,inChannels:E,inHeight:O,inWidth:R,outChannels:D,outHeight:T,outWidth:L,strideHeight:W,strideWidth:q}=f;p=f.dataFormat;let j=$-1-f.padInfo.top,K=A-1-f.padInfo.left,Q=p==="channelsLast",ne=m.strides[0],J=Q?m.strides[1]:m.strides[2],se=Q?m.strides[2]:1,te=Q?1:m.strides[1],oe=d[0],re=Q?d[1]:d[2],le=Q?d[2]:1,ge=Q?1:d[1];for(let we=0;we<C;++we)for(let Ie=0;Ie<E;++Ie)for(let De=0;De<O;++De){let Le=De-j,Xe=Math.max(0,Math.ceil(Le/W)),et=Math.min(T,($+Le)/W);for(let Ye=0;Ye<R;++Ye){let nt=Ye-K,Ce=Math.max(0,Math.ceil(nt/q)),ct=Math.min(L,(A+nt)/q),ot=0;for(let $t=Xe;$t<et;++$t){let On=$t*W-Le;for(let Ft=Ce;Ft<ct;++Ft){let an=Ft*q-nt,Pn=oe*we+re*$t+le*Ft,Ln=v*($-1-On)+x*(A-1-an)+k*Ie;for(let nn=0;nn<D;++nn){let Hn=b[Pn+ge*nn],on=y[Ln+nn];ot+=Hn*on}}}let rn=ne*we+J*De+se*Ye+te*Ie;g[rn]=ot}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var p6={kernelName:La,backendName:"cpu",kernelFunc:h6};function f6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s;be([r,a],"conv3d");let l=I.computeConv3DInfo(r.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,b=g.front,y=g.left,v=g.top,x=new Ht(l.outShape,r.dtype),k=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,$=x.values,A=w.computeStrides(r.shape),E=w.computeStrides(a.shape);for(let O=0;O<l.batchSize;++O){let R=O*A[0],D=O*x.strides[0];for(let T=0;T<l.outDepth;++T){let L=D+T*x.strides[1],W=T*l.strideDepth-b;for(let q=0;q<c;++q){let j=W+q*p;if(j<0||j>=l.inDepth)continue;let K=q*E[0],Q=R+j*A[1];for(let ne=0;ne<l.outHeight;++ne){let J=L+ne*x.strides[2],se=ne*l.strideHeight-v;for(let te=0;te<h;++te){let oe=se+te*f;if(oe<0||oe>=l.inHeight)continue;let re=K+te*E[1],le=Q+oe*A[2];for(let ge=0;ge<l.outWidth;++ge){let we=J+ge*l.outChannels,Ie=ge*l.strideWidth-y;for(let De=0;De<d;++De){let Le=Ie+De*m;if(Le<0||Le>=l.inWidth)continue;let Xe=re+De*E[2],et=le+Le*l.inChannels,Ye=Xe;for(let nt=0;nt<l.inChannels;++nt){let Ce=k[et+nt];for(let ct=0;ct<l.outChannels;++ct)$[we+ct]+=Ce*C[Ye+ct];Ye+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var m6={kernelName:wh,backendName:"cpu",kernelFunc:f6};function g6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s;be([r,a],"conv3dBackpropFilterV2");let l=w.computeStrides(r.shape),c=w.computeStrides(a.shape),h=I.computeConv3DInfo(r.shape,u,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,y=new Ht(h.filterShape,"float32"),v=y.values,[x,k,C,$]=y.strides,A=n.data.get(a.dataId).values,[E,O,R,D]=c,T=n.data.get(r.dataId).values,[L,W,q,j]=l,K=h.padInfo.front,Q=h.padInfo.left,ne=h.padInfo.top;for(let J=0;J<m;++J){let se=Math.max(0,Math.ceil((K-J)/d)),te=Math.min(h.outDepth,(h.inDepth+K-J)/d),oe=J*x;for(let re=0;re<g;++re){let le=Math.max(0,Math.ceil((ne-re)/p)),ge=Math.min(h.outHeight,(h.inHeight+ne-re)/p),we=re*k+oe;for(let Ie=0;Ie<b;++Ie){let De=Math.max(0,Math.ceil((Q-Ie)/f)),Le=Math.min(h.outWidth,(h.inWidth+Q-Ie)/f),Xe=Ie*C+we;for(let et=0;et<h.inChannels;++et){let Ye=et*$+Xe;for(let nt=0;nt<h.outChannels;++nt){let Ce=0;for(let ct=0;ct<h.batchSize;++ct){let ot=ct*L,rn=ct*E;for(let $t=se;$t<te;++$t){let Ft=(J+$t*d-K)*W+ot,an=$t*O+rn;for(let Pn=le;Pn<ge;++Pn){let nn=(re+Pn*p-ne)*q+Ft,Hn=Pn*R+an;for(let on=De;on<Le;++on){let Hs=(Ie+on*f-Q)*j+nn,Fi=on*D+Hn;Ce+=T[Hs+et]*A[Fi+nt]}}}}v[Ye+nt]=Ce}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var b6={kernelName:Jg,backendName:"cpu",kernelFunc:g6};function y6(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s;be([r],"conv3dBackpropInputV2");let l=w.computeStrides(r.shape),c=w.computeStrides(a.shape),h=I.computeConv3DInfo(u,a.shape,o,1,i),d=new Ht(h.inShape,"float32"),p=d.values,[f,m,g,b]=d.strides,y=n.data.get(r.dataId).values,[v,x,k,C]=l,$=n.data.get(a.dataId).values,[A,E,O,R]=c,{batchSize:D,filterDepth:T,filterHeight:L,filterWidth:W,inChannels:q,inDepth:j,inHeight:K,inWidth:Q,outChannels:ne,outDepth:J,outHeight:se,outWidth:te,strideDepth:oe,strideHeight:re,strideWidth:le}=h,ge=T-1-h.padInfo.front,we=L-1-h.padInfo.top,Ie=W-1-h.padInfo.left;for(let De=0;De<D;++De)for(let Le=0;Le<q;++Le)for(let Xe=0;Xe<j;++Xe){let et=Xe-ge,Ye=Math.max(0,Math.ceil(et/oe)),nt=Math.min(J,(T+et)/oe);for(let Ce=0;Ce<K;++Ce){let ct=Ce-we,ot=Math.max(0,Math.ceil(ct/re)),rn=Math.min(se,(L+ct)/re);for(let $t=0;$t<Q;++$t){let On=$t-Ie,Ft=Math.max(0,Math.ceil(On/le)),an=Math.min(te,(W+On)/le),Pn=0;for(let Ln=Ye;Ln<nt;++Ln){let nn=Ln*oe-et;for(let Hn=ot;Hn<rn;++Hn){let on=Hn*re-ct;for(let Gs=Ft;Gs<an;++Gs){let Hs=Gs*le-On,Fi=v*De+x*Ln+k*Hn+C*Gs,ur=A*(T-1-nn)+E*(L-1-on)+O*(W-1-Hs)+R*Le;for(let qs=0;qs<ne;++qs){let $u=y[Fi+qs],Oi=$[ur+qs];Pn+=$u*Oi}}}}p[f*De+m*Xe+g*Ce+b*$t+Le]=Pn}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var v6={kernelName:eb,backendName:"cpu",kernelFunc:y6},x6=rt(za,e=>Math.cos(e)),w6={kernelName:za,backendName:"cpu",kernelFunc:x6},k6=rt(Ma,e=>Math.cosh(e)),S6={kernelName:Ma,backendName:"cpu",kernelFunc:k6};function I6(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,[c,h,d,p]=r.shape,f=a.shape[0],[m,g]=o,b=_e([f,m,g,p],"float32"),y=n.data.get(a.dataId).values,v=n.data.get(i.dataId).values,x=n.data.get(r.dataId).values,k=w.computeStrides(r.shape),C=w.computeStrides(b.shape);for(let $=0;$<f;$++){let A=$*4,E=y[A],O=y[A+1],R=y[A+2],D=y[A+3],T=v[$];if(T>=c)continue;let L=m>1?(R-E)*(h-1)/(m-1):0,W=g>1?(D-O)*(d-1)/(g-1):0;for(let q=0;q<m;q++){let j=m>1?E*(h-1)+q*L:.5*(E+R)*(h-1);if(j<0||j>h-1){for(let K=0;K<g;K++)for(let Q=0;Q<p;Q++){let ne=Q+K*C[2]+q*C[1]+$*C[0];b.values[ne]=l}continue}if(u==="bilinear"){let K=Math.floor(j),Q=Math.ceil(j),ne=j-K;for(let J=0;J<g;J++){let se=g>1?O*(d-1)+J*W:.5*(O+D)*(d-1);if(se<0||se>d-1){for(let le=0;le<p;le++){let ge=le+J*C[2]+q*C[1]+$*C[0];b.values[ge]=l}continue}let te=Math.floor(se),oe=Math.ceil(se),re=se-te;for(let le=0;le<p;le++){let ge=le+te*k[2]+K*k[1]+T*k[0],we=x[ge];ge=le+oe*k[2]+K*k[1]+T*k[0];let Ie=x[ge];ge=le+te*k[2]+Q*k[1]+T*k[0];let De=x[ge];ge=le+oe*k[2]+Q*k[1]+T*k[0];let Le=x[ge],Xe=we+(Ie-we)*re,et=De+(Le-De)*re;ge=le+J*C[2]+q*C[1]+$*C[0],b.values[ge]=Xe+(et-Xe)*ne}}}else for(let K=0;K<g;++K){let Q=g>1?O*(d-1)+K*W:.5*(O+D)*(d-1);if(Q<0||Q>d-1){for(let se=0;se<p;se++){let te=se+K*C[2]+q*C[1]+$*C[0];b.values[te]=l}continue}let ne=Math.round(Q),J=Math.round(j);for(let se=0;se<p;se++){let te=se+ne*k[2]+J*k[1]+T*k[0],oe=se+K*C[2]+q*C[1]+$*C[0];b.values[oe]=x[te]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var C6={kernelName:ko,backendName:"cpu",kernelFunc:I6};function N6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;be(r,"cumprod");let u=I.getAxesPermutation([a],r.shape.length),l=r;u!=null&&(l=Dn({inputs:{x:r},backend:n,attrs:{perm:u}}));let c=I.getInnerMostAxes(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);let h=bn(l.dtype,"int32"),d=w.makeOnesTypedArray(w.sizeFromShape(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(b,y)=>b+f-y-1:(b,y)=>b+y;for(let b=0;b<p.length;b+=f)for(let y=0;y<f;y++){let v=m(b,y);if(y===0)d[v]=i?1:p[v];else{let x=m(b,y-1);d[v]=i?p[x]*d[x]:p[v]*d[x]}}let g=n.makeTensorInfo(l.shape,h,d);if(u!=null){let b=I.getUndoAxesPermutation(u),y=Dn({inputs:{x:g},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),y}return g}var T6={kernelName:wo,backendName:"cpu",kernelFunc:N6};function $6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;be(r,"cumsum");let u=I.getAxesPermutation([a],r.shape.length),l=r;u!=null&&(l=Dn({inputs:{x:r},backend:n,attrs:{perm:u}}));let c=I.getInnerMostAxes(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);let h=bn(l.dtype,"int32"),d=w.makeZerosTypedArray(w.sizeFromShape(l.shape),h),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(b,y)=>b+f-y-1:(b,y)=>b+y;for(let b=0;b<p.length;b+=f)for(let y=0;y<f;y++){let v=m(b,y);if(y===0)d[v]=i?0:p[v];else{let x=m(b,y-1);d[v]=i?p[x]+d[x]:p[v]+d[x]}}let g=n.makeTensorInfo(l.shape,h,d);if(u!=null){let b=I.getUndoAxesPermutation(u),y=Dn({inputs:{x:g},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),y}return g}var _6={kernelName:Ba,backendName:"cpu",kernelFunc:$6};function A6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(r.shape.length===1){let u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=zv(u,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,c)}else if(r.shape.length===2){let u=n.bufferSync(r),l=n.bufferSync(a),c=e1(u,l,i,o);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var E6={kernelName:tb,backendName:"cpu",kernelFunc:A6};function R6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=r.shape[0],u=r.shape[1],l=r.shape[2],c=r.shape[3],h=u*a,d=l*a,p=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*d*p),g=0;for(let b=0;b<o;++b)for(let y=0;y<h;++y){let v=Math.floor(y/a),x=y%a;for(let k=0;k<d;++k){let C=Math.floor(k/a),$=k%a,A=(x*a+$)*p;for(let E=0;E<p;++E){let R=E+A+c*(C+l*(v+u*b));m[g++]=f[R]}}}return n.makeTensorInfo([o,h,d,p],r.dtype,m)}var D6={kernelName:So,backendName:"cpu",kernelFunc:R6};function W1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s;be([r,a],"depthwiseConv2DNative");let c=w.computeStrides(r.shape),h=w.computeStrides(a.shape),d=u;d==null&&(d=[1,1]),w.assert(I.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let p=I.computeConv2DInfo(r.shape,a.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=p,v=y.left,x=y.top,k=p.outChannels/p.inChannels,C=new Ht(p.outShape,r.dtype),$=n.data.get(r.dataId).values,A=n.data.get(a.dataId).values,E=C.values;for(let O=0;O<p.batchSize;++O){let R=O*c[0],D=O*C.strides[0];for(let T=0;T<p.outHeight;++T){let L=D+T*C.strides[1],W=T*p.strideHeight-x;for(let q=0;q<f;++q){let j=W+q*g;if(j<0||j>=p.inHeight)continue;let K=q*h[0],Q=R+j*c[1];for(let ne=0;ne<p.outWidth;++ne){let J=L+ne*C.strides[2],se=ne*p.strideWidth-v;for(let te=0;te<m;++te){let oe=se+te*b;if(oe<0||oe>=p.inWidth)continue;let re=K+te*h[1],le=Q+oe*p.inChannels,ge=J,we=re;for(let Ie=0;Ie<p.inChannels;++Ie){let De=$[le+Ie];for(let Le=0;Le<k;++Le)E[ge+Le]+=De*A[we+Le];ge+=k,we+=k}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var F6={kernelName:Va,backendName:"cpu",kernelFunc:W1};function O6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=s;be([r,a],"depthwiseConv2dNativeBackpropFilter");let h=I.computeConv2DInfo(r.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:m}=h,g=new Ht(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,v=h.outChannels/h.inChannels,x=n.data.get(r.dataId).values,k=new Ht(r.shape,r.dtype,x),C=n.data.get(a.dataId).values,$=new Ht(a.shape,a.dtype,C);for(let A=0;A<f;++A){let E=Math.max(0,Math.ceil((y-A)/d)),O=Math.min(h.outHeight,(h.inHeight+y-A)/d);for(let R=0;R<m;++R){let D=Math.max(0,Math.ceil((b-R)/p)),T=Math.min(h.outWidth,(h.inWidth+b-R)/p);for(let L=0;L<h.outChannels;++L){let W=Math.trunc(L/v),q=L%v,j=0;for(let K=0;K<h.batchSize;++K)for(let Q=E;Q<O;++Q){let ne=A+Q*d-y;for(let J=D;J<T;++J){let se=R+J*p-b;j+=k.get(K,ne,se,W)*$.get(K,Q,J,L)}}g.set(j,A,R,W,q)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var P6={kernelName:nb,backendName:"cpu",kernelFunc:O6};function L6(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=s;be([r,a],"depthwiseConv2DNativeBackpropInput");let h=w.computeStrides(r.shape),d=w.computeStrides(a.shape),p=I.computeConv2DInfo(c,a.shape,i,o,u,l,!0),f=new Ht(p.inShape,"float32"),m=f.values,[g,b,y]=f.strides,v=n.data.get(r.dataId).values,[x,k,C]=h,$=n.data.get(a.dataId).values,[A,E,O]=d,{batchSize:R,filterHeight:D,filterWidth:T,inChannels:L,inHeight:W,inWidth:q,outChannels:j,outHeight:K,outWidth:Q,strideHeight:ne,strideWidth:J}=p,se=D-1-p.padInfo.top,te=T-1-p.padInfo.left,oe=j/L;for(let re=0;re<R;++re)for(let le=0;le<L;++le)for(let ge=0;ge<W;++ge){let we=ge-se,Ie=Math.max(0,Math.ceil(we/ne)),De=Math.min(K,(D+we)/ne);for(let Le=0;Le<q;++Le){let Xe=Le-te,et=Math.max(0,Math.ceil(Xe/J)),Ye=Math.min(Q,(T+Xe)/J),nt=0;for(let Ce=Ie;Ce<De;++Ce){let ct=Ce*ne-we;for(let ot=et;ot<Ye;++ot){let rn=ot*J-Xe,$t=x*re+k*Ce+C*ot,On=A*(D-1-ct)+E*(T-1-rn)+O*le;for(let Ft=0;Ft<oe;++Ft){let an=le*oe+Ft,Pn=v[$t+an],Ln=$[On+Ft];nt+=Pn*Ln}}}m[g*re+b*ge+y*Le+le]=nt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var z6={kernelName:sb,backendName:"cpu",kernelFunc:L6};function M6(e){let{inputs:t,backend:n}=e,{x:s}=t,r=w.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,i=_e([r,r],s.dtype),o=i.values;for(let l=0;l<a.length;l++)o[l*r+l]=a[l];let u=[...s.shape,...s.shape];return n.makeTensorInfo(u,i.dtype,i.values)}var B6={kernelName:rb,backendName:"cpu",kernelFunc:M6},V6={kernelName:kh,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(s.dataId).values,c=s.shape.length,h=u.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:v,strideHeight:x,strideWidth:k,filterHeight:C,filterWidth:$,dilationHeight:A,dilationWidth:E,outShape:O}=I.computeDilation2DInfo(s.shape,r.shape,a,i,"NHWC",o),R=w.sizeFromShape(O),D=O.length,T=w.getArrayFromDType(s.dtype,R);for(let W=0;W<p;++W)for(let q=0;q<b;++q){let j=q*x-v.top;for(let K=0;K<y;++K){let Q=K*k-v.left;for(let ne=0;ne<g;++ne){let J=Number.MIN_SAFE_INTEGER;for(let te=0;te<C;++te){let oe=j+te*A;if(oe>=0&&oe<f)for(let re=0;re<$;++re){let le=Q+re*E;if(le>=0&&le<m){let ge=w.locToIndex([W,oe,le,ne],c,w.computeStrides(s.shape)),we=w.locToIndex([te,re,ne],d,w.computeStrides(r.shape)),Ie=l[ge]+h[we];Ie>J&&(J=Ie)}}}let se=w.locToIndex([W,q,K,ne],D,w.computeStrides(O));T[se]=J}}}return{dataId:u.write(w.toTypedArray(T,s.dtype),O,s.dtype),shape:O,dtype:s.dtype}}},W6={kernelName:Bm,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=w.toNestedArray(s.shape,l.data.get(s.dataId).values),h=w.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:C,dilationHeight:$,dilationWidth:A,outShape:E}=I.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);w.assert(a.rank===E.length,()=>`Error in ${Bm}, dy must have the same rank as output ${E.length}, but got ${a.rank}`);let O=w.toNestedArray(E,l.data.get(a.dataId).values),R=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let T=0;T<d;++T)for(let L=0;L<g;++L){let W=L*v-y.top;for(let q=0;q<b;++q){let j=q*x-y.left;for(let K=0;K<m;++K){let Q=Number.MIN_SAFE_INTEGER,ne=0,J=0;for(let se=0;se<k;++se){let te=W+se*$;if(te>=0&&te<p)for(let oe=0;oe<C;++oe){let re=j+oe*A;if(re>=0&&re<f){let le=c[T][te][re][K]+h[se][oe][K];le>Q&&(Q=le,ne=se,J=oe)}}}R[ne][J][K]+=O[T][L][q][K]}}}return{dataId:l.write(w.toTypedArray(R,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},U6={kernelName:Mm,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=w.toNestedArray(s.shape,l.data.get(s.dataId).values),h=w.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:C,dilationHeight:$,dilationWidth:A,outShape:E}=I.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);w.assert(a.rank===E.length,()=>`Error in ${Mm}, dy must have the same rank as output ${E.length}, but got ${a.rank}`);let O=w.toNestedArray(E,l.data.get(a.dataId).values),R=w.makeZerosNestedTypedArray(s.shape,s.dtype);for(let T=0;T<d;++T)for(let L=0;L<g;++L){let W=L*v-y.top;for(let q=0;q<b;++q){let j=q*x-y.left;for(let K=0;K<m;++K){let Q=Number.MIN_SAFE_INTEGER,ne=W<0?0:W,J=j<0?0:j;for(let se=0;se<k;++se){let te=W+se*$;if(te>=0&&te<p)for(let oe=0;oe<C;++oe){let re=j+oe*A;if(re>=0&&re<f){let le=c[T][te][re][K]+h[se][oe][K];le>Q&&(Q=le,ne=te,J=re)}}}R[T][ne][J][K]+=O[T][L][q][K]}}}return{dataId:l.write(w.toTypedArray(R,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function dc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"sum");let o;r.dtype==="bool"?o=Tr({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):o=Ws({inputs:{x:r},backend:n});let u=o.shape.length,l=w.parseAxisParam(a,o.shape),c=I.getAxesPermutation(l,u),h=l,d=o;c!=null&&(d=Dn({inputs:{x:o},backend:n,attrs:{perm:c}}),h=I.getInnerMostAxes(h.length,u)),I.assertAxesAreInnerMostDims("sum",h,d.shape.length);let[p,f]=I.computeOutAndReduceShapes(d.shape,h),m=I.upcastType(d.dtype,"int32"),g=th(n,p,m),b=w.sizeFromShape(f),y=n.data.get(g.dataId).values,v=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){let k=x*b,C=0;for(let $=0;$<b;++$)C+=v[k+$];y[x]=C}if(i){let x=I.expandShapeToKeepDim(g.shape,l),k=g;g=ft({inputs:{x:g},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(k)}return n.disposeIntermediateTensorInfo(o),c!=null&&n.disposeIntermediateTensorInfo(d),g}var G6={kernelName:yi,backendName:"cpu",kernelFunc:dc};function H6(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=I.decodeEinsumEquation(r,a.length);I.checkEinsumDimSizes(i.length,u,a);let{path:l,steps:c}=I.getEinsumComputePath(o,u),h=c.length,d=null,p=i.length,f=[];for(let m=0;m<h;++m){for(let g of c[m]){let{permutationIndices:b,expandDims:y}=I.getEinsumPermutation(p,u[g]),v;I.isIdentityPermutation(b)?v=a[g]:(v=Dn({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=ft({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),d===null?d=v:(d=Sp({inputs:{a:v,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=dc({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var q6={kernelName:Sh,backendName:"cpu",kernelFunc:H6};function j6(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;be([s,r],"eluGrad");let a=new Float32Array(w.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let u=0;u<i.length;++u){let l=i[u];l>=1?a[u]=o[u]:a[u]=o[u]*(l+1)}return n.makeTensorInfo(r.shape,"float32",a)}var K6={kernelName:ab,backendName:"cpu",kernelFunc:j6},X6=I.ERF_P,Y6=I.ERF_A1,Z6=I.ERF_A2,Q6=I.ERF_A3,J6=I.ERF_A4,ej=I.ERF_A5,tj=rt(El,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+X6*n);return t*(1-((((ej*s+J6)*s+Q6)*s+Z6)*s+Y6)*s*Math.exp(-n*n))}),nj={kernelName:El,backendName:"cpu",kernelFunc:tj};function rh(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice(),u=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),ft({inputs:{x:r},backend:n,attrs:{shape:o}})}var sj={kernelName:Co,backendName:"cpu",kernelFunc:rh},rj=Dt((e,t)=>e/t),Xv=jt(Wa,rj),Tg={kernelName:Wa,backendName:"cpu",kernelFunc:Xv};function U1(e,t,n){let s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[r,a],c=w.sizeFromShape(l),h=w.getTypedArrayFromDType("float32",c),d=w.getTypedArrayFromDType("float32",c);for(let g=0;g<r;g++){let b=Ia({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,a]}}),y=Ia({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,a]}}),v=Vn({inputs:{real:b,imag:y},backend:n}),{real:x,imag:k}=aj(v,t,n),C=I.mergeRealAndImagArrays(x,k);for(let $=0;$<a;$++){let A=I.getComplexWithIndex(C,$);h[g*a+$]=A.real,d[g*a+$]=A.imag}n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(v)}let p=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",d),m=Vn({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function aj(e,t,n){let s=w.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(ij(s)){let o=$g(a,i,s,t,n),u=[e.shape[0],e.shape[1]];if(t){let l=n.makeTensorInfo(u,"float32",o.real),c=n.makeTensorInfo(u,"float32",o.imag),h=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),d=Ws({inputs:{x:h},backend:n}),p=Tg.kernelFunc({inputs:{a:l,b:h},backend:n}),f=Tg.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(p.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=I.mergeRealAndImagArrays(a,i),u=oj(o,s,t);return I.splitRealAndImagArrays(u)}}function ij(e){return(e&e-1)===0}function $g(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=I.mergeRealAndImagArrays(e,t),i=n/2,o=I.complexWithEvenIndex(a),u=o.real,l=o.imag,c=[u.length],h=r.makeTensorInfo(c,"float32",u),d=r.makeTensorInfo(c,"float32",l),p=Vn({inputs:{real:h,imag:d},backend:r}),f=I.complexWithOddIndex(a),m=f.real,g=f.imag,b=[m.length],y=r.makeTensorInfo(b,"float32",m),v=r.makeTensorInfo(b,"float32",g),x=Vn({inputs:{real:y,imag:v},backend:r}),k=$g(u,l,i,s,r),C=k.real,$=k.imag,A=[C.length],E=r.makeTensorInfo(A,"float32",C),O=r.makeTensorInfo(A,"float32",$),R=Vn({inputs:{real:E,imag:O},backend:r}),D=$g(m,g,i,s,r),T=D.real,L=D.imag,W=[T.length],q=r.makeTensorInfo(W,"float32",T),j=r.makeTensorInfo(W,"float32",L),K=Vn({inputs:{real:q,imag:j},backend:r}),Q=I.exponents(n,s),ne=[Q.real.length],J=r.makeTensorInfo(ne,"float32",Q.real),se=r.makeTensorInfo(ne,"float32",Q.imag),te=Vn({inputs:{real:J,imag:se},backend:r}),oe=Sp({inputs:{a:te,b:K},backend:r}),re=po({inputs:{a:R,b:oe},backend:r}),le=jv({inputs:{a:R,b:oe},backend:r}),ge=Sa({inputs:{input:re},backend:r}),we=Sa({inputs:{input:le},backend:r}),Ie=fo({inputs:{input:re},backend:r}),De=fo({inputs:{input:le},backend:r}),Le=mo({inputs:[ge,we],backend:r,attrs:{axis:0}}),Xe=mo({inputs:[Ie,De],backend:r,attrs:{axis:0}}),et=r.data.get(Le.dataId).values,Ye=r.data.get(Xe.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(De),r.disposeIntermediateTensorInfo(Le),r.disposeIntermediateTensorInfo(Xe),{real:et,imag:Ye}}function oj(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,i=0;for(let o=0;o<t;o++){let u=I.exponent(r*o,t,n),l=I.getComplexWithIndex(e,o);a+=l.real*u.real-l.imag*u.imag,i+=l.real*u.imag+l.imag*u.real}n&&(a/=t,i/=t),I.assignToTypedArray(s,a,i,r)}return s}function uj(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=r/a,o=ft({inputs:{x:s},backend:n,attrs:{shape:[i,a]}}),u=U1(o,!1,n),l=ft({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}var lj={kernelName:ib,backendName:"cpu",kernelFunc:uj};function Yv(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||w.inferDtype(r),o=w.getArrayFromDType(i,w.sizeFromShape(s));return dj(o,r,i),t.makeTensorInfo(s,i,o)}var cj={kernelName:Rl,backendName:"cpu",kernelFunc:Yv};function dj(e,t,n){e.fill(t)}var hj={kernelName:To,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[i,o,u,l]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<i;d++){let p=d*u*o*l;for(let f=0;f<o;f++){let m=f*(u*l);for(let g=0;g<u;g++){let b=g*l;for(let y=0;y<l;y++){let v=Math.round(u-g-1),x=p+m+b+y,k=c[x];if(v>=0&&v<u){let C=v*l,$=p+m+C+y;k=c[$]}a[x]=k}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},pj=Dt((e,t)=>Math.floor(e/t)),fj=jt(qa,pj,null,"int32"),mj={kernelName:qa,backendName:"cpu",kernelFunc:fj};function gj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=V1({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){let g=m;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let b=ft({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=po({inputs:{a:m,b},backend:n}),n.disposeIntermediateTensorInfo(b)}else m=po({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(g)}if(p){let g=m;if(c==="NCHW"&&p==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let b=ft({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=sh(n,m,p,b,f),n.disposeIntermediateTensorInfo(b)}else m=sh(n,m,p,o,f);n.disposeIntermediateTensorInfo(g)}return m}var bj={kernelName:ma,backendName:"cpu",kernelFunc:gj};function yj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=W1({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){let g=m;m=po({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(p){let g=m;m=sh(n,m,p,o,f),n.disposeIntermediateTensorInfo(g)}return m}var vj={kernelName:ga,backendName:"cpu",kernelFunc:yj};function xj(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=w.sizeFromShape(s.shape),i=r.shape,o=i[i.length-1],[u,l,c,h]=I.prepareAndValidate(s,r);if(l===0)return n.makeTensorInfo(u,s.dtype,[]);let d=n.data.get(r.dataId).values,p=n.bufferSync(s),f=u1(d,p,s.dtype,l,o,c,h,s.shape,a);return n.makeTensorInfo(u,s.dtype,f.values)}var wj={kernelName:_o,backendName:"cpu",kernelFunc:xj};function kj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;be([r,a],"gatherV2");let u=w.parseAxisParam(i,r.shape)[0],l=n.data.get(a.dataId).values,c=r.shape[u];for(let x=0;x<l.length;++x){let k=l[x];w.assert(k<=c-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${c-1}]`)}let h=o;o==null&&(h=0);let d=w.sizeFromShape(a.shape),p=I.segment_util.collectGatherOpShapeInfo(r,a,u,h),f=ft({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=ft({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),g=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],b=n.bufferSync(m),y=n.bufferSync(f),v=l1(y,b,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}var Sj={kernelName:$o,backendName:"cpu",kernelFunc:kj};function Ij(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=r/a,o=ft({inputs:{x:s},backend:n,attrs:{shape:[i,a]}}),u=U1(o,!0,n),l=ft({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}var Cj={kernelName:ob,backendName:"cpu",kernelFunc:Ij},Nj=rt(Dl,e=>Number.isFinite(e)?1:0,"bool"),Tj={kernelName:Dl,backendName:"cpu",kernelFunc:Nj},$j=rt(Fl,e=>Math.abs(e)===1/0?1:0,"bool"),_j={kernelName:Fl,backendName:"cpu",kernelFunc:$j},Aj=rt(Ol,e=>Number.isNaN(e)?1:0,"bool"),Ej={kernelName:Ol,backendName:"cpu",kernelFunc:Aj};function Rj(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=f1(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}var Dj={kernelName:ub,backendName:"cpu",kernelFunc:Rj},Fj=rt(Pl,e=>Math.log1p(e)),Oj={kernelName:Pl,backendName:"cpu",kernelFunc:Fj},Pj=Dt((e,t)=>e&&t),Lj=jt(Do,Pj,null,"bool"),zj={kernelName:Do,backendName:"cpu",kernelFunc:Lj},Mj=rt(Fo,e=>e?0:1,"bool"),Bj={kernelName:Fo,backendName:"cpu",kernelFunc:Mj},Vj=Dt((e,t)=>e||t),Wj=jt(Ll,Vj,null,"bool"),Uj={kernelName:Ll,backendName:"cpu",kernelFunc:Wj};function Gj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s;be(r,"LRN");let l=r.shape[3],c=l-1,h=n.data.get(r.dataId).values,d=w.sizeFromShape(r.shape),p=new Float32Array(d);function f(m){let g=m%l,b=m-g+Math.max(0,g-a),y=m-g+Math.min(g+a,c),v=0;for(;b<=y;b++){let x=h[b];v+=x*x}return v}for(let m=0;m<d;m++){let g=f(m),b=h[m]*Math.pow(i+o*g,-u);p[m]=b}return n.makeTensorInfo(r.shape,r.dtype,p)}var Hj={kernelName:Ch,backendName:"cpu",kernelFunc:Gj};function qj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s;be(i,"LRNGrad");let h=w.sizeFromShape(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),b=h;for(let y=0;y<b;y++){let v=y%d,x=y-v+Math.max(0,v-o),k=y-v+Math.min(d,v+o+1),C=0;for(let $=x;$<k;$++)C+=Math.pow(f[$],2);C=l*C+u;for(let $=x;$<k;$++){let A=-2*l*c*f[$]*m[y]/C;y===$&&(A+=Math.pow(C,-c)),A*=p[y],g[$]+=A}}return n.makeTensorInfo(i.shape,r.dtype,g)}var jj={kernelName:lb,backendName:"cpu",kernelFunc:qj};function G1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n,u=r.shape,l=u.length,c=w.parseAxisParam(a,u),h=c,d=I.getAxesPermutation(h,l),p=o.data.get(r.dataId).values;if(d!=null){let x=new Array(l);for(let k=0;k<x.length;k++)x[k]=u[d[k]];p=Vv(p,u,r.dtype,d,x),h=I.getInnerMostAxes(h.length,l),u=x}be(r,"max"),I.assertAxesAreInnerMostDims("max",h,l);let[f,m]=I.computeOutAndReduceShapes(u,h),g=w.sizeFromShape(m),b=g1(p,g,f,r.dtype),y=o.write(b,f,r.dtype),v=f;return i&&(v=I.expandShapeToKeepDim(f,c)),{dataId:y,shape:v,dtype:r.dtype}}var Kj={kernelName:Qa,backendName:"cpu",kernelFunc:G1};function Xj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;be(r,"maxPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(r.shape,a,i,l,o,u),h;if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))h=Ws({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,p=w.computeStrides(r.shape),f=Kv(d,r.shape,r.dtype,p,c,"max");h=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return h}var Yj={kernelName:ei,backendName:"cpu",kernelFunc:Xj};function Zj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s;be(r,"maxPool3d");let c=I.computePool3DInfo(r.shape,a,i,1,o,u,l),h=n.data.get(r.dataId).values,d=B1(h,r.shape,r.dtype,w.computeStrides(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var Qj={kernelName:Nh,backendName:"cpu",kernelFunc:Zj};function Jj(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;be([r,a],"maxPool3DGrad");let c=I.computePool3DInfo(a.shape,i,o,1,u,l),h=n.bufferSync(a),d=Bq(h,c),p=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,b=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,x=c.effectiveFilterHeight,k=c.effectiveFilterWidth,C=v-1-c.padInfo.front,$=k-1-c.padInfo.left,A=x-1-c.padInfo.top,E=_e(a.shape,"float32"),O=n.bufferSync(r);for(let R=0;R<c.batchSize;++R)for(let D=0;D<c.inChannels;++D)for(let T=0;T<c.inDepth;++T)for(let L=0;L<c.inHeight;++L)for(let W=0;W<c.inWidth;++W){let q=T-C,j=L-A,K=W-$,Q=0;for(let ne=0;ne<v;ne+=g){let J=(q+ne)/p;if(!(J<0||J>=c.outDepth||Math.floor(J)!==J))for(let se=0;se<x;se+=b){let te=(j+se)/f;if(!(te<0||te>=c.outHeight||Math.floor(te)!==te))for(let oe=0;oe<k;oe+=y){let re=(K+oe)/m;if(re<0||re>=c.outWidth||Math.floor(re)!==re)continue;let le=v*x*k-1-d.get(R,J,te,re,D),ge=ne*x*k+se*k+oe,we=le===ge?1:0;if(we===0)continue;Q+=O.get(R,J,te,re,D)*we}}}E.set(Q,R,T,L,W,D)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}var e5={kernelName:db,backendName:"cpu",kernelFunc:Jj};function t5(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;be([a,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,d=I.computePool2DInfo(o.shape,u,l,1,c,h),p=n.data.get(o.dataId).values,f=_e(d.outShape,o.dtype,M1(p,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,v=d.effectiveFilterHeight,x=d.effectiveFilterWidth,k=x-1-d.padInfo.left,C=v-1-d.padInfo.top,$=_e(o.shape,"float32"),A=n.data.get(r.dataId).values,E=_e(r.shape,"float32",A);for(let O=0;O<d.batchSize;++O)for(let R=0;R<d.inChannels;++R)for(let D=0;D<d.inHeight;++D)for(let T=0;T<d.inWidth;++T){let L=D-C,W=T-k,q=0;for(let j=0;j<v;j+=b){let K=(L+j)/m;if(!(K<0||K>=d.outHeight||Math.floor(K)!==K))for(let Q=0;Q<x;Q+=y){let ne=(W+Q)/g;if(ne<0||ne>=d.outWidth||Math.floor(ne)!==ne)continue;let J=v*x-1-f.get(O,K,ne,R),se=j*x+Q,te=J===se?1:0;if(te===0)continue;q+=E.get(O,K,ne,R)*te}}$.set(q,O,D,T,R)}return n.makeTensorInfo($.shape,$.dtype,$.values)}var n5={kernelName:cb,backendName:"cpu",kernelFunc:t5};function s5(e,t,n,s,r){let a=w.computeStrides(t),i=Kv(e,t,n,a,r,"max"),o=M1(e,t,n,r,!0,s);return[i.values,o.values]}var r5={kernelName:hb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;be(s,"MaxPoolWithArgmax");let l=u.data.get(s.dataId).values,c=I.computePool2DInfo(s.shape,r,a,[1,1],i),[h,d]=s5(l,s.shape,s.dtype,o,c),p=u.write(h,c.outShape,s.dtype),f=u.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function a5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=w.parseAxisParam(a,r.shape),l=I.computeOutAndReduceShapes(r.shape,o)[1],c=w.sizeFromShape(l),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);let p=Tr({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(p);let f=Xv({inputs:{a:p,b:d},backend:n});h.push(f);let m=dc({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:i}});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var i5={kernelName:ti,backendName:"cpu",kernelFunc:a5};function o5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"min");let o=w.parseAxisParam(a,r.shape),u=o,l=I.getAxesPermutation(u,r.shape.length),c=r;l!=null&&(c=Dn({inputs:{x:r},backend:n,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,r.shape.length)),I.assertAxesAreInnerMostDims("min",u,c.shape.length);let[h,d]=I.computeOutAndReduceShapes(c.shape,u),p=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){let y=b*p,v=m[y];for(let x=0;x<p;++x){let k=m[y+x];(Number.isNaN(k)||k<v)&&(v=k)}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(h,c.dtype,f);if(i){let b=I.expandShapeToKeepDim(h,o),y=ft({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var u5={kernelName:ni,backendName:"cpu",kernelFunc:o5};function l5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;be(r,"mirrorPad");let o=a.map((v,x)=>v[0]+r.shape[x]+v[1]),u=a.map(v=>v[0]),l=a.map((v,x)=>v[0]+r.shape[x]),c=i==="reflect"?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=w.computeStrides(r.shape),f=w.sizeFromShape(o),m=o.length,g=w.computeStrides(o),b=w.getTypedArrayFromDType(r.dtype,f);for(let v=0;v<f;v++){let x=w.indexToLoc(v,m,g);for(let C=0;C<m;C++)x[C]<u[C]?x[C]=u[C]*2-x[C]-c:x[C]>=l[C]&&(x[C]=(l[C]-1)*2-x[C]+c);x=x.map((C,$)=>C-u[$]);let k=w.locToIndex(x,d,p);b[v]=h[k]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}var c5={kernelName:ri,backendName:"cpu",kernelFunc:l5},d5=Dt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),h5=jt(zl,d5),p5={kernelName:zl,backendName:"cpu",kernelFunc:h5},f5=$a(hh());function H1(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length,o=a;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let u=w.parseAxisParam([o],r.shape),l=G1({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=I.expandShapeToKeepDim(l.shape,u),h=ft({inputs:{x:l},backend:n,attrs:{shape:c}}),d=jv({inputs:{a:r,b:h},backend:n}),p=a1({inputs:{x:d},backend:n}),f=dc({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=ft({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Xv({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var m5={kernelName:vi,backendName:"cpu",kernelFunc:H1};function g5(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;be(r,"multinomial");let u=o?r:H1({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,d=[l,a],p=w.makeZerosTypedArray(w.sizeFromShape(d),"int32");for(let f=0;f<l;++f){let m=f*c,g=new Float32Array(c-1);g[0]=h[m];for(let v=1;v<g.length;++v)g[v]=g[v-1]+h[m+v];let b=f5.alea(i.toString()),y=f*a;for(let v=0;v<a;++v){let x=b();p[y+v]=g.length;for(let k=0;k<g.length;k++)if(x<g[k]){p[y+v]=k;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",p)}var b5={kernelName:pb,backendName:"cpu",kernelFunc:g5},y5=Ts.nonMaxSuppressionV3Impl;function v5(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s;be(r,"NonMaxSuppression");let l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=y5(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var x5={kernelName:Lo,backendName:"cpu",kernelFunc:v5},w5=Ts.nonMaxSuppressionV4Impl;function k5(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s;be(r,"NonMaxSuppressionPadded");let c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=w5(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}var S5={kernelName:Ml,backendName:"cpu",kernelFunc:k5},I5=Ts.nonMaxSuppressionV5Impl;function C5(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s;be(r,"NonMaxSuppressionWithScore");let c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=I5(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var N5={kernelName:zo,backendName:"cpu",kernelFunc:C5};function T5(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;be(r,"oneHot");let u=w.sizeFromShape(r.shape),l=new Float32Array(u*a);l.fill(o);let c=n.data.get(r.dataId).values;for(let h=0;h<u;++h)c[h]>=0&&c[h]<a&&(l[h*a+c[h]]=i);return n.makeTensorInfo([...r.shape,a],"int32",l)}var $5={kernelName:Bo,backendName:"cpu",kernelFunc:T5};function ah(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Sa({inputs:{input:s},backend:n}),a=ah({inputs:{x:r},backend:n}),i=fo({inputs:{input:s},backend:n}),o=ah({inputs:{x:i},backend:n}),u=Vn({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return Yv({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var _5={kernelName:nu,backendName:"cpu",kernelFunc:ah};function q1(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Sa({inputs:{input:s},backend:n}),a=q1({inputs:{x:r},backend:n}),i=fo({inputs:{input:s},backend:n}),o=ah({inputs:{x:i},backend:n}),u=Vn({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return Yv({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var A5={kernelName:Mo,backendName:"cpu",kernelFunc:q1};function j1(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return rh({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let h=rh({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(h),h}),l=mo({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}var E5={kernelName:Vo,backendName:"cpu",kernelFunc:j1};function R5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;be(r,"pad");let o=a.map((y,v)=>y[0]+r.shape[v]+y[1]),u=a.map(y=>y[0]),l=n.data.get(r.dataId).values,c=w.sizeFromShape(r.shape),h=r.shape.length,d=w.computeStrides(r.shape),p=w.sizeFromShape(o),f=o.length,m=w.computeStrides(o),g=w.getTypedArrayFromDType(r.dtype,p);i!==0&&g.fill(i);for(let y=0;y<c;y++){let x=w.indexToLoc(y,h,d).map((C,$)=>C+u[$]),k=w.locToIndex(x,f,m);g[k]=l[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}var K1={kernelName:ii,backendName:"cpu",kernelFunc:R5},D5=Dt((e,t)=>Math.pow(e,t)),F5=jt(oi,D5),O5={kernelName:oi,backendName:"cpu",kernelFunc:F5};function P5(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=Wv(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}var L5={kernelName:Bl,backendName:"cpu",kernelFunc:P5},z5=rt(Vl,e=>1/e),M5={kernelName:Vl,backendName:"cpu",kernelFunc:z5};function B5(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;be(r,"resizeBilinear");let u=w.computeStrides(r.shape),[l,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(w.sizeFromShape([h,l,c,f])),b=[a&&l>1?d-1:d,a&&c>1?p-1:p],y=[a&&l>1?l-1:l,a&&c>1?c-1:c],v=0,x=b[0]/y[0],k=b[1]/y[1];for(let C=0;C<h;C++)for(let $=0;$<l;$++){let A;i?A=x*($+.5)-.5:A=x*$;let E=Math.max(0,Math.floor(A)),O=A-E,R=Math.min(d-1,Math.ceil(A)),D=C*u[0]+E*u[1],T=C*u[0]+R*u[1];for(let L=0;L<c;L++){let W;i?W=k*(L+.5)-.5:W=k*L;let q=Math.max(0,Math.floor(W)),j=W-q,K=Math.min(p-1,Math.ceil(W)),Q=D+q*u[2],ne=T+q*u[2],J=D+K*u[2],se=T+K*u[2];for(let te=0;te<f;te++){let oe=m[Q+te],re=m[ne+te],le=m[J+te],ge=m[se+te],we=oe+(le-oe)*j,Ie=re+(ge-re)*j,De=we+(Ie-we)*O;g[v++]=De}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}var V5={kernelName:hi,backendName:"cpu",kernelFunc:B5};function W5(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;be([a,r],"resizeBilinearGrad");let o=w.computeStrides(r.shape),[u,l,c,h]=r.shape,[,d,p]=a.shape,f=new Float32Array(u*l*c*h),m=[i&&d>1?l-1:l,i&&p>1?c-1:c],g=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=m[0]/g[0],y=m[1]/g[1],v=n.data.get(a.dataId).values,x=0;for(let k=0;k<u;k++){let C=k*o[0];for(let $=0;$<d;$++){let A=$*b,E=Math.floor(A),O=Math.min(Math.ceil(A),l-1),R=C+E*o[1],D=C+O*o[1],T=A-E,L=1-T;for(let W=0;W<p;W++){let q=W*y,j=Math.floor(q),K=Math.min(Math.ceil(q),c-1),Q=q-j,ne=1-Q,J=R+j*o[2],se=R+K*o[2],te=D+j*o[2],oe=D+K*o[2],re=L*ne,le=L*Q,ge=T*ne,we=T*Q;for(let Ie=0;Ie<h;Ie++){let De=v[x++];f[J+Ie]+=De*re,f[se+Ie]+=De*le,f[te+Ie]+=De*ge,f[oe+Ie]+=De*we}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}var U5={kernelName:mb,backendName:"cpu",kernelFunc:W5};function G5(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;be(r,"resizeNearestNeighbor");let u=w.computeStrides(r.shape),[l,c]=o,[h,d,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*l*c*f),b=[a&&l>1?d-1:d,a&&c>1?p-1:p],y=[a&&l>1?l-1:l,a&&c>1?c-1:c],v=b[0]/y[0],x=b[1]/y[1],k=0;for(let C=0;C<h;C++){let $=C*u[0];for(let A=0;A<l;A++){let E=i?v*(A+.5):v*A,O=Math.min(d-1,a?Math.round(E):Math.floor(E));i&&(O=Math.max(0,O));let R=$+O*u[1];for(let D=0;D<c;D++){let T=i?x*(D+.5):x*D,L=Math.min(p-1,a?Math.round(T):Math.floor(T));i&&(L=Math.max(0,L));let W=R+L*u[2];for(let q=0;q<f;q++){let j=m[W+q];g[k++]=j}}}}return n.makeTensorInfo([h,l,c,f],r.dtype,g)}var H5={kernelName:di,backendName:"cpu",kernelFunc:G5};function q5(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;be([a,r],"resizeNearestNeighborGrad");let o=w.computeStrides(r.shape),u=w.computeStrides(a.shape),[l,c,h,d]=r.shape,[,p,f]=a.shape,m=new Float32Array(l*c*h*d),g=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],v=b[0]/y[0],x=b[1]/y[1],k=1/v,C=1/x,$=Math.ceil(k)*2+2,A=Math.ceil(C)*2+2;for(let E=0;E<l;E++){let O=E*o[0];for(let R=0;R<c;R++){let D=O+R*o[1],T=Math.floor(R*k),L=Math.floor(T-$/2);for(let W=0;W<h;W++){let q=D+W*o[2],j=Math.floor(W*C),K=Math.floor(j-A/2);for(let Q=0;Q<d;Q++){let ne=0;for(let J=0;J<$;J++){let se=J+L;if(se<0||se>=p)continue;let te=O+se*u[1],oe=se*v,re=Math.min(c-1,i?Math.round(oe):Math.floor(oe));if(R===re)for(let le=0;le<A;le++){let ge=le+K;if(ge<0||ge>=f)continue;let we=te+ge*u[2],Ie=ge*x,De=Math.min(h-1,i?Math.round(Ie):Math.floor(Ie));W===De&&(ne+=g[we+Q])}}m[q+Q]=ne}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var j5={kernelName:fb,backendName:"cpu",kernelFunc:q5};function K5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;be(r,"reverse");let i=r.shape.length,o=w.parseAxisParam(a,r.shape);if(i===0)return Ws({inputs:{x:r},backend:n});let u=new Ht(r.shape,r.dtype),l=n.bufferSync(r);for(let c=0;c<u.size;c++){let h=u.indexToLoc(c),d=h.slice();o.forEach(p=>d[p]=r.shape[p]-1-d[p]),u.set(l.get(...d),...h)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}var X5={kernelName:Uo,backendName:"cpu",kernelFunc:K5},Y5={kernelName:su,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[l,c,h,d]=s.shape,[p,f]=I.getImageCenter(i,c,h),m=255,g=Math.sin(r),b=Math.cos(r),y=o.data.get(s.dataId).values;for(let x=0;x<l;x++){let k=x*h*c*d;for(let C=0;C<c;C++){let $=C*(h*d);for(let A=0;A<h;A++){let E=A*d;for(let O=0;O<d;O++){let R=[l,C,A,O],D=R[2],T=R[1],L=(D-p)*b-(T-f)*g,W=(D-p)*g+(T-f)*b;L=Math.round(L+p),W=Math.round(W+f);let q=a;if(typeof a!="number"&&(O===3?q=m:q=a[O]),L>=0&&L<h&&W>=0&&W<c){let K=W*(h*d),Q=L*d,ne=k+K+Q+O;q=y[ne]}let j=k+$+E+O;u[j]=q}}}}return{dataId:o.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Z5=rt(Go,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),Q5={kernelName:Go,backendName:"cpu",kernelFunc:Z5};function J5(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=I.calculateShapes(a,r,i),d=!0,p=n.bufferSync(r),f=n.bufferSync(a),m=no(p,f,i,h,l,u,o,c,0,d);return n.makeTensorInfo(i,m.dtype,m.values)}var eK={kernelName:Ho,backendName:"cpu",kernelFunc:J5};function tK(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function nK(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}function sK(e,t,n,s,r,a){let i=w.getArrayFromDType("int32",n*r);for(let o=0;o<n;++o){let u=e.slice(o*s,(o+1)*s),l=o*r;for(let c=0;c<r;++c)i[l+c]=a==="left"?tK(u,t[c+l]):nK(u,t[c+l])}return i}function rK(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=sK(o,u,r.shape[0],r.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",l)}var aK={kernelName:gb,backendName:"cpu",kernelFunc:rK};function iK(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;be([s,r,a],"select");let i=s.shape.length,o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=bn(r.dtype,a.dtype),h=w.makeZerosTypedArray(w.sizeFromShape(r.shape),c),d=0,p=i===0||i>1||r.shape.length===1?1:w.sizeFromShape(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<p;m++)o[f]===1?h[d++]=u[f]:h[d++]=l[f];return n.makeTensorInfo(r.shape,c,h)}var oK={kernelName:qo,backendName:"cpu",kernelFunc:iK},uK=I.SELU_SCALEALPHA,lK=I.SELU_SCALE,cK=rt(Wl,e=>e>=0?lK*e:uK*(Math.exp(e)-1)),dK={kernelName:Wl,backendName:"cpu",kernelFunc:cK},hK=rt(Ul,e=>e<0?-1:e>0?1:0),pK={kernelName:Ul,backendName:"cpu",kernelFunc:hK},fK=rt(mi,e=>Math.sin(e)),mK={kernelName:mi,backendName:"cpu",kernelFunc:fK},gK=rt(Ko,e=>Math.sinh(e)),bK={kernelName:Ko,backendName:"cpu",kernelFunc:gK},yK=11920928955078125e-23,Gw=Math.log(yK)+2,vK=rt(Gl,e=>{let t=e>-Gw,n=e<Gw,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),xK={kernelName:Gl,backendName:"cpu",kernelFunc:vK};function wK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;be([r],"spaceToBatchND");let o=w.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let C=1+a.length;C<r.shape.length;++C)u.push([0,0]);let l=K1.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(l.shape,a,o,!1),h=I.getPermuted(c.length,a.length,!1),d=I.getReshapedPermuted(l.shape,a,o,!1),m=ft({inputs:{x:l},backend:n,attrs:{shape:c}}),y=Dn({inputs:{x:m},backend:n,attrs:{perm:h}}),k=ft({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),k}var kK={kernelName:Xo,backendName:"cpu",kernelFunc:wK};function SK(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,m]=I1(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var IK={kernelName:$h,backendName:"cpu",kernelFunc:SK};function CK(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=C1(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}var NK={kernelName:Hl,backendName:"cpu",kernelFunc:CK};function TK(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=Uv(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}var $K={kernelName:_h,backendName:"cpu",kernelFunc:TK};function _K(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=Uv(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}var AK={kernelName:Ah,backendName:"cpu",kernelFunc:_K};function EK(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=I.calculateShapes(a,r,o),p=!1,f=n.bufferSync(r),m;switch(a.dtype){case"bool":{let g=n.bufferSync(a),b=Boolean(n.data.get(i.dataId).values[0]);m=no(f,g,o,d,c,l,u,h,b,p);break}case"float32":{let g=n.bufferSync(a),b=n.data.get(i.dataId).values[0];m=no(f,g,o,d,c,l,u,h,b,p);break}case"int32":{let g=n.bufferSync(a),b=n.data.get(i.dataId).values[0];m=no(f,g,o,d,c,l,u,h,b,p);break}case"string":{let g=n.bufferSync(a),b=w.decodeString(n.data.get(i.dataId).values[0]);m=no(f,g,o,d,c,l,u,h,b,p);break}default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}var RK={kernelName:Eh,backendName:"cpu",kernelFunc:EK};function DK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=I.prepareSplitSize(r,a,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map(h=>{let d=[...c];d[o]=h;let p=Ia({inputs:{x:r},backend:n,attrs:{begin:l,size:d}});return l[o]+=h,p})}var FK={kernelName:Yo,backendName:"cpu",kernelFunc:DK},OK={kernelName:ql,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;be(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let o=0;o<r.length;++o){let u=r[o];a[o]=u*u}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},PK=rt(Si,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),LK={kernelName:Si,backendName:"cpu",kernelFunc:PK};function zK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;be(r,"stridedSlice");let{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=It.sliceInfo(r.shape,a,i,o,u,l,c,h,d),k;if(m)k=ft({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=It.computeOutShape(y,v,x),$=Ia({inputs:{x:r},backend:n,attrs:{begin:y,size:C}});k=ft({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo($)}else{let C=n.bufferSync(r),$=T1(p,C,x,y);k=n.makeTensorInfo(f,$.dtype,$.values)}return k}var MK={kernelName:Zo,backendName:"cpu",kernelFunc:zK};function BK(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,m]=Gv(d,p,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var VK={kernelName:jl,backendName:"cpu",kernelFunc:BK};function WK(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=Hv(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var UK={kernelName:Rh,backendName:"cpu",kernelFunc:WK};function GK(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(a.dataId).values,o=qv(i,r);return n.makeTensorInfo(a.shape,"int32",o)}var HK={kernelName:Dh,backendName:"cpu",kernelFunc:GK},qK=rt(Qo,e=>Math.tan(e)),jK={kernelName:Qo,backendName:"cpu",kernelFunc:qK},KK=rt(ki,e=>Math.tanh(e)),XK={kernelName:ki,backendName:"cpu",kernelFunc:KK};function YK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;be(r,"tile");let i=_1(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var ZK={kernelName:Rr,backendName:"cpu",kernelFunc:YK};function QK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;be(r,"topk");let o=n.data.get(r.dataId).values,[u,l]=E1(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}var JK={kernelName:Jo,backendName:"cpu",kernelFunc:QK};function eX(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,d,p]=r.shape,[f,m]=l!=null?l:[h,d],g=[c,f,m,p],b=w.computeStrides(r.shape),y=b[0],v=b[1],x=b[2],k=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(g));k.fill(u);let C=s.data.get(r.dataId).values,$=s.data.get(a.dataId).values;for(let E=0;E<c;++E){let O=a.shape[0]===1?$:$.subarray(E*8,E*8+8);for(let R=0;R<f;++R)for(let D=0;D<m;++D)for(let T=0;T<p;++T){let L,W=O[6]*D+O[7]*R+1;if(W===0)continue;let q=(O[0]*D+O[1]*R+O[2])/W,j=(O[3]*D+O[4]*R+O[5])/W,K=Hw(q,d,o),Q=Hw(j,h,o);switch(i){case"nearest":L=iX(C,h,d,y,v,x,E,Q,K,T,u);break;case"bilinear":L=oX(C,h,d,y,v,x,E,Q,K,T,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let ne=E*y+R*v+D*x+T;k[ne]=L}return s.makeTensorInfo(g,r.dtype,k)}return{dataId:s.write(k,g,r.dtype),shape:r.shape,dtype:r.dtype}}var tX={kernelName:eu,backendName:"cpu",kernelFunc:eX};function Hw(e,t,n){switch(n){case"reflect":return nX(e,t);case"wrap":return sX(e,t);case"nearest":return aX(e,t);case"constant":default:return rX(e,t)}}function nX(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return w.clamp(0,n,t-1)}function sX(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return w.clamp(0,n,t-1)}function rX(e,t){return e}function aX(e,t){return w.clamp(0,e,t-1)}function Xu(e,t,n,s,r,a,i,o,u,l,c){let h=i*s+o*r+u*a+l;return 0<=o&&o<t&&0<=u&&u<n?e[h]:c}function iX(e,t,n,s,r,a,i,o,u,l,c){let h=Math.round(o),d=Math.round(u);return Xu(e,t,n,s,r,a,i,h,d,l,c)}function oX(e,t,n,s,r,a,i,o,u,l,c){let h=Math.floor(o),d=Math.floor(u),p=h+1,f=d+1,m=(f-u)*Xu(e,t,n,s,r,a,i,h,d,l,c)+(u-d)*Xu(e,t,n,s,r,a,i,h,f,l,c),g=(f-u)*Xu(e,t,n,s,r,a,i,p,d,l,c)+(u-d)*Xu(e,t,n,s,r,a,i,p,f,l,c);return(p-o)*m+(o-h)*g}function uX(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;be(a,"unique");let i=s.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=R1(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}var lX={kernelName:bb,backendName:"cpu",kernelFunc:uX};function cX(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r.shape.length,o=r.shape[a],u=new Array(i-1),l=0;for(let p=0;p<i;p++)p!==a&&(u[l++]=r.shape[p]);let c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;let d=new Array(o);for(let p=0;p<d.length;p++){c[a]=p;let f=Ia({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[p]=ft({inputs:{x:f},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(f)}return d}var dX={kernelName:tu,backendName:"cpu",kernelFunc:cX};function hX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;be(r,"unsortedSegmentSum");let o=r.shape.length,u=a.shape.length,l=[],c=[],h=o-u,d=a;for(let f=0;f<h;++f){let m=rh({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<i;++f){let m=w.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),b=s1({inputs:{a:g,b:d},backend:n}),y=Tr({inputs:{x:b},backend:n,attrs:{dtype:"float32"}}),v=Sp({inputs:{a:y,b:r},backend:n}),x=dc({inputs:{x:v},backend:n,attrs:{axis:0,keepDims:!1}});l.push(x),c.push(g),c.push(b),c.push(y),c.push(v),c.push(x)}let p=j1({inputs:l,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}var pX={kernelName:Fh,backendName:"cpu",kernelFunc:hX},fX=[fq,oH,gq,yq,pH,xq,kq,Iq,Nq,$q,Aq,Rq,Fq,Lq,Mq,Wq,Gq,qq,Kq,hq,Yq,Qq,e6,n6,dH,mH,r6,uH,i6,u6,l6,d6,p6,m6,b6,v6,w6,S6,C6,T6,_6,E6,D6,F6,P6,z6,B6,V6,W6,U6,q6,aq,K6,gH,nj,bH,sj,vH,lj,cj,hj,wH,mj,bj,vj,wj,Sj,SH,CH,lH,Cj,o6,Tj,_j,Ej,iq,TH,_H,Dj,EH,Oj,zj,Bj,Uj,Hj,jj,Kj,DH,Yj,Qj,e5,n5,r5,i5,u5,OH,c5,p5,b5,LH,MH,x5,S5,N5,VH,$5,A5,E5,K1,O5,uq,GH,L5,cH,Tg,M5,lq,cq,dq,V5,U5,H5,j5,X5,Y5,Q5,qH,eK,aK,oK,dK,KH,pK,mK,bK,XH,m5,xK,kK,IK,NK,$K,AK,RK,FK,QH,OK,eq,LK,MK,VK,UK,HK,rq,G6,jK,XK,ZK,JK,tX,WH,lX,dX,pX,_5];for(let e of fX)ru(e);var mX={};Ee(mX,{assertNotComplex:()=>mu,bindCanvasToFramebuffer:()=>NX,bindColorTextureToFramebuffer:()=>kd,bindTextureToProgramUniformSampler:()=>l2,bindTextureUnit:()=>i2,bindVertexBufferToProgramAttribute:()=>_g,callAndCheck:()=>fe,canBeRepresented:()=>X1,createFragmentShader:()=>Q1,createFramebuffer:()=>a2,createProgram:()=>J1,createStaticIndexBuffer:()=>n2,createStaticVertexBuffer:()=>t2,createTexture:()=>s2,createVertexShader:()=>Z1,getBatchDim:()=>Ca,getExtensionOrThrow:()=>Yu,getFramebufferErrorMessage:()=>c2,getMaxTexturesInShader:()=>f2,getNumChannels:()=>IX,getProgramUniformLocation:()=>u2,getProgramUniformLocationOrThrow:()=>o2,getRowsCols:()=>Na,getShapeAs3D:()=>Sd,getTextureShapeFromLogicalShape:()=>h2,getWebGLDisjointQueryTimerVersion:()=>m2,getWebGLErrorMessage:()=>Y1,getWebGLMaxTextureSize:()=>p2,hasExtension:()=>Kn,isCapableOfRenderingToFloatTexture:()=>g2,isDownloadFloatTextureEnabled:()=>b2,isReshapeFree:()=>bl,isWebGLFenceEnabled:()=>y2,isWebGLVersionEnabled:()=>Eg,linkProgram:()=>e2,logShaderSourceAndInfoLog:()=>Jv,resetMaxTextureSize:()=>TX,resetMaxTexturesInShader:()=>$X,unbindColorTextureFromFramebuffer:()=>Ag,unbindTextureUnit:()=>CX,validateFramebuffer:()=>Zu,validateProgram:()=>wd,validateTextureSize:()=>r2});var ra={},Em={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Zv(e,t){ra[e]=t}function Ns(e,t){if(!(e in ra)||t!=null){let s=bX(e,t);if(s!==null)ra[e]=s;else return console.log("Could not get context for WebGL version",e),null}let n=ra[e];return n==null||n.isContextLost()?(delete ra[e],Ns(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),ra[e])}function gX(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function bX(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?gX(e):t;return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ra[e]},!1),e===1?n.getContext("webgl",Em)||n.getContext("experimental-webgl",Em):n.getContext("webgl2",Em)}function hc(e,t){return[t,e]}function yX(e,t){return e*t}function cd(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function fu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function vX(e,t){let[n,s]=fu(e,t);return n*s*4}function Qv(e,t){let n=e,s,r,a,i,o,u,l,c,h,d;return X().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function fe(e,t){let n=t();return X().getBool("DEBUG")&&xX(e),n}function xX(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+Y1(e,t))}var wX=596e-10,kX=65504;function X1(e){return!!(X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||wX<Math.abs(e)&&Math.abs(e)<kX)}function Y1(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Yu(e,t){return ar(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function Z1(e,t){let n=ar(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(fe(e,()=>e.shaderSource(n,t)),fe(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function Q1(e,t){let n=ar(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(fe(e,()=>e.shaderSource(n,t)),fe(e,()=>e.compileShader(n)),X().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw Jv(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var SX=/ERROR: [0-9]+:([0-9]+):/g;function Jv(e,t){let n=SX.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,i=r.map((h,d)=>w.rightPad((d+1).toString(),a)+h),o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);let u=i.slice(0,s-1),l=i.slice(s-1,s),c=i.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function J1(e){return ar(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function e2(e,t){if(fe(e,()=>e.linkProgram(t)),!X().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function wd(e,t){if(fe(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function t2(e,t){let n=ar(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),fe(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function n2(e,t){let n=ar(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),fe(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function IX(){return X().getNumber("WEBGL_VERSION")===2?1:4}function s2(e){return ar(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function r2(e,t){let n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function a2(e){return ar(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function _g(e,t,n,s,r,a,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),fe(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i)),fe(e,()=>e.enableVertexAttribArray(o)),!0)}function i2(e,t,n){d2(e,n),fe(e,()=>e.activeTexture(e.TEXTURE0+n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function CX(e,t){d2(e,t),fe(e,()=>e.activeTexture(e.TEXTURE0+t)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function o2(e,t,n){return ar(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function u2(e,t,n){return e.getUniformLocation(t,n)}function l2(e,t,n,s){fe(e,()=>i2(e,t,s)),fe(e,()=>e.uniform1i(n,s))}function NX(e){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),fe(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function kd(e,t,n){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Ag(e,t){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Zu(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+c2(e,t))}function c2(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ar(e,t,n){let s=fe(e,()=>t());if(s==null)throw new Error(n);return s}function d2(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Ca(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function Na(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Sd(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Ca(e),...Na(e)]),t}function h2(e,t=!1){let n=X().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?w.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let s=w.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=Ca(e),a=2,i=2;return e.length&&([a,i]=Na(e)),s=r*(a/2)*(i/2),w.sizeToSquarishShape(s).map(o=>o*2)}return w.sizeToSquarishShape(s)}function dd(e){return e%2===0}function bl(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||dd(n)&&dd(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&dd(e[0])&&dd(t[0])}var Id,Cd;function p2(e){if(Id==null){let t=Ns(e);Id=t.getParameter(t.MAX_TEXTURE_SIZE)}return Id}function TX(){Id=null}function $X(){Cd=null}function f2(e){if(Cd==null){let t=Ns(e);Cd=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Cd)}function m2(e){if(e===0)return 0;let t,n=Ns(e);return Kn(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Kn(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Kn(e,t){return e.getExtension(t)!=null}function Eg(e){try{if(Ns(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function g2(e){if(e===0)return!1;let t=Ns(e);if(e===1){if(!Kn(t,"OES_texture_float"))return!1}else if(!Kn(t,"EXT_color_buffer_float"))return!1;return Rg(t)}function b2(e){if(e===0)return!1;let t=Ns(e);if(e===1){if(!Kn(t,"OES_texture_float")||!Kn(t,"WEBGL_color_buffer_float"))return!1}else{if(Kn(t,"EXT_color_buffer_float"))return Rg(t);let s="EXT_color_buffer_half_float";if(Kn(t,s)){let r=t.getExtension(s);return _X(t,r)}return!1}return Rg(t)}function Rg(e){let t=Qv(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),i}function _X(e,t){let n=Qv(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(i),o}function y2(e){return e!==2?!1:Ns(e).fenceSync!=null}function mu(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Ne=X();Ne.registerFlag("HAS_WEBGL",()=>Ne.getNumber("WEBGL_VERSION")>0);Ne.registerFlag("WEBGL_VERSION",()=>Eg(2)?2:Eg(1)?1:0);Ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ne.get("WEBGL_VERSION")===2);Ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ne.registerFlag("WEBGL_PACK",()=>Ne.getBool("HAS_WEBGL"));Ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_CLIP",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_REDUCE",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_CONV_IM2COL",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>p2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>f2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Ne.getNumber("WEBGL_VERSION");return e===0?0:m2(e)});Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Lh.isMobile());Ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>g2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ne.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>b2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>y2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Lh.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ne.registerFlag("WEBGL_EXP_CONV",()=>!1);function wn(){let e,t,n,s,r,a,i,o,u,l;return X().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function $i(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let i=`int ${e[a]} = ${n} / ${r}`,o=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${i}; ${o};`}).join("")}function Ip(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let i=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,o=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${i}; ${o};`}).join("")}function AX(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function EX(e,t,n="index"){let s=e.map((a,i)=>i),r=AX(s,t);return r.map((a,i)=>{let o=`int ${e[i]} = ${n} / ${r[i]}`,u=i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${r[i]}`:`index -= ${e[i]} * ${r[i]}`;return`${o}; ${u};`}).join("")}function ex(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function tx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var v2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:x2}=I;function RX(e,t,n){let s=[];if(e.forEach(p=>{let f=w.sizeFromShape(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),n.enableShapeUniforms){let{uniformShape:m}=nx(n.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(p=>DX(p,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=wn(),u=PX(o),l,c,h=MX(o);return t.isPacked?(l=FX(t.logicalShape,i,n.enableShapeUniforms),c=zX(o)):(l=OX(t.logicalShape,i,n.enableShapeUniforms),c=LX(o)),n.packedInputs&&(h+=UX),[h,u,c,r,l,a,n.userCode].join(`
`)}function gu(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return t8(e,t);case 1:return s8(e,t);case 2:return a8(e,t);case 3:return o8(e,t);case 4:return l8(e,t);case 5:return c8(e);case 6:return d8(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function w2(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return e8(e);case 1:return n8(e,t);case 2:return r8(e,t);case 3:return i8(e,t);default:return u8(e,t)}}function DX(e,t,n=!1,s){let r="";n?r+=w2(e,s):r+=gu(e,s);let a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(n?r+=h8(e,t):r+=p8(e,t)),r}function FX(e,t,n){switch(e.length){case 0:return k2();case 1:return GX(e,t,n);case 2:return QX(e,t,n);case 3:return qX(e,t,n);default:return KX(e,t,n)}}function OX(e,t,n){switch(e.length){case 0:return k2();case 1:return HX(e,t,n);case 2:return JX(e,t,n);case 3:return jX(e,t,n);case 4:return XX(e,t,n);case 5:return YX(e,t);case 6:return ZX(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function PX(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function LX(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function zX(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function MX(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${BX}
    ${VX}
    ${WX}
  `}var BX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,VX=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,WX=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,UX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function k2(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function GX(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function HX(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function qX(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function jX(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Ip(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=$i(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function KX(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),i=a,o="",u="b, r, c";for(let l=2;l<e.length-1;l++)i*=e[e.length-l-1],o=`
      int b${l} = index / ${i};
      index -= b${l} * ${i};
    `+o,u=`b${l}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${u});
    }
  `}function XX(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Ip(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=$i(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function YX(e,t){let n=$i(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function ZX(e,t){let n=$i(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function QX(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function JX(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function _i(e){return`offset${e}`}function e8(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=wn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function t8(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=_i(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,u]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${o}, ${u}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function n8(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=wn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function s8(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${bu(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],i=r[1];if(i===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=_i(n);return i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function r8(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=wn();if(a!=null&&w.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;let l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function a8(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&w.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let d=a[0],p=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:i,keptDims:o}=w.squeezeShape(n),u=i;if(u.length<n.length){let d=yu(e,u),p=["row","col"];return`
      ${gu(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${vu(p,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${bu(e)}
      }
    `;let l=a[0],c=a[1],h=_i(s);return c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${s}, uv);
    }
  `:l===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${h};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function i8(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let d=n.slice(1),p=[1,2],f=yu(e,d),m=["b","row","col"];return`
        ${w2(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${vu(m,p)});
        }
      `}let o=wn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `;let u=i[0],l=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${h}, ${c}, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `}function o8(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=w.squeezeShape(n),l=o;if(l.length<n.length){let m=yu(e,l),g=["row","col","depth"];return`
        ${gu(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${vu(g,u)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${i}, 1)));
        ${bu(e)}
      }
    `;let c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&p==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=_i(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${i} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function u8(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=wn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2),d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)p=`int b${m}, `+p,d*=a[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});
      return ${r.texture2D}(${n}, uv);
    }
  `}function l8(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=w.squeezeShape(n);if(u.length<n.length){let y=yu(e,u),v=["row","col","depth","depth2"];return`
      ${gu(y,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${vu(v,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${a}, 1)));
        ${bu(e)}
      }
    `;let c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===a&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;let b=_i(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}function c8(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=w.squeezeShape(t);if(u.length<t.length){let m=yu(e,u),g=["row","col","depth","depth2","depth3"];return`
      ${gu(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${vu(g,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${a}, ${r})) +
          depth3;
        ${bu(e)}
      }
    `;let c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(p===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=_i(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${p}, index);
      return sampleTexture(${n}, uv);
    }
  `}function d8(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=w.squeezeShape(t);if(r.length<t.length){let g=yu(e,r),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${gu(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${vu(b,a)});
      }
    `}let i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${l}, ${u}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${bu(e)}
      }
    `;let h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===i&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=_i(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${l} + depth * ${u} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function bu(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function h8(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=x2(e.shapeInfo.logicalShape,t.logicalShape),u=at(i),l=i-a,c,h=["x","y","z","w","u","v"];a===0?c="":i<2&&o.length>=1?c="coords = 0;":c=o.map(y=>`coords.${h[y+l]} = 0;`).join(`
`);let d="";i<2&&a>0?d="coords":d=e.shapeInfo.logicalShape.map((y,v)=>`coords.${h[v+l]}`).join(", ");let p="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,b=w.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!b)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)i===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(o.length){let y=a-2,v=a-1;o.indexOf(y)>-1&&o.indexOf(v)>-1?p="return vec4(outputValue.x);":o.indexOf(y)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(v)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${p}
    }
  `}function p8(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let l=at(u),c=x2(e.shapeInfo.logicalShape,t.logicalShape),h=u-o,d,p=["x","y","z","w","u","v"];o===0?d="":u<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${p[m+h]} = 0;`).join(`
`);let f="";return u<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+h]}`).join(", "),`
    float ${r}() {
      ${l} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function at(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function nx(e,t,n){let{newShape:s,keptDims:r}=w.squeezeShape(t),a=t.length,i=e&&a===3&&t[0]===1,o=i?t.slice(1):s,u=!e&&a>1&&!w.arraysEqual(t,n)&&s.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:r}}function yu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function vu(e,t){return t.map(n=>e[n]).join(", ")}function f8(e,t,n,s){let r=n.map((c,h)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:d}}),a=r.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=RX(r,i,t),u=Q1(e.gl,o),l=e.createProgram(u);return X().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,...S2(e,t,l)}}function S2(e,t,n){let s={},r={},a={},i=[],o,u,l,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),X().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let p=0;p<t.variableNames.length;p++){let f=t.variableNames[p];s[f]=e.getUniformLocation(n,f,d),s[`offset${f}`]=e.getUniformLocation(n,`offset${f}`,d),t.enableShapeUniforms&&(r[`${f}Shape`]=e.getUniformLocation(n,`${f}Shape`,d),a[`${f}TexShape`]=e.getUniformLocation(n,`${f}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),l=e.getUniformLocation(n,"outShapeStrides",d),u=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((p,f)=>{i[f]=e.getUniformLocation(n,p.name,d)}),{uniformLocations:s,customUniformLocations:i,infLoc:c,nanLoc:h,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}}function qw(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],i=a.shape;if(!w.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(n.isUniform&&a.isUniform)return;let o=n.texShape,u=a.isUniform?null:a.texData.texShape;if(!w.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}function m8(e,t,n,s,r){t.program.enableShapeUniforms||(qw(t.inShapeInfos,n),qw([t.outShapeInfo],[s]));let a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),X().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((u,l)=>{let c=t.program.variableNames[l],h=t.uniformLocations[c],d=t.uniformLocations[`offset${c}`],p=t.inShapesLocations[`${c}Shape`],f=t.inTexShapesLocations[`${c}TexShape`];if(p){let{uniformShape:m}=nx(t.program.packedInputs,u.shape,u.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(p,new Int32Array(m));break;case 2:e.gl.uniform2iv(p,new Int32Array(m));break;case 3:e.gl.uniform3iv(p,new Int32Array(m));break;case 4:e.gl.uniform4iv(p,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),h!=null){if(u.isUniform){if(w.sizeFromShape(u.shape)<2)e.gl.uniform1f(h,u.uniformValues[0]);else{let m=u.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(h,m)}return}u.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture.texture,h,l)}});let o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let u=w.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((u,l)=>{let c=t.customUniformLocations[l],h=r[l];if(u.type==="float")e.gl.uniform1fv(c,h);else if(u.type==="vec2")e.gl.uniform2fv(c,h);else if(u.type==="vec3")e.gl.uniform3fv(c,h);else if(u.type==="vec4")e.gl.uniform4fv(c,h);else if(u.type==="int")e.gl.uniform1iv(c,h);else if(u.type==="ivec2")e.gl.uniform2iv(c,h);else if(u.type==="ivec3")e.gl.uniform3iv(c,h);else if(u.type==="ivec4")e.gl.uniform4iv(c,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}),e.executeProgram()}function g8(e,t,n){let s="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:l,uniformShape:c,keptDims:h}=nx(e.packedInputs,i.shape,u),d="",p="",f="";if(c.length===1&&e.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${k[0]>1}_${k[1]>1}`}else if(c.length===2&&!e.packedInputs)p=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!e.packedInputs){let k=w.computeStrides(c);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let m=i.shape.length,g=c.length===2&&w.arraysEqual(i.shape,u),b=w.sizeFromShape(i.shape)===1,y=I.getBroadcastDims(i.shape,n.shape),v=!e.packedInputs&&m===n.shape.length&&w.arraysEqual(u,n.texData.texShape),x=e.packedInputs||c.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${m}_${v}_${l?h:""}_${c.length}_${b}_${y}_${g}_${d}_${p}_${f}_${x}_${o}`}else{let u=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${u}_${o}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${X().getNumber("WEBGL_VERSION")}`,a}function kn(e){return X().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var b8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=wn();this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ip(["r","c","d"],e):$i(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},y8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=wn();this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ip(["r","c","d"],e):$i(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},v8=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=wn();this.outputShape=e,this.userCode=`
      ${v2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},x8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=wn();this.outputShape=e,this.userCode=`
      ${v2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},w8=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=wn();this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?tx():ex(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},k8=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=wn();this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let o=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?tx():ex(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},S8={};Ee(S8,{bindVertexProgramAttributeStreams:()=>R2,createBufferFromOutputTexture:()=>O2,createFloat16MatrixTexture:()=>$2,createFloat16PackedMatrixTexture:()=>E2,createFloat32MatrixTexture:()=>T2,createIndexBuffer:()=>N2,createPackedMatrixTexture:()=>A2,createUnsignedBytesMatrixTexture:()=>_2,createVertexBuffer:()=>C2,createVertexShader:()=>I2,downloadByteEncodedFloatMatrixFromOutputTexture:()=>L2,downloadFloat32MatrixFromBuffer:()=>P2,downloadMatrixFromPackedOutputTexture:()=>M2,downloadPackedMatrixFromBuffer:()=>z2,getInternalFormatForFloat16MatrixTexture:()=>rx,getInternalFormatForFloat16PackedMatrixTexture:()=>ox,getInternalFormatForFloat32MatrixTexture:()=>sx,getInternalFormatForPackedMatrixTexture:()=>ix,getInternalFormatForUnsignedBytesMatrixTexture:()=>ax,uploadDenseMatrixToTexture:()=>D2,uploadPixelDataToTexture:()=>F2});function I2(e){let t=wn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Z1(e,n)}function C2(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return t2(e,t)}function N2(e){let t=new Uint16Array([0,1,2,2,1,3]);return n2(e,t)}function pc(e,t,n,s,r,a){r2(t,n);let i=s2(e),o=e.TEXTURE_2D;return fe(e,()=>e.bindTexture(o,i)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),X().getNumber("WEBGL_VERSION")===1?fe(e,()=>e.texImage2D(o,0,s,t,n,0,r,a,null)):fe(e,()=>e.texStorage2D(o,1,s,t,n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function sx(e){return e.internalFormatFloat}function T2(e,t,n,s){let[r,a]=hc(t,n);return pc(e,r,a,sx(s),s.textureFormatFloat,e.FLOAT)}function rx(e){return e.internalFormatHalfFloat}function $2(e,t,n,s){let[r,a]=hc(t,n);return pc(e,r,a,rx(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function ax(e){return e.downloadTextureFormat}function _2(e,t,n,s){let[r,a]=hc(t,n);return pc(e,r,a,ax(s),e.RGBA,e.UNSIGNED_BYTE)}function ix(e){return e.internalFormatPackedFloat}function A2(e,t,n,s){let[r,a]=fu(t,n);return pc(e,r,a,ix(s),e.RGBA,e.FLOAT)}function ox(e){return e.internalFormatPackedHalfFloat}function E2(e,t,n,s){let[r,a]=fu(t,n);return pc(e,r,a,ox(s),e.RGBA,s.textureTypeHalfFloat)}function R2(e,t,n){return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),_g(e,t,"clipSpacePos",n,3,20,0)&&_g(e,t,"uv",n,2,20,12)}function D2(e,t,n,s,r,a){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,u;r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(r),X().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,o,i)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function F2(e,t,n){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?X().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):X().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function O2(e,t,n,s){let r=e.createBuffer();fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let o=4*4*t*n;return fe(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ)),fe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function P2(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function L2(e,t,n,s){let[r,a]=hc(t,n),i=4,o=new Uint8Array(yX(t*n,i));return fe(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function z2(e,t,n,s,r,a,i,o){let u=e,l=new Float32Array(vX(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function M2(e,t,n){let s=new Float32Array(t*n*4);return fe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var nl=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=X().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Zv(t,e)):this.gl=Ns(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),X().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Yu(this.gl,r),Kn(this.gl,a))this.textureHalfFloatExtension=Yu(this.gl,a);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Kn(this.gl,s))this.colorBufferHalfFloatExtension=Yu(this.gl,s);else if(X().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Kn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Kn(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=C2(this.gl),this.indexBuffer=N2(this.gl),this.framebuffer=a2(this.gl),this.textureConfig=Qv(this.gl,this.textureHalfFloatExtension)}get debug(){return X().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;fe(e,()=>e.finish()),fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.deleteFramebuffer(this.framebuffer)),fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),fe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),T2(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),$2(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),_2(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),F2(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),D2(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),E2(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),A2(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ag(this.gl,this.framebuffer),this.outputTexture=null),fe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>L2(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return z2(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return P2(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=O2(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(X().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>M2(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=I2(t));let n=J1(t);return fe(t,()=>t.attachShader(n,this.vertexShader)),fe(t,()=>t.attachShader(n,e)),e2(t,n),this.debug&&wd(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=R2(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&fe(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&wd(this.gl,this.program),fe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?o2(this.gl,e,t):u2(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),fe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),l2(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=fu(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&wd(this.gl,this.program),Zu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),fe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Yu(this.gl,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=I8(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),kd(this.gl,e,this.framebuffer),this.debug&&Zu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(kd(this.gl,this.outputTexture,this.framebuffer),this.debug&&Zu(this.gl)):Ag(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;kd(s,e,this.framebuffer),this.debug&&Zu(s),this.outputTexture=e,fe(s,()=>s.viewport(0,0,t,n)),fe(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),fe(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function I8(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:C8,bincountImpl:B2,bincountReduceImpl:N8,ceilImpl:T8,concatImpl:$8,equalImpl:_8,expImpl:A8,expm1Impl:E8,floorImpl:R8,gatherNdImpl:D8,gatherV2Impl:F8,greaterImpl:O8,greaterEqualImpl:P8,lessImpl:L8,lessEqualImpl:z8,linSpaceImpl:M8,logImpl:B8,maxImpl:V8,maximumImpl:W8,minimumImpl:U8,multiplyImpl:G8,negImpl:H8,notEqualImpl:q8,prodImpl:j8,rangeImpl:K8,rsqrtImpl:X8,scatterImpl:Y8,sigmoidImpl:Z8,simpleAbsImpl:V2,sliceImpl:Q8,sparseFillEmptyRowsImpl:J8,sparseReshapeImpl:eY,sparseSegmentReductionImpl:W2,sqrtImpl:tY,stridedSliceImpl:nY,stringNGramsImpl:sY,stringSplitImpl:rY,stringToHashBucketFastImpl:aY,subImpl:iY,tileImpl:oY,topKImpl:uY,transposeImpl:ux,uniqueImpl:lY}=Pv;function U2(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function mn(e,t){return t===1?[e]:U2(e,t)}function cY(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var dY=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=kn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=mn("rc",this.rank),n=at(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},G2=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2===1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${hY(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?tx():ex(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function hY(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?EX(["r","c","d"],"inputShape"):$i(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var pY=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=Kw(t,n),r=Xw(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=jw(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let o=this.freeTextures[r].shift();return this.usedTextures[r].push(o),o}let i;return s===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=Kw(n,s),a=Xw(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let i=jw(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=X().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function fY(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function jw(e,t,n,s,r){let a=mY(t,s),i;if(r){let[u,l]=fu(e[0],e[1]);i=u*l}else{let[u,l]=hc(e[0],e[1]);i=u*l}let o=fY(n,a);return i*o}function mY(e,t){switch(e){case 3:return ix(t);case 4:return ox(t);case 1:return sx(t);case 0:return rx(t);case 2:return ax(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function gY(e){return X().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}function Kw(e,t){if(e===1)return 3;if(e===0||e==null)return gY(t);if(e===3||e===2)return 2;throw new Error(`Unknown logical texture type ${e}`)}function Xw(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Zs=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},ls="if (isnan(x)) return x;",bY="return x;",Yw="return abs(x);",yY="return (x >= 0.0) ? x : (exp(x) - 1.0);",vY=ls+`
  return (x < 0.0) ? 0.0 : x;
`,xY=ls+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Yi="return x;",wY="return 1.0 / (1.0 + exp(-1.0 * x));",kY="return x;",SY=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,IY=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CY=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,NY="return 1.0 / (1.0 + exp(-1.0 * x));",oa=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},TY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length);let t=e.length,n=mn("rc",t),s=at(t),r=cY(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},$Y=Ts.whereImpl,_Y=1e-7,AY=1e-4,hd={};function EY(e){return e in hd||(hd[e]={}),hd[e]}var RY=X().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),DY=600;function FY(){return X().global.screen==null?1024:X().global.screen.height*X().global.screen.width*window.devicePixelRatio*DY/1024/1024}var H2=class extends xl{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!X().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof nl)t=e;else{let n=Ns(X().getNumber("WEBGL_VERSION"),e);t=new nl(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Ns(X().getNumber("WEBGL_VERSION"));t=new nl(n),this.binaryCache=EY(X().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new pY(this.gpgpu),this.numMBBeforeWarning=FY(),this.texData=new fh(this,ys())}nextDataId(){return H2.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((X().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||X().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:1,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(X().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:1,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(a!=null){let h;o?h=new oa(i,Yi):h=new Zs(i,Yi);let d=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:s}],s),p=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),p}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let u=this.activeTimers!=null,l;u&&(l=w.now());let c;if(s==="complex64"){let h=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);c=I.mergeRealAndImagArrays(h,d)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=w.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let p=this.pendingRead.get(e);return new Promise(f=>p.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(r!=null){let p;o?p=new oa(s,Yi):p=new Zs(s,Yi);let f=this.runWebGLProgram(p,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(X().getBool("DEBUG")&&!X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&X().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,l;if(a!=="complex64"&&X().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let p=this.texData.get(l.dataId);u=this.gpgpu.createBufferFromTexture(p.texture.texture,...cd(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(a==="complex64"){let p=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),f=p[0],m=p[1];c=I.mergeRealAndImagArrays(f,m)}else if(u==null)c=this.getValuesFromTexture(e);else{let p=w.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(u,p)}if(l!=null&&this.disposeIntermediateTensorInfo(l),u!=null){let p=this.gpgpu.gl;fe(p,()=>p.deleteBuffer(u))}let h=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(p=>p(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ys().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){let n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:u}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;o?d=new oa(r,Yi):d=new Zs(r,Yi);let p=this.runWebGLProgram(d,[{dataId:e,shape:r,dtype:i}],i),f=this.readToGPU(p,t);return this.disposeIntermediateTensorInfo(p),f}if(u==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=this.decode(e,t.customTexShape),c=ys().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return{tensorRef:c,...h.texture}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>w.decodeString(s));return _e(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!X1(n))throw X().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=w.sizeFromShape(t);if(X().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let h=this.decode(e),d=this.texData.get(h.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...cd(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(h),p}let a=X().getBool("WEBGL_PACK")&&s===!0,i=a?Sd(t):t,o=a?new x8(i):new v8(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),a=w.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(r);i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(X().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=RY){return X().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&w.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){I.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return $Y(e.shape,t)}packedUnaryOp(e,t,n){let s=new oa(e.shape,t),r=this.compileAndRun(s,[e],n);return ys().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=V2(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(X().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Yw,e.dtype);let t=new Zs(e.shape,Yw),n=this.compileAndRun(t,[e]);return ys().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return ys().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new TY(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new dY(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Ca(e.shape),...Na(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Ca(t),...Na(t)],a=new G2(r,n),i=!0,o=[n],u=this.runWebGLProgram(a,[s],e.dtype,o,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(t!=null){let h=w.sizeFromShape(r),d=t[0]*t[1]*4;w.assert(h<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Sd(r),o;s?o=new y8(i):o=new b8(i);let u=!0,l=[t!=null?t:cd(i)],c=this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,u,t);return{dtype:a,shape:r,dataId:c.dataId}}runWebGLProgram(e,t,n,s,r=!1,a){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===0){let g=a!=null?a:cd(e.outputShape);o.texShape=g.map(b=>b*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),w.sizeFromShape(i.shape)===0)return o.values=w.getTypedArrayFromDType(i.dtype,0),i;let u=[],l=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(g.dataId);if(b.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=X().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!b.isPacked!=!!e.packedInputs)g=b.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),b=this.texData.get(g.dataId);else if(b.isPacked&&!bl(b.shape,g.shape)){let y=g,v=g.shape;g.shape=b.shape,g=this.packedReshape(g,v),u.push(g),b=this.texData.get(g.dataId),y.shape=v}return{shape:g.shape,texData:b,isUniform:!1}});this.uploadToGPU(i.dataId);let c={shape:i.shape,texData:o,isUniform:!1},h=g8(e,l,c),d=this.getAndSaveBinary(h,()=>f8(this.gpgpu,e,l,c)),p=this.activeTimers!=null,f;p&&(f=this.startTimer()),X().get("ENGINE_COMPILE_ONLY")||m8(this.gpgpu,d,l,c,s),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=X().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!X().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&r===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(X().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Y(()=>{if(!X().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=X().getBool("DEBUG");X().set("DEBUG",!1);let t=this.abs(Se(1e-8)).dataSync()[0];if(X().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?_Y:AY}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(a!=null)return;let u=this.activeTimers!=null,l;u&&(l=w.now());let c=t.texShape;if(c==null&&(c=h2(n,o),t.texShape=c),r!=null){let h=Sd(n),d,p=c[1],f=c[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(o||!m)&&([p,f]=fu(c[0],c[1])),o?d=new k8(h,m):d=new w8(h,m);let g=m?[f,p]:c,b=this.makeTensorInfo(g,s),y=this.texData.get(b.dataId);m?y.usage=2:y.usage=1,y.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),p,f,r);let v=[[f,p]],x=!0,k=this.runWebGLProgram(d,[b],s,v,x),C=this.texData.get(k.dataId);t.texShape=C.texShape,t.isPacked=C.isPacked,t.usage=C.usage,X().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(t.texture=C.texture,t.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(b),u&&(this.uploadWaitMs+=w.now()-l)}else{let h=this.acquireTexture(c,i,s,o);t.texture=h}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=OY(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(r){throw r}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await US(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Jv(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}=S2(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}},Cp=H2;Cp.nextDataId=0;function OY(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}Lh.isBrowser()&&au("webgl",()=>new Cp,2);var q2=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,go=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=kn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Np=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,fc=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=I.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=kn(r);let a="";if(s)if(r===0||w.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${at(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let o=mn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${o[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${o[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${o[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${o[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Un(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var PY={kernelName:Xa,backendName:"webgl",kernelFunc:Un};function Br(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=Un({inputs:{x:s},backend:n}),u=Un({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}var LY={kernelName:vh,backendName:"webgl",kernelFunc:Br},j2="return (a < 0.) ? b * a : a;",K2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function zY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",w.createScalarValue(a,"float32")),o=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fc(K2,r.shape,i.shape):new go(j2,r.shape,i.shape),u=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),u}var MY={kernelName:Ya,backendName:"webgl",kernelFunc:zY},X2="return (a < 0.) ? b * a : a;",Y2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function BY(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fc(Y2,s.shape,r.shape):new go(X2,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var VY={kernelName:ui,backendName:"webgl",kernelFunc:BY},xu="if (isnan(x)) return x;",WY=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,UY=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Ke({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:i}=r,o=a,u=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let h=o.texData.get(i.dataId),d=n(h.values,u);return o.makeTensorInfo(i.shape,u,d)}let l=X().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return l?c=new oa(i.shape,t):c=new Zs(i.shape,e),o.runWebGLProgram(c,[i],u)}}function Jt({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{let{a:u,b:l}=i,c=o;if(s&&u.dtype==="complex64"){let f=c.texData.get(u.dataId),m=c.texData.get(l.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(v=>{let[x,k]=v,C={dataId:x.dataId,dtype:x.dtype,shape:u.shape},$={dataId:k.dataId,dtype:k.dtype,shape:l.shape},A=new go(e,u.shape,l.shape);return c.runWebGLProgram(A,[C,$],bn(x.dtype,k.dtype))}),y=Br({inputs:{real:g,imag:b},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(b),y}let h=a||bn(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([u,l]))&&r!=null){let f=c.texData.get(u.dataId).values,m=c.texData.get(l.dataId).values,g=u.dtype==="string"?I.fromUint8ToStringArray(f):f,b=u.dtype==="string"?I.fromUint8ToStringArray(m):m,[y,v]=r(u.shape,l.shape,g,b,h),x=c.makeTensorInfo(v,h),k=c.texData.get(x.dataId);return k.values=y,x}let d=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,p;return d?p=new fc(t,u.shape,l.shape,n):p=new go(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function yl(e,t=!1){if(e==="linear")return t?kY:bY;if(e==="relu")return t?IY:vY;if(e==="elu")return t?SY:yY;if(e==="relu6")return t?CY:xY;if(e==="prelu")return t?Y2:X2;if(e==="leakyrelu")return t?K2:j2;if(e==="sigmoid")return t?NY:wY;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var Z2=class{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=kn(this.outputShape.length);let l=s?e[1]:e[2],c=Math.ceil(l/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${y};
          int batchB = ${v};
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${f[0]});
          result += (${p[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${g}

        setOutput(result);
      }
    `}},Zw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Qw=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},Jw="return a * b;";function lx(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=I.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let o=n.texData.get(s.dataId),u=n.texData.get(r.dataId),l=new Qw(Zw.REAL,s.shape,r.shape),c=new Qw(Zw.IMAG,s.shape,r.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:s.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=Br({inputs:{real:d,imag:p},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}if(n.shouldExecuteOnCPU([s,r])){let o=n.texData.get(s.dataId),u=n.texData.get(r.dataId),[l,c]=G8(s.shape,r.shape,o.values,u.values,a),h=n.makeTensorInfo(c,a),d=n.texData.get(h.dataId);return d.values=l,h}let i;return X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new fc(Jw,s.shape,r.shape):i=new go(Jw,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}var GY={kernelName:ai,backendName:"webgl",kernelFunc:lx};function HY(e,t,n){let s=[Ca(e.shape),...Na(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[Ca(t),...Na(t)],i=new G2(a,s),o=!0,u=[s],l=n.runWebGLProgram(i,[r],e.dtype,u,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function he(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=w.sizeFromShape(r.shape),u=w.inferFromImplicitShape(a,o),l=w.sizeFromShape(u);w.assert(o===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let c=i.texData.get(r.dataId);return c.isPacked&&!bl(r.shape,u)&&!(c.texture!==null&&bl(c.shape,u))?HY(r,u,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}var qY={kernelName:Wo,backendName:"webgl",kernelFunc:he},ek=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i=Math.floor(n/4)*4,o=n%4,u="sumValue += dot(values, ones);";if(t!=null){let c=1/t;u=`sumValue += dot(values * ${w.isInt(c)?c.toPrecision(2):c}, ones);`}let l="";r%n>0&&(l=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}},jY=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let l=Math.floor(n/4)*4,c=n%4,h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${c===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${c===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${c===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${u});
      }
    `}};function KY(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=I.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function Ai(e,t,n,s){let r=KY(e.shape),a=e;for(let i=0;i<r.length;i++){let{inSize:o,windowSize:u,outSize:l}=r[i],c,h;n==="mean"?c=i===0?new ek({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new ek({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):c=new jY({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}var XY=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=at(this.rank),r=YY(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function YY(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var ZY=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=at(this.rank),r=U2("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=r[l];let i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${o}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${o}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function Tp(e,t,n){let s=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZY(e.shape,t):new XY(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function QY(e,t,n,s){let r=t,a=e.shape.length,i=w.parseAxisParam(r,e.shape),o=i,u=I.getAxesPermutation(o,a),l=u!=null,c=e;l&&(c=Tp(e,u,s),o=I.getInnerMostAxes(o.length,a)),I.assertAxesAreInnerMostDims("sum",o,a);let[h,d]=I.computeOutAndReduceShapes(c.shape,o),p=h;n&&(p=I.expandShapeToKeepDim(h,i));let f=w.sizeFromShape(d),g=w.sizeFromShape(e.shape)/f,b=he({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),y=Ph(e.dtype),v=Ai(b,y,"sum",s),x=he({inputs:{x:v},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),l&&s.disposeIntermediateTensorInfo(c),x}function $p(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return QY(r,a,i,n)}var JY={kernelName:yi,backendName:"webgl",kernelFunc:$p};function vn(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let c=0;c<u.length;c++)u[c]=r.shape[a[c]];let l;if(i.shouldExecuteOnCPU([r])){let h=i.texData.get(r.dataId).values,d=ux(h,r.shape,r.dtype,a,u);l=i.makeTensorInfo(u,r.dtype);let p=i.texData.get(l.dataId);p.values=d}else l=Tp(r,a,i);return l}var e9={kernelName:Qs,backendName:"webgl",kernelFunc:vn},Q2=1e3;function ih({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),x=iu.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);w.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[b,h,p]:[b,p,h],C=s?[y,f,d]:[y,d,f],$=he({inputs:{x:e},backend:r,attrs:{shape:k}}),A=he({inputs:{x:t},backend:r,attrs:{shape:C}}),E=[$,A],O=Math.max(b,y),R=n?$.shape[1]:$.shape[2],D=a!=null,T=i!=null,L=u==="leakyrelu",W=u!=null?yl(u,!0):null,q=D||T||L||W!=null,j;if((p===1||f===1)&&R>Q2&&q===!1){let Q=$,ne=A;n&&(Q=vn({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),E.push(Q)),s&&(ne=vn({inputs:{x:A},backend:r,attrs:{perm:[0,2,1]}}),E.push(ne));let J=f!==1,se=f===1,te=Q;J&&(te=he({inputs:{x:Q},backend:r,attrs:{shape:[O,R,1]}}),E.push(te));let oe=f===1?2:1,re=ne;se&&(re=he({inputs:{x:ne},backend:r,attrs:{shape:[O,1,R]}}),E.push(re));let le=lx({inputs:{a:te,b:re},backend:r});j=$p({inputs:{x:le},backend:r,attrs:{axis:oe,keepDims:!0}}),E.push(le)}else{let Q=bn(e.dtype,t.dtype),ne=new Z2(k,C,[O,p,f],n,s,D,W,T,L),J=[$,A];if(a!=null&&J.push(a),T&&J.push(i),L){let se=r.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));J.push(se),E.push(se)}j=r.runWebGLProgram(ne,J,Q)}let K=he({inputs:{x:j},backend:r,attrs:{shape:x}});E.push(j);for(let Q of E)r.disposeIntermediateTensorInfo(Q);return K}function t9(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;return ih({a:r,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}var n9={kernelName:fa,backendName:"webgl",kernelFunc:t9},tk="return abs(x);";function s9(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),i=V2(a.values);return n.makeTensorInfo(s.shape,s.dtype,i)}let r;return X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new oa(s.shape,tk):r=new Zs(s.shape,tk),n.runWebGLProgram(r,[s],s.dtype)}var r9={kernelName:yo,backendName:"webgl",kernelFunc:s9},a9=ls+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,i9=Ke({opSnippet:a9}),o9={kernelName:wl,backendName:"webgl",kernelFunc:i9},u9=ls+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,l9=Ke({opSnippet:u9}),c9={kernelName:kl,backendName:"webgl",kernelFunc:l9},nk="return a + b;",d9=Jt({opSnippet:nk,packedOpSnippet:nk,supportsComplex:!0,cpuKernelImpl:C8}),h9={kernelName:Ar,backendName:"webgl",kernelFunc:d9},p9=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},f9=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function Nd(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Un({inputs:{x:s[0]},backend:n});if(s.length>X().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(s.length/2),l=Nd({inputs:s.slice(0,u),backend:n}),c=Nd({inputs:s.slice(u),backend:n});return Nd({inputs:[l,c],backend:n})}let r=s.map(u=>u.dtype).reduce((u,l)=>bn(u,l)),a=s.map(u=>u.shape),o=X().getBool("WEBGL_PACK")?new f9(s[0].shape,a):new p9(s[0].shape,a);return n.runWebGLProgram(o,s,r)}var m9={kernelName:Aa,backendName:"webgl",kernelFunc:Nd};function g9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=I.getAxesPermutation(l,o),h=r;c!=null&&(h=vn({inputs:{x:r},backend:n,attrs:{perm:c}}),l=I.getInnerMostAxes(l.length,o)),I.assertAxesAreInnerMostDims("all",l,o);let[d,p]=I.computeOutAndReduceShapes(h.shape,l),f=w.sizeFromShape(p),m=he({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Ai(m,m.dtype,"all",n),b;if(i){let y=I.expandShapeToKeepDim(d,u);b=he({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),b}var b9={kernelName:Sl,backendName:"webgl",kernelFunc:g9};function y9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=I.getAxesPermutation(l,o),h=r;c!=null&&(h=vn({inputs:{x:r},backend:n,attrs:{perm:c}}),l=I.getInnerMostAxes(l.length,o)),I.assertAxesAreInnerMostDims("any",l,o);let[d,p]=I.computeOutAndReduceShapes(h.shape,l),f=w.sizeFromShape(p),m=he({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Ai(m,m.dtype,"any",n),b;if(i){let y=I.expandShapeToKeepDim(d,u);b=he({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),b}var v9={kernelName:Il,backendName:"webgl",kernelFunc:y9},x9=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},w9=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,u=at(o),l=mn("coords",o),c,h;if(a===1){h=o+1;let $=at(h);c=`
        ${$} sourceLocR = ${$}(${l.join()}, 0);
        ++${l[o-1]};
        ${$} sourceLocG = ${$}(${l.join()}, 0);
        ++${l[o-2]};
        ${$} sourceLocA = ${$}(${l.join()}, 0);
        --${l[o-1]};
        ${$} sourceLocB = ${$}(${l.join()}, 0);
        --${l[o-2]};`}else h=o,c=`
        ${u} sourceLocR = coords;
        ++${l[o-1]};
        ${u} sourceLocG = coords;
        ++${l[o-2]};
        ${u} sourceLocA = coords;
        --${l[o-1]};
        ${u} sourceLocB = coords;
        --${l[o-2]};`;let d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map($=>"int "+$),m=mn("sourceLocR",h-1).concat("inIdx.r"),g=mn("sourceLocG",h-1).concat("inIdx.g"),b=mn("sourceLocB",h-1).concat("inIdx.b"),y=mn("sourceLocA",h-1).concat("inIdx.a"),v=n==="max"?"greaterThan":"lessThan",x=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,C=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${x}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function J2(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let i=I.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},u=new x9(o,n,s==null),l=[t];s!=null&&l.push(s);let c=e.runWebGLProgram(u,l,"int32");if(c.shape[1]===1)return c;let h=J2(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function eN(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],i=I.computeOptimalWindowSize(a),o=new w9(r,i,n,s==null),u=s==null?[t]:[t,s],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){let c=eN(e,t,n,l);return e.disposeIntermediateTensorInfo(l),c}return l}function tN(e,t,n,s){let r=[n];if(I.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!X().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,u=t;o&&(u=e.unpackTensor(t),a.push(u));let[l,c]=I.computeOutAndReduceShapes(u.shape,r),h=w.sizeFromShape(c),d=he({inputs:{x:u},backend:e,attrs:{shape:[-1,h]}});a.push(d);let p=J2(e,d,s);a.push(p);let f=he({inputs:{x:p},backend:e,attrs:{shape:l}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return eN(e,t,s)}function k9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=vn({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let c=tN(n,u,i[0],"max");return l.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}var S9={kernelName:Ea,backendName:"webgl",kernelFunc:k9};function I9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=vn({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let c=tN(n,u,i[0],"min");return l.forEach(h=>n.disposeIntermediateTensorInfo(h)),c}var C9={kernelName:Cl,backendName:"webgl",kernelFunc:I9},N9=ls+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,T9=Ke({opSnippet:N9}),$9={kernelName:Nl,backendName:"webgl",kernelFunc:T9},_9=ls+"return log(x + sqrt(x * x + 1.0));",A9=Ke({opSnippet:_9}),E9={kernelName:Tl,backendName:"webgl",kernelFunc:A9},R9=ls+`
  return atan(x);
`,D9=Ke({opSnippet:R9}),F9={kernelName:$l,backendName:"webgl",kernelFunc:D9},O9=WY+`
  return atan(a, b);
`,P9=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+UY+`
  return result;
`,L9=Jt({opSnippet:O9,packedOpSnippet:P9}),z9={kernelName:Al,backendName:"webgl",kernelFunc:L9},M9=ls+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,B9=Ke({opSnippet:M9}),V9={kernelName:_l,backendName:"webgl",kernelFunc:B9},vl=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(f||(b="-1.0 / 1e-20"),n){let $=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let y="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let x=Math.floor(a/4)*4,k=a%4,C=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${p});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${x};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${v});
      }
    `}},cx=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let y=t==="avg",v="0.0";if(y||(v="-1.0 / 1e-20"),n){let E=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${u});
        const ivec3 pads = ivec3(${m}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${E} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let C=Math.floor(a/4)*4,$=a%4,A=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${u});
      const ivec3 pads = ivec3(${m}, ${g}, ${b});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${A}
            }

            int xC = xCCorner + ${C};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${A}
            }
          }
          setOutput(${k});
        }
      }
    `}};function W9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;mu(r,"avgPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(r.shape,a,i,l,o,u);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return Un({inputs:{x:r},backend:n});let h=new vl(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}var U9={kernelName:Ra,backendName:"webgl",kernelFunc:W9};function G9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s,c=[1,1,1],h=I.computePool3DInfo(r.shape,a,i,c,o,u,l),d=new cx(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var H9={kernelName:yh,backendName:"webgl",kernelFunc:G9},q9=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${c});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},j9=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function K9(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s,h=[1,1,1],d=I.computePool3DInfo(i.shape,o,u,h,l,c),p=new j9(d);return n.runWebGLProgram(p,[r],i.dtype)}var X9={kernelName:Xg,backendName:"webgl",kernelFunc:K9};function Y9(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;mu([r,a],"avgPoolGrad");let{filterSize:o,strides:u,pad:l}=s,c=I.computePool2DInfo(i.shape,o,u,1,l),h=new q9(c);return n.runWebGLProgram(h,[r],i.dtype)}var Z9={kernelName:Kg,backendName:"webgl",kernelFunc:Y9};function Q9(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return ih({a:r,b:a,transposeA:i,transposeB:o,backend:n})}var J9={kernelName:Da,backendName:"webgl",kernelFunc:Q9},eZ=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let i="0.0";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";r!=null&&(I.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},tZ=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";r!=null&&(I.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},nZ=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:i,scale:o}=e;w.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);let l=[s,r,a],c=null;i!=null&&(c=i.shape,l.push(i));let h=null;o!=null&&(h=o.shape,l.push(o));let d=X().getBool("WEBGL_PACK_NORMALIZATION")?new tZ(s.shape,r.shape,a.shape,c,h,u):new eZ(s.shape,r.shape,a.shape,c,h,u);return t.runWebGLProgram(d,l,l[0].dtype)},sZ={kernelName:ja,backendName:"webgl",kernelFunc:nZ},rZ=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=at(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=aZ(this.rank),s,r=e.map((a,i)=>`sourceLoc.${Dg[i]} = start[${i}] + coords.${Dg[i]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},Dg=["x","y","z","w","u","v"];function aZ(e){if(e===1)return"sourceLoc";if(e<=6)return Dg.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var iZ=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=at(this.rank),n=mn("coords",this.rank),s=mn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,c)=>`start[${c}]`).join()});`:e.map((l,c)=>`${s[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function oZ(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=It.computeFlatOffset(t,w.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),a}function wu(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,u]=It.parseSliceParams(r,a,i);if(It.assertParamsValid(r,o,u),w.sizeFromShape(u)===0)return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let h=n.texData.get(r.dataId),d=Q8(h.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,d)}let{isPacked:l}=n.texData.get(r.dataId),c=It.isSliceContinous(r.shape,o,u);if(l||!c){let h=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new iZ(u):new rZ(u),d=[o];return n.runWebGLProgram(h,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),oZ(r,o,u,n)}var uZ={kernelName:jo,backendName:"webgl",kernelFunc:wu},lZ=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=a.reduce((y,v)=>y*v),u=I.getReshaped(r.shape,a,o),l=I.getPermuted(u.length,a.length),c=I.getReshapedPermuted(r.shape,a,o),h=I.getSliceBeginCoords(i,a.length),d=I.getSliceSize(c,i,a.length),p=[],f=he({inputs:{x:r},backend:n,attrs:{shape:u}}),m=vn({inputs:{x:f},backend:n,attrs:{perm:l}}),g=he({inputs:{x:m},backend:n,attrs:{shape:c}}),b=wu({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(y=>n.disposeIntermediateTensorInfo(y)),b},cZ={kernelName:vo,backendName:"webgl",kernelFunc:lZ};function dZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=B2(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}var hZ={kernelName:Yg,backendName:"webgl",kernelFunc:dZ};function pZ(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=I.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var fZ={kernelName:Zg,backendName:"webgl",kernelFunc:pZ},mZ="return float(a != b);",nN=Jt({opSnippet:mZ,cpuKernelImpl:q8,dtype:"bool"}),gZ={kernelName:Po,backendName:"webgl",kernelFunc:nN};function mc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Un({inputs:{x:r.complexTensorInfos.real},backend:n})}var bZ={kernelName:Th,backendName:"webgl",kernelFunc:mc},yZ="return float(int(x));";function vZ(e,t){let n=new Zs(e.shape,yZ),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Fg(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Un({inputs:{x:r},backend:n});let i=Et(r.shape),o=Fg({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Br({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),u}if(r.dtype==="complex64"){let i=mc({inputs:{input:r},backend:n}),o=Fg({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=Un({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32")return vZ(r,n);if(a==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),u=nN({inputs:{a:r,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var xZ={kernelName:Fa,backendName:"webgl",kernelFunc:Fg},sk="return ceil(x);",wZ=Ke({opSnippet:sk,packedOpSnippet:sk,cpuKernelImpl:T8}),kZ={kernelName:Oa,backendName:"webgl",kernelFunc:wZ},SZ=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},IZ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function CZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o;X().getBool("WEBGL_PACK_CLIP")?o=new IZ(r.shape):o=new SZ(r.shape);let u=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,u)}var NZ={kernelName:Er,backendName:"webgl",kernelFunc:CZ},TZ=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function rk(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function $Z(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new TZ(s.shape),i=[rk(s,r.complexTensorInfos.real),rk(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}var _Z={kernelName:xh,backendName:"webgl",kernelFunc:$Z},AZ=class{constructor(e){this.outputShape=[],this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},EZ=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=I.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=at(s),a=mn("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let u=i[t],l=i.slice(-2),c=i.join(),h=`if (${u} < ${o[0]}) {
        return getChannel(
            getT0(${c}), vec2(${l.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];h+=`
        if (${u} < ${o[f]}  && ${u} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${pd(i,u,m)}),
            vec2(${pd(l,u,m)}));
        }`}let d=o.length,p=o[o.length-1];h+=`
        return getChannel(
          getT${d}(${pd(i,u,p)}),
          vec2(${pd(l,u,p)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${h}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function pd(e,t,n){let s=e.indexOf(t);return e.map((a,i)=>i===s?`${a} - ${n}`:a).join()}function _p(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Un({inputs:{x:r.complexTensorInfos.imag},backend:n})}var RZ={kernelName:Ih,backendName:"webgl",kernelFunc:_p};function Qu(e,t,n){let s=e[0].dtype;if(s==="complex64"){let h=e.map(g=>mc({inputs:{input:g},backend:n})),d=e.map(g=>_p({inputs:{input:g},backend:n})),p=Qu(h,t,n),f=Qu(d,t,n),m=Br({inputs:{real:p,imag:f},backend:n});return h.forEach(g=>n.disposeIntermediateTensorInfo(g)),d.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let h=e.map(y=>{let v=w.sizeFromShape(y.shape.slice(t));return he({inputs:{x:y},backend:n,attrs:{shape:[-1,v]}})}),d=h.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),p=I.computeOutShape(h.map(y=>y.shape),1),f=h[0].shape[0]===1,m=$8(d,p,s,f),g=I.computeOutShape(e.map(y=>y.shape),t),b=n.makeTensorInfo(g,s,m);return h.forEach(y=>n.disposeIntermediateTensorInfo(y)),b}let a=X().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>a){let h=[];for(let p=0;p<e.length;p+=a){let f=e.slice(p,p+a);h.push(Qu(f,t,n))}let d=Qu(h,t,n);for(let p of h)n.disposeIntermediateTensorInfo(p);return d}if(X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let h=new EZ(e.map(d=>d.shape),t);return n.runWebGLProgram(h,e,s)}let{tensors2D:i,outShape:o}=DZ(e,t,n),u=new AZ(i.map(h=>h.shape)),l=n.runWebGLProgram(u,i,s);i.forEach(h=>n.disposeIntermediateTensorInfo(h));let c=he({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function DZ(e,t,n){let s=I.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>he({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function sN(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=I.computeOutShape(t.map(l=>l.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(l=>w.sizeFromShape(l.shape)>0);if(o.length===1)return Un({inputs:{x:o[0]},backend:n});let u=o.map(l=>l.shape);return I.assertParamsConsistent(u,a),Qu(o,a,n)}var FZ={kernelName:xo,backendName:"webgl",kernelFunc:sN},rN=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,b=m?2:3,y=m?3:1,v="",x="";n&&(s?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:v=`
          float activation(float x) {
            ${n}
          }
        `,x="result = activation(result);");let k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${o}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${x}
        setOutput(result);
      }
    `}},OZ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},aN=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kn(this.outputShape.length);let a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l,h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<l;m++)h+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;h+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<l;m++)h+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(c+1)/2;m++){let g=m*2;if(h+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<l&&(a%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?h+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<l)){let b=a%2===0?w.nearestLargerEven(o):o;o%2===0&&a%2===1||o%2!==0&&a%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:h+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):b===1?h+=`
                     xC${g+1} = xTexelC${g};
                     `:h+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<l&&(a%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<l&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<l&&(h+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<l&&(h+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<l&&(h+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let d="",p="";n&&(s?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,p="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${f}
         ${p}
         setOutput(result);
       }
     `}},PZ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length);let{dataFormat:n}=t,s=wn(),r=n==="channelsLast",a=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,u="";for(let l=0;l<=1;l++)for(let c=0;c<=1;c++)u+=`
          blockIndex = rc.z + ${c};
          pos = rc.y + ${l};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+c}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+c}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${s.output} = result;
      }
    `}};function oh(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function iN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=e.shape,l=s.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],d=n.outChannels,p=n.dataFormat==="channelsLast",f=!1,m=!1,g,b=[];if(a!=null){let x=oh(a.shape,p);x!=null&&(a=he({inputs:{x:a},backend:s,attrs:{shape:x}}),b.push(a))}if(r!=null){let x=oh(r.shape,p);x!=null&&(r=he({inputs:{x:r},backend:s,attrs:{shape:x}}),b.push(r))}if(!((h===1||d===1)&&c>Q2)&&l.isPacked&&p&&l.texture!=null&&u[2]%2!==0&&w.arraysEqual(l.shape.slice(-3),u.slice(-3))){let x=u[0]*u[1]*(u[2]+1),k={dataId:e.dataId,shape:[1,x,n.inChannels],dtype:e.dtype},C=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,w.assert(bl(l.shape,k.shape),()=>`packed reshape ${l.shape} to ${k.shape} isn't free`);let $=he({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push($);let A=ih({a:k,b:$,backend:s,transposeA:f,transposeB:m,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),E=s.texData.get(A.dataId);w.assert(E.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=C,E.shape=n.outShape,g=Un({inputs:{x:A},backend:s}),g.shape=n.outShape,b.push(A)}else{let x=n.outHeight*n.outWidth,k=he({inputs:{x:e},backend:s,attrs:{shape:p?[n.batchSize,x,n.inChannels]:[n.batchSize,n.inChannels,x]}}),C=he({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),$=ih({a:p?k:C,b:p?C:k,transposeA:!p,transposeB:m,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});g=he({inputs:{x:$},backend:s,attrs:{shape:n.outShape}}),b.push(k),b.push(C),b.push($)}for(let x of b)s.disposeIntermediateTensorInfo(x);return g}function oN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f=p==="channelsLast",m=u*l*c,g=d*h,b=[n.batchSize,m,g],y=!0,v=!1,x=[];if(a!=null){let K=oh(a.shape,f);K!=null&&(a=he({inputs:{x:a},backend:s,attrs:{shape:K}}),x.push(a))}if(r!=null){let K=oh(r.shape,f);K!=null&&(r=he({inputs:{x:r},backend:s,attrs:{shape:K}}),x.push(r))}let k=he({inputs:{x:t},backend:s,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});x.push(k);let C=new PZ(b,n),$=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],A=s.runWebGLProgram(C,[e],"float32",$),E=he({inputs:{x:A},backend:s,attrs:{shape:b}});x.push(A),x.push(E);let O=r!=null,R=a!=null,D=o==="leakyrelu",T=o?yl(o,!0):null,L=new Z2(f?E.shape:k.shape,f?k.shape:E.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],y,v,O,T,R,D),W=f?[E,k]:[k,E];if(r&&W.push(r),R&&W.push(a),D){let K=s.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));W.push(K),x.push(K)}let q=s.runWebGLProgram(L,W,"float32"),j=he({inputs:{x:q},backend:s,attrs:{shape:n.outShape}});x.push(q);for(let K of x)s.disposeIntermediateTensorInfo(K);return j}function LZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s,h=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,h),p;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))p=iN({x:r,filter:a,convInfo:d,backend:n});else if(d.strideWidth<=2&&h==="channelsLast"&&X().getBool("WEBGL_EXP_CONV")){let m=new aN(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(m,[r,a],"float32",g)}else if(X().getBool("WEBGL_CONV_IM2COL"))p=oN({x:r,filter:a,convInfo:d,backend:n});else{let m=new rN(d);p=n.runWebGLProgram(m,[r,a],"float32")}let f=he({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}var zZ={kernelName:Pa,backendName:"webgl",kernelFunc:LZ},MZ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},BZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},VZ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},WZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function UZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=s,h=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(r.shape,c,i,1,o,l,!1,h),p=new MZ(d);return n.runWebGLProgram(p,[r,a],"float32")}var GZ={kernelName:Qg,backendName:"webgl",kernelFunc:UZ};function HZ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,h=I.convertConv2DDataFormat(l),d=I.computeConv2DInfo(i,a.shape,o,1,u,c,!1,h),p=new BZ(d);return n.runWebGLProgram(p,[r,a],"float32")}var qZ={kernelName:La,backendName:"webgl",kernelFunc:HZ};function jZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,l=I.computeConv3DInfo(r.shape,a.shape,i,u,o),c=new OZ(l);return n.runWebGLProgram(c,[r,a],"float32")}var KZ={kernelName:wh,backendName:"webgl",kernelFunc:jZ};function XZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s,l=I.computeConv3DInfo(r.shape,u,i,1,o),c=new VZ(l);return n.runWebGLProgram(c,[r,a],"float32")}var YZ={kernelName:Jg,backendName:"webgl",kernelFunc:XZ};function ZZ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s,l=I.computeConv3DInfo(u,a.shape,o,1,i),c=new WZ(l);return n.runWebGLProgram(c,[r,a],"float32")}var QZ={kernelName:eb,backendName:"webgl",kernelFunc:ZZ},JZ=xu+`
  return cos(x);
`,eQ=Ke({opSnippet:JZ}),tQ={kernelName:za,backendName:"webgl",kernelFunc:eQ},nQ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,sQ=Ke({opSnippet:nQ}),rQ={kernelName:Ma,backendName:"webgl",kernelFunc:sQ},aQ=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];let d=s==="bilinear"?1:0,[p,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,b]=c>1?[`${(i-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,v,x]=h>1?[`${(o-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${v};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${x};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},iQ=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,c=new aQ(r.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[r,a,i],"float32")},oQ={kernelName:ko,backendName:"webgl",kernelFunc:iQ},ak=class{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${ik(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],u="",l="";n?(u=s?`end != ${o-1}`:"end != 0",l=s?"end + 1":"end - 1"):(u=s?`end + pow2 < ${o}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${at(r)} coords = getOutputCoords();
        int end = ${ok(r,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${ok(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${ik(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function ik(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function ok(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function uN(e,t,n,s,r,a){let i=t.shape.length,o=I.getAxesPermutation([s],i),u=t;o!=null&&(u=vn({inputs:{x:t},backend:n,attrs:{perm:o}}));let l=I.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=u.shape[l],h=Un({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let p=new ak(e,u.shape,!1,a),f=[[d]],m=h;h=n.runWebGLProgram(p,[h],h.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){let d=new ak(e,u.shape,r,a),p=h;h=n.runWebGLProgram(d,[h],h.dtype),n.disposeIntermediateTensorInfo(p)}if(o!=null){let d=I.getUndoAxesPermutation(o),p=vn({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(u),p}return h}function uQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return uN("*",r,n,a,i,o)}var lQ={kernelName:wo,backendName:"webgl",kernelFunc:uQ};function cQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return uN("+",r,n,a,i,o)}var dQ={kernelName:Ba,backendName:"webgl",kernelFunc:cQ};function hQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(r.shape.length===1){let u=n.readSync(r.dataId),l=n.readSync(a.dataId),c=B2(u,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,c)}else if(r.shape.length===2){let u=n.bufferSync(r),l=n.bufferSync(a),c=N8(u,l,i,o);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var pQ={kernelName:tb,backendName:"webgl",kernelFunc:hQ},fQ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function mQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],h=u*a,d=l*a,p=c/(a*a),f=i==="NHWC"?[o,h,d,p]:[o,p,h,d],m=new fQ(f,a,i);return n.runWebGLProgram(m,[r],r.dtype)}var gQ={kernelName:So,backendName:"webgl",kernelFunc:mQ},lN=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kn(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,u="",l="";n&&(s?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,l="result = activation(result);");let c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${c}
        ${l}
        setOutput(result);
      }
    `}},cN=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kn(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;d+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let g=0;g<c;g++)d+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(h+1)/2;g++){let b=g*2;if(d+=`
          xC = xCCorner + ${b*u};
          `,o===1){if(b<c&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?d+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<c)){let y=i%2===0?w.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:d+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):y===1?d+=`
                    xC${b+1} = xTexelC${b};
                    `:d+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<c&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<c&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<c&&(d+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<c&&(d+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<c&&(d+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let p="",f="";n&&(s?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:p=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function bQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s,c=u;c==null&&(c=[1,1]),w.assert(I.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let h=I.computeConv2DInfo(r.shape,a.shape,i,c,o,l,!0),d;X().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new cN(h):d=new lN(h);let p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",p)}var yQ={kernelName:Va,backendName:"webgl",kernelFunc:bQ},vQ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},xQ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function wQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=s,h=I.computeConv2DInfo(r.shape,c,i,o,u,l,!0),d=new vQ(h);return n.runWebGLProgram(d,[r,a],"float32")}var kQ={kernelName:nb,backendName:"webgl",kernelFunc:wQ};function SQ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=s,h=I.computeConv2DInfo(c,a.shape,i,o,u,l,!0),d=new xQ(h);return n.runWebGLProgram(d,[r,a],"float32")}var IQ={kernelName:sb,backendName:"webgl",kernelFunc:SQ},CQ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function NQ(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=w.sizeFromShape(s.shape),i=he({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new CQ(a),u=n.runWebGLProgram(o,[i],i.dtype),l=he({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}var TQ={kernelName:rb,backendName:"webgl",kernelFunc:NQ},$Q=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${c}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function _Q(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,l=I.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u),c,h=new $Q(l);c=n.runWebGLProgram(h,[r,a],"float32");let d=he({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}var AQ={kernelName:kh,backendName:"webgl",kernelFunc:_Q};function EQ(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=I.decodeEinsumEquation(r,a.length);I.checkEinsumDimSizes(i.length,u,a);let{path:l,steps:c}=I.getEinsumComputePath(o,u),h=c.length,d=null,p=i.length,f=[];for(let m=0;m<h;++m){for(let g of c[m]){let{permutationIndices:b,expandDims:y}=I.getEinsumPermutation(p,u[g]),v;I.isIdentityPermutation(b)?v=a[g]:(v=vn({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=he({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),d===null?d=v:(d=lx({inputs:{a:v,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=$p({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var RQ={kernelName:Sh,backendName:"webgl",kernelFunc:EQ},DQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",FQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,OQ=Ke({opSnippet:DQ,packedOpSnippet:FQ}),PQ={kernelName:Ua,backendName:"webgl",kernelFunc:OQ},LQ="return (b >= 1.0) ? a : a * (b + 1.0);",zQ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,MQ=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=X().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fc(zQ,s.shape,r.shape):new go(LQ,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},BQ={kernelName:ab,backendName:"webgl",kernelFunc:MQ},VQ=`
  return vec4(equal(a, b));
`,WQ="return float(a == b);",UQ=Jt({opSnippet:WQ,packedOpSnippet:VQ,dtype:"bool",cpuKernelImpl:_8}),GQ={kernelName:Io,backendName:"webgl",kernelFunc:UQ},HQ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${I.ERF_P};
  float a1 = ${I.ERF_A1};
  float a2 = ${I.ERF_A2};
  float a3 = ${I.ERF_A3};
  float a4 = ${I.ERF_A4};
  float a5 = ${I.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,qQ=Ke({opSnippet:HQ}),jQ={kernelName:El,backendName:"webgl",kernelFunc:qQ},KQ=xu+`
  return exp(x);
`,XQ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,dN=Ke({opSnippet:KQ,packedOpSnippet:XQ,cpuKernelImpl:A8,dtype:"float32"}),YQ={kernelName:Ga,backendName:"webgl",kernelFunc:dN};function Og(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice(),u=r;return r<0&&(w.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),o.splice(u,0,1),he({inputs:{x:a},backend:s,attrs:{shape:o}})}var ZQ={kernelName:Co,backendName:"webgl",kernelFunc:Og},uk="return exp(x) - 1.0;",QQ=Ke({opSnippet:uk,packedOpSnippet:uk,cpuKernelImpl:E8}),JQ={kernelName:No,backendName:"webgl",kernelFunc:QQ},lk=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function hN(e,t,n){let s=n.texData.get(e.dataId),r=w.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],i=r/a,o=he({inputs:{x:e},backend:n,attrs:{shape:[i,a]}}),u=o.shape,l=new lk("real",u,t),c=new lk("imag",u,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],d=n.runWebGLProgram(l,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=Br({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);let m=he({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}function e7(e){let{inputs:t,backend:n}=e,{input:s}=t;return hN(s,!1,n)}var t7={kernelName:ib,backendName:"webgl",kernelFunc:e7},n7=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function gc(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let i=w.getArrayFromDType(a,w.sizeFromShape(s));return i.fill(r),t.makeTensorInfo(s,a,i)}else{let i=new n7(s,r),o=[[r]];return t.runWebGLProgram(i,[],a,o)}}var s7={kernelName:Rl,backendName:"webgl",kernelFunc:gc},r7=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},a7={kernelName:To,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new r7(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},ck="return floor(x);",i7=Ke({opSnippet:ck,packedOpSnippet:ck,cpuKernelImpl:R8}),o7={kernelName:Ha,backendName:"webgl",kernelFunc:i7},u7=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,l7=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,c7=Jt({opSnippet:u7,packedOpSnippet:l7,dtype:"int32"}),d7={kernelName:qa,backendName:"webgl",kernelFunc:c7},h7=class{constructor(e){this.variableNames=["A"];let t=wn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},p7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=wn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},f7={kernelName:Rd,backendName:"webgl",kernelFunc:m7},Zi,Rm=X().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function m7(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[u,l]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[l,u],h=[l,u,a];if(o||i){let m=X().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Zi==null||m!==Rm)&&(Rm=m,Zi=document.createElement("canvas").getContext("2d",{willReadFrequently:Rm})),Zi.canvas.width=u,Zi.canvas.height=l,Zi.drawImage(r,0,0,u,l),r=Zi.canvas}let d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=2,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);let p=X().getBool("WEBGL_PACK")?new p7(h):new h7(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}function g7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=I.convertConv2DDataFormat(c),g=I.computeConv2DInfo(r.shape,a.shape,u,h,l,d,!1,m),b,y=[],v=i!=null,x=o!=null,k=p==="leakyrelu",C=()=>{let A=[r,a],E=(O,R)=>{if(R==="NCHW"&&O.shape.length===1&&O.shape[0]!==1){let D=he({inputs:{x:O},backend:n,attrs:{shape:[O.shape[0],1,1]}});return y.push(D),D}return O};if(v&&A.push(E(i,c)),x&&A.push(E(o,c)),k){let O=n.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));A.push(O),y.push(O)}return A};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=iN({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&X().getBool("WEBGL_EXP_CONV")){let A=p?yl(p,!0):null,E=new aN(g,v,A,x,k),O=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=C();b=n.runWebGLProgram(E,R,"float32",O)}else if(X().getBool("WEBGL_CONV_IM2COL"))b=oN({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{let A=p?yl(p,!1):null,E=new rN(g,v,A,x,k),O=C();b=n.runWebGLProgram(E,O,"float32")}let $=he({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach(A=>n.disposeIntermediateTensorInfo(A)),$}var b7={kernelName:ma,backendName:"webgl",kernelFunc:g7};function y7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[],m=c;m==null&&(m=[1,1]),w.assert(I.eitherStridesOrDilationsAreOne(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);let g=I.computeConv2DInfo(r.shape,a.shape,u,m,l,h,!0),b=X().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=d?yl(d,b):null,v=[r,a],x=i!=null,k=o!=null,C=d==="leakyrelu";if(x&&v.push(i),k&&v.push(o),C){let O=n.makeTensorInfo([],"float32",w.createScalarValue(p,"float32"));v.push(O),f.push(O)}let $;b?$=new cN(g,x,y,k,C):$=new lN(g,x,y,k,C);let A=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=n.runWebGLProgram($,v,"float32",A);return f.forEach(O=>n.disposeIntermediateTensorInfo(O)),E}var v7={kernelName:ga,backendName:"webgl",kernelFunc:y7},x7=class{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;let r=at(t.length),a=at(n.length),i=this.sliceDim>1?"strides[j]":"strides",o=at(s.length),u=s.length>1?"paramsShape[j]":"paramsShape";this.userCode=`
        ${r} strides = ${r}(${this.strides});
        ${o} paramsShape = ${o}(${this.paramsShape});
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            out_of_bounds = out_of_bounds || index < 0;
            out_of_bounds = out_of_bounds || index >= ${u};
            flattenIndex += index * ${i};
          }
          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function w7(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=w.sizeFromShape(s.shape),[u,l,c,h]=I.prepareAndValidate(s,r),d=he({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),p=he({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let b=n.readSync(r.dataId),y=n.bufferSync(s),v=D8(b,y,s.dtype,l,i,c,h,s.shape,o);return n.makeTensorInfo(u,s.dtype,v.values)}let f=new x7(i,h,[l,c],s.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),g=he({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}var k7={kernelName:_o,backendName:"webgl",kernelFunc:w7},S7=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=at(this.rank),s=I7(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}};function I7(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}function pN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0];if(X().get("DEBUG")){let y=n.readSync(a.dataId),v=r.shape[u];for(let x=0;x<y.length;++x){let k=y[x];w.assert(k<=v-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${v-1}]`)}}let l=I.segment_util.collectGatherOpShapeInfo(r,a,u,o),c=w.sizeFromShape(a.shape),h=[],d=he({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=he({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);let f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let y=n.bufferSync(p),v=n.bufferSync(d),x=F8(v,y,f);return h.forEach(k=>n.disposeIntermediateTensorInfo(k)),n.makeTensorInfo(l.outputShape,x.dtype,x.values)}let m=new S7(d.shape,f),g=n.runWebGLProgram(m,[d,p],d.dtype);h.push(g);let b=he({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(y=>n.disposeIntermediateTensorInfo(y)),b}var C7={kernelName:$o,backendName:"webgl",kernelFunc:pN},N7="return float(a > b);",T7=`
  return vec4(greaterThan(a, b));
`,$7=Jt({opSnippet:N7,packedOpSnippet:T7,cpuKernelImpl:O8,dtype:"bool"}),_7={kernelName:Ao,backendName:"webgl",kernelFunc:$7},A7="return float(a >= b);",E7=`
  return vec4(greaterThanEqual(a, b));
`,R7=Jt({opSnippet:A7,packedOpSnippet:E7,dtype:"bool",cpuKernelImpl:P8}),D7={kernelName:Ka,backendName:"webgl",kernelFunc:R7};function F7(e){let{inputs:t,backend:n}=e,{input:s}=t;return hN(s,!0,n)}var O7={kernelName:ob,backendName:"webgl",kernelFunc:F7},P7="return float(!isnan(x) && !isinf(x));",L7=Ke({opSnippet:P7,dtype:"bool"}),z7={kernelName:Dl,backendName:"webgl",kernelFunc:L7},M7="return float(isinf(x));",B7=Ke({opSnippet:M7,dtype:"bool"}),V7={kernelName:Fl,backendName:"webgl",kernelFunc:B7},W7="return float(isnan(x));",U7=Ke({opSnippet:W7,dtype:"bool"}),G7={kernelName:Ol,backendName:"webgl",kernelFunc:U7},H7="return float(a < b);",q7=`
  return vec4(lessThan(a, b));
`,j7=Jt({opSnippet:H7,packedOpSnippet:q7,cpuKernelImpl:L8,dtype:"bool"}),K7={kernelName:Eo,backendName:"webgl",kernelFunc:j7},X7="return float(a <= b);",Y7=`
  return vec4(lessThanEqual(a, b));
`,Z7=Jt({opSnippet:X7,packedOpSnippet:Y7,cpuKernelImpl:z8,dtype:"bool"}),Q7={kernelName:Ro,backendName:"webgl",kernelFunc:Z7};function J7(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=M8(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}var eJ={kernelName:ub,backendName:"webgl",kernelFunc:J7},tJ=xu+`
  return x < 0.0 ? 0./0. : log(x);
`,nJ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,sJ=Ke({opSnippet:tJ,packedOpSnippet:nJ,cpuKernelImpl:B8}),rJ={kernelName:Za,backendName:"webgl",kernelFunc:sJ},aJ=xu+`
  return log(1.0 + x);
`,iJ=Ke({opSnippet:aJ}),oJ={kernelName:Pl,backendName:"webgl",kernelFunc:iJ},uJ="return float(a >= 1.0 && b >= 1.0);",lJ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,cJ=Jt({opSnippet:uJ,packedOpSnippet:lJ,dtype:"bool"}),dJ={kernelName:Do,backendName:"webgl",kernelFunc:cJ},hJ="return float(!(x >= 1.0));",pJ=Ke({opSnippet:hJ}),fJ={kernelName:Fo,backendName:"webgl",kernelFunc:pJ},mJ="return float(a >= 1.0 || b >= 1.0);",gJ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,bJ=Jt({opSnippet:mJ,packedOpSnippet:gJ,dtype:"bool"}),yJ={kernelName:Ll,backendName:"webgl",kernelFunc:bJ},vJ=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${n}) + float(${s}) * sum`;r===.5?o=`inversesqrt(${u})`:r===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},xJ=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${n}) + float(${s}) * sum`;r===.5?o=`inversesqrt(${u})`:r===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},wJ=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s,l=X().getBool("WEBGL_PACK_NORMALIZATION")?new xJ(r.shape,a,i,o,u):new vJ(r.shape,a,i,o,u);return n.runWebGLProgram(l,[r],r.dtype)},kJ={kernelName:Ch,backendName:"webgl",kernelFunc:wJ},SJ=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},IJ=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s,h=new SJ(r.shape,o,u,l,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)},CJ={kernelName:lb,backendName:"webgl",kernelFunc:IJ};function NJ(e,t,n,s){let r=w.sizeFromShape(t),i=w.sizeFromShape(e.shape)/r,o=he({inputs:{x:e},attrs:{shape:[i,r]},backend:s}),u=Ai(o,e.dtype,"max",s),l=he({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(u),l}function fN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=I.getAxesPermutation(l,o),h=c!=null,d=n.shouldExecuteOnCPU([r]),p=r;if(h){if(d){let v=n.texData.get(p.dataId).values,x=new Array(o);for(let $=0;$<x.length;$++)x[$]=r.shape[c[$]];let k=ux(v,r.shape,r.dtype,c,x);p=n.makeTensorInfo(x,r.dtype);let C=n.texData.get(p.dataId);C.values=k}else p=Tp(r,c,n);l=I.getInnerMostAxes(l.length,o)}I.assertAxesAreInnerMostDims("max",l,o);let[f,m]=I.computeOutAndReduceShapes(p.shape,l),g=f;i&&(g=I.expandShapeToKeepDim(f,u));let b;if(d){let v=n.texData.get(p.dataId).values,x=V8(v,w.sizeFromShape(m),g,r.dtype);b=n.makeTensorInfo(g,r.dtype);let k=n.texData.get(b.dataId);k.values=x}else b=NJ(p,m,g,n);return h&&n.disposeIntermediateTensorInfo(p),b}var TJ={kernelName:Qa,backendName:"webgl",kernelFunc:fN},$J=q2+`
  return max(a, b);
`,_J=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Np+`
  return result;
`,AJ=Jt({opSnippet:$J,packedOpSnippet:_J,cpuKernelImpl:W8}),EJ={kernelName:Ja,backendName:"webgl",kernelFunc:AJ};function RJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;mu(r,"maxPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(r.shape,a,i,l,o,u);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return Un({inputs:{x:r},backend:n});let h=new vl(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}var DJ={kernelName:ei,backendName:"webgl",kernelFunc:RJ};function FJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=s,c=[1,1,1],h=I.computePool3DInfo(r.shape,a,i,c,o,l,u),d=new cx(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var OJ={kernelName:Nh,backendName:"webgl",kernelFunc:FJ},PJ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,u=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},LJ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${h}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function zJ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s,h=[1,1,1],d=I.computePool3DInfo(i.shape,o,u,h,l,c),p=new cx(d,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new LJ(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}var MJ={kernelName:db,backendName:"webgl",kernelFunc:zJ};function BJ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;mu([a,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,d=I.computePool2DInfo(o.shape,u,l,1,c,h),p=!0,f=new vl(d,"max",p),m=n.runWebGLProgram(f,[o],o.dtype),g=new PJ(d),b=n.runWebGLProgram(g,[r,m],o.dtype);return n.disposeIntermediateTensorInfo(m),b}var VJ={kernelName:cb,backendName:"webgl",kernelFunc:BJ};function WJ(e,t,n,s){let r=new vl(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new vl(n,"max",!0,!0,t);let i=s.runWebGLProgram(r,[e],"float32");return[a,i]}var UJ={kernelName:hb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;w.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let l=[1,1];w.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let c=I.computePool2DInfo(s.shape,r,a,l,i),[h,d]=WJ(s,o,c,u);return[h,d]}};function GJ(e,t,n,s){let r=w.sizeFromShape(t),i=w.sizeFromShape(e.shape)/r,o=he({inputs:{x:e},attrs:{shape:[i,r]},backend:s}),u=Ai(o,"float32","mean",s),l=he({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(u),l}var HJ={kernelName:ti,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,u=w.parseAxisParam(a,s.shape),l=u,c=I.getAxesPermutation(l,o),h=c!=null,d=i.shouldExecuteOnCPU([s]),p=[],f=s;if(h){if(d){let x=i.texData.get(f.dataId).values,k=new Array(o);for(let A=0;A<k.length;A++)k[A]=s.shape[c[A]];let C=ux(x,s.shape,s.dtype,c,k);f=i.makeTensorInfo(k,s.dtype);let $=i.texData.get(f.dataId);$.values=C}else f=Tp(s,c,i);p.push(f),l=I.getInnerMostAxes(l.length,o)}I.assertAxesAreInnerMostDims("sum",l,o);let[m,g]=I.computeOutAndReduceShapes(f.shape,l),b=m;r&&(b=I.expandShapeToKeepDim(m,u));let y=GJ(f,g,b,i);for(let v of p)i.disposeIntermediateTensorInfo(v);return y}};function qJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=I.getAxesPermutation(l,o),h=r;c!=null&&(h=vn({inputs:{x:r},backend:n,attrs:{perm:c}}),l=I.getInnerMostAxes(l.length,r.shape.length)),I.assertAxesAreInnerMostDims("min",l,o);let[d,p]=I.computeOutAndReduceShapes(h.shape,l),f=w.sizeFromShape(p),m=he({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),g=Ai(m,m.dtype,"min",n),b;if(i){let y=I.expandShapeToKeepDim(d,u);b=he({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=he({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(h),b}var jJ={kernelName:ni,backendName:"webgl",kernelFunc:qJ},KJ=q2+`
  return min(a, b);
`,XJ=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Np+`
  return result;
`,YJ=Jt({opSnippet:KJ,packedOpSnippet:XJ,cpuKernelImpl:U8}),ZJ={kernelName:si,backendName:"webgl",kernelFunc:YJ},QJ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let s=e.length,r=at(s),a=t.map(l=>l[0]).join(","),i=t.map((l,c)=>l[0]+e[c]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},JJ=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((p,f)=>p[0]+e[f]+p[1]);let s=e.length,r=at(s),a=t.map(p=>p[0]).join(","),i=t.map((p,f)=>p[0]+e[f]).join(","),o=mn("rc",s),u=mn("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${u.slice(-2).join()})`,h=n==="reflect"?0:1,d="";if(s===1){let p=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${u.join()}), ${c});
        ${o[s-1]} += 1;
        if(${l}) {
          ${p}
          result[1] = getChannel(getX(${u.join()}), ${c});
        }
      `}else{let p=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${u.join()}), ${c});
        ${o[s-1]} += 1;
        if(${l}) {
          ${p}
          result[1] = getChannel(getX(${u.join()}), ${c});
        }
        rc = outputLoc;
        ${o[s-2]} += 1;
        if(${o[s-2]} < ${this.outputShape[s-2]}) {
          ${p}
          result[2] = getChannel(getX(${u.join()}), ${c});
          ${o[s-1]} += 1;
          if(${l}) {
            ${p}
            result[3] = getChannel(getX(${u.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},eee=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,i=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JJ(s.shape,r,a):new QJ(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)},tee={kernelName:ri,backendName:"webgl",kernelFunc:eee},nee=`if (b == 0.0) return NAN;
  return mod(a, b);`,see=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Np+`
  return result;
`,ree=Jt({opSnippet:nee,packedOpSnippet:see}),aee={kernelName:zl,backendName:"webgl",kernelFunc:ree},iee=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},oee=`
if (a == b) {
  return 1.0;
};
return a / b;`,uee=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,mN=Jt({opSnippet:oee,packedOpSnippet:uee,checkOutOfBounds:!0}),lee={kernelName:Wa,backendName:"webgl",kernelFunc:mN},dk="return a - b;",gN=Jt({opSnippet:dk,packedOpSnippet:dk,supportsComplex:!0,cpuKernelImpl:iY}),cee={kernelName:wi,backendName:"webgl",kernelFunc:gN};function bN(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=w.parseAxisParam([a],r.shape),o=fN({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=I.expandShapeToKeepDim(o.shape,i),l=he({inputs:{x:o},backend:n,attrs:{shape:u}}),c=gN({inputs:{a:r,b:l},backend:n}),h=dN({inputs:{x:c},backend:n}),d=$p({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=he({inputs:{x:d},backend:n,attrs:{shape:u}}),f=mN({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}var dee={kernelName:vi,backendName:"webgl",kernelFunc:bN};function hee(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,u=o?r:bN({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new iee(l,c,a),d=[[i]],p=n.runWebGLProgram(h,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),p}var pee={kernelName:pb,backendName:"webgl",kernelFunc:hee},fee=ls+`
  return -x;
`,mee=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function gee(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[i,o]=H8(a.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}let r;return X().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new oa(s.shape,mee):r=new Zs(s.shape,fee),n.runWebGLProgram(r,[s],s.dtype)}var bee={kernelName:Oo,backendName:"webgl",kernelFunc:gee},yee=Ts.nonMaxSuppressionV3Impl;function vee(e){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s,l=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=yee(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var xee={kernelName:Lo,backendName:"webgl",kernelFunc:vee},wee=Ts.nonMaxSuppressionV4Impl;function kee(e){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=wee(c,h,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}var See={kernelName:Ml,backendName:"webgl",kernelFunc:kee},Iee=Ts.nonMaxSuppressionV5Impl;function Cee(e){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=Iee(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var Nee={kernelName:zo,backendName:"webgl",kernelFunc:Cee},Tee=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},$ee=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,u=w.sizeFromShape(r.shape),l=new Tee(u,a,i,o),c=he({inputs:{x:r},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],r.dtype);n.disposeIntermediateTensorInfo(c);let d=[...r.shape,a],p=he({inputs:{x:h},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(h),p},_ee={kernelName:Bo,backendName:"webgl",kernelFunc:$ee};function uh(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=mc({inputs:{input:s},backend:n}),a=uh({inputs:{x:r},backend:n}),i=_p({inputs:{input:s},backend:n}),o=uh({inputs:{x:i},backend:n}),u=Br({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return gc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Aee={kernelName:nu,backendName:"webgl",kernelFunc:uh};function yN(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=mc({inputs:{input:s},backend:n}),a=yN({inputs:{x:r},backend:n}),i=_p({inputs:{input:s},backend:n}),o=uh({inputs:{x:i},backend:n}),u=Br({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return gc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Eee={kernelName:Mo,backendName:"webgl",kernelFunc:yN};function Ree(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Og({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let h=Og({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(h),h}),l=sN({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}var Dee={kernelName:Vo,backendName:"webgl",kernelFunc:Ree},Fee=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,l)=>u[0]+e[l]+u[1]);let s=e.length,r=at(s),a=t.map(u=>u[0]).join(","),i=t.map((u,l)=>u[0]+e[l]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},Oee=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=at(s),a=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=mn("rc",s),u=mn("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${u.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;
       if(${l}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${o[s-2]} += 1;
       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${o[s-1]} += 1;
         if(${l}) {`],d=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",p="";for(let f=0,m=s===1?2:4;f<m;f++)p+=`
        ${h[f]}
        if (${d}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${u.join()}), ${c});
        }
      `;p+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}},vN=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(w.sizeFromShape(r.shape)===0){let l=a.map((c,h)=>c[0]+r.shape[h]+c[1]);return gc({backend:n,attrs:{shape:l,value:i,dtype:r.dtype}})}let o=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Oee(r.shape,a,i):new Fee(r.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[r],r.dtype,u)},Pee={kernelName:ii,backendName:"webgl",kernelFunc:vN},Lee=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,zee=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Np+`
  return result;
`,Mee=Jt({opSnippet:Lee,packedOpSnippet:zee}),Bee={kernelName:oi,backendName:"webgl",kernelFunc:Mee};function Vee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=[],l=w.parseAxisParam(a,r.shape),c=l,h=I.getAxesPermutation(c,o),d=r;h!=null&&(d=vn({inputs:{x:r},backend:n,attrs:{perm:h}}),c=I.getInnerMostAxes(c.length,o),u.push(d)),I.assertAxesAreInnerMostDims("prod",c,o);let p;if(n.shouldExecuteOnCPU([d])){let f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:b}=j8(d.shape,d.dtype,f,c);p=n.makeTensorInfo(g,b,m)}else{let[f,m]=I.computeOutAndReduceShapes(d.shape,c),g=w.sizeFromShape(m),b=he({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),y=Ph(r.dtype),v=Ai(b,y,"prod",n);p=he({inputs:{x:v},backend:n,attrs:{shape:f}}),u.push(b),u.push(v)}if(i){u.push(p);let f=I.expandShapeToKeepDim(p.shape,l);p=he({inputs:{x:p},backend:n,attrs:{shape:f}})}return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),p}var Wee={kernelName:li,backendName:"webgl",kernelFunc:Vee},xN=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=K8(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},Uee={kernelName:Bl,backendName:"webgl",kernelFunc:xN},Gee="return 1.0 / x;",Hee=Ke({opSnippet:Gee}),qee={kernelName:Vl,backendName:"webgl",kernelFunc:Hee},jee=ls+`
  return (x < 0.0) ? 0.0 : x;
`,Kee=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Xee=Ke({opSnippet:jee,packedOpSnippet:Kee}),Yee={kernelName:ci,backendName:"webgl",kernelFunc:Xee},Zee=ls+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Qee=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Jee=Ke({opSnippet:Zee,packedOpSnippet:Qee}),ete={kernelName:pi,backendName:"webgl",kernelFunc:Jee},tte=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h;r?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/c[0]},
          ${l[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},nte=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h;r?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/c[0]},
          ${l[1]/c[1]},
          ${l[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function ste(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new nte(r.shape,u,l,a,i):new tte(r.shape,u,l,a,i);return n.runWebGLProgram(c,[r],"float32")}var rte={kernelName:hi,backendName:"webgl",kernelFunc:ste},ate=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=Math.ceil(h)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${c});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${p});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function ite(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new ate(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}var ote={kernelName:mb,backendName:"webgl",kernelFunc:ite},ute=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0",d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/c[0]},
          ${l[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},lte=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0",d;r?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/c[0]},
          ${l[1]/c[1]},
          ${l[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function cte(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=X().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lte(r.shape,u,l,a,i):new ute(r.shape,u,l,a,i);return n.runWebGLProgram(c,[r],r.dtype)}var dte={kernelName:di,backendName:"webgl",kernelFunc:cte},hte=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,d=1/c,p=Math.ceil(h)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${c});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${d});

        const int winHeight = int(${p});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function pte(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new hte(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}var fte={kernelName:fb,backendName:"webgl",kernelFunc:pte},mte=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,o)=>s(o)).join(","),a=at(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},gte=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=mn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=at(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(s.slice())};
          if(${r}){
            result.g = ${u(s.slice())};
          }
          if(${a}) {
            result.b = ${l(s.slice())};
            if(${r}) {
              result.a = ${c(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(p){return h(p)}function u(p){return p[n-1]="("+p[n-1]+" + 1)",h(p)}function l(p){return p[n-2]="("+p[n-2]+" + 1)",h(p)}function c(p){return p[n-1]="("+p[n-1]+" + 1)",p[n-2]="("+p[n-2]+" + 1)",h(p)}function h(p){let f=e.map((b,y)=>d(y,p)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function d(p,f){return t.indexOf(p)!==-1&&e[p]!==1?`${e[p]} - ${f[p]} - 1`:`${f[p]}`}}};function bte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=w.parseAxisParam(a,r.shape);if(i===0)return Un({inputs:{x:r},backend:n});let u=X().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gte(r.shape,o):new mte(r.shape,o);return n.runWebGLProgram(u,[r],r.dtype)}var yte={kernelName:Uo,backendName:"webgl",kernelFunc:bte},vte=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},xte={kernelName:su,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new vte(s.shape,a),[l,c]=I.getImageCenter(i,s.shape[1],s.shape[2]),h=[[l,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(u,[s],s.dtype,h)}},wte=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,kte=Ke({opSnippet:wte}),Ste={kernelName:Go,backendName:"webgl",kernelFunc:kte},Ite="return inversesqrt(x);",Cte=Ke({opSnippet:Ite,cpuKernelImpl:X8}),Nte={kernelName:fi,backendName:"webgl",kernelFunc:Cte},wN=class{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let o=at(r.length),u=at(a.length),l="";n===1?l="i":n===2&&(l="i, j");let c=`getIndices(${l})`,h="";s===1?h="i":s===2&&(h="i, coords[1]");let d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${p};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function Tte(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=I.calculateShapes(a,r,i),d=[h/l,l];if(h===0)return n.makeTensorInfo(i,r.dtype);let p=he({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=he({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new wN(u,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,p,m],f.dtype),y=he({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}var $te={kernelName:Ho,backendName:"webgl",kernelFunc:Tte},_te=class{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=X().getNumber("WEBGL_VERSION")===2?r:a,o=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Ate(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=new _te(r.shape[0],r.shape[1],a.shape[1],i),u=[[r.shape[1]]];return n.runWebGLProgram(o,[r,a],"int32",u)}var Ete={kernelName:gb,backendName:"webgl",kernelFunc:Ate},Rte=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],u=[];for(let l=0;l<t.length;l++)u.push(`${i[l]}`),l<e&&o.push(`${i[l]}`);s=o.join(),r=u.join()}let a=at(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function Dte(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new Rte(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],bn(r.dtype,a.dtype))}var Fte={kernelName:qo,backendName:"webgl",kernelFunc:Dte},Ote=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${I.SELU_SCALEALPHA};
  float scale = ${I.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Pte=Ke({opSnippet:Ote}),Lte={kernelName:Wl,backendName:"webgl",kernelFunc:Pte},zte=xu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Mte=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Bte=Ke({opSnippet:zte,packedOpSnippet:Mte,cpuKernelImpl:Z8}),Vte={kernelName:gi,backendName:"webgl",kernelFunc:Bte},Wte=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Ute=Ke({opSnippet:Wte}),Gte={kernelName:Ul,backendName:"webgl",kernelFunc:Ute},Hte=xu+`
  return sin(x);
`,qte=Ke({opSnippet:Hte}),jte={kernelName:mi,backendName:"webgl",kernelFunc:qte},Kte=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Xte=Ke({opSnippet:Kte}),Yte={kernelName:Ko,backendName:"webgl",kernelFunc:Xte},Zte=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Qte=Ke({opSnippet:Zte}),Jte={kernelName:Gl,backendName:"webgl",kernelFunc:Qte},ene=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=a.reduce((b,y)=>b*y),u=[[0,0]];u.push(...i);for(let b=1+a.length;b<r.shape.length;++b)u.push([0,0]);let l=[],c=vN({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),h=I.getReshaped(c.shape,a,o,!1),d=I.getPermuted(h.length,a.length,!1),p=I.getReshapedPermuted(c.shape,a,o,!1),f=he({inputs:{x:c},backend:n,attrs:{shape:h}}),m=vn({inputs:{x:f},backend:n,attrs:{perm:d}}),g=he({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach(b=>n.disposeIntermediateTensorInfo(b)),g},tne={kernelName:Xo,backendName:"webgl",kernelFunc:ene};function nne(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(s.dataId),u=n.readSync(r.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,m]=J8(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var sne={kernelName:$h,backendName:"webgl",kernelFunc:nne};function rne(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=eY(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}var ane={kernelName:Hl,backendName:"webgl",kernelFunc:rne};function ine(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=W2(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}var one={kernelName:_h,backendName:"webgl",kernelFunc:ine};function une(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=W2(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}var lne={kernelName:Ah,backendName:"webgl",kernelFunc:une};function cne(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=I.calculateShapes(a,r,o),p=!1;if(a.dtype==="string"){let b=n.bufferSync(r),y=n.bufferSync(a),v=w.decodeString(n.readSync(i.dataId)[0]),x=Y8(b,y,o,d,c,l,u,h,v,p);return n.makeTensorInfo(o,x.dtype,x.values)}let f=new wN(l,u,r.shape.length,a.shape.length,h,[d,1],p),m=n.runWebGLProgram(f,[a,r,i],a.dtype),g=he({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}var dne={kernelName:Eh,backendName:"webgl",kernelFunc:cne};function hne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=I.prepareSplitSize(r,a,o),l=r.shape.length,c=new Array(l).fill(0),h=r.shape.slice();return u.map(d=>{let p=[...h];p[o]=d;let f=wu({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[o]+=d,f})}var pne={kernelName:Yo,backendName:"webgl",kernelFunc:hne},hk="return sqrt(x);",fne=Ke({opSnippet:hk,packedOpSnippet:hk,cpuKernelImpl:tY}),mne={kernelName:bi,backendName:"webgl",kernelFunc:fne},gne="return x * x;",bne=Ke({opSnippet:gne}),yne={kernelName:ql,backendName:"webgl",kernelFunc:bne},pk="return (a - b) * (a - b);",vne=Jt({opSnippet:pk,packedOpSnippet:pk}),xne={kernelName:xi,backendName:"webgl",kernelFunc:vne};function wne({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=ls+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Zs(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var kne={kernelName:Si,backendName:"webgl",kernelFunc:wne},Sne=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=at(n.length),a=at(n.length),i="";if(s===1)i="coords * strides + begin";else{let o=0;i=n.map((u,l)=>(o++,n.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${o-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Ine(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=It.sliceInfo(r.shape,a,i,o,u,l,c,h,d),k;if(m)k=he({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let $=It.computeOutShape(y,v,x),A=wu({inputs:{x:r},backend:n,attrs:{begin:y,size:$}});k=he({inputs:{x:A},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(A)}else if(n.shouldExecuteOnCPU([r])){let A=n.readSync(r.dataId),E=_e(r.shape,r.dtype,A),O=nY(p,E,x,y);k=n.makeTensorInfo(f,r.dtype,O.values)}else{let A=new Sne(y,x,p);k=n.runWebGLProgram(A,[r],r.dtype)}let C=he({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),C}var Cne={kernelName:Zo,backendName:"webgl",kernelFunc:Ine};function Nne(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=sY(d,p,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var Tne={kernelName:jl,backendName:"webgl",kernelFunc:Nne};function $ne(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=rY(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var _ne={kernelName:Rh,backendName:"webgl",kernelFunc:$ne};function Ane(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(a.dataId),o=aY(i,r);return n.makeTensorInfo(a.shape,"int32",o)}var Ene={kernelName:Dh,backendName:"webgl",kernelFunc:Ane},Rne="return tan(x);",Dne=Ke({opSnippet:Rne}),Fne={kernelName:Qo,backendName:"webgl",kernelFunc:Dne},One=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,Pne=Ke({opSnippet:One}),Lne={kernelName:ki,backendName:"webgl",kernelFunc:Pne},zne=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=at(this.rank),r=Mne(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function Mne(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function kN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let u=n.readSync(r.dataId),l=r.dtype==="string"?u.map(d=>w.decodeString(d)):u,c=_e(r.shape,r.dtype,l),h=oY(c,a);return n.makeTensorInfo(h.shape,h.dtype,h.values)}let i=new zne(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}var Bne={kernelName:Rr,backendName:"webgl",kernelFunc:kN},Vne=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Wne=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Qr(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function fk(e){let t=1;for(;t<e;)t*=2;return t}function Une(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=X().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=X().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>u){let O=n.readSync(r.dataId),[R,D]=uY(O,l,r.dtype,a,i);return[n.makeTensorInfo(R.shape,R.dtype,R.values),n.makeTensorInfo(D.shape,D.dtype,D.values)]}if(a===0)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(c===1)return[r,gc({attrs:{shape:l,dtype:"int32",value:0},backend:n})];let h=n.texData.get(r.dataId),d=h!==null&&h.isPacked,p=d?n.unpackTensor(r):r,m=w.sizeFromShape(l)/c,g=he({inputs:{x:p},attrs:{shape:[m,c]},backend:n});d&&Qr(n,p);let b=fk(a),y=fk(c),v=null,x=()=>v===null?[g,g]:[g,v],k=(O,R,D)=>{let T=x(),L=new Vne(D),q=[[c],[v===null?1:0],[Number.NEGATIVE_INFINITY],[O],[R]],j=v;v=n.runWebGLProgram(L,T,"int32",q),Qr(n,j)};for(let O=1;O<b;O*=2){let R=O*2;for(let D=O;D>=1;D/=2)k(R,D,[m,y])}for(let O=y;O>b;O/=2){let R=x(),D=new Wne([m,O/2]),L=[[c],[v===null?1:0],[b]],W=v;v=n.runWebGLProgram(D,R,"int32",L),Qr(n,W);let q=b/2,j=q*2;for(let K=q;K>=1;K/=2)k(j,K,v.shape)}let C=v;v=wu({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,a]}}),Qr(n,C);let $=pN({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});Qr(n,g);let A=l.slice(0,-1);A.push(a),C=v,v=he({inputs:{x:v},attrs:{shape:A},backend:n}),Qr(n,C);let E=$;return $=he({inputs:{x:$},attrs:{shape:A},backend:n}),Qr(n,E),[$,v]}var Gne={kernelName:Jo,backendName:"webgl",kernelFunc:Une},Hne=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let i=n==="nearest"?1:2,o;switch(s){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function qne(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,h,d,p]=r.shape,[f,m]=l!=null?l:[h,d],g=[c,f,m,p],b=new Hne(h,d,i,o,u,g);return n.runWebGLProgram(b,[r,a],"float32")}var jne={kernelName:eu,backendName:"webgl",kernelFunc:qne};function Kne(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;mu(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=s.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=lY(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}var Xne={kernelName:bb,backendName:"webgl",kernelFunc:Kne};function Yne(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r,o=i.shape.length,u=r.shape[a],l=new Array(o-1),c=0;for(let m=0;m<o;m++)m!==a&&(l[c++]=i.shape[m]);let h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;let f=new Array(u);for(let m=0;m<f.length;m++){d[a]=m;let g=wu({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),b=he({inputs:{x:g},backend:n,attrs:{shape:l}});f[m]=b,h.push(g)}return h.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Zne={kernelName:tu,backendName:"webgl",kernelFunc:Yne},Qne=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];let o="0.0",u="sumValue",l=Math.floor(n/4)*4,c=n%4,h=`
        sumValue += dot(values, segFilter);
    `,d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let p="";r%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${u});
      }
    `}};function Jne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,u=[],l=0,c=I.getAxesPermutation([l],o),h=r;c!=null&&(h=vn({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(h),l=I.getInnerMostAxes(1,o)[0]);let d=I.segment_util.computeOutShape(h.shape,l,i),p=w.sizeFromShape([h.shape[l]]),f=he({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});u.push(f);let m=Ph(r.dtype),g=(x,k,C,$,A)=>{let E=x.shape[0],O=x.shape[1],R=I.segment_util.segOpComputeOptimalWindowSize(O,A),D={windowSize:R,inSize:O,batchSize:E,numSegments:A},T=new Qne(D,k),L=n.compileAndRun(T,[x,C],$);if(u.push(L),L.shape[1]===A)return L;let W=xN({backend:n,attrs:{start:0,stop:A,step:1,dtype:"float32"}}),q=kN({inputs:{x:W},backend:n,attrs:{reps:[O/R]}});return u.push(W),u.push(q),g(L,k,q,$,A)},b=g(f,"unsortedSegmentSum",a,m,i),y=he({inputs:{x:b},backend:n,attrs:{shape:d}}),v=y;if(c!=null){u.push(y);let x=I.getUndoAxesPermutation(c);v=vn({inputs:{x:v},backend:n,attrs:{perm:x}})}return u.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var ese={kernelName:Fh,backendName:"webgl",kernelFunc:Jne},tse=[n9,r9,o9,c9,h9,m9,b9,v9,S9,C9,$9,E9,F9,z9,V9,U9,H9,X9,Z9,J9,sZ,cZ,hZ,fZ,xZ,kZ,NZ,LY,_Z,FZ,zZ,GZ,qZ,KZ,YZ,QZ,tQ,rQ,oQ,lQ,dQ,pQ,gQ,yQ,kQ,IQ,TQ,AQ,RQ,PQ,BQ,GQ,jQ,YQ,ZQ,JQ,t7,s7,a7,o7,d7,f7,b7,v7,k7,C7,_7,D7,PY,O7,RZ,z7,V7,G7,MY,K7,Q7,eJ,rJ,oJ,dJ,fJ,yJ,kJ,CJ,TJ,EJ,DJ,OJ,MJ,VJ,UJ,HJ,jJ,ZJ,tee,aee,pee,GY,bee,xee,See,Nee,gZ,_ee,Eee,Dee,Pee,Bee,VY,Wee,Uee,bZ,lee,qee,Yee,ete,qY,rte,ote,dte,fte,yte,xte,Ste,Nte,$te,Ete,Fte,Lte,Vte,Gte,jte,Yte,uZ,dee,Jte,tne,sne,ane,one,lne,dne,pne,mne,yne,xne,kne,Cne,Tne,_ne,Ene,cee,JY,Fne,Lne,Bne,Gne,jne,e9,Xne,Zne,ese,Aee];for(let e of tse)ru(e);var ir=X();ir.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);ir.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);ir.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);ir.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);ir.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);ir.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);ir.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);ir.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);ir.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!1);var nse="return a + b;",sse="return areal * breal - aimag * bimag;",rse="return areal * bimag + aimag * breal;",ase="return a / b;",ise="return a * b;",ose="return (a - b) * (a - b);",use="return a - b;",lse="return f32(a == b);",cse="return vec4<f32>(a == b);",dse="return f32(a > b);",hse="return vec4<f32>(a > b);",pse="return f32(a >= b);",fse="return vec4<f32>(a >= b);",mse="return f32(a < b);",gse="return vec4<f32>(a < b);",bse="return f32(a <= b);",yse="return vec4<f32>(a <= b);",vse="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",xse=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,wse=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,SN=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,kse=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Sse=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Ise=`
  if (isnan(a) || isnan(b)) {
    return 1.0;
  }
  return f32(a != b);
`,Cse=`
  var result = vec4<f32>(a != b);
  var isANaN = isnanVec4(a);
  var isBNaN = isnanVec4(b);
  if (isANaN.r || isBNaN.r) {
    result.r = 1.0;
  }
  if (isANaN.g || isBNaN.g) {
    result.g = 1.0;
  }
  if (isANaN.b || isBNaN.b) {
    result.b = 1.0;
  }
  if (isANaN.a || isBNaN.a) {
    result.a = 1.0;
  }

  return result;
`,Nse=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,Tse=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${SN}
  return resultTemp;
  `,$se="if (a < 0.0) { return b * a; }  return a;",_se=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function mk(e,t){let n=t?SN:wse;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function lh(e,t){switch(e){case 0:return ise;case 1:return nse;case 2:return use;case 3:return ase;case 4:return t?cse:lse;case 5:return t?hse:dse;case 6:return t?fse:pse;case 7:return t?gse:mse;case 8:return t?yse:bse;case 9:return t?xse:vse;case 10:return t?Cse:Ise;case 11:return ose;case 12:return t?Sse:kse;case 14:return t?_se:$se;case 15:return mk("max",t);case 16:return mk("min",t);case 13:return t?Tse:Nse;case 17:return sse;case 18:return rse;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var Ase="return abs(a);",Ese="return ceil(a);",Rse="return cos(a);",Dse=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Fse="return exp(a) - 1.0;",Ose="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",Pse=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Lse="return exp(a);",zse="return floor(a);",Mse="return a;",Bse=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Vse="return f32(!(a >= 1.0));",Wse="return -a;",Use="if (a < 0.0) { return uniforms.alpha * a; } return a;",Gse=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Hse="return select(a, 0.0, a < 0.0);",qse="return clamp(a, 0.0, 6.0);",jse="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Kse=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Xse="return 1.0/sqrt(a);",Yse="return 1.0 / (1.0 + exp(-1.0 * a));",Zse="return sin(a);",Qse=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Jse="return sqrt(a);",ere="return a * a;",tre=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,nre="return f32(i32((a)));";function ea(e,t){switch(e){case 0:return Ase;case 2:return Rse;case 3:return Dse;case 1:return Ese;case 4:return t?Pse:Ose;case 5:return Lse;case 6:return Fse;case 7:return zse;case 8:return Mse;case 9:return Bse;case 10:return Vse;case 11:return Wse;case 14:return t?Gse:Use;case 12:return t?Kse:Hse;case 13:return t?jse:qse;case 15:return Xse;case 18:return Yse;case 16:return Zse;case 17:return Qse;case 19:return Jse;case 20:return ere;case 21:return tre;case 22:return nre;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var At=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}};function or(e,t=!1,n=!1,s=3){if(e===null)return"";let r="";if(e==="linear")r=ea(8);else if(e==="relu")r=ea(12,n);else if(e==="elu")r=ea(4,n);else if(e==="relu6")r=ea(13,n);else if(e==="prelu")r=lh(14,n);else if(e==="sigmoid")r=ea(18,n);else if(e==="leakyrelu")r=ea(14,n);else throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);let i=At(n?4:1),o="";return t?o=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:o=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        ${r}
      }`,o}function ku(e,t){return`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function sre(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}var rre=(e,t,n,s)=>{let r={dtype:s.dtype,shape:s.shape},a=are(n,r,t),i=e.createShaderModule({code:a,label:t.constructor.name});return e.createComputePipeline({compute:{module:i,entryPoint:"main"},label:t.constructor.name,layout:"auto"})};function Zt(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";if(e===5)return"vec5";if(e===6)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function xr(e){if(e===0)return"x";if(e===1)return"y";if(e===2)return"z";if(e===3)return"w";if(e===4)return"u";if(e===5)return"v";throw Error(`Index ${e} is not yet supported`)}function Ge(){return`
    ${Su()}
      let index = getGlobalIndex();
`}function Su(){return`
  ${Ap()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Ap(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function are(e,t,n){let s=[];if(s.push(`
      const workGroupSizeX = ${n.workGroupSize[0]}u;
      const workGroupSizeY = ${n.workGroupSize[1]}u;
      const workGroupSizeZ = ${n.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${IN(n)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),n.isFromPixels)return s.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${sl(t.dtype,n.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[gk,s.join(`
`),bk(t.shape),n.getUserCode()].join(`
`);let r=!1,a=!1,i="struct Uniforms { NAN : f32, ";n.variableNames.forEach((f,m)=>{let g=Zt(e[m].shape.length);(g==="vec5"||g==="vec6")&&(a=!0),(r||a)&&(i+="@align(16) "),r=a,i+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${g}, `});let o=Zt(t.shape.length);a=o==="vec5"||o==="vec6",(r||a)&&(i+="@align(16) "),r=a,i+=`outShape : ${o}, `;let u=t.shape.length-1,l=Zt(u);a=l==="vec5"||l==="vec6",(r||a)&&(i+="@align(16) "),r=a,i+=`
         outShapeStrides: ${l}, `,n.size&&(r&&(i+="@align(16) "),r=!1,i+="size : i32, "),n.uniforms&&(r&&(i+="@align(16) "),i+=n.uniforms),i+="};",s.push(i),n.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${sl(t.dtype,n.isVec4)}>;
    `),n.variableNames.forEach((f,m)=>{s.push(`
      @group(0) @binding(${1+m}) var<storage, read> ${f}: array<${n.variableTypes?n.variableTypes[m]:sl(e[m].dtype,n.isVec4)}>;
        `)}),i!==""&&s.push(`
      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let c=cre(t.shape,n.dispatchLayout),h=[gk,s.join(`
`),bk(t.shape),c,dre(t.shape.length)];n.atomic||h.push(hre(t.shape,t.dtype,n.isVec4));let d=e.map((f,m)=>lre(f,t.shape,n.variableTypes?n.variableTypes[m]==="vec4<f32>":n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);return h.push(d),h.push(n.getUserCode()),h.join(`
`)}function ire(e,t,n,s){let r=e.shaderKey;if(e.isFromPixels)return r;let a=n.map(c=>c.dtype).concat(s.dtype),i=n.map(c=>I.getBroadcastDims(c.shape,s.shape)),o=n.map(c=>w.arraysEqual(c.shape,s.shape)).join("_"),u=i.map(c=>c.join("_")).join(";"),l=IN(e)?"flatDispatch":"";return r+="_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(c=>c.length).join(",")+a.join(",")+e.variableNames.join(",")+u+o+l,r}var gk=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let modulo: i32 = a % b;
    if (sign < 0. && modulo != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function bk(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=w.computeStrides(e),s=Zt(t),r=[];for(let i=0;i<t;i++)r.push(`d${i}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a;return a="var index2 = index;"+n.map((i,o)=>{let u=`let ${r[o]} = index2 / uniforms.outShapeStrides.${xr(o)}`,l=o===n.length-1?`let ${r[o+1]} = index2 - ${r[o]} * uniforms.outShapeStrides.${xr(o)}`:`index2 = index2 - ${r[o]} * uniforms.outShapeStrides.${xr(o)}`;return`${u}; ${l};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}function ore(e,t){let n=e.name,s=e.shape.length,r=Zt(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=i.map(c=>`${c} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}[0]);
      }
    `;let u=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,l=`${s}D`;return s===0&&(l="1D"),t?`
      fn ${a}(${o}) -> vec4<f32> {
        return vec4<f32>(${n}[getIndexFromCoords${l}(${r}(${i.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${a}(${o}) -> f32 {
      return f32(${n}[getIndexFromCoords${l}(${r}(${i.join(",")}),
        ${u})]);
    }
   `}function ure(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),i="get"+a+"ByOutput",o=e.shape.length,u=t.length,l=Zt(u);if(w.arraysEqual(e.shape,t)&&s)return n?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${r}[globalIndex]);
      }

      fn ${i}Coords(coords : ${l}) -> vec4<f32> {
        return vec4<f32>(${r}[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      return f32(${r}[globalIndex]);
    }

    fn ${i}Coords(coords : ${l}) -> f32 {
      return f32(${r}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let c=I.getBroadcastDims(e.shape,t),h=u-o,d="";if(o===0)return n?`
    fn ${i}Index(globalIndex : i32) -> vec4<f32> {
      return get${a}();
    }

    fn ${i}Coords(coords : ${l}) -> vec4<f32> {
      return get${a}();
    }
  `:`
    fn ${i}Index(globalIndex : i32) -> f32{
      return get${a}();
    }

    fn ${i}Coords(coords : ${l}) -> f32{
      return get${a}();
    }
  `;u<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${xr(g+h)} = 0;`).join(`
`);let p="";if(u<2&&o>0)p="coords";else if(u>1){let g=Zt(o),b=e.shape.map((y,v)=>`coords.${xr(v+h)}`).join(", ");p=`${g}(${b})`}else p="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;return n?`
    fn ${i}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${d}
      return ${r}[getIndexFromCoords${m}(${p}, ${f}) / 4];
    }

    fn ${i}Coords(coordsIn : ${l}) -> vec4<f32> {
      var coords = coordsIn;
      ${d}
      return ${r}[getIndexFromCoords${m}(${p}, ${f}) / 4];
    }
  `:`
  fn ${i}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return f32(${r}[getIndexFromCoords${m}(${p}, ${f})]);
  }

  fn ${i}Coords(coordsIn : ${l}) -> f32 {
    var coords = coordsIn;
    ${d}
    return f32(${r}[getIndexFromCoords${m}(${p}, ${f})]);
  }
`}function lre(e,t,n,s){let r=ore(e,n);return e.shape.length<=t.length&&(r+=ure(e,t,n,s)),r}function cre(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return`fn getOutputCoords() -> ${Zt(a)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let i="",o=[n,s,r],u=0;for(let d=0;d<o.length;d++){let p=o[d];if(p.length!==0)if(u+=p.length,p.length===1)i+=`let d${p[0]} = i32(globalId[${d}]);`;else{let f=sre(p,"uniforms.outShape");i+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)i+=`let d${p[m]} = index${d} / ${f[m]};`,m===f.length-1?i+=`let d${p[m+1]} = index${d} - d${p[m]} * ${f[m]};`:i+=`index${d} = index${d} - d${p[m]} * ${f[m]};`}}let l=[];for(let d=0;d<u;d++)l.push(`d${d}`);let c=Zt(u),h=`fn getOutputCoords() -> ${c} {
  ${i}
`;return l.length===0?h+=`return ${c}(0); }`:h+=`return ${c}(${l.join(",")}); }`,h}function dre(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function IN(e){return e.dispatch[1]===1&&e.dispatch[2]===1}function sl(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function hre(e,t,n){let s=e.length,r=sl(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${r}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${r}(value);
    }`,s>=2){let i=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=Zt(s);n?a+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}var CN={};Ee(CN,{ArrayBufferToTypedArray:()=>$N,GPUBytesPerElement:()=>TN,MatMulProgramType:()=>_N,computeDispatch:()=>Ae,computeWorkGroupSizeForConv2d:()=>dx,computeWorkGroupSizeForMatMul:()=>NN,computeWorkPerThreadForConv2d:()=>hx,flatDispatchLayout:()=>We,isWebGPUSupported:()=>px,tilesFitEvenlyIntoShape:()=>pre});var ha=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function pre(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]===0)}function Ae(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,i]=[Math.ceil(ha(e.x.map(o=>t[o]))/(n[0]*s[0])),e.y?Math.ceil(ha(e.y.map(o=>t[o]))/(n[1]*s[1])):1,e.z?Math.ceil(ha(e.z.map(o=>t[o]))/(n[2]*s[2])):1];return[r,a,i]}function dx(e,t,n=!1){if(n)return[8,8,1];let s=ha(e.x.map(a=>t[a])),r=ha(e.y.map(a=>t[a]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function NN(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function hx(e,t,n=!1){if(n)return[4,4,1];let s=ha(e.x.map(a=>t[a])),r=ha(e.y.map(a=>t[a]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function We(e){return{x:e.map((t,n)=>n)}}function TN(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function $N(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function px(){return(typeof window!="undefined"||typeof WorkerGlobalScope!="undefined")&&!!navigator.gpu}var _N=(e=>(e[e.MatMulPackedVec4Program=0]="MatMulPackedVec4Program",e[e.MatMulReduceProgram=1]="MatMulReduceProgram",e[e.MatMulSplitKProgram=2]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=3]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=4]="MatMulPackedProgram",e[e.MatMulMax=5]="MatMulMax",e))(_N||{});function AN(e,t,n,s,r=!1,a=!1,i=!1,o=1){w.assert(n&&o===1||!n,()=>`transposeA ${n} is not compatible with component size ${o}`);let u=`
      let batch = ${e?"0":"batchIn"};
      let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
      ${n?`value = A[(batch * batchASize + col * uniforms.aShape[2] + row) / ${o}];`:`value = A[(batch * batchASize + row * uniforms.aShape[2] + col) / ${o}];`}

    `,l;return s===!1?l=`value = B[(batch * batchBSize + row * uniforms.bShape[2] + col) / ${o}];`:l=`value = B[(batch * batchBSize + col * uniforms.bShape[2] + row) / ${o}];`,`
  fn mm_readA(batchIn: i32, row: i32, colIn: i32) -> ${At(o)} {
    var value = ${At(o)}(0.0);
    let col = colIn * ${o};
    ${r&&i?u:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${u}
    }
    `}
    return value;
  }

  fn mm_readB(batchIn: i32, row: i32, colIn: i32) -> ${At(o)} {
    let col = colIn * ${o};
    let batch = ${t?"0":"batchIn"};
    let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
    var value = ${At(o)}(0.0);
    ${l}
    return value;
  }
  `}function Ep(e,t,n,s,r,a,i=!1,o=!1,u=!1,l=1){return`
  ${AN(n,s,r,a,i,o,u,l)}
  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${At(l)}) {
    let col = colIn * ${l};
    ${i&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${ku(e,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var fre=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          t * TileInner + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRowStart + inputRow,
          t * TileInner + inputCol);
        `,mre=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function fx(e,t,n=!1,s=32){let r=e[1]*t[1],a=e[0]*t[0],i=n?r:s,o=n?s:r;w.assert(o%t[1]===0&&i%t[0]===0&&s%t[1]===0,()=>`tileAHight ${o} must be divisible by workGroupSize[1]${t[1]}, tileAWidth ${i} must be divisible by workGroupSize[0]${t[0]}, tileInner ${s} must be divisible by workGroupSize[1]${t[1]}`);let u=o/t[1],l=i/t[0],c=s/t[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${i}>, ${o}>;
    var<workgroup> mm_Bsub : array<array<f32, ${a}>, ${s}>;
    const RowPerThread = ${e[1]};
    const ColPerThread = ${e[0]};
    const TileInner = ${s};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;
      let batch = i32(globalId.z);
      let globalRowStart = i32(workgroupId.y) * ${r};

      let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${u};
      let tileColA = i32(localId.x) * ${l};
      let tileRowB = i32(localId.y) * ${c};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${u}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${l}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${fre(n)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch,
              t * TileInner + inputRow,
              globalCol + innerCol);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${mre(n)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          mm_write(batch, globalRow + innerRow, globalCol + innerCol,
              acc[innerRow][innerCol]);
        }
      }
    }
  `}var gre=e=>e?`
      mm_readA(batch, colA, globalRow),
      mm_readA(batch, colA + 1, globalRow),
      mm_readA(batch, colA + 2, globalRow),
      mm_readA(batch, colA + 3, globalRow)
  `:`
      mm_readA(batch, globalRow, colA),
      mm_readA(batch, globalRow, colA + 1),
      mm_readA(batch, globalRow, colA + 2),
      mm_readA(batch, globalRow, colA + 3)
  `;function bre(e,t=!1){return w.assert(e[1]===1&&e[2]===1,()=>`A linear work group size is required. But got ${e}.`),`
    const TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Su()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;
      let batch = i32(globalId.z);
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${gre(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(batch, rowB, globalCol),
                              mm_readB(batch, rowB + 1, globalCol),
                              mm_readB(batch, rowB + 2, globalCol),
                              mm_readB(batch, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var yre=class{constructor(e,t,n,s,r,a=!1,i=!1,o=null,u=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let c=a?e[1]:e[2];this.workGroupSize=NN(t[1],c,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let h=o!=null,d=l!=null;h&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.transposeA=a,this.transposeB=i,this.addBias=h,this.activation=u,this.hasPreluActivationWeights=d,this.batchAEqualOne=s,this.batchBEqualOne=r,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],c),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${i}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e,t,n){let s=this.workGroupSize[1]*this.workPerThread,r=this.workGroupSize[0]*this.workPerThread;this.tileInner=32,this.outputShape[1]===1&&(this.tileInner=this.workGroupSize[0]*4);let a=e%s===0,i=t%r===0,o=n%this.tileInner===0;return[a,i,o]}getUserCode(){return`
      ${or(this.activation,this.hasPreluActivationWeights)}
      ${Ep(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner)}
      ${this.outputShape[1]>1?fx([this.workPerThread,this.workPerThread,1],this.workGroupSize,this.transposeA,this.tileInner):bre(this.workGroupSize,this.transposeA)}
    `}},vre=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          t * TileInner + inputRow,
          globalRowStart / ${t} + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          t * TileInner / ${t} + inputCol);
        `,xre=(e,t)=>e?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached[0] * ACached0[i] + acc[i];
          acc[i] = BCached[1] * ACached1[i] + acc[i];
          acc[i] = BCached[2] * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached[3] * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached[0] * ACached.x + acc[i];
          acc[i] = BCached[1] * ACached.y + acc[i];
          acc[i] = BCached[2] * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached[3] * ACached.w + acc[i];"}
        }`;function mx(e,t,n,s,r=4,a=!1){let i=a?t:s,o=a?s:t,u=a?e[1]:r;return w.assert((a&&t===n||s%4===0||s%3===0)&&e[0]===4&&(r===3||r===4),()=>`tileInner ${s} must be divisible by 4|3. ColPerThread ${e[0]} must be 4.
           innerElementSize ${r} must be 3|4.`),`
  var<workgroup> mm_Asub : array<array<vec${u}<f32>, ${i/u}>, ${o}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${s}>;

  const RowPerThread = ${e[1]};
  const ColPerThread = ${e[0]};
  const InnerElementSize = ${r};
  const TileInner = ${s};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
          @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${t===1?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let globalRowStart = i32(workgroupId.y) * ${t};

    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = localRow * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${vre(a,u)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch, t * TileInner + inputRow, globalCol);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            BCached[0] = mm_Bsub[k * InnerElementSize][tileCol];
            BCached[1] = mm_Bsub[k * InnerElementSize + 1][tileCol];
            BCached[2] = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${r===3?"":"BCached[3] = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${xre(a,r)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var wre=class{constructor(e,t,n,s,r=!1,a=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&!r?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let u=a!=null,l=o!=null;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1&&!r?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=n,this.batchBEqualOne=s,this.transposeA=r;let c=r?e[1]:e[2];this.fitAOuter=t[1]%this.tileAOuter===0,this.fitBOuter=t[2]%this.tileBOuter===0,this.fitInner=c%this.tileInner===0,this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}_${this.transposeA}`}getUserCode(){return`
      ${or(this.activation,this.hasPreluActivationWeights,!0)}
      ${Ep(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,!1,this.fitAOuter,this.fitBOuter,this.fitInner,4)}
      ${mx(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,4,this.transposeA)}
    `}};function kre(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Su()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var Sre=class{constructor(e,t,n,s=!1,r=!1,a=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize);let u=a!=null,l=o!=null;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${or(this.activation,this.hasPreluActivationWeights)}
      ${Ep(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${kre()}
    `}};function Ire(e){let t=e[1],n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Su()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batch, globalRow, globalColA);
    var regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batch, globalRow, globalColA);
      regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var Cre=class{constructor(e,t,n,s=!1,r=!1,a=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]/this.workGroupSize[1]),n[0]];let u=a!=null;u&&this.variableNames.push("bias");let l=o!=null;l&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${or(this.activation,this.hasPreluActivationWeights)}
      ${Ep(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${Ire(this.workGroupSize)}
    `}},Nre=class{constructor(e,t,n,s,r=!1,a=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.atomic=!0,this.tileInner=32,w.assert(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.elementsPerThread=[4,4,this.tileInner],this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1),this.dispatch=Ae(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workGroupSize,this.elementsPerThread),this.transposeA=r,this.transposeB=a,this.batchAEqualOne=n,this.batchBEqualOne=s,this.shaderKey=`matMulSplitK_${r}_${a}_${n}_${s}_${this.elementsPerThread}`}getUserCode(){let e=`
     var oldValue = atomicLoad(&(result[flatIndex]));
     var exchanged = false;
     for (; !exchanged;) {
       let newValueF32 = bitcast<f32>(oldValue) + value;
       let newValue = bitcast<i32>(newValueF32);
       let res = atomicCompareExchangeWeak(&(result[flatIndex]), oldValue, newValue);
       oldValue = res.old_value;
       exchanged = res.exchanged;
     }
     `;return`
      ${AN(this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          var value = valueIn;
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          ${e}
        }
      }

      ${this.makeMatMulSplitKSource()}
    `}makeMatMulSplitKSource(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=this.elementsPerThread[1],s=this.elementsPerThread[0],r=this.tileInner/this.workGroupSize[0],a=this.tileInner/this.workGroupSize[1];return w.assert(this.tileInner%this.workGroupSize[0]===0&&this.tileInner%this.workGroupSize[1]===0,()=>`tileInner ${this.tileInner} must be divisible by workGroupSize[0]${this.workGroupSize[0]} and workGroupSize[1]${this.workGroupSize[1]}`),`
      var<workgroup> mm_Asub : array<array<f32, ${this.tileInner}>, ${e}>;
      var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${this.tileInner}>;
      ${Su()}
        let tileRow = i32(localId.y) * ${n};
        let tileCol = i32(localId.x) * ${s};

        let globalRow = i32(globalId.y) * ${n};
        let globalCol = i32(globalId.x) * ${s};
        let batch = 0;
        let kStart = i32(globalId.z) * ${this.tileInner};

        // Load one tile of A into local memory.
        let tileColA = i32(localId.x) * ${r};
        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${r}; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;
            mm_Asub[inputRow][inputCol] = mm_readA(${this.batchAEqualOne?0:"batch"},
                globalRow + innerRow,
                kStart + inputCol);
          }
        }
        // Load one tile of B into local memory.
        let tileRowB = i32(localId.y) * ${a};
        for (var innerRow = 0; innerRow < ${a}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(${this.batchBEqualOne?0:"batch"},
                kStart + inputRow,
                globalCol + innerCol);
          }
        }

        workgroupBarrier();

        var acc : array<array<f32, ${s}>, ${n}>;
        // Loop over shared dimension. Compute acc values for a single thread.
        for (var k = 0; k < ${this.tileInner}; k = k + 1) {
          var BCached : array<f32, ${s}>;
          for (var inner = 0; inner < ${s}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
            let ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
            mm_write(batch, globalRow + innerRow, globalCol + innerCol, acc[innerRow][innerCol]);
          }
        }
      }
    `}},Tre=class{constructor(e,t=null,n=null,s=null){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=s!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${or(this.activation,this.hasPreluActivationWeights)}
    ${Ge()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${ku(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}},$re=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ge()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Ei(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let i=w.getArrayFromDType(a,w.sizeFromShape(s));return i.fill(r),t.makeTensorInfo(s,a,i)}else{let i=new $re(s),o=[{type:"float32",data:[r]}];return t.runWebGPUProgram(i,[],a,o)}}var _re={kernelName:Rl,backendName:"webgpu",kernelFunc:Ei};function Re(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),i=w.inferFromImplicitShape(r,a),o=w.sizeFromShape(i);return w.assert(a===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}var Are={kernelName:Wo,backendName:"webgpu",kernelFunc:Re};function gx({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),x=iu.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([p,f]);w.assert(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[b,h,p]:[b,p,h],C=s?[y,f,d]:[y,d,f],$=Re({inputs:{x:e},backend:r,attrs:{shape:k}}),A=Re({inputs:{x:t},backend:r,attrs:{shape:C}}),E=[$,A],O=Math.max(b,y),R=b===1,D=y===1,T=(h%4===0&&!n||p%4===0&&n)&&f%4===0&&!s,L=[$,A],W=[{type:"int32",data:[p]},{type:"int32",data:[f]},{type:"int32",data:[h]}],q,j,K=[O,p,f],Q=X().get("WEBGPU_MATMUL_PROGRAM_TYPE");switch(Q<0&&(p*f<=128?Q=1:O===1&&p<=128&&f<=48&&d>=2e3?Q=2:p<=16&&(f<=512||d>=2*f)||f<=16&&(p<=512||h>=2*p)?Q=3:T?Q=0:Q=4),Q){case 0:q=new wre(k,K,R,D,n,a,u,i);break;case 1:q=new Sre(K,R,D,n,s,a,u,i);break;case 2:{if(j=Ei({backend:r,attrs:{shape:K,value:0,dtype:e.dtype}}),q=new Nre(K,d,R,D,n,s),a||u){j=r.runWebGPUProgram(q,L,e.dtype,W,j);let J=new Tre(j.shape,a,u,i),se=null,te=[j];a&&te.push(a),i&&te.push(i),u==="leakyrelu"&&(se=[{type:"float32",data:[o]}],J.uniforms+=" alpha : f32,");let oe=r.runWebGPUProgram(J,te,j.dtype,se);E.push(j);let re=Re({inputs:{x:oe},backend:r,attrs:{shape:x}});E.push(oe);for(let le of E)r.disposeData(le.dataId);return re}break}case 3:q=new Cre(k,C,K,n,s,a,u,i);break;case 4:q=new yre(k,K,X().get("WEBGPU_MATMUL_WORK_PER_THREAD"),R,D,n,s,a,u,i);break;default:throw new Error(`Unsupported MatMulProgramType ${Q}.`)}a&&L.push(a),i&&L.push(i),u==="leakyrelu"&&(W.push({type:"float32",data:[o]}),q.uniforms+=" alpha : f32,"),j=r.runWebGPUProgram(q,L,e.dtype,W,j);let ne=Re({inputs:{x:j},backend:r,attrs:{shape:x}});E.push(j);for(let J of E)r.disposeData(J.dataId);return ne}function Ere(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s;return gx({a:r,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}var Rre={kernelName:fa,backendName:"webgpu",kernelFunc:Ere},yk=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${lh(this.op,!1)}
      }

      ${Ge()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Pg=class{constructor(e,t,n){this.size=!0,this.variableNames=["A","B"],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=We(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length===1&&n.length>1&&t[0]<1024,this.useSharedMemoryWithB=n.length===1&&t.length>1&&n[0]<1024,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4):(w.arraysEqual(t,n)&&w.sizeFromShape(t)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workGroupSize=[128,1,1]),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let e;if(this.type==="shared"){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",n=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];
          let b = getBByOutputCoords(coords);`;e=`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${lh(this.op,this.isVec4)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ge()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${n}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}else{let t=this.type==="vec4"?"vec4<f32>":"f32",n=lh(this.op,this.isVec4);e=`
       fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
         ${n}
       }
       ${Ge()}
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `}return e}};function Gn(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Dre={kernelName:Xa,backendName:"webgpu",kernelFunc:Gn};function Iu(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.tensorMap.get(a.dataId),o=Gn({inputs:{x:s},backend:n}),u=Gn({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}var Fre={kernelName:vh,backendName:"webgpu",kernelFunc:Iu},bc=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${ea(this.op,!1)}
      }
      ${Ge()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function en({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,i=r,o=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let l=i.tensorMap.get(a.dataId),c=t(l.values,o);return i.makeTensorInfo(a.shape,o,c)}let u=new bc(a.shape,e);return i.runWebGPUProgram(u,[a],o)}}function Sn({opType:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;if(n&&i.dtype==="complex64"){let h=u.tensorMap.get(i.dataId),d=u.tensorMap.get(o.dataId),p,f;if(e!==0)[p,f]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{let[b,y]=g,v={dataId:b.dataId,dtype:b.dtype,shape:i.shape},x={dataId:y.dataId,dtype:y.dtype,shape:o.shape},k=new Pg(e,i.shape,o.shape);return u.runWebGPUProgram(k,[v,x],bn(b.dtype,y.dtype))});else{let g=new yk(17,i.shape,o.shape),b=new yk(18,i.shape,o.shape),y=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:i.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape}];p=u.runWebGPUProgram(g,y,"float32"),f=u.runWebGPUProgram(b,y,"float32")}let m=Iu({inputs:{real:p,imag:f},backend:u});return u.disposeData(p.dataId),u.disposeData(f.dataId),m}let l=s||bn(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||u.shouldExecuteOnCPU([i,o]))&&t!=null){let h=u.tensorMap.get(i.dataId).values,d=u.tensorMap.get(o.dataId).values,p=i.dtype==="string"?I.fromUint8ToStringArray(h):h,f=i.dtype==="string"?I.fromUint8ToStringArray(d):d,[m,g]=t(i.shape,o.shape,p,f,l);return u.makeTensorInfo(g,l,m)}let c=new Pg(e,i.shape,o.shape);return u.runWebGPUProgram(c,[i,o],l)}}var{addImpl:Ore,ceilImpl:Pre,concatImpl:Lre,equalImpl:zre,expImpl:Mre,expm1Impl:Bre,floorImpl:Vre,gatherNdImpl:Wre,gatherV2Impl:Ure,greaterEqualImpl:Gre,greaterImpl:Hre,lessEqualImpl:qre,lessImpl:jre,logImpl:Kre,maxImpl:Xre,maximumImpl:Yre,minimumImpl:Zre,multiplyImpl:Qre,negImpl:Jre,notEqualImpl:eae,prodImpl:tae,rangeImpl:nae,rsqrtImpl:sae,scatterImpl:rae,simpleAbsImpl:aae,sliceImpl:iae,stridedSliceImpl:oae,stringNGramsImpl:uae,subImpl:lae,tileImpl:cae,topKImpl:dae,transposeImpl:hae,uniqueImpl:efe}=Pv,pae=en({opType:0,cpuKernelImpl:aae}),fae={kernelName:yo,backendName:"webgpu",kernelFunc:pae},mae=Sn({opType:1,cpuKernelImpl:Ore,supportsComplex:!0}),gae={kernelName:Ar,backendName:"webgpu",kernelFunc:mae},bae=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Ge()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function yae(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Gn({inputs:{x:s[0]},backend:n});let r=s.map(o=>o.dtype).reduce((o,u)=>bn(o,u)),a=s.map(o=>o.shape),i=new bae(a);return n.runWebGPUProgram(i,s,r)}var vae={kernelName:Aa,backendName:"webgpu",kernelFunc:yae},EN=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let s=[t];I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=I.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${xr(this.inputShape.length-1)}`,n=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let a=0;a<this.outputShape.length;a++)r+=`outputCoords.${xr(a)},`;return r};return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      ${Ge()}
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},xae=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Ap()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},wae=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Zt(this.outputShape.length),t=kae(this.newDim);return`
      ${Ge()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function kae(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC.${xr(s)}`;return n.join()}function nr(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let c=0;c<u.length;c++)u[c]=r.shape[a[c]];if(n.shouldExecuteOnCPU([r])){let h=i.tensorMap.get(r.dataId).values,d=hae(h,r.shape,r.dtype,a,u);return n.makeTensorInfo(u,r.dtype,d)}if(r.shape.length===2&&w.arraysEqual(a,[1,0])){let c=new xae(r.shape,a);return i.runWebGPUProgram(c,[r],r.dtype)}let l=new wae(r.shape,a);return i.runWebGPUProgram(l,[r],r.dtype)}var Sae={kernelName:Qs,backendName:"webgpu",kernelFunc:nr};function Iae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=nr({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let c=new EN(u.shape,i[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[u],"int32",h);return l.forEach(p=>n.disposeData(p.dataId)),d}var Cae={kernelName:Ea,backendName:"webgpu",kernelFunc:Iae};function Nae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=nr({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let c=new EN(u.shape,i[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[u],"int32",h);return l.forEach(p=>n.disposeData(p.dataId)),d}var Tae={kernelName:Cl,backendName:"webgpu",kernelFunc:Nae},RN=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Ge()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},DN=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ge()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function $ae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1,c=I.computePool2DInfo(r.shape,a,i,l,o,u);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return Gn({inputs:{x:r},backend:n});let h,d=[{type:"int32",data:[c.strideHeight,c.strideWidth]}];return c.filterHeight===1&&c.filterWidth===1?h=new DN(c):(h=new RN(c,"avg"),d.push({type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]})),n.runWebGPUProgram(h,[r],r.dtype,d)}var _ae={kernelName:Ra,backendName:"webgpu",kernelFunc:$ae};function Aae(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return gx({a:r,b:a,transposeA:i,transposeB:o,backend:n})}var Eae={kernelName:Da,backendName:"webgpu",kernelFunc:Aae},Rae=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Zt(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=Zt(this.rank),t=Dae(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${Lg[a]} = uniforms.start[${a}] + coords.${Lg[a]};`),`
      ${Ge()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},Lg=["x","y","z","w","u","v"];function Dae(e){if(e===1)return"sourceLoc";if(e<=6)return Lg.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function Cu(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,u]=It.parseSliceParams(r,a,i);if(It.assertParamsValid(r,o,u),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let h=n.tensorMap.get(r.dataId),d=iae(h.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,d)}if(w.sizeFromShape(u)===0)return n.makeTensorInfo(u,r.dtype,[]);let l=new Rae(o,u),c=[{type:"int32",data:o}];return n.runWebGPUProgram(l,[r],r.dtype,c)}var Fae={kernelName:jo,backendName:"webgpu",kernelFunc:Cu},Oae=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=a.reduce((y,v)=>y*v),u=I.getReshaped(r.shape,a,o),l=I.getPermuted(u.length,a.length),c=I.getReshapedPermuted(r.shape,a,o),h=I.getSliceBeginCoords(i,a.length),d=I.getSliceSize(c,i,a.length),p=[],f=Re({inputs:{x:r},backend:n,attrs:{shape:u}}),m=nr({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Re({inputs:{x:m},backend:n,attrs:{shape:c}}),b=Cu({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(m),p.push(g),p.forEach(y=>n.disposeData(y.dataId)),b},Pae={kernelName:vo,backendName:"webgpu",kernelFunc:Oae},FN=Sn({opType:10,dtype:"bool",cpuKernelImpl:eae}),Lae={kernelName:Po,backendName:"webgpu",kernelFunc:FN};function yc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Gn({inputs:{x:r.complexTensorInfos.real},backend:n})}var zae={kernelName:Th,backendName:"webgpu",kernelFunc:yc};function Mae(e,t){let n=new bc(e.shape,22),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function zg(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Gn({inputs:{x:r},backend:n});let i=Et(r.shape),o=zg({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Iu({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeData(o.dataId),u}if(r.dtype==="complex64"){let i=yc({inputs:{input:r},backend:n}),o=zg({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeData(i.dataId),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=Gn({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32")return Mae(r,n);if(a==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),u=FN({inputs:{a:r,b:i},backend:n});return n.disposeData(i.dataId),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Bae={kernelName:Fa,backendName:"webgpu",kernelFunc:zg},Vae=en({opType:1,cpuKernelImpl:Pre}),Wae={kernelName:Oa,backendName:"webgpu",kernelFunc:Vae},Uae=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ge()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},Gae=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ge()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function Hae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o,u=[{type:"float32",data:[a]},{type:"float32",data:[i]}];return w.sizeFromShape(r.shape)%4===0?o=new Uae(r.shape):o=new Gae(r.shape),n.runWebGPUProgram(o,[r],r.dtype,u)}var qae={kernelName:Er,backendName:"webgpu",kernelFunc:Hae},jae=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ge()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Rp(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Gn({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Kae={kernelName:Ih,backendName:"webgpu",kernelFunc:Rp};function Ju(e,t,n){let s=e[0].dtype;if(s==="complex64"){let f=e.map(v=>yc({inputs:{input:v},backend:n})),m=e.map(v=>Rp({inputs:{input:v},backend:n})),g=Ju(f,t,n),b=Ju(m,t,n),y=Iu({inputs:{real:g,imag:b},backend:n});return f.forEach(v=>n.disposeData(v.dataId)),m.forEach(v=>n.disposeData(v.dataId)),n.disposeData(g.dataId),n.disposeData(b.dataId),y}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let f=e.map(k=>{let C=w.sizeFromShape(k.shape.slice(t));return Re({inputs:{x:k},backend:n,attrs:{shape:[-1,C]}})}),m=f.map(k=>({vals:n.readSync(k.dataId),shape:k.shape})),g=I.computeOutShape(f.map(k=>k.shape),1),b=f[0].shape[0]===1,y=Lre(m,g,s,b),v=I.computeOutShape(e.map(k=>k.shape),t),x=n.makeTensorInfo(v,s,y);return f.forEach(k=>n.disposeData(k.dataId)),x}let a=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>a){let f=[];for(let g=0;g<e.length;g+=a){let b=e.slice(g,g+a);f.push(Ju(b,t,n))}let m=Ju(f,t,n);for(let g of f)n.disposeData(g.dataId);return m}let{tensors2D:i,outShape:o}=Xae(e,t,n),u=i.map(f=>f.shape),l=new jae(u),c=[],h=new Array(u.length-1);if(h.length>0){h[0]=u[0][1],c.push({type:"int32",data:[h[0]]});for(let f=1;f<h.length;f++)h[f]=h[f-1]+u[f][1],c.push({type:"int32",data:[h[f]]})}let d=n.runWebGPUProgram(l,i,i[0].dtype,c);i.forEach(f=>n.disposeData(f.dataId));let p=Re({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeData(d.dataId),p}function Xae(e,t,n){let s=I.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>Re({inputs:{x:a},backend:n,attrs:{shape:[w.sizeFromShape(a.shape.slice(0,t)),w.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function ON(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=I.computeOutShape(t.map(l=>l.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(l=>w.sizeFromShape(l.shape)>0);if(o.length===1)return Gn({inputs:{x:o[0]},backend:n});let u=o.map(l=>l.shape);return I.assertParamsConsistent(u,a),Ju(o,a,n)}var Yae={kernelName:xo,backendName:"webgpu",kernelFunc:ON};function Zae(e,t,n,s,r=!1,a=null,i=!1,o=4,u=4,l=4){let c=E=>{switch(E){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${E} is not supported.`)}},h=E=>{switch(E){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${E} is not supported.`)}},d=e?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,p=e?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=e?"uniforms.xShape[1]":"uniforms.xShape[2]",m=e?"uniforms.xShape[2]":"uniforms.xShape[3]",g=e?"row":"col",b=e?"col":"row",y=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${b} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${b} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${b} % inChannels;
      var resData = ${At(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(o)}
      }
      return resData;`,v=e?t&&s?`
      let col = colIn * ${o};
      ${y}`:`
      let col = colIn * ${o};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${y}
      }
      return ${At(o)}(0.0);`:s&&n?`
      let col = colIn * ${o};
      ${y}`:`
      let col = colIn * ${o};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${y}
      }
      return ${At(o)}(0.0);`,x=`${h(u)}`,k=At(l),C=At(e?o:u),$=At(e?u:o);return`
      ${or(a,i,l===4,4)}
      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${C} {
        ${e?v:x}
      }

      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${$} {
        ${e?x:v}
      }

      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${k}) {
        let col = colIn * ${l};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${p}
        ${ku(r,a)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var Qae=class{constructor(e,t,n,s,r=!1,a=null,i=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=dx(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=hx(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),r&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),i&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.addBias=r,this.activation=a,this.hasPreluActivationWeights=i,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=s%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){let e=this.isVec4?mx(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize,!this.isChannelsLast):fx(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),t=this.isVec4?[this.isChannelsLast?this.innerElementSize:4,4,4]:[1,1,1];return`
    ${Zae(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}};function vk(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function Jae({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=n.dataFormat==="channelsLast",l=!u,c=!1,h=u&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d=[],p,f;if(h){let b=n.inHeight*n.inWidth*n.inChannels;p=Re({inputs:{x:e},backend:s,attrs:{shape:[1,n.batchSize,b]}}),f=Re({inputs:{x:t},backend:s,attrs:{shape:[1,b,n.outChannels]}})}else p=Re({inputs:{x:e},backend:s,attrs:{shape:u?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),f=Re({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(d.push(p),d.push(f),a!=null){let b=vk(a.shape,u);b!=null&&(a=Re({inputs:{x:a},backend:s,attrs:{shape:b}}),d.push(a))}if(r!=null){let b=vk(r.shape,u);b!=null&&(r=Re({inputs:{x:r},backend:s,attrs:{shape:b}}),d.push(r))}let m=gx({a:u?p:f,b:u?f:p,transposeA:l,transposeB:c,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),g=Re({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});d.push(m);for(let b of d)s.disposeData(b.dataId);return g}function PN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=r!=null,l=a!=null,c=n.dataFormat==="channelsLast";if(c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID"||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID"))return Jae({x:e,filter:t,convInfo:n,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});let d=c?n.outHeight*n.outWidth:n.outChannels,p=c?n.outChannels:n.outHeight*n.outWidth,f=n.filterHeight*n.filterWidth*n.inChannels,m=[n.padInfo.top,n.padInfo.left],g=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...m]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]},{type:"int32",data:[d]},{type:"int32",data:[p]},{type:"int32",data:[f]}],b=new Qae(n,d,p,f,u,o,l),y=[],v=[e,t];u&&(!c&&r.shape.length===1&&(r=Re({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),y.push(r)),v.push(r)),l&&(!c&&a.shape.length===1&&(a=Re({inputs:{x:a},backend:s,attrs:{shape:[a.shape[0],1,1]}}),y.push(a)),v.push(a)),o==="leakyrelu"&&(g.push({type:"float32",data:[i]}),b.uniforms+=" alpha : f32,");let x=s.runWebGPUProgram(b,v,e.dtype,g);for(let k of y)s.disposeData(k.dataId);return x}function eie(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=n,h=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,h);return PN({x:r,filter:a,convInfo:d,backend:s})}var tie={kernelName:Pa,backendName:"webgpu",kernelFunc:eie};function nie(e=4){let t=a=>{switch(a){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${a} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${At(e)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${At(e)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];`}
      }
      return ${At(e)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${At(e)} {
    let col = colIn * ${e};
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${At(e)} {
    let col = colIn * ${e};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(e)}
    }
    return ${At(e)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${At(e)}) {
    let col = colIn * ${e};
    if (row < uniforms.dimAOuter && (col + ${e-1}) < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;
    }
  }`}var sie=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=dx(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=hx(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.innerElementSize=4,this.variableTypes=["vec4<f32>","f32"]):this.innerElementSize=this.elementsPerThread[0],this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}_${this.innerElementSize}`}getUserCode(){let e=this.isVec4?mx(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize):fx(this.elementsPerThread,this.workGroupSize);return`
    ${nie(this.isVec4?4:1)}
    ${e}
    `}},rie=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Ge()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function aie(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,h=I.convertConv2DDataFormat(l),d=I.computeConv2DInfo(i,a.shape,o,1,u,c,!1,h),p=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(X().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new rie(d);else{f=new sie(d);let m=d.inShape[1]*d.inShape[2],g=d.inShape[3],b=d.filterHeight*d.filterWidth*d.outChannels;p.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return n.runWebGPUProgram(f,[r,a],"float32",p)}var iie={kernelName:La,backendName:"webgpu",kernelFunc:aie},oie=en({opType:2}),uie={kernelName:za,backendName:"webgpu",kernelFunc:oie},lie=en({opType:3}),cie={kernelName:Ma,backendName:"webgpu",kernelFunc:lie},die=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Ge()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${i};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},hie=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,c=new die(r.shape[3],a.shape,o,u),h=[{type:"float32",data:[l]}];return n.runWebGPUProgram(c,[r,a,i],"float32",h)},pie={kernelName:ko,backendName:"webgpu",kernelFunc:hie},xk=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=t,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=s,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",n=this.exclusive?t:`getX(${wk(e,"coords",this.op)})`,s=this.outputShape[this.outputShape.length-1],r="",a="";return this.exclusive?(r=this.reverse?`end != ${s-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${s}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${Ge()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${kk(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${a};
           ${kk(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${wk(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function wk(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function kk(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function LN(e,t,n,s,r,a){let i=t.shape.length,o=I.getAxesPermutation([s],i),u=t;o!=null&&(u=nr({inputs:{x:t},backend:n,attrs:{perm:o}}));let l=I.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=u.shape[l],h=Gn({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let p=new xk(e,u.shape,!1,a),f=h,m=[{type:"float32",data:[d]}];h=n.runWebGPUProgram(p,[h],h.dtype,m),n.disposeData(f.dataId)}if(r){let d=new xk(e,u.shape,r,a),p=h,f=[{type:"float32",data:[0]}];h=n.runWebGPUProgram(d,[h],h.dtype,f),n.disposeData(p.dataId)}if(o!=null){let d=I.getUndoAxesPermutation(o),p=nr({inputs:{x:h},backend:n,attrs:{perm:d}});return n.disposeData(h.dataId),n.disposeData(u.dataId),p}return h}function fie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return LN("*",r,n,a,i,o)}var mie={kernelName:wo,backendName:"webgpu",kernelFunc:fie};function gie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return LN("+",r,n,a,i,o)}var bie={kernelName:Ba,backendName:"webgpu",kernelFunc:gie},yie=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Ge()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function vie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],h=u*a,d=l*a,p=c/(a*a),f=i==="NHWC"?[o,h,d,p]:[o,p,h,d],m=[{type:"int32",data:[a]}],g=new yie(f,i);return n.runWebGPUProgram(g,[r],r.dtype,m)}var xie={kernelName:So,backendName:"webgpu",kernelFunc:vie},wie=class{constructor(e,t,n,s=!1,r=null,a=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=s,this.activation=r,this.hasPreluActivation=a,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],n=this.workGroupSize[1]+this.filterHeight-1,s=this.workGroupSize[0]+this.filterWidth-1;return`
      ${or(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${s}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Ap()}
      fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(local_invocation_index) LocalIndex: u32,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${s}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${ku(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}},zN=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,4,1]),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}`}getUserCode(){let e=4+this.convInfo.filterWidth-1;return`
      ${or(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, row, col, channel);
        }
        return value;
      }
      ${Ap()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * 4;
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          for (var i = 0; i < ${e}; i++)
          {
            xVals[i] = readX(batch, xR, xCCorner + i, d1);
          }
          for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
            let wValue = getW(wR, wC, d1, 0);
            dotProd[0] = dotProd[0] + xVals[0 + wC] * wValue;
            dotProd[1] = dotProd[1] + xVals[1 + wC] * wValue;
            dotProd[2] = dotProd[2] + xVals[2 + wC] * wValue;
            dotProd[3] = dotProd[3] + xVals[3 + wC] * wValue;
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${ku(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}},MN=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${or(this.activation,this.hasPreluActivation,!1,4)}

      ${Su()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${ku(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function kie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s,h=I.convertConv2DDataFormat(u),d=l;d==null&&(d=[1,1]);let p=I.computeConv2DInfo(r.shape,a.shape,i,d,o,c,!0,h),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inHeight,p.inWidth]}],m=p.dataFormat==="channelsLast",g;return!m&&p.inHeight>16&&p.inWidth>16&&p.strideHeight===1&&p.strideWidth===1&&p.dilationWidth===1&&p.dilationHeight===1&&p.inChannels===p.outChannels?g=new wie(p.outShape,p.filterHeight,p.filterWidth):m&&p.inHeight>4&&p.inWidth>4&&p.strideHeight===1&&p.strideWidth===1&&p.inChannels===p.outChannels&&p.dilationHeight===1&&p.dilationWidth===1&&p.inChannels%4===0?g=new zN(p):(g=new MN(p),f.push({type:"int32",data:[p.filterHeight]},{type:"int32",data:[p.filterWidth]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]})),n.runWebGPUProgram(g,[r,a],r.dtype,f)}var Sie={kernelName:Va,backendName:"webgpu",kernelFunc:kie},BN=Sn({opType:0,cpuKernelImpl:Qre,supportsComplex:!0}),Iie={kernelName:ai,backendName:"webgpu",kernelFunc:BN},Cie=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=I.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ge()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function vc(e,t,n,s,r){let a=e.shape.length,i=[],o=w.parseAxisParam(t,e.shape),u=o,l=I.getAxesPermutation(u,a),c=e;l!=null&&(c=nr({inputs:{x:e},attrs:{perm:l},backend:r}),u=I.getInnerMostAxes(u.length,a),i.push(c)),I.assertAxesAreInnerMostDims(s,u,a);let[h,d]=I.computeOutAndReduceShapes(c.shape,u),p=h;n&&(p=I.expandShapeToKeepDim(h,o));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){let m=r.tensorMap.get(c.dataId).values;switch(s){case"max":let g=Xre(m,w.sizeFromShape(d),p,e.dtype);f=r.makeTensorInfo(p,e.dtype,g);break;case"prod":let{outVals:b,outShape:y,outDtype:v}=tae(c.shape,c.dtype,m,u);f=r.makeTensorInfo(y,v,b);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=w.sizeFromShape(d),b=w.sizeFromShape(c.shape)/m,y={windowSize:m,inSize:m,batchSize:b,outSize:1},v=s==="mean"?"float32":Ph(e.dtype),x=[{type:"int32",data:[m]}],k=new Cie(y,s),C=r.runWebGPUProgram(k,[c],v,x);i.push(C),f=Re({inputs:{x:C},attrs:{shape:p},backend:r})}return i.forEach(m=>r.disposeData(m.dataId)),f}function bx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return vc(r,a,i,"sum",n)}var Nie={kernelName:yi,backendName:"webgpu",kernelFunc:bx};function Tie(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=I.decodeEinsumEquation(r,a.length);I.checkEinsumDimSizes(i.length,u,a);let{path:l,steps:c}=I.getEinsumComputePath(o,u),h=c.length,d=null,p=i.length,f=[];for(let m=0;m<h;++m){for(let g of c[m]){let{permutationIndices:b,expandDims:y}=I.getEinsumPermutation(p,u[g]),v;I.isIdentityPermutation(b)?v=a[g]:(v=nr({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=Re({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),d===null?d=v:(d=BN({inputs:{a:v,b:d},backend:n}),f.push(d))}m<h-1&&(l[m]>=0&&(d=bx({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(let m of f)m!==d&&n.disposeData(m.dataId);return d}var $ie={kernelName:Sh,backendName:"webgpu",kernelFunc:Tie},_ie=en({opType:4}),Aie={kernelName:Ua,backendName:"webgpu",kernelFunc:_ie},Eie=Sn({opType:4,dtype:"bool",cpuKernelImpl:zre}),Rie={kernelName:Io,backendName:"webgpu",kernelFunc:Eie},VN=en({opType:5,cpuKernelImpl:Mre,dtype:"float32"}),Die={kernelName:Ga,backendName:"webgpu",kernelFunc:VN};function Mg(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice(),u=r;return r<0&&(w.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),o.splice(u,0,1),Re({inputs:{x:a},backend:s,attrs:{shape:o}})}var Fie={kernelName:Co,backendName:"webgpu",kernelFunc:Mg},Oie=en({opType:6,cpuKernelImpl:Bre}),Pie={kernelName:No,backendName:"webgpu",kernelFunc:Oie},Lie=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ge()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},zie={kernelName:To,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Lie(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},Mie=en({opType:7,cpuKernelImpl:Vre}),Bie={kernelName:Ha,backendName:"webgpu",kernelFunc:Mie},Vie=Sn({opType:12,dtype:"int32"}),Wie={kernelName:qa,backendName:"webgpu",kernelFunc:Vie},Uie=class{constructor(e,t,n=!1){this.isFromPixels=!0,this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${Ge()}
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},Gie={kernelName:Rd,backendName:"webgpu",kernelFunc:Hie},Qi,Dm=X().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),fd=new Map;function Hie(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,u=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,l=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[c,h]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[h,c,a],p=X().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||o;if(l||u||f){let y;if(p){let O=r;if(!fd.has(O)||fd.get(O).expired){let R={source:O};fd.set(O,n.device.importExternalTexture(R))}y={width:c,height:h,format:null,usage:null,texture:fd.get(O)}}else{if(f){let T=X().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Qi==null||T!==Dm)&&(Dm=T,Qi=document.createElement("canvas").getContext("2d",{willReadFrequently:Dm})),Qi.canvas.width=c,Qi.canvas.height=h,Qi.drawImage(r,0,0,c,h),r=Qi.canvas}let O=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,R="rgba8unorm",D=n.textureManager.acquireTexture(d[1],d[0],R,O);n.queue.copyExternalImageToTexture({source:r},{texture:D},[d[1],d[0]]),y={width:c,height:h,format:R,usage:O,texture:D}}let v=w.sizeFromShape(d),x=w.computeStrides(d),k=new Uie(d,a,p),C=[{type:"uint32",data:[v]},{type:"uint32",data:[a]},{type:"uint32",data:[...x]}],$=n.makeTensorInfo([h,c],"int32"),A=n.tensorMap.get($.dataId);A.resourceInfo=y;let E=n.runWebGPUProgram(k,[$],"int32",C);return n.disposeData($.dataId),E}let m=r.data,g=m;if(a!=null&&a!==4){g=new Uint8Array(r.width*r.height*a);let y=m.length,v=0;for(let x=0;x<y;x++)x%4<a&&(g[v++]=m[x])}let b=n.makeTensorInfo(d,"int32",new Int32Array(g));return n.uploadToGPU(b.dataId),b}var qie=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(I.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Ge()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},jie={kernelName:ja,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:i,variance:o}=e,{varianceEpsilon:u}=t,l=n,c=[s,i,o],h=null;a!=null&&(h=a.shape,c.push(a));let d=null;r!=null&&(d=r.shape,c.push(r));let p=new qie(s.shape,i.shape,o.shape,h,d),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(p,c,s.dtype,f)}};function Kie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,m=I.convertConv2DDataFormat(c),g=I.computeConv2DInfo(r.shape,a.shape,u,h,l,d,!1,m);return PN({x:r,filter:a,convInfo:g,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:p})}var Xie={kernelName:ma,backendName:"webgpu",kernelFunc:Kie};function Yie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=c;f==null&&(f=[1,1]),w.assert(I.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let m=I.computeConv2DInfo(r.shape,a.shape,u,f,l,h,!0),g=[r,a],b=i!=null,y=o!=null;b&&g.push(i),y&&g.push(o);let v=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],x;return m.inHeight>4&&m.inWidth>4&&m.strideHeight===1&&m.strideWidth===1&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?x=new zN(m,b,d,y):(x=new MN(m,b,d,y),v.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),d==="leakyrelu"&&(v.push({type:"float32",data:[p]}),x.uniforms+=" alpha : f32,"),n.runWebGPUProgram(x,g,"float32",v)}var Zie={kernelName:ga,backendName:"webgpu",kernelFunc:Yie},Qie=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Zt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Ge()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function Jie(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=w.sizeFromShape(s.shape),[u,l,c,h]=I.prepareAndValidate(s,r),d=Re({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),p=Re({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),v=n.bufferSync(s),x=Wre(y,v,s.dtype,l,i,c,h,s.shape,o);return n.makeTensorInfo(u,s.dtype,x.values)}let f=new Qie(i,[l,c]),m=[{type:"int32",data:[i]},{type:"int32",data:h}],g=n.runWebGPUProgram(f,[p,d],p.dtype,m),b=Re({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(g.dataId),b}var eoe={kernelName:_o,backendName:"webgpu",kernelFunc:Jie},toe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=noe(this.aShape);return`
      ${Ge()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function noe(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<e.length;s++)s===2?n.push("indexZ"):n.push(`${t[s]}`);return n.join()}function WN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0],l=I.segment_util.collectGatherOpShapeInfo(r,a,u,o),c=w.sizeFromShape(a.shape),h=[],d=Re({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=Re({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(d),h.push(p);let f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let v=n.tensorMap.get(p.dataId).values,x=_e(p.shape,p.dtype,v),C=n.tensorMap.get(d.dataId).values,$=_e(d.shape,d.dtype,C),A=Ure($,x,f);return h.forEach(E=>n.disposeData(E.dataId)),n.makeTensorInfo(l.outputShape,A.dtype,A.values)}let m=new toe(d.shape,f),g=n.runWebGPUProgram(m,[d,p],d.dtype);h.push(g);let b=Re({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach(y=>n.disposeData(y.dataId)),b}var soe={kernelName:$o,backendName:"webgpu",kernelFunc:WN},roe=Sn({opType:5,cpuKernelImpl:Hre,dtype:"bool"}),aoe={kernelName:Ao,backendName:"webgpu",kernelFunc:roe},ioe=Sn({opType:6,dtype:"bool",cpuKernelImpl:Gre}),ooe={kernelName:Ka,backendName:"webgpu",kernelFunc:ioe};function uoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=[{type:"float32",data:[a]}],o=new bc(r.shape,14);return o.uniforms="alpha : f32,",n.runWebGPUProgram(o,[r],"float32",i)}var loe={kernelName:Ya,backendName:"webgpu",kernelFunc:uoe},coe=Sn({opType:7,dtype:"bool",cpuKernelImpl:jre}),doe={kernelName:Eo,backendName:"webgpu",kernelFunc:coe},hoe=Sn({opType:8,dtype:"bool",cpuKernelImpl:qre}),poe={kernelName:Ro,backendName:"webgpu",kernelFunc:hoe},foe=en({opType:9,cpuKernelImpl:Kre}),moe={kernelName:Za,backendName:"webgpu",kernelFunc:foe},goe=Sn({opType:9,dtype:"bool"}),boe={kernelName:Do,backendName:"webgpu",kernelFunc:goe},yoe=en({opType:10}),voe={kernelName:Fo,backendName:"webgpu",kernelFunc:yoe};function UN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s;return vc(r,a,i,"max",n)}var xoe={kernelName:Qa,backendName:"webgpu",kernelFunc:UN},woe=Sn({opType:15,cpuKernelImpl:Yre}),koe={kernelName:Ja,backendName:"webgpu",kernelFunc:woe};function Soe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1,c=I.computePool2DInfo(r.shape,a,i,l,o,u),h,d=[];if(c.filterHeight===1&&c.filterWidth===1){if(w.arraysEqual(c.inShape,c.outShape))return Gn({inputs:{x:r},backend:n});h=new DN(c),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]})}else h=new RN(c,"max"),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]});return n.runWebGPUProgram(h,[r],r.dtype,d)}var Ioe={kernelName:ei,backendName:"webgpu",kernelFunc:Soe};function Coe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:i}=s;return vc(r,i,a,"mean",n)}var Noe={kernelName:ti,backendName:"webgpu",kernelFunc:Coe};function Toe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return vc(r,a,i,"min",n)}var $oe={kernelName:ni,backendName:"webgpu",kernelFunc:Toe},_oe=Sn({opType:16,cpuKernelImpl:Zre}),Aoe={kernelName:si,backendName:"webgpu",kernelFunc:_oe},Eoe=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((u,l)=>`uniforms.pad${l}[0]`).join(","),n=this.xShape.map((u,l)=>`uniforms.pad${l}[0] + uniforms.xShape${e>1?`[${l}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=Zt(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ge()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}},Roe={kernelName:ri,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,i=n,o=r.map(c=>({type:"int32",data:[c[0],c[1]]})),u=new Eoe(s.shape,r,a);return i.runWebGPUProgram(u,[s],s.dtype,o)}};function Doe(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[i,o]=Jre(a.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}let r=new bc(s.shape,11);return n.runWebGPUProgram(r,[s],s.dtype)}var Foe={kernelName:Oo,backendName:"webgpu",kernelFunc:Doe};function Ooe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s,l=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=Ts.nonMaxSuppressionV3Impl(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var Poe={kernelName:Lo,backendName:"webgpu",kernelFunc:Ooe};function Loe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),d=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=Ts.nonMaxSuppressionV5Impl(c,h,d,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var zoe={kernelName:zo,backendName:"webgpu",kernelFunc:Loe};function ch(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=yc({inputs:{input:s},backend:n}),a=ch({inputs:{x:r},backend:n}),i=Rp({inputs:{input:s},backend:n}),o=ch({inputs:{x:i},backend:n}),u=Iu({inputs:{real:a,imag:o},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),u}else return Ei({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Moe={kernelName:nu,backendName:"webgpu",kernelFunc:ch};function GN(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=yc({inputs:{input:s},backend:n}),a=GN({inputs:{x:r},backend:n}),i=Rp({inputs:{input:s},backend:n}),o=ch({inputs:{x:i},backend:n}),u=Iu({inputs:{real:a,imag:o},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),u}else return Ei({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Boe={kernelName:Mo,backendName:"webgpu",kernelFunc:GN};function Voe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Mg({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let h=Mg({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(h),h}),l=ON({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeData(c.dataId)),l}var Woe={kernelName:Vo,backendName:"webgpu",kernelFunc:Voe},Uoe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Zt(e),n=this.xShape.map((c,h)=>`uniforms.pad${h}[0]`).join(","),s=this.xShape.map((c,h)=>`uniforms.pad${h}[0] + uniforms.xShape${e>1?`[${h}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,i=e>1?"any(outC < start)":"outC < start",o=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ge()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${o}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${u}));
          }
        }
      }
    `}},HN=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(a.every(l=>w.arraysEqual(l,[0,0])))return Gn({inputs:{x:r},backend:n});if(w.sizeFromShape(r.shape)===0){let l=a.map((c,h)=>c[0]+r.shape[h]+c[1]);return Ei({backend:n,attrs:{shape:l,value:i,dtype:r.dtype}})}let o=[{type:"float32",data:[i]}];a.map(l=>o.push({type:"int32",data:[l[0],l[1]]}));let u=new Uoe(r.shape,a);return n.runWebGPUProgram(u,[r],r.dtype,o)},Goe={kernelName:ii,backendName:"webgpu",kernelFunc:HN},Hoe=Sn({opType:13}),qoe={kernelName:oi,backendName:"webgpu",kernelFunc:Hoe};function joe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new Pg(14,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var Koe={kernelName:ui,backendName:"webgpu",kernelFunc:joe};function Xoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return vc(r,a,i,"prod",n)}var Yoe={kernelName:li,backendName:"webgpu",kernelFunc:Xoe},Zoe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=nae(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},Qoe={kernelName:Bl,backendName:"webgpu",kernelFunc:Zoe},qN=Sn({opType:3}),Joe={kernelName:Wa,backendName:"webgpu",kernelFunc:qN},eue=en({opType:12}),tue={kernelName:ci,backendName:"webgpu",kernelFunc:eue},nue=en({opType:13}),sue={kernelName:pi,backendName:"webgpu",kernelFunc:nue},rue=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Ge()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function aue(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:i,halfPixelCenters:o}=s,[u,l]=i,c=a&&u>1?1:0,h=a&&l>1?1:0,p=[{type:"float32",data:[c,h]},{type:"float32",data:[o?.5:0]}],f=new rue(r.shape,u,l);return n.runWebGPUProgram(f,[r],"float32",p)}var iue={kernelName:hi,backendName:"webgpu",kernelFunc:aue},oue=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Ge()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function uue(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=a&&u>1?1:0,h=a&&l>1?1:0,p=[{type:"float32",data:[c,h]},{type:"float32",data:[a?.5:0]}],f=new oue(r.shape,u,l,i);return n.runWebGPUProgram(f,[r],r.dtype,p)}var lue={kernelName:di,backendName:"webgpu",kernelFunc:uue},cue=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ge()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},due={kernelName:su,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new cue(s.shape,a),[l,c]=I.getImageCenter(i,s.shape[1],s.shape[2]),h=[{type:"float32",data:[l]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?h.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):h.push({type:"float32",data:a}),o.runWebGPUProgram(u,[s],s.dtype,h)}},hue=en({opType:15,cpuKernelImpl:sae}),pue={kernelName:fi,backendName:"webgpu",kernelFunc:hue},Td=class{constructor(e,t,n,s,r,a,i,o=!0){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=i,this.sumDupeIndices=o,this.dispatchLayout=We(e),this.dispatch=Ae(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${i}_${o}`;let u=Zt(r.length);this.uniforms=`sliceDim : i32, strides: ${u}, size: i32,`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="";this.dispatchLayout.x.length===1?(s="flattenedIndex",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(s="vec2<i32>(flattenedIndex, coords[1])",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${Array.from({length:this.updatesRank},(l,c)=>`coords[${c}]`).join(", ")})`,o=(l,c)=>{let h=`atomicAdd(${l}, bitcast<i32>(${c}))`;this.type==="float32"&&(h=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${c});
            loop {
              let info = atomicCompareExchangeWeak(${l}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${c});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let d=`atomicStore(${l}, bitcast<i32>(${c}));`;return this.sumDupeIndices?h:d};return`
    ${r}

      ${Ge()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${sl(this.type,!1)}(${i});
          let flatIndex = getOutputIndexFromCoords(${s});

          ${o("&result[flatIndex]","updateValue")};
        }
      }`}};function fue(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=I.calculateShapes(a,r,i),d=[h/l,l];if(h===0)return n.makeTensorInfo(i,r.dtype);let p=Re({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=Re({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=f.dtype,g=Ei({backend:n,attrs:{shape:d,value:0,dtype:m}}),b=w.sizeFromShape(f.shape),y=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[b]}],v=new Td(f.shape,o,p.shape.length,f.shape.length,c,d,m),x=n.runWebGPUProgram(v,[f,p],m,y,g),k=Re({inputs:{x},backend:n,attrs:{shape:i}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(x.dataId),k}var mue={kernelName:Ho,backendName:"webgpu",kernelFunc:fue},gue=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${s[i]}`),i<this.cRank&&r.push(`${s[i]}`);e=r.join(),t=a.join()}return`
      ${Ge()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function bue(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new gue(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(i,[s,r,a],bn(r.dtype,a.dtype))}var yue={kernelName:qo,backendName:"webgpu",kernelFunc:bue},vue=en({opType:18}),xue={kernelName:gi,backendName:"webgpu",kernelFunc:vue},wue=en({opType:16}),kue={kernelName:mi,backendName:"webgpu",kernelFunc:wue},Sue=en({opType:17}),Iue={kernelName:Ko,backendName:"webgpu",kernelFunc:Sue},jN=Sn({opType:2,cpuKernelImpl:lae,supportsComplex:!0}),Cue={kernelName:wi,backendName:"webgpu",kernelFunc:jN};function Nue(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=w.parseAxisParam([a],r.shape),o=UN({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=I.expandShapeToKeepDim(o.shape,i),l=Re({inputs:{x:o},backend:n,attrs:{shape:u}}),c=jN({inputs:{a:r,b:l},backend:n}),h=VN({inputs:{x:c},backend:n}),d=bx({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=Re({inputs:{x:d},backend:n,attrs:{shape:u}}),f=qN({inputs:{a:h,b:p},backend:n});return n.disposeData(o.dataId),n.disposeData(l.dataId),n.disposeData(c.dataId),n.disposeData(h.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),f}var Tue={kernelName:vi,backendName:"webgpu",kernelFunc:Nue},$ue=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=a.reduce((b,y)=>b*y),u=[[0,0]];u.push(...i);for(let b=1+a.length;b<r.shape.length;++b)u.push([0,0]);let l=[],c=HN({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),h=I.getReshaped(c.shape,a,o,!1),d=I.getPermuted(h.length,a.length,!1),p=I.getReshapedPermuted(c.shape,a,o,!1),f=Re({inputs:{x:c},backend:n,attrs:{shape:h}}),m=nr({inputs:{x:f},backend:n,attrs:{perm:d}}),g=Re({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach(b=>n.disposeData(b.dataId)),g},_ue={kernelName:Xo,backendName:"webgpu",kernelFunc:$ue},Aue=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Eue(this.rank,"uniforms.");return`
      ${Ge()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Eue(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function KN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let u=n.readSync(r.dataId),l=r.dtype==="string"?u.map(d=>w.decodeString(d)):u,c=_e(r.shape,r.dtype,l),h=cae(c,a);return n.makeTensorInfo(h.shape,h.dtype,h.values)}let i=new Aue(r.shape,a);return n.runWebGPUProgram(i,[r],r.dtype)}var Rue={kernelName:Rr,backendName:"webgpu",kernelFunc:KN};function Due(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=I.calculateShapes(a,r,o),p=!1;if(a.dtype==="string"){let A=n.bufferSync(r),E=n.bufferSync(a),O=w.decodeString(n.readSync(i.dataId)[0]),R=rae(A,E,o,d,c,l,u,h,O,p);return n.makeTensorInfo(o,R.dtype,R.values)}let f=[d/c,c],m=Re({inputs:{x:r},backend:n,attrs:{shape:[l,u]}}),g=a.shape.length?Re({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}):Gn({inputs:{x:a},backend:n}),b=g.dtype,y=n.makeTensorInfo([],b,w.makeZerosTypedArray(1,b)),v=Re({inputs:{x:i},backend:n,attrs:{shape:Array(f.length).fill(1)}}),x=KN({inputs:{x:v},backend:n,attrs:{reps:f}}),k=w.sizeFromShape([l,c]),C=[{type:"int32",data:[u]},{type:"int32",data:h},{type:"int32",data:[k]}];switch(l){case 0:break;case 1:{let A=new Td([l,c],u,m.shape.length,g.shape.length,h,f,b,p);n.runWebGPUProgram(A,[g,m],b,C,x)}break;default:{let A=new Td([l,c],u,m.shape.length,y.shape.length,h,f,b,p);n.runWebGPUProgram(A,[y,m],b,C,x)}{let A=new Td([l,c],u,m.shape.length,g.shape.length,h,f,b);n.runWebGPUProgram(A,[g,m],b,C,x)}}let $=Re({inputs:{x},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(v.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),$}var Fue={kernelName:Eh,backendName:"webgpu",kernelFunc:Due};function Oue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=I.prepareSplitSize(r,a,o),l=r.shape.length,c=new Array(l).fill(0),h=r.shape.slice();return u.map(d=>{let p=[...h];p[o]=d;let f=Cu({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});return c[o]+=d,f})}var Pue={kernelName:Yo,backendName:"webgpu",kernelFunc:Oue},Lue=en({opType:19}),zue={kernelName:bi,backendName:"webgpu",kernelFunc:Lue},Mue={kernelName:ql,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new bc(n.shape,20);return s.runWebGPUProgram(r,[n],n.dtype)}},Bue=Sn({opType:11}),Vue={kernelName:xi,backendName:"webgpu",kernelFunc:Bue},Wue=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Zt(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Ge()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Uue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=It.sliceInfo(r.shape,a,i,o,u,l,c,h,d),k;if(m)k=Re({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=It.computeOutShape(y,v,x),$=Cu({inputs:{x:r},backend:n,attrs:{begin:y,size:C}});k=Re({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeData($.dataId)}else if(n.shouldExecuteOnCPU([r])){let $=n.readSync(r.dataId),A=_e(r.shape,r.dtype,$),E=oae(p,A,x,y);k=n.makeTensorInfo(f,r.dtype,E.values)}else{let $=new Wue(p),A=[{type:"int32",data:y},{type:"int32",data:x}],E=n.runWebGPUProgram($,[r],r.dtype,A);k=Re({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeData(E.dataId)}return k}var Gue={kernelName:Zo,backendName:"webgpu",kernelFunc:Uue};function Hue(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,m]=uae(d,p,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var que={kernelName:jl,backendName:"webgpu",kernelFunc:Hue},jue=en({opType:21}),Kue={kernelName:ki,backendName:"webgpu",kernelFunc:jue},Xue=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Ge()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},Yue=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Ge()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function Ji(e,t){t!==null&&e.disposeData(t.dataId)}function Sk(e){let t=1;for(;t<e;)t*=2;return t}function Zue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=r.shape,u=o[o.length-1];if(n.shouldExecuteOnCPU([r])){let k=n.readSync(r.dataId),[C,$]=dae(k,o,r.dtype,a,i);return[n.makeTensorInfo(C.shape,C.dtype,C.values),n.makeTensorInfo($.shape,$.dtype,$.values)]}if(a===0)return o[o.length-1]=0,[n.makeTensorInfo(o,r.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(u===1)return[r,Ei({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let c=w.sizeFromShape(o)/u,h=Re({inputs:{x:r},attrs:{shape:[c,u]},backend:n}),d=Sk(a),p=Sk(u),f=null,m=()=>f===null?[h,h]:[h,f],g=(k,C,$)=>{let A=m(),E=new Xue($),R=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[C]}],D=f;f=n.runWebGPUProgram(E,A,"int32",R),Ji(n,D)};for(let k=1;k<d;k*=2){let C=k*2;for(let $=k;$>=1;$/=2)g(C,$,[c,p])}for(let k=p;k>d;k/=2){let C=m(),$=new Yue([c,k/2]),E=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],O=f;f=n.runWebGPUProgram($,C,"int32",E),Ji(n,O);let R=d/2,D=R*2;for(let T=R;T>=1;T/=2)g(D,T,f.shape)}let b=f;f=Cu({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,a]}}),Ji(n,b);let y=WN({inputs:{x:h,indices:f},backend:n,attrs:{axis:1,batchDims:1}});Ji(n,h);let v=o.slice(0,-1);v.push(a),b=f,f=Re({inputs:{x:f},attrs:{shape:v},backend:n}),Ji(n,b);let x=y;return y=Re({inputs:{x:y},attrs:{shape:v},backend:n}),Ji(n,x),[y,f]}var Que={kernelName:Jo,backendName:"webgpu",kernelFunc:Zue},Jue=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ge()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function ele(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,h,d,p]=r.shape,[f,m]=l!=null?l:[h,d],g=[c,f,m,p],b=new Jue(g),y=i==="nearest"?1:2,v;switch(o){case"constant":v=1;break;case"reflect":v=2;break;case"wrap":v=3;break;case"nearest":v=4;break;default:v=1;break}let x=[{type:"int32",data:[y]},{type:"int32",data:[v]},{type:"float32",data:[u]}];return n.runWebGPUProgram(b,[r,a],"float32",x)}var tle={kernelName:eu,backendName:"webgpu",kernelFunc:ele};function nle(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r,o=i.shape.length,u=r.shape[a],l=new Array(o-1),c=0;for(let m=0;m<o;m++)m!==a&&(l[c++]=i.shape[m]);let h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;let f=new Array(u);for(let m=0;m<f.length;m++){d[a]=m;let g=Cu({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),b=Re({inputs:{x:g},backend:n,attrs:{shape:l}});f[m]=b,h.push(g)}return h.forEach(m=>n.disposeData(m.dataId)),f}var sle={kernelName:tu,backendName:"webgpu",kernelFunc:nle},rle=[Rre,fae,gae,vae,Cae,Tae,_ae,Eae,Pae,Bae,Wae,qae,Fre,Yae,tie,iie,uie,cie,pie,mie,bie,xie,Sie,$ie,Aie,Rie,Die,Fie,Pie,_re,zie,Gie,Bie,Wie,jie,Xie,Zie,eoe,soe,aoe,ooe,Dre,Kae,loe,doe,poe,moe,boe,voe,xoe,koe,Ioe,Noe,$oe,Aoe,Roe,Iie,Foe,Poe,zoe,Lae,Boe,Woe,Goe,qoe,Koe,Yoe,Qoe,zae,Joe,tue,sue,Are,iue,lue,due,pue,mue,yue,xue,kue,Iue,Fae,Gue,que,Tue,_ue,Fue,Pue,zue,Mue,Vue,Cue,Nie,Kue,Rue,Que,tle,Sae,sle,Moe];for(let e of rle)ru(e);var ale=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let s=Ik(e,t);if(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(s).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(s).shift();return this.usedBuffers.get(s).push(a),a}this.numBytesAllocated+=e;let r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n});return this.usedBuffers.get(s).push(r),r}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let s=Ik(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},s=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Ik(e,t){return`${e}_${t}`}var ile=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,s){let r=Nk(n),a=e*t*r,i=Ck(e,t,n,s);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let u=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(u),u}this.numBytesAllocated+=a;let o=this.device.createTexture({size:[e,t],format:n,usage:s});return this.usedTextures.get(i).push(o),o}releaseTexture(e,t,n,s,r){if(this.freeTextures.size===0)return;let a=Ck(t,n,s,r);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),o=i.indexOf(e);if(o<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(o,1);let u=Nk(s),l=t*n*u;this.numBytesUsed-=l}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Ck(e,t,n,s){return`${e}_${t}_${n}_${s}`}function Nk(e){if(e==="rgba8unorm")return 16;throw new Error(`${e} is not supported!`)}var ole=X().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),ule=(e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,s=t.dispatchLayout,r=t.dispatch;if(r.every(i=>i<=n))return r;w.assert(r[0]>n&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(r[0]));return a>n?(a=Math.ceil(Math.cbrt(r[0])),w.assert(a<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]},XN=class extends xl{constructor(e){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchNumberInEncoder=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,!px())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query"),this.bufferManager=new ale(this.device),this.textureManager=new ile(this.device),this.tensorMap=new fh(this,ys()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),X().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return XN.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);if(this.decRef(e),!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:s}=this.tensorMap.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(!(!t||!t.resourceInfo)){if("texture"in t.resourceInfo){let n=t.resourceInfo;n.texture instanceof GPUTexture&&this.textureManager.releaseTexture(n.texture,n.width,n.height,n.format,n.usage),n.texture=null}else{let n=t.resourceInfo;this.bufferManager.releaseBuffer(n.buffer,n.size,n.usage),n.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:n,shape:t,values:e,refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:n,values:t,refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),X().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.releaseResource(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],i=r[1];s=I.mergeRealAndImagArrays(a,i)}else{let r=t.resourceInfo,a=await this.getBufferData(r.buffer,r.size);s=$N(a,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:s,shape:r,resourceInfo:a}=t;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let i=a.size,o=this.bufferManager.acquireBuffer(i,a.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,o,0,i),this.submitQueue();let u=this.makeTensorInfo(r,s),l=ys().makeTensorFromTensorInfo(u),c=this.tensorMap.get(u.dataId);return c.resourceInfo={size:i,usage:this.defaultGpuBufferUsage(),buffer:o},{tensorRef:l,buffer:o,bufSize:i}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>w.decodeString(s));return _e(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,t)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=w.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(r);return i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}makeTensorInfo(e,t,n){return t==="string"&&n!=null&&n.length>0&&w.isString(n[0])&&(n=n.map(r=>w.encodeString(r))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){let s=t.resourceInfo;return s.texture instanceof GPUExternalTexture?s.texture:s.texture.createView()}let n=t.resourceInfo;return{offset:0,size:n.size,buffer:n.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.resourceInfo)return;let n=TN(t.dtype)*w.sizeFromShape(t.shape),s=this.bufferManager.acquireBuffer(n,this.defaultGpuBufferUsage());if(t.resourceInfo={size:n,usage:this.defaultGpuBufferUsage(),buffer:s},t.values){let r=this.bufferManager.acquireUploadBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),a=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),r.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(r,0,s,0,n);let i={size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:r};this.stagingPendingDisposal.push(i)}}makeUniforms(e){let t=0,n=0,s=[];e.forEach(o=>{o.data.length===0&&(o.data=[1]);let u;switch(o.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:w.assert(!1,()=>`Unsupported ${o.data.length}D shape`)}(n===5||n===6)&&(u=16),t=Math.ceil(t/u)*u,n=o.data.length,s.push(t),t+=o.data.length*4});let r=new ArrayBuffer(t);e.forEach((o,u)=>{let l=s[u];o.type==="int32"?new Int32Array(r,l,o.data.length).set(o.data):o.type==="uint32"?new Uint32Array(r,l,o.data.length).set(o.data):new Float32Array(r,l,o.data.length).set(o.data)});let a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(a,0,r,0,t);let i={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:a};return this.uniformPendingDisposal.push(i),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,n,s,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),w.sizeFromShape(r.shape)===0)return this.tensorMap.get(r.dataId).values=w.getTypedArrayFromDType(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=ule(this.device,e);let a=[],i=[];if(!e.isFromPixels){a.push({type:"float32",data:[NaN]}),i=t.concat(r).map(g=>g.shape);let f="int32";i.map(g=>{a.push({type:f,data:g})});let m=w.computeStrides(r.shape);if(a.push({type:f,data:m}),e.size){let g=w.sizeFromShape(e.outputShape);a.push({type:f,data:[e.isVec4?g/4:g]})}}let o=t.map((f,m)=>{if(f.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(f.dataId),{dtype:this.tensorMap.get(f.dataId).dtype,shape:f.shape,name:e.variableNames[m]}}),u=ire(e,i,o,r),l;u in this.pipelineCache?l=this.pipelineCache[u]:(l=rre(this.device,e,o,r),this.pipelineCache[u]=l),s&&(a=[...a,...s]);let c=[this.tensorToBinding(r),...t.map(f=>this.tensorToBinding(f)),this.makeUniforms(a)],h=this.device.createBindGroup({layout:l.getBindGroupLayout(0),entries:c.map((f,m)=>({binding:m,resource:f}))});this.ensureCommandEncoderReady();let d=this.getComputePass(),p=this.activeTimers!=null;return p&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,0),d.setPipeline(l),d.setBindGroup(0,h),d.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),p&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(f=>{this.commandQueueOwnedIds.add(f.dataId)}),this.commandQueueOwnedIds.add(r.dataId),X().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),p&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}async getTimeFromQuerySet(e){let t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=ole){return X().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resourceInfo==null&&w.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},yx=XN;yx.nextDataId=0;var lle={};Ee(lle,{WebGPUBackend:()=>yx,webgpu_util:()=>CN});px()&&au("webgpu",async()=>{X().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:X().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,s={},r=t.features.has("timestamp-query");s.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize},r&&(s.requiredFeatures=["timestamp-query"]);let a=await t.requestDevice(s);return new yx(a)},3);var Ct=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(Ct||{}),Dp=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(Dp||{}),YN;function cle(e){YN=e.wasm.cwrap(fa,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function dle(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=s,d=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(a.dataId).id,f=0;if(i!=null){let A=n.dataIdMap.get(i.dataId);if(A.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${A.shape.length}.`);f=A.id}let m=o==null?0:n.dataIdMap.get(o.dataId).id,g=Dp[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let b=u?r.shape[2]:r.shape[1],y=l?a.shape[1]:a.shape[2],v=iu.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),x=n.makeOutput([...v,b,y],r.dtype),k=n.dataIdMap.get(x.dataId).id,C=new Uint8Array(new Int32Array(r.shape).buffer),$=new Uint8Array(new Int32Array(a.shape).buffer);return YN(d,C,r.shape.length,p,$,a.shape.length,u,l,g,f,m,h||0,k),x}var hle={kernelName:fa,backendName:"wasm",setupFunc:cle,kernelFunc:dle};function Kt(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:i,inputs:{x:o}}=a,u=i.dataIdMap.get(o.dataId).id,l=i.makeOutput(o.shape,t||o.dtype),c=i.dataIdMap.get(l.dataId).id;return w.sizeFromShape(l.shape)===0||n(u,Ct[o.dtype],c),l}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var ple=Kt(yo);function tn(e,t,n){let s;function r(i){s=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(i){let{backend:o,inputs:u}=i,{a:l,b:c}=u,h=o.dataIdMap.get(l.dataId).id,d=o.dataIdMap.get(c.dataId).id,p=n!=null?n:l.dtype,f=I.assertAndGetBroadcastShape(l.shape,c.shape),m=o.makeOutput(f,p);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(l.shape).buffer),b=new Uint8Array(new Int32Array(c.shape).buffer),y=o.dataIdMap.get(m.dataId).id;return(()=>s(h,g,l.shape.length,d,b,c.shape.length,Ct[l.dtype],y))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var fle=!0,mle=tn(Ar,fle),ZN;function gle(e){ZN=e.wasm.cwrap(Aa,null,["array","number","number","number"])}function ble(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(s.shape)===0)return s;let r=t.map(o=>n.dataIdMap.get(o.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(s.dataId).id;return ZN(a,r.length,Ct[s.dtype],i),s}var yle={kernelName:Aa,backendName:"wasm",setupFunc:gle,kernelFunc:ble};function Fp(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var vle={kernelName:Xa,backendName:"wasm",kernelFunc:Fp},QN;function xle(e){QN=e.wasm.cwrap(Qs,null,["number","array","number","number","number","array","number"])}function $r(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=kle(t.x.shape,s.perm),i=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(i=!1);let o=wle(t.x.shape,s.perm),u={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let f=Fp({inputs:t,backend:n});return f.shape=o,f}let l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(a).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return QN(c,p,u.shape.length,Ct[u.dtype],h,d,a.length),l}function wle(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function kle(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let i=0;i<s.length;++i)s[i]>=r&&(a===-1||s[a]>s[i])&&(a=i);s[a]=r}return[n,s]}var Sle={kernelName:Qs,backendName:"wasm",kernelFunc:$r,setupFunc:xle};function Vr(e,t,n){let s=e.shape,r=e.shape.length,a=w.parseAxisParam(t,s),i=a,o=I.getAxesPermutation(i,r),u=null,l=!1;if(o!=null){let c=new Array(r);for(let p=0;p<c.length;p++)c[p]=s[o[p]];i=I.getInnerMostAxes(i.length,r),u=$r({inputs:{x:e},attrs:{perm:o},backend:n});let h=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==h&&(l=!0)}return{transposed:u,originalAxes:a,axes:i,inputWasTransposed:l}}var JN;function Ile(e){JN=e.wasm.cwrap(Sl,null,["number, number, number"])}function Cle(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=Vr(i,r,t);if(p){let v=t.dataIdMap.get(c.dataId).id;l=c,u=v}let f=l.shape.length;I.assertAxesAreInnerMostDims("all",h,f);let[m,g]=I.computeOutAndReduceShapes(l.shape,h),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;JN(u,b,v)}if(p&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var Nle={kernelName:Sl,backendName:"wasm",setupFunc:Ile,kernelFunc:Cle},eT;function Tle(e){eT=e.wasm.cwrap(Il,null,["number, number, number"])}function $le(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=Vr(i,r,t);if(p){let v=t.dataIdMap.get(c.dataId).id;l=c,u=v}let f=l.shape.length;I.assertAxesAreInnerMostDims("any",h,f);let[m,g]=I.computeOutAndReduceShapes(l.shape,h),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;eT(u,b,v)}if(p&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var _le={kernelName:Il,backendName:"wasm",setupFunc:Tle,kernelFunc:$le},tT;function Ale(e){tT=e.wasm.cwrap(Ea,null,["number","number","number","number","number"])}function Ele(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,i=t.dataIdMap.get(a.dataId).id,o=i,u=a,{transposed:l,axes:c,inputWasTransposed:h}=Vr(a,r,t);if(h){let b=t.dataIdMap.get(l.dataId).id;b!==i&&(u=l,o=b)}let d=u.shape.slice(0,-1),p=t.makeOutput(d,"int32"),f=t.dataIdMap.get(p.dataId).id,m=w.sizeFromShape(p.shape),g=u.shape[c[0]];return tT(o,Ct[u.dtype],m,g,f),h&&t.disposeData(l.dataId),p}var Rle={kernelName:Ea,backendName:"wasm",kernelFunc:Ele,setupFunc:Ale},nT;function Dle(e){nT=e.wasm.cwrap(Ra,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Fle(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=I.computePool2DInfo(r.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,b=c.strideHeight,y=c.strideWidth,v=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let x=s.makeOutput(c.outShape,"float32"),k=s.dataIdMap.get(x.dataId).id;return nT(a,r.shape[0],r.shape[1],r.shape[2],h,d,p,f,m,g,b,y,v,k),x}var Ole={kernelName:Ra,backendName:"wasm",setupFunc:Dle,kernelFunc:Fle};function An(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),i=w.inferFromImplicitShape(r,a);return w.assert(a===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}var Ple={kernelName:Wo,backendName:"wasm",kernelFunc:An},sT;function Lle(e){sT=e.wasm.cwrap(Da,null,["number","array","number","number","array","number","number","number","number"])}function zle(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=r.shape.length,l=a.shape.length,c=i?r.shape[u-2]:r.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],p=o?a.shape[l-2]:a.shape[l-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),v=iu.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,p]);w.assert(c===h,()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,c,d]:[g,d,c],k=o?[b,p,h]:[b,h,p],C=An({inputs:{x:r},backend:n,attrs:{shape:x}}),$=An({inputs:{x:a},backend:n,attrs:{shape:k}}),A=n.dataIdMap.get(C.dataId).id,E=n.dataIdMap.get($.dataId).id,O=i?C.shape[2]:C.shape[1],R=o?$.shape[1]:$.shape[2],D=Math.max(g,b),T=n.makeOutput([D,O,R],C.dtype),L=n.dataIdMap.get(T.dataId).id,W=new Uint8Array(new Int32Array(C.shape).buffer),q=new Uint8Array(new Int32Array($.shape).buffer);return sT(A,W,C.shape.length,E,q,$.shape.length,i,o,L),n.disposeData(C.dataId),n.disposeData($.dataId),T.shape=v,T}var Mle={kernelName:Da,backendName:"wasm",setupFunc:Lle,kernelFunc:zle};function Ta(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,i]=It.parseSliceParams(t,n,s),o=It.isSliceContinous(t.shape,a,i),u=r.readSync(t.dataId),l=r.makeOutput(i,t.dtype),c=w.computeStrides(t.shape),h=r.dataIdMap.get(l.dataId);if(o){let f=It.computeFlatOffset(a,c);return t.dtype==="string"?h.stringBytes=u.slice(f,f+w.sizeFromShape(i)):r.typedArrayFromHeap(l).set(u.subarray(f,f+w.sizeFromShape(i))),l}if(t.dtype==="string"){let f=nh(u,a,i,t.shape,t.dtype);return h.stringBytes=f,l}let d=r.typedArrayFromHeap(l),p=t.shape.length;if(p===2)Ble(u,c[0],d,a,i);else if(p===3)Vle(u,c[0],c[1],d,a,i);else if(p===4)Wle(u,c[0],c[1],c[2],d,a,i);else{let f=nh(u,a,i,t.shape,t.dtype);d.set(f)}return l}function Ble(e,t,n,s,r){let a=0,i=s[0],o=s[1],u=i+r[0];for(let l=i;l<u;l++){let c=l*t+o;n.set(e.subarray(c,c+r[1]),a),a+=r[1]}}function Vle(e,t,n,s,r,a){let i=0,o=r[0],u=r[1],l=r[2],c=o+a[0],h=u+a[1];for(let d=o;d<c;d++)for(let p=u;p<h;p++){let f=d*t+p*n+l;s.set(e.subarray(f,f+a[2]),i),i+=a[2]}}function Wle(e,t,n,s,r,a,i){let o=0,u=a[0],l=a[1],c=a[2],h=u+i[0],d=l+i[1],p=c+i[2],f=a[3];for(let m=u;m<h;m++)for(let g=l;g<d;g++)for(let b=c;b<p;b++){let y=m*t+g*n+b*s+f;r.set(e.subarray(y,y+i[3]),o),o+=i[3]}}var Ule={kernelName:jo,backendName:"wasm",kernelFunc:Ta};function Gle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s,o=a.reduce((b,y)=>b*y),u=I.getReshaped(r.shape,a,o),l=I.getPermuted(u.length,a.length),c=I.getReshapedPermuted(r.shape,a,o),h=I.getSliceBeginCoords(i,a.length),d=I.getSliceSize(c,i,a.length),p=An({inputs:{x:r},backend:n,attrs:{shape:u}}),f=$r({inputs:{x:p},backend:n,attrs:{perm:l}}),m=An({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Ta({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(p.dataId),g}var Hle={kernelName:vo,backendName:"wasm",kernelFunc:Gle};function Nu(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var qle={kernelName:Fa,backendName:"wasm",kernelFunc:Nu},jle=Kt(Oa),rT;function Kle(e){rT=e.wasm.cwrap(Er,null,["number","number","number","number"])}function Xle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o=n.dataIdMap.get(r.dataId).id,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(u.dataId).id;return rT(o,a,i,l),u}var Yle={kernelName:Er,backendName:"wasm",setupFunc:Kle,kernelFunc:Xle};function aT(e){let{inputs:t,backend:n}=e,s=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=I.computeOutShape(t.map(p=>p.shape),s),a=t.filter(p=>w.sizeFromShape(p.shape)>0);if(a.length===1)return Fp({inputs:{x:a[0]},backend:n});let i=n.makeOutput(r,t[0].dtype);if(w.sizeFromShape(r)===0)return i;let o=a.map(p=>p.shape);if(I.assertParamsConsistent(o,s),a[0].dtype==="string"){let p=a.map(v=>{let x=w.sizeFromShape(v.shape.slice(s));return An({inputs:{x:v},backend:n,attrs:{shape:[-1,x]}})}),f=p.map(v=>({vals:n.readSync(v.dataId),shape:v.shape}));r=I.computeOutShape(p.map(v=>v.shape),1);let m=p[0].shape[0]===1,g=Mv(f,r,t[0].dtype,m),b=I.computeOutShape(a.map(v=>v.shape),s);i.shape=b;let y=n.dataIdMap.get(i.dataId);return y.stringBytes=I.fromStringArrayToUint8(g),p.forEach(v=>n.disposeData(v.dataId)),i}let u=w.sizeFromShape(a[0].shape.slice(0,s)),l=0,c=a.map(p=>{let f=w.sizeFromShape(p.shape.slice(s));return l+=f,f}),h=a.map(p=>n.typedArrayFromHeap(p)),d=n.typedArrayFromHeap(i);for(let p=0;p<u;p++){let f=p*l;for(let m=0;m<h.length;m++){let g=c[m],b=p*g,y=h[m].subarray(b,b+g);d.set(y,f),f+=g}}return i}var Zle={kernelName:xo,backendName:"wasm",kernelFunc:aT},iT;function Qle(e){iT=e.wasm.cwrap(Pa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Jle(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,i=s.dataIdMap.get(r.dataId).id,o=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h,dataFormat:d}=n,p=I.convertConv2DDataFormat(d),f=I.computeConv2DInfo(r.shape,a.shape,u,l,c,h,!1,p),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,y=f.padInfo.right,v=f.padInfo.bottom,x=f.padInfo.left,k=f.dilationHeight,C=f.dilationWidth,$=f.strideHeight,A=f.strideWidth,E=f.inChannels,O=f.outChannels,R=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let D=s.makeOutput(f.outShape,"float32"),T=s.dataIdMap.get(D.dataId).id;return iT(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,b,y,v,x,R,k,C,$,A,E,O,T),D}var ece={kernelName:Pa,backendName:"wasm",setupFunc:Qle,kernelFunc:Jle},oT;function tce(e){oT=e.wasm.cwrap(La,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function nce(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=s,h=1,d=I.convertConv2DDataFormat(u),p=I.computeConv2DInfo(c,a.shape,i,h,o,l,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:y,inWidth:v,outChannels:x,outHeight:k,outWidth:C,strideHeight:$,strideWidth:A}=p,E=m-1-p.padInfo.top,O=g-1-p.padInfo.left,R=p.dataFormat==="channelsLast",D=w.computeStrides(p.inShape),T=w.computeStrides(r.shape),[L,W,q]=w.computeStrides(a.shape),j=D[0],K=R?D[1]:D[2],Q=R?D[2]:1,ne=R?1:D[1],J=T[0],se=R?T[1]:T[2],te=R?T[2]:1,oe=R?1:T[1],re=t.makeOutput(p.inShape,"float32"),le=t.dataIdMap.get(re.dataId).id,ge=t.dataIdMap.get(r.dataId).id,we=t.dataIdMap.get(a.dataId).id;return oT(ge,we,f,m,g,y,v,b,k,C,x,$,A,E,O,L,W,q,j,K,Q,ne,J,se,te,oe,le),re}var sce={kernelName:La,backendName:"wasm",setupFunc:tce,kernelFunc:nce},rce=Kt(za),ace=Kt(Ma),uT=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(uT||{}),lT;function ice(e){lT=e.wasm.cwrap(ko,null,["number","number","number","number","array","number","number","number","number","number"])}function oce(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:i}=s,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[h,d]=i,p=[c,h,d,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=Nu({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,b=t.dataIdMap.get(u.dataId).id,y=t.dataIdMap.get(l.dataId).id,v=t.makeOutput(p,"float32"),x=t.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(o.shape).buffer);return lT(g,b,y,c,k,h,d,uT[r],a,x),m!=null&&t.disposeData(m.dataId),v}var uce={kernelName:ko,backendName:"wasm",setupFunc:ice,kernelFunc:oce},cT;function lce(e){cT=e.wasm.cwrap(wo,null,["number","number","number","number","number","number"])}function cce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,u=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);let l=I.getAxesPermutation([a],u),c=r;l!==null&&(c=$r({inputs:{x:r},attrs:{perm:l},backend:n}));let h=I.getInnerMostAxes(1,u)[0];I.assertAxesAreInnerMostDims("cumprod",[h],u);let d=n.makeOutput(c.shape,c.dtype),p=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;cT(f,i?1:0,o?1:0,p,m,Ct[r.dtype]);let g=d;if(l!==null){let b=I.getUndoAxesPermutation(l);g=$r({inputs:{x:d},attrs:{perm:b},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var dce={kernelName:wo,backendName:"wasm",setupFunc:lce,kernelFunc:cce},dT;function hce(e){dT=e.wasm.cwrap(Ba,null,["number","number","number","number","number","number"])}function pce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,u=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let l=I.getAxesPermutation([a],u),c=r;l!==null&&(c=$r({inputs:{x:r},attrs:{perm:l},backend:n}));let h=I.getInnerMostAxes(1,u)[0];I.assertAxesAreInnerMostDims("cumsum",[h],u);let d=n.makeOutput(c.shape,c.dtype),p=c.shape[h],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;dT(f,i?1:0,o?1:0,p,m,Ct[r.dtype]);let g=d;if(l!==null){let b=I.getUndoAxesPermutation(l);g=$r({inputs:{x:d},attrs:{perm:b},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var fce={kernelName:Ba,backendName:"wasm",setupFunc:hce,kernelFunc:pce},hT;function mce(e){hT=e.wasm.cwrap(So,null,["number","number","number","array","number","array","array","number","number"])}function gce(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],h=u*a,d=l*a,p=c/(a*a),f=i==="NHWC"?[o,h,d,p]:[o,p,h,d],m=t.makeOutput(f,"float32"),b=t.dataIdMap.get(r.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),v=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),k=t.dataIdMap.get(m.dataId).id;return hT(b,a,i==="NHWC"?1:0,y,r.shape.length-1,v,x,f.length,k),m}var bce={kernelName:So,backendName:"wasm",setupFunc:mce,kernelFunc:gce},pT;function yce(e){pT=e.wasm.cwrap(Va,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function vce(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,i=s.dataIdMap.get(r.dataId).id,o=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:h}=n,d=l==null?[1,1]:l,p=I.computeConv2DInfo(r.shape,a.shape,u,d,c,h,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,b=p.padInfo.right,y=p.padInfo.bottom,v=p.padInfo.left,x=p.dilationHeight,k=p.dilationWidth,C=p.strideHeight,$=p.strideWidth,A=p.inChannels,E=p.outChannels,O=p.padInfo.type==="SAME"?1:0;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let R=s.makeOutput(p.outShape,"float32"),D=s.dataIdMap.get(R.dataId).id;return pT(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,b,y,v,O,x,k,C,$,A,E,D),R}var xce={kernelName:Va,backendName:"wasm",setupFunc:yce,kernelFunc:vce},wce=Kt(Ua),kce=!1,Sce=tn(Io,kce,"bool"),Ice=Kt(Ga,"float32");function Bg(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,i=r.shape.length,o=r.shape.slice(),u=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),An({inputs:{x:r},backend:s,attrs:{shape:o}})}var Cce={kernelName:Co,backendName:"wasm",kernelFunc:Bg};function fT(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var Nce={kernelName:Rl,backendName:"wasm",kernelFunc:fT},mT;function Tce(e){mT=e.wasm.cwrap(To,null,["number","number","number","number","number","number"])}function $ce(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,u,l,c]=s.shape;return mT(a,o,u,l,c,i),r}var _ce={kernelName:To,backendName:"wasm",kernelFunc:$ce,setupFunc:Tce},Ace=Kt(Ha),Ece=!1,Rce=tn(qa,Ece),gT;function Dce(e){gT=e.wasm.cwrap(ja,null,["number","number","number","number","number","number","number"])}function Fce(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,p=u!=null?t.dataIdMap.get(u.dataId).id:0,f=l!=null?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return gT(c,h,d,p,f,r,g),m}var Oce={kernelName:ja,backendName:"wasm",setupFunc:Dce,kernelFunc:Fce},bT;function Pce(e){bT=e.wasm.cwrap(ma,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Lce(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=I.computeConv2DInfo(r.shape,a.shape,u,c,l,d),g=Dp[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let b=s.dataIdMap.get(r.dataId).id,y=s.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(i!=null){let te=s.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${te.shape}) does not match the number of output channels (${v})`);x=te.id}let k=m.filterHeight,C=m.filterWidth,$=m.padInfo.top,A=m.padInfo.right,E=m.padInfo.bottom,O=m.padInfo.left,R=m.dilationHeight,D=m.dilationWidth,T=m.strideHeight,L=m.strideWidth,W=m.inChannels,q=m.padInfo.type==="SAME"?1:0,j=m.batchSize,K=m.inHeight,Q=m.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let ne=s.makeOutput(m.outShape,"float32"),J=s.dataIdMap.get(ne.dataId).id,se=o==null?0:s.dataIdMap.get(o.dataId).id;return bT(b,j,K,Q,y,k,C,x,$,A,E,O,q,R,D,T,L,W,v,g,se,f||0,J),ne}var zce={kernelName:ma,backendName:"wasm",setupFunc:Pce,kernelFunc:Lce},yT;function Mce(e){yT=e.wasm.cwrap(ga,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Bce(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=n,m=I.computeConv2DInfo(r.shape,a.shape,u,c,l,d,!0),g=Dp[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=s.dataIdMap.get(r.dataId).id,y=s.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(i!=null){let te=s.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${te.shape}) does not match the number of output channels (${v})`);x=te.id}let k=m.filterHeight,C=m.filterWidth,$=m.padInfo.top,A=m.padInfo.right,E=m.padInfo.bottom,O=m.padInfo.left,R=m.dilationHeight,D=m.dilationWidth,T=m.strideHeight,L=m.strideWidth,W=m.inChannels,q=m.padInfo.type==="SAME"?1:0,j=m.batchSize,K=m.inHeight,Q=m.inWidth;if(h!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let ne=s.makeOutput(m.outShape,"float32"),J=s.dataIdMap.get(ne.dataId).id,se=o==null?0:s.dataIdMap.get(o.dataId).id;return yT(b,j,K,Q,y,k,C,x,$,A,E,O,q,R,D,T,L,W,v,g,se,f||0,J),ne}var Vce={kernelName:ga,backendName:"wasm",setupFunc:Mce,kernelFunc:Bce},vT;function Wce(e){vT=e.wasm.cwrap(_o,null,["number","number","number","number","number","number","array","number"])}function Uce(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,i,o,u]=T0.prepareAndValidate(s,r),l=t.makeOutput(a,s.dtype);if(i===0)return l;let c=r.shape,h=c[c.length-1],p=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),b=t.dataIdMap.get(l.dataId).id;return vT(p,Ct[s.dtype],m,i,h,o,g,b),l}var Gce={kernelName:_o,backendName:"wasm",setupFunc:Wce,kernelFunc:Uce},xT;function Hce(e){xT=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function qce(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0],l=t.readSync(a.dataId),c=r.shape[u];for(let E=0;E<l.length;++E){let O=l[E];w.assert(O<=c-1&&O>=0,()=>`GatherV2: the index value ${O} is not in [0, ${c-1}]`)}let h=I.segment_util.collectGatherOpShapeInfo(r,a,u,o),d=An({inputs:{x:r},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),p=w.sizeFromShape(a.shape),f=An({inputs:{x:a},attrs:{shape:[h.batchSize,p/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],g=t.makeOutput(m,r.dtype);if(w.sizeFromShape(r.shape)===0)return g;let b=d.shape.length-1,v=t.dataIdMap.get(d.dataId).id,k=t.dataIdMap.get(f.dataId).id,C=t.dataIdMap.get(g.dataId).id,$=new Uint8Array(new Int32Array(w.computeStrides(d.shape)).buffer),A=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return xT(v,Ct[r.dtype],$,b,k,h.batchSize,A,C),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}var jce={kernelName:$o,backendName:"wasm",setupFunc:Hce,kernelFunc:qce},Kce=!1,Xce=tn(Ao,Kce,"bool"),Yce=!1,Zce=tn(Ka,Yce,"bool"),wT;function Qce(e){wT=e.wasm.cwrap(Ya,null,["number","number","number","number"])}function Jce(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let i=s.dataIdMap.get(a.dataId).id;wT(r,Ct[t.dtype],n,i)}return a}var ede={kernelName:Ya,backendName:"wasm",setupFunc:Qce,kernelFunc:Jce},tde=!1,nde=tn(Eo,tde,"bool"),sde=!1,rde=tn(Ro,sde,"bool"),ade=Kt(Za),ide=!1,ode=tn(Do,ide,"bool"),ude=Kt(Fo),lde=!1,cde=tn(Ll,lde,"bool"),dde=!1,hde=tn(j_,dde,"bool"),kT;function pde(e){kT=e.wasm.cwrap(Qa,null,["number","number","number","number"])}function fde(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=Vr(i,r,t);if(p){let v=t.dataIdMap.get(c.dataId).id;l=c,u=v}let f=l.shape.length;I.assertAxesAreInnerMostDims("max",h,f);let[m,g]=I.computeOutAndReduceShapes(l.shape,h),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;kT(u,Ct[i.dtype],b,v)}if(p&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var mde={kernelName:Qa,backendName:"wasm",setupFunc:pde,kernelFunc:fde},gde=!1,bde=tn(Ja,gde),ST;function yde(e){ST=e.wasm.cwrap(ei,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function vde(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;w.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=I.computePool2DInfo(r.shape,i,o,1,u,l),h=c.filterHeight,d=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,b=c.dilationHeight,y=c.dilationWidth,v=c.strideHeight,x=c.strideWidth,k=c.inChannels,C=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let $=s.makeOutput(c.outShape,"float32"),A=s.dataIdMap.get($.dataId).id;return ST(a,r.shape[0],r.shape[1],r.shape[2],h,d,p,f,m,g,b,y,v,x,k,C,A),$}var xde={kernelName:ei,backendName:"wasm",setupFunc:yde,kernelFunc:vde},IT;function wde(e){IT=e.wasm.cwrap(ti,null,["number, number, number"])}function kde(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=Vr(i,r,t),f=h;if(p){let x=t.dataIdMap.get(c.dataId).id;x!==o&&(l=c,u=x,f=I.getInnerMostAxes(f.length,l.shape.length))}I.assertAxesAreInnerMostDims("mean",f,l.shape.length);let[m,g]=I.computeOutAndReduceShapes(l.shape,f),b=w.sizeFromShape(g),y=l;l.dtype!=="float32"&&(y=Nu({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(y.dataId).id);let v=t.makeOutput(m,"float32");if(w.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(v.dataId).id;IT(u,b,x)}if(p&&t.disposeData(c.dataId),a){let x=I.expandShapeToKeepDim(v.shape,d);v.shape=x}return l.dtype!=="float32"&&t.disposeData(y.dataId),v}var Sde={kernelName:ti,backendName:"wasm",setupFunc:wde,kernelFunc:kde},CT;function Ide(e){CT=e.wasm.cwrap(ni,null,["number","number","number","number"])}function Cde(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=Vr(i,r,t);if(p){let v=t.dataIdMap.get(c.dataId).id;v!==o&&(l=c,u=v)}let f=l.shape.length;I.assertAxesAreInnerMostDims("min",h,f);let[m,g]=I.computeOutAndReduceShapes(l.shape,h),b=w.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;CT(u,Ct[i.dtype],b,v)}if(p&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var Nde={kernelName:ni,backendName:"wasm",setupFunc:Ide,kernelFunc:Cde},Tde=!1,$de=tn(si,Tde),NT=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(NT||{}),TT;function _de(e){TT=e.wasm.cwrap(ri,null,["number","array","number","number","array","array","number","number"])}function Ade(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=s.map(f=>f[0]),h=s.map(f=>f[1]),d=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(h).buffer);return TT(i,l,t.shape.length,Ct[t.dtype],d,p,NT[r],u),o}var Ede={kernelName:ri,backendName:"wasm",kernelFunc:Ade,setupFunc:_de},Rde=!0,Dde=tn(ai,Rde),Fde=Kt(Oo);function vx(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:i}}var $T;function Ode(e){$T=e.wasm.cwrap(Lo,"number",["number","number","number","number","number"])}function Pde(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i}=s,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,h=$T(l,c,a,r,i),{pSelectedIndices:d,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=vx(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",d)}var Lde={kernelName:Lo,backendName:"wasm",setupFunc:Ode,kernelFunc:Pde},_T;function zde(e){_T=e.wasm.cwrap(Ml,"number",["number","number","number","number","number","bool"])}function Mde(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i,padToMaxOutputSize:o}=s,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=_T(c,h,a,r,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=vx(t,d);t.wasm._free(m);let b=t.makeOutput([f],"int32",p),y=t.makeOutput([],"int32",g);return[b,y]}var Bde={kernelName:Ml,backendName:"wasm",setupFunc:zde,kernelFunc:Mde},AT;function Vde(e){AT=e.wasm.cwrap(zo,"number",["number","number","number","number","number","number"])}function Wde(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i,softNmsSigma:o}=s,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(l.dataId).id,d=AT(c,h,a,r,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=vx(t,d);t.wasm._free(g);let b=t.makeOutput([f],"int32",p),y=t.makeOutput([f],"float32",m);return[b,y]}var Ude={kernelName:zo,backendName:"wasm",setupFunc:Vde,kernelFunc:Wde},Gde=!1,Hde=tn(Po,Gde,"bool"),ET;function qde(e){ET=e.wasm.cwrap(Bo,null,["number","number","number","number","number"])}function jde(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,u=n.makeOutput([...r.shape,a],"int32"),l=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(r.dataId).id;return ET(h,a,i,o,l),u}var Kde={kernelName:Bo,backendName:"wasm",setupFunc:qde,kernelFunc:jde};function Xde(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var Yde={kernelName:Mo,backendName:"wasm",kernelFunc:Xde};function Zde(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Bg({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let h=Bg({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(h),h}),l=aT({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeData(c.dataId)),l}var Qde={kernelName:Vo,backendName:"wasm",kernelFunc:Zde},RT;function Jde(e){RT=e.wasm.cwrap(ii,null,["number","array","number","number","array","array","number","number"])}function ehe(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(w.sizeFromShape(t.shape)===0)return fT({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),h=s.map(m=>m[0]),d=s.map(m=>m[1]),p=new Uint8Array(new Int32Array(h).buffer),f=new Uint8Array(new Int32Array(d).buffer);return RT(i,c,t.shape.length,Ct[t.dtype],p,f,r,l),o}var DT={kernelName:ii,backendName:"wasm",kernelFunc:ehe,setupFunc:Jde},the=!1,nhe=tn(oi,the),FT;function she(e){FT=e.wasm.cwrap(ui,null,["number","number","number"])}function rhe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,o=a,u=s,l=u;u.dtype!=="float32"&&(l=Nu({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);let c=n.makeOutput(s.shape,"float32"),h=n.dataIdMap.get(c.dataId).id;return FT(o,i,h),u.dtype!=="float32"&&n.disposeData(l.dataId),c}var ahe={kernelName:ui,backendName:"wasm",setupFunc:she,kernelFunc:rhe},OT;function ihe(e){OT=e.wasm.cwrap(li,null,["number","number","number","number"])}function ohe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=Vr(i,r,t),f=h;if(p){let v=t.dataIdMap.get(c.dataId).id;v!==o&&(l=c,u=v,f=I.getInnerMostAxes(f.length,l.shape.length))}I.assertAxesAreInnerMostDims("prod",f,l.shape.length);let[m,g]=I.computeOutAndReduceShapes(l.shape,f),b=w.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;OT(u,b,Ct[y.dtype],v)}if(p&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var uhe={kernelName:li,backendName:"wasm",setupFunc:ihe,kernelFunc:ohe},lhe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=Wv(s,r,a,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u},che={kernelName:Bl,backendName:"wasm",kernelFunc:lhe},dhe=!0,hhe=tn(Wa,dhe),phe=Kt(ci),fhe=Kt(pi),PT;function mhe(e){PT=e.wasm.cwrap(hi,null,["number","number","number","number","number","number","number","number","number","number"])}function ghe(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,[c,h,d,p]=r.shape,f=[c,u,l,p],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Nu({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let b=m.id,y=t.makeOutput(f,"float32");if(w.sizeFromShape(r.shape)===0)return y;let v=t.dataIdMap.get(y.dataId).id;return PT(b,c,h,d,p,u,l,a?1:0,i?1:0,v),g!=null&&t.disposeData(g.dataId),y}var bhe={kernelName:hi,backendName:"wasm",setupFunc:mhe,kernelFunc:ghe},LT;function yhe(e){LT=e.wasm.cwrap(di,null,["number","number","number","number","number","number","number","number","number","number"])}function vhe(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,[c,h,d,p]=r.shape,f=[c,u,l,p],m=t.makeOutput(f,"float32");if(w.sizeFromShape(r.shape)===0)return m;let g=t.dataIdMap.get(r.dataId),b;g.dtype!=="float32"&&(b=Nu({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(b.dataId));let y=g.id,v=t.dataIdMap.get(m.dataId).id;return LT(y,c,h,d,p,u,l,a?1:0,i?1:0,v),b!=null&&t.disposeData(b.dataId),m}var xhe={kernelName:di,backendName:"wasm",setupFunc:yhe,kernelFunc:vhe},zT;function whe(e){zT=e.wasm.cwrap(Uo,null,["number","array","number","array","number","number"])}function khe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=w.parseAxisParam(a,r.shape);if(r.shape.length===0)return Fp({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(r.shape).buffer);zT(u,c,i.length,h,r.shape.length,l);let d=An({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),d}var She={kernelName:Uo,backendName:"wasm",kernelFunc:khe,setupFunc:whe},MT;function Ihe(e){MT=e.wasm.cwrap(su,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Che(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:i,center:o}=s,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(u.dataId).id,[h,d,p,f]=r.shape,[m,g]=I.getImageCenter(o,d,p),b=i===0,y=255,v=typeof i=="number"?[i,i,i,b?0:y]:[...i,y],x=new Uint8Array(new Int32Array(v).buffer);return MT(l,h,d,p,f,a,m,g,x,v.length,c),u}var Nhe={kernelName:su,backendName:"wasm",kernelFunc:Che,setupFunc:Ihe},The=Kt(Go),$he=Kt(fi),BT;function _he(e){BT=e.wasm.cwrap(Ho,null,["number","number","number","number","number","number","array","number","number"])}function Ahe(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:i}=s,o=t.makeOutput(i,a.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:d}=_0.calculateShapes(a,r,i),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(h).buffer),y=t.dataIdMap.get(o.dataId).id;return BT(f,g,Ct[a.dtype],u,l,c,b,d,y),o}var Ehe={kernelName:Ho,backendName:"wasm",setupFunc:_he,kernelFunc:Ahe},VT;function Rhe(e){VT=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Dhe(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id,h=s.shape.length,d=r.shape.length,p=h===0||h>1||d===1?1:w.sizeFromShape(r.shape.slice(1));return VT(i,o,u,p,c),l}var Fhe={kernelName:qo,backendName:"wasm",kernelFunc:Dhe,setupFunc:Rhe},WT;function Ohe(e){WT=e.wasm.cwrap(gi,null,["number","number"])}function Phe(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return w.sizeFromShape(r.shape)===0||WT(s,a),r}var Lhe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Ohe,kernelFunc:Phe},zhe=Kt(mi),UT;function Mhe(e){UT=e.wasm.cwrap(vi,null,["number","number","number","number"])}function Bhe(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(a.dataId).id,o=n.shape[s],u=w.sizeFromShape(n.shape)/o;return w.sizeFromShape(a.shape)===0||UT(r,i,o,u),a}var Vhe={kernelName:vi,backendName:"wasm",setupFunc:Mhe,kernelFunc:Bhe};function Whe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s,o=w.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let C=1+a.length;C<r.shape.length;++C)u.push([0,0]);let l=DT.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(l.shape,a,o,!1),h=I.getPermuted(c.length,a.length,!1),d=I.getReshapedPermuted(l.shape,a,o,!1),m=An({inputs:{x:l},backend:n,attrs:{shape:c}}),y=$r({inputs:{x:m},backend:n,attrs:{perm:h}}),k=An({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeData(l.dataId),n.disposeData(m.dataId),n.disposeData(y.dataId),k}var Uhe={kernelName:Xo,backendName:"wasm",kernelFunc:Whe},GT;function Ghe(e){GT=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Hhe(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=n,o=s.shape[0],u=s.shape[1],l=t.readSync(a.dataId)[0],c=[o+l,u],h=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(c,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),r.dtype),b=t.dataIdMap.get(g.dataId).id,y=t.makeOutput([l],"bool"),v=t.dataIdMap.get(y.dataId).id,x=t.makeOutput([o],s.dtype),k=t.dataIdMap.get(x.dataId).id,C=t.makeOutput([4],"int32"),$=t.dataIdMap.get(C.dataId).id,A=GT(h,d,Ct[r.dtype],o,l,u,p,m,b,v,k,$),E=t.readSync(C.dataId),O;switch(E[0]){case 1:{O=I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(E[1]);break}case 2:{O=I.getSparseFillEmptyRowsNegativeIndexErrorMessage(E[1],E[2]);break}case 3:O=I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(E[1],E[2],E[3]);break;default:O=""}if(t.disposeData(C.dataId),O)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(x.dataId),new Error(O);let R=f,D=g;return A!==c[0]&&(R=Ta({inputs:{x:f},attrs:{begin:0,size:[A,u]},backend:t}),D=Ta({inputs:{x:g},attrs:{begin:0,size:A},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[R,D,y,x]}var qhe={kernelName:$h,backendName:"wasm",setupFunc:Ghe,kernelFunc:Hhe},HT;function jhe(e){HT=e.wasm.cwrap(Hl,null,["number","number","number","number","number","number","number"])}function Khe(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=t.dataIdMap.get(s.dataId).id,o=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(a.dataId).id,l=s.shape[0],c=w.sizeFromShape(a.shape),h=t.makeOutput([l,c],s.dtype),d=t.dataIdMap.get(h.dataId).id,p=t.makeOutput([c],a.dtype),f=t.dataIdMap.get(p.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;HT(i,o,u,l,d,f,g);let b=t.readSync(m.dataId),y;switch(b[0]){case 0:{y=I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{y=I.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:y=I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let v=Array.from(t.readSync(r.dataId)),x=Array.from(t.readSync(p.dataId));y=I.getSparseReshapeInputOutputMultipleErrorMessage(v,x);break}case 4:{let v=Array.from(t.readSync(r.dataId)),x=Array.from(t.readSync(p.dataId));y=I.getSparseReshapeInputOutputMismatchErrorMessage(v,x);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(h.dataId),t.disposeData(p.dataId),new Error(y);return[h,p]}var Xhe={kernelName:Hl,backendName:"wasm",setupFunc:jhe,kernelFunc:Khe},qT;function jT(e){qT=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function KT(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:i}=s,o=a.shape[0],u=n.readSync(i.dataId,o-1,o)[0],c=o>0?u+1:0;if(c<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=r.shape.slice();h[0]=c;let d=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(i.dataId).id,m=n.makeOutput(h,r.dtype),g=n.dataIdMap.get(m.dataId).id,b=n.makeOutput([4],"int32"),y=n.dataIdMap.get(b.dataId).id;qT(d,Ct[r.dtype],r.shape[0],p,f,g,y,t,0);let v=n.readSync(b.dataId),x;switch(v[0]){case 0:{x=I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(v[1],v[2]);break;case 3:x=I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(v[1],v[2],v[3]);break;default:x=""}if(n.disposeData(b.dataId),x)throw n.disposeData(m.dataId),new Error(x);return m}function Yhe(e){return KT(e,!0)}var Zhe={kernelName:_h,backendName:"wasm",setupFunc:jT,kernelFunc:Yhe};function Qhe(e){return KT(e,!1)}var Jhe={kernelName:Ah,backendName:"wasm",setupFunc:jT,kernelFunc:Qhe};function epe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=n,o=w.parseAxisParam(i,r.shape)[0],u=I.prepareSplitSize(r,a,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map(h=>{let d=[...c];d[o]=h;let p=Ta({inputs:{x:r},attrs:{begin:l,size:d},backend:s});return l[o]+=h,p})}var tpe={kernelName:Yo,backendName:"wasm",kernelFunc:epe},npe=Kt(bi),spe=Kt(ql),rpe=!0,ape=tn(xi,rpe),XT;function ipe(e){XT=e.wasm.cwrap(Si,null,["number","number","number","number"])}function ope(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,i=t.dataIdMap.get(a.dataId).id,o=t.makeOutput(a.shape,a.dtype),u=t.dataIdMap.get(o.dataId).id;return XT(i,r,Ct[a.dtype],u),o}var upe={kernelName:Si,backendName:"wasm",setupFunc:ipe,kernelFunc:ope},YT;function lpe(e){YT=e.wasm.cwrap(Zo,null,["number","array","number","array","array","array","array","array","number","number"])}function cpe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=It.sliceInfo(r.shape,a,i,o,u,l,c,h,d),k;if(m)k=An({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=It.computeOutShape(y,v,x),$=Ta({inputs:{x:r},backend:t,attrs:{begin:y,size:C}});k=An({inputs:{x:$},backend:t,attrs:{shape:f}}),t.disposeData($.dataId)}else{let C=t.makeOutput(p,"float32"),$=t.dataIdMap.get(r.dataId).id,A=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),E=new Uint8Array(new Int32Array(y).buffer),O=new Uint8Array(new Int32Array(v).buffer),R=new Uint8Array(new Int32Array(x).buffer),D=new Uint8Array(new Int32Array(p).buffer),T=new Uint8Array(new Int32Array(w.computeStrides(p)).buffer),L=t.dataIdMap.get(C.dataId).id;YT($,A,r.shape.length,E,O,R,D,T,p.length,L),k=An({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}return k}var dpe={kernelName:Zo,backendName:"wasm",setupFunc:lpe,kernelFunc:cpe};function hpe(e){let{backend:t,inputs:n,attrs:s}=e,{data:r,dataSplits:a}=n,{separator:i,nGramWidths:o,leftPad:u,rightPad:l,padWidth:c,preserveShortSequences:h}=s,d=t.readSync(r.dataId),p=t.readSync(a.dataId),[f,m]=Gv(d,p,i,o,u,l,c,h),g=t.makeOutput([f.length],"string"),b=t.dataIdMap.get(g.dataId);b.stringBytes=f;let y=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}var ppe={kernelName:jl,backendName:"wasm",kernelFunc:hpe};function fpe(e){let{backend:t,inputs:n,attrs:s}=e,{input:r,delimiter:a}=n,{skipEmpty:i}=s,o=t.readSync(r.dataId),u=t.readSync(a.dataId),[l,c,h]=Hv(o,u[0],i),d=c.length,p=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(p).set(l);let m=t.makeOutput([d],"string"),g=t.dataIdMap.get(m.dataId);g.stringBytes=c;let b=t.makeOutput([2],"int32");return t.typedArrayFromHeap(b).set(h),[p,m,b]}var mpe={kernelName:Rh,backendName:"wasm",kernelFunc:fpe};function gpe(e){let{backend:t,inputs:n,attrs:s}=e,{input:r}=n,{numBuckets:a}=s,i=t.readSync(r.dataId),o=qv(i,a),u=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(u).set(o),u}var bpe={kernelName:Dh,backendName:"wasm",kernelFunc:gpe},ype=!0,vpe=tn(wi,ype),ZT;function xpe(e){ZT=e.wasm.cwrap(yi,null,["number","number","number","number"])}function wpe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:h,originalAxes:d,inputWasTransposed:p}=Vr(i,r,t),f=h;if(p){let v=t.dataIdMap.get(c.dataId).id;v!==o&&(l=c,u=v,f=I.getInnerMostAxes(f.length,l.shape.length))}I.assertAxesAreInnerMostDims("sum",f,l.shape.length);let[m,g]=I.computeOutAndReduceShapes(l.shape,f),b=w.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;ZT(u,b,Ct[y.dtype],v)}if(p&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var kpe={kernelName:yi,backendName:"wasm",setupFunc:xpe,kernelFunc:wpe},Spe=Kt(Qo),Ipe=Kt(ki),QT;function Cpe(e){QT=e.wasm.cwrap(Rr,null,["number","array","number","array","number","number"])}function Npe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:i}=s,o=new Array(r.shape.length);for(let d=0;d<o.length;d++)o[d]=r.shape[d]*i[d];let u=new Uint8Array(new Int32Array(r.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,r.dtype),h=n.dataIdMap.get(c.dataId).id;return QT(a,u,r.shape.length,l,o.length,Ct[c.dtype],h),c}var Tpe={kernelName:Rr,backendName:"wasm",setupFunc:Cpe,kernelFunc:Npe},JT;function $pe(e){JT=e.wasm.cwrap(Jo,null,["number","array","number","number","number","bool","number","number"])}var _pe=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,i=t.dataIdMap.get(s.dataId).id,o=new Uint8Array(new Int32Array(s.shape).buffer),u=s.shape.slice();u[u.length-1]=r;let l=t.makeOutput(u,s.dtype),c=t.dataIdMap.get(l.dataId).id,h=t.makeOutput(u,"int32"),d=t.dataIdMap.get(h.dataId).id;return JT(i,o,s.shape.length,Ct[s.dtype],r,a,c,d),[l,h]},Ape={kernelName:Jo,backendName:"wasm",setupFunc:$pe,kernelFunc:_pe},e$;function Epe(e){e$=e.wasm.cwrap(eu,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Rpe(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,h,d,p]=r.shape,[f,m]=l!=null?l:[h,d],g=[c,f,m,p],b=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),y=t.makeOutput(g,r.dtype),v=t.dataIdMap.get(y.dataId).id,k=t.dataIdMap.get(r.dataId).id,$=t.dataIdMap.get(a.dataId).id,A=i==="nearest"?1:2,E;switch(o){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return e$(k,$,a.shape[0]>1,c,f,m,p,d,h,b,r.shape.length-1,A,E,u,v),y}var Dpe={kernelName:eu,backendName:"wasm",setupFunc:Epe,kernelFunc:Rpe};function Fpe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r.shape[a],o=r.shape.length,u=new Array(o-1),l=0;for(let p=0;p<o;p++)p!==a&&(u[l++]=r.shape[p]);let c=new Array(i),h=new Array(o).fill(0),d=r.shape.slice();d[a]=1;for(let p=0;p<c.length;p++)h[a]=p,c[p]=Ta({inputs:{x:r},attrs:{begin:h,size:d},backend:n});return c.map(({dataId:p,dtype:f})=>({dataId:p,dtype:f,shape:u}))}var Ope={kernelName:tu,backendName:"wasm",kernelFunc:Fpe};function Ppe(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var Lpe={kernelName:nu,backendName:"wasm",kernelFunc:Ppe},zpe=[hle,ple,mle,yle,Nle,_le,Rle,Ole,Mle,Hle,qle,jle,Yle,Zle,ece,sce,rce,ace,uce,dce,fce,bce,xce,wce,Sce,Ice,Cce,Nce,_ce,Ace,Rce,Oce,zce,Vce,Gce,jce,Xce,Zce,vle,ede,nde,rde,ade,ode,ude,cde,hde,mde,bde,xde,Sde,Nde,$de,Ede,Dde,Fde,Lde,Bde,Ude,Hde,Kde,Yde,Qde,DT,nhe,ahe,uhe,che,hhe,phe,fhe,Ple,bhe,xhe,She,Nhe,The,$he,Ehe,Fhe,Lhe,zhe,Ule,Vhe,Uhe,qhe,Xhe,Zhe,Jhe,tpe,npe,spe,ape,upe,dpe,ppe,mpe,bpe,vpe,kpe,Spe,Ipe,Tpe,Ape,Dpe,Sle,Ope,Lpe];for(let e of zpe)ru(e);var Vg=X();Vg.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));Vg.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Vg.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var Tk=$a(w_()),Je={},t$=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";t$&&(Fm=Dk(),Om=Fm.parentPort,Om.on("message",function(e){onmessage({data:e})}),Wg=ph(),Object.assign(global,{self:global,require:i_,Module:Je,location:{href:__filename},Worker:Fm.Worker,importScripts:function(e){(0,eval)(Wg.readFileSync(e,"utf8"))},postMessage:function(e){Om.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}}));var Fm,Om,Wg;function Mpe(){var e=Array.prototype.slice.call(arguments).join(" ");if(t$){Wg.writeSync(2,e+`
`);return}console.error(e)}function Bpe(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Je._pthread_self()})}var md=Mpe;self.alert=Bpe;Je.instantiateWasm=(e,t)=>{var n=new WebAssembly.Instance(Je.wasmModule,e);return t(n),Je.wasmModule=null,n.exports};self.onmessage=e=>{try{if(e.data.cmd==="load"){if(Je.wasmModule=e.data.wasmModule,Je.wasmMemory=e.data.wasmMemory,Je.buffer=Je.wasmMemory.buffer,Je.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}WasmBackendModuleThreadedSimd(Je).then(function(s){Je=s})}else if(e.data.cmd==="run"){Je.__performance_now_clock_drift=performance.now()-e.data.time,Je.__emscripten_thread_init(e.data.threadInfoStruct,0,0,1),Je.establishStackSpace(),Je.PThread.receiveObjectTransfer(e.data),Je.PThread.threadInit();try{var n=Je.invokeEntryPoint(e.data.start_routine,e.data.arg);Je.keepRuntimeAlive()?Je.PThread.setExitStatus(n):Je.__emscripten_thread_exit(n)}catch(s){if(s!="unwind")if(s instanceof Je.ExitStatus)Je.keepRuntimeAlive()||Je.__emscripten_thread_exit(s.status);else throw s}}else e.data.cmd==="cancel"?Je._pthread_self()&&Je.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="processThreadQueue"?Je._pthread_self()&&Je._emscripten_current_thread_process_queued_calls():e.data.cmd==="processProxyingQueue"?Je._pthread_self()&&Je._emscripten_proxy_execute_queue(e.data.queue):(md("worker.js received unknown command "+e.data.cmd),md(e.data)))}catch(s){throw md("worker.js onmessage() captured an uncaught exception: "+s),s&&s.stack&&md(s.stack),Je.__emscripten_thread_crashed&&Je.__emscripten_thread_crashed(),s}};var $k=$a(k_()),_k=Tk.default||Tk,Vpe=$k.default||$k,Wpe=class extends xl{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(jpe),Kpe=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new fh(this,ys())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let l=t;this.dataIdMap.set(e,{id:a,stringBytes:l,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let i=w.sizeFromShape(n),o=i*w.bytesPerElement(s),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:i}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||w.sizeFromShape(a);let o=w.bytesPerElement(r),u=this.wasm.HEAPU8.slice(s+t*o,s+n*o);return Hpe(u.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Upe(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function Ak(e,t,n){if(Ug!=null)return Ug;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),Pm!=null&&Pm[s]!=null?Pm[s]:n+s}async function Gpe(){let[e,t]=await Promise.all([X().getAsync("WASM_HAS_SIMD_SUPPORT"),X().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(o,u)=>{if(o.endsWith(".worker.js")){let l=(void 0).replace(/\n/g,"\\n"),c=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(c)}return o.endsWith(".wasm")?Ak(e,t,gd!=null?gd:u):u+o},qpe&&(r.instantiateWasm=Upe(Ak(e,t,gd!=null?gd:"")));let a=!1;r.onAbort=()=>{if(a||Lm)return;Lm=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let i;t&&e&&Ug==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+_k.toString()],{type:"text/javascript"}),i=_k(r)):i=Vpe(r),i.then(o=>{a=!0,Lm=!1;let u=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",u,["number"]),dispose:o.cwrap("dispose",u,[])},n({wasm:o})}).catch(s)})}function Hpe(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Ug=null,gd=null,Pm={},Lm=!1,qpe=!1;var jpe=-1,Kpe=-1;var Xpe=2;au("wasm",async()=>{let{wasm:e}=await Gpe();return new Wpe(e)},Xpe);var Vt=(...e)=>{let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;console.log(n,...e)};var Xt={name:"customgl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!1}};async function s$(e){var n;if(Xt.canvas=e,S0(Xt.name))return Xt.gl;try{if(Xt.gl=(n=Xt.canvas)==null?void 0:n.getContext("webgl2",Xt.webGLattr),!Xt.gl.getParameter(Xt.gl.VERSION).includes("2.0"))return Vt("error: webgl 2.0 is not detected"),null;Xt.canvas.addEventListener("webglcontextlost",async r=>{throw Vt("error:",r.type),new Error("backend error: webgl context lost")}),Xt.canvas.addEventListener("webglcontextrestored",r=>{Vt("error: context restored:",r)}),Xt.canvas.addEventListener("webglcontextcreationerror",r=>{Vt("error: context create:",r)})}catch(s){return Vt("error: cannot get webgl context:",s),null}try{Zv(2,Xt.gl)}catch(s){return Vt("error: cannot set webgl context:",s),null}try{let s=new nl(Xt.gl);au(Xt.name,()=>new Cp(s),Xt.priority)}catch(s){return Vt("error: cannot register webgl backend:",s),null}try{Fd("webgl").forEach(r=>{let a={...r,backendName:Xt.name};ru(a)})}catch(s){return Vt("error: cannot update WebGL backend registration:",s),null}let t=zh().getGPGPUContext?zh().getGPGPUContext().gl:null;return t?Vt(`webgl version:${t.getParameter(t.VERSION)} renderer:${t.getParameter(t.RENDERER)}`):Vt("error: no current gl context:",t,Xt.gl),bh.set("WEBGL_VERSION",2),Vt("backend registered:",Xt.name),Xt.gl}var xc=(e,t)=>{let n=e.getError();if(n!==e.NO_ERROR)throw new Error(`glError: ${t} ${n}`);return n!==e.NO_ERROR},Op=class{constructor(t,n,s,r){hn(this,"texture");hn(this,"width");hn(this,"height");hn(this,"gl");this.gl=t,this.texture=n,this.width=s,this.height=r}bindTexture(){this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture)}},xx=class extends Op{constructor(n,s,r){let a=n.createTexture();if(!a)throw new Error("createTexture: framebuffer");super(n,a,s,r);hn(this,"framebuffer");this.gl=n,this.framebuffer=n.createFramebuffer(),n.bindFramebuffer(n.FRAMEBUFFER,this.framebuffer),xc(n,"bindFramebuffer"),n.bindTexture(n.TEXTURE_2D,a),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR),n.pixelStorei(n.PACK_ALIGNMENT,1),n.pixelStorei(n.UNPACK_ALIGNMENT,1),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,s,r,0,n.RGBA,n.UNSIGNED_BYTE,null),xc(n,"createTexture"),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,a,0);let i=n.checkFramebufferStatus(n.FRAMEBUFFER);if(i!==n.FRAMEBUFFER_COMPLETE)throw new Error(`checkFramebufferStatus: ${i}`);let o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o)}bindFramebuffer(){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.framebuffer),this.gl.viewport(0,0,this.width,this.height)}},r$=(e,t,n)=>{let s=e.createShader(t);if(!s)throw new Error(`compileShader: ${t}`);e.shaderSource(s,n),e.compileShader(s);let r=e.getShaderInfoLog(s);if(r)throw new Error(`compileShader: ${r}`);return s},wx=class{constructor(t,n,s){hn(this,"program");hn(this,"cachedUniformLocations");hn(this,"gl");this.gl=t;let r=r$(t,t.VERTEX_SHADER,n);xc(t,"compileShader: vertex");let a=r$(t,t.FRAGMENT_SHADER,s);if(xc(t,"compileShader: fragment"),this.program=t.createProgram(),!this.program||!r||!a)throw new Error("createProgram");t.attachShader(this.program,r),t.attachShader(this.program,a),t.bindAttribLocation(this.program,0,"position"),t.bindAttribLocation(this.program,1,"input_tex_coord"),t.linkProgram(this.program),t.useProgram(this.program),xc(t,"createProgram"),this.cachedUniformLocations=new Map}useProgram(){this.gl.useProgram(this.program)}getUniformLocation(t){if(this.cachedUniformLocations.has(t))return this.cachedUniformLocations.get(t);let n=this.gl.getUniformLocation(this.program,t);if(this.cachedUniformLocations.set(t,n),!n)throw new Error(`getUniformLocation: ${t}`);return n}},kx=class{constructor(t){hn(this,"program");hn(this,"frame");hn(this,"gl");hn(this,"squareVerticesBuffer");hn(this,"textureVerticesBuffer");hn(this,"vertexShaderSrc",`#version 300 es
    precision mediump float;
    in vec4 position;
    in vec4 input_tex_coord;
    out vec2 tex_coord;
    void main() {
      gl_Position = position;
      tex_coord = input_tex_coord.xy;
    }`);hn(this,"fragmentShaderSrc",`#version 300 es
  precision mediump float;
  uniform sampler2D mask;
  in highp vec2 tex_coord;
  out vec4 out_color;
  void main() {
    vec2 coord = vec2(tex_coord[0], tex_coord[1]);
    vec4 color = texture(mask, coord).rgba;
    out_color = vec4(color.rgba);
  }`);if(this.gl=t,this.gl.viewport(0,0,t.canvas.width,t.canvas.height),this.gl.scissor(0,0,t.canvas.width,t.canvas.height),this.program=new wx(this.gl,this.vertexShaderSrc,this.fragmentShaderSrc),this.frame=new xx(this.gl,t.canvas.width,t.canvas.height),this.squareVerticesBuffer=this.gl.createBuffer(),!this.squareVerticesBuffer)throw new Error("squareVerticesBuffer");if(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.squareVerticesBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,Float32Array.from([-1,-1,1,-1,-1,1,1,1]),t.STATIC_DRAW),this.textureVerticesBuffer=this.gl.createBuffer(),!this.textureVerticesBuffer)throw new Error("textureVerticesBuffer");this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.textureVerticesBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,Float32Array.from([0,0,1,0,0,1,1,1]),t.STATIC_DRAW)}bindTextures(t){let n=0;for(let[s,r]of t){let a=this.program.getUniformLocation(s);this.gl.activeTexture(this.gl.TEXTURE0+n),r.bindTexture(),this.gl.uniform1i(a,n),n++}}flipFramebuffers(){this.gl.bindFramebuffer(this.gl.DRAW_FRAMEBUFFER,null),this.gl.bindFramebuffer(this.gl.READ_FRAMEBUFFER,this.frame.framebuffer),this.gl.blitFramebuffer(0,0,this.frame.width,this.frame.height,0,this.frame.height,this.frame.width,0,this.gl.COLOR_BUFFER_BIT,this.gl.LINEAR)}drawVertices(){this.gl.enableVertexAttribArray(0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.squareVerticesBuffer),this.gl.vertexAttribPointer(0,2,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(1),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.textureVerticesBuffer),this.gl.vertexAttribPointer(1,2,this.gl.FLOAT,!1,0,0),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4)}},cs;function a$(e,t){var s;if(((s=cs==null?void 0:cs.gl)==null?void 0:s.canvas)!==e){let r=e.getContext("webgl2");if(!r)throw new Error("getContext: webgl2");cs=new kx(r)}let n=new Op(cs.gl,t,cs.frame.width,cs.frame.height);cs.program.useProgram(),cs.bindTextures([["mask",n]]),cs.frame.bindFramebuffer(),cs.drawVertices(),cs.flipFramebuffers()}var Ype="../model/whitebox.json",In,Tu,Di=[720,720],Ri,Sx,tt={};async function Zpe(){Vt("starting webcam...");let e={audio:!1,video:{facingMode:"user",resizeMode:"crop",width:{ideal:Di[0]},height:{ideal:Di[1]}}},t=await navigator.mediaDevices.getUserMedia(e),n=new Promise(o=>{In.onloadeddata=()=>o(!0)});In.onplay=()=>Vt("video play"),In.onpause=()=>Vt("video pause"),In.srcObject=t,In.play(),await n,Tu.width=In.videoWidth,Tu.height=In.videoHeight;let s=t.getVideoTracks()[0],r=s.getCapabilities?s.getCapabilities():"",a=s.getSettings?s.getSettings():"",i=s.getConstraints?s.getConstraints():"";Vt("video:",In.videoWidth,In.videoHeight,s.label,{stream:t,track:s,settings:a,constraints:i,capabilities:r}),Tu.onclick=()=>{In.paused?In.play():In.pause()}}var Pp=performance.now();async function Ix(e=0){if(In.paused){setTimeout(()=>Ix(e),50);return}let t=performance.now();tt.pixels=await Bh.fromPixelsAsync(In,3),tt.resize=gr.resizeBilinear(tt.pixels,Di),tt.div=xe(tt.resize,127.5),tt.sub=me(tt.div,1),tt.expand=Nn(tt.sub,0),tt.result=Ri.execute(tt.expand),tt.squeeze=Pr(tt.result),[tt.red,tt.green,tt.blue]=_n(tt.squeeze,3,2),Sx||(Sx=$n([...Di,1],"float32")),tt.rgba=Wn([tt.red,tt.green,tt.blue,Sx],2),tt.add=ie(tt.rgba,1),tt.norm=xe(tt.add,2),tt.data=tt.norm.dataToGPU({customTexShape:[Di[0],Di[1]]}),a$(Tu,tt.data.texture),tt.reference=tt.data.tensorRef;let n=performance.now();e%10===0&&Vt("frame",{frame:e,fps:Math.round(1e4/(n-Pp))/10,real:Math.round(n-Pp),inside:Math.round(n-t),outside:Math.round(t-Pp),tensors:il().numTensors}),Pp=n,Object.values(tt).forEach(s=>Fe(s)),In.requestVideoFrameCallback(()=>Ix(++e))}async function Qpe(){Vt("anime"),In=document.getElementById("video"),Tu=document.getElementById("canvas"),await s$(Tu),await x0("customgl"),await w0(),X().set("WEBGL_EXP_CONV",!0),Ri=await _C(Ype),Ri&&(Vt("tf",{version:U0,backend:k0(),model:Ri.modelUrl}),Ri.inputs[0].shape&&(Di=[Ri.inputs[0].shape[1],Ri.inputs[0].shape[2]]),await Zpe(),await Ix())}window.onload=Qpe;
//# sourceMappingURL=anime.js.map

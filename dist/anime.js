/*
  anime
  homepage: <https://github.com/vladmandic/anime>
  author: <https://github.com/vladmandic>'
*/

var t_=Object.defineProperty;var n_=(e,t,n)=>t in e?t_(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var Xr=(e=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof require!="undefined"?require:t)[n]}):e)(function(e){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var Yt=(e,t,n)=>(n_(e,typeof t!="symbol"?t+"":t,n),n);var s_=Object.create,dp=Object.defineProperty,r_=Object.getOwnPropertyDescriptor,Rk=Object.getOwnPropertyNames,a_=Object.getPrototypeOf,i_=Object.prototype.hasOwnProperty,o_=e=>dp(e,"__esModule",{value:!0}),u_=(e=>typeof Xr!="undefined"?Xr:typeof Proxy!="undefined"?new Proxy(e,{get:(t,n)=>(typeof Xr!="undefined"?Xr:t)[n]}):e)(function(e){if(typeof Xr!="undefined")return Xr.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),Bt=(e,t)=>function(){return t||(0,e[Rk(e)[0]])((t={exports:{}}).exports,t),t.exports},Ee=(e,t)=>{for(var n in t)dp(e,n,{get:t[n],enumerable:!0})},l_=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of Rk(t))!i_.call(e,r)&&(n||r!=="default")&&dp(e,r,{get:()=>t[r],enumerable:!(s=r_(t,r))||s.enumerable});return e},_a=(e,t)=>l_(o_(dp(e!=null?s_(a_(e)):{},"default",!t&&e&&e.__esModule?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),c_=Bt({"src/node_modules/long/src/long.js"(e,t){t.exports=s;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(D){}function s(D,T,L){this.low=D|0,this.high=T|0,this.unsigned=!!L}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0});function r(D){return(D&&D.__isLong__)===!0}s.isLong=r;var a={},i={};function o(D,T){var L,W,q;return T?(D>>>=0,(q=0<=D&&D<256)&&(W=i[D],W)?W:(L=l(D,(D|0)<0?-1:0,!0),q&&(i[D]=L),L)):(D|=0,(q=-128<=D&&D<128)&&(W=a[D],W)?W:(L=l(D,D<0?-1:0,!1),q&&(a[D]=L),L))}s.fromInt=o;function u(D,T){if(isNaN(D))return T?x:v;if(T){if(D<0)return x;if(D>=g)return E}else{if(D<=-b)return O;if(D+1>=b)return A}return D<0?u(-D,T).neg():l(D%m|0,D/m|0,T)}s.fromNumber=u;function l(D,T,L){return new s(D,T,L)}s.fromBits=l;var c=Math.pow;function p(D,T,L){if(D.length===0)throw Error("empty string");if(D==="NaN"||D==="Infinity"||D==="+Infinity"||D==="-Infinity")return v;if(typeof T=="number"?(L=T,T=!1):T=!!T,L=L||10,L<2||36<L)throw RangeError("radix");var W;if((W=D.indexOf("-"))>0)throw Error("interior hyphen");if(W===0)return p(D.substring(1),T,L).neg();for(var q=u(c(L,8)),j=v,X=0;X<D.length;X+=8){var Q=Math.min(8,D.length-X),ne=parseInt(D.substring(X,X+Q),L);if(Q<8){var J=u(c(L,Q));j=j.mul(J).add(u(ne))}else j=j.mul(q),j=j.add(u(ne))}return j.unsigned=T,j}s.fromString=p;function d(D,T){return typeof D=="number"?u(D,T):typeof D=="string"?p(D,T):l(D.low,D.high,typeof T=="boolean"?T:D.unsigned)}s.fromValue=d;var h=1<<16,f=1<<24,m=h*h,g=m*m,b=g/2,y=o(f),v=o(0);s.ZERO=v;var x=o(0,!0);s.UZERO=x;var k=o(1);s.ONE=k;var C=o(1,!0);s.UONE=C;var $=o(-1);s.NEG_ONE=$;var A=l(-1,2147483647,!1);s.MAX_VALUE=A;var E=l(-1,-1,!0);s.MAX_UNSIGNED_VALUE=E;var O=l(0,-2147483648,!1);s.MIN_VALUE=O;var R=s.prototype;R.toInt=function(){return this.unsigned?this.low>>>0:this.low},R.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},R.toString=function(T){if(T=T||10,T<2||36<T)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(O)){var L=u(T),W=this.div(L),q=W.mul(L).sub(this);return W.toString(T)+q.toInt().toString(T)}else return"-"+this.neg().toString(T);for(var j=u(c(T,6),this.unsigned),X=this,Q="";;){var ne=X.div(j),J=X.sub(ne.mul(j)).toInt()>>>0,se=J.toString(T);if(X=ne,X.isZero())return se+Q;for(;se.length<6;)se="0"+se;Q=""+se+Q}},R.getHighBits=function(){return this.high},R.getHighBitsUnsigned=function(){return this.high>>>0},R.getLowBits=function(){return this.low},R.getLowBitsUnsigned=function(){return this.low>>>0},R.getNumBitsAbs=function(){if(this.isNegative())return this.eq(O)?64:this.neg().getNumBitsAbs();for(var T=this.high!=0?this.high:this.low,L=31;L>0&&(T&1<<L)==0;L--);return this.high!=0?L+33:L+1},R.isZero=function(){return this.high===0&&this.low===0},R.eqz=R.isZero,R.isNegative=function(){return!this.unsigned&&this.high<0},R.isPositive=function(){return this.unsigned||this.high>=0},R.isOdd=function(){return(this.low&1)===1},R.isEven=function(){return(this.low&1)===0},R.equals=function(T){return r(T)||(T=d(T)),this.unsigned!==T.unsigned&&this.high>>>31===1&&T.high>>>31===1?!1:this.high===T.high&&this.low===T.low},R.eq=R.equals,R.notEquals=function(T){return!this.eq(T)},R.neq=R.notEquals,R.ne=R.notEquals,R.lessThan=function(T){return this.comp(T)<0},R.lt=R.lessThan,R.lessThanOrEqual=function(T){return this.comp(T)<=0},R.lte=R.lessThanOrEqual,R.le=R.lessThanOrEqual,R.greaterThan=function(T){return this.comp(T)>0},R.gt=R.greaterThan,R.greaterThanOrEqual=function(T){return this.comp(T)>=0},R.gte=R.greaterThanOrEqual,R.ge=R.greaterThanOrEqual,R.compare=function(T){if(r(T)||(T=d(T)),this.eq(T))return 0;var L=this.isNegative(),W=T.isNegative();return L&&!W?-1:!L&&W?1:this.unsigned?T.high>>>0>this.high>>>0||T.high===this.high&&T.low>>>0>this.low>>>0?-1:1:this.sub(T).isNegative()?-1:1},R.comp=R.compare,R.negate=function(){return!this.unsigned&&this.eq(O)?O:this.not().add(k)},R.neg=R.negate,R.add=function(T){r(T)||(T=d(T));var L=this.high>>>16,W=this.high&65535,q=this.low>>>16,j=this.low&65535,X=T.high>>>16,Q=T.high&65535,ne=T.low>>>16,J=T.low&65535,se=0,te=0,oe=0,re=0;return re+=j+J,oe+=re>>>16,re&=65535,oe+=q+ne,te+=oe>>>16,oe&=65535,te+=W+Q,se+=te>>>16,te&=65535,se+=L+X,se&=65535,l(oe<<16|re,se<<16|te,this.unsigned)},R.subtract=function(T){return r(T)||(T=d(T)),this.add(T.neg())},R.sub=R.subtract,R.multiply=function(T){if(this.isZero())return v;if(r(T)||(T=d(T)),n){var L=n.mul(this.low,this.high,T.low,T.high);return l(L,n.get_high(),this.unsigned)}if(T.isZero())return v;if(this.eq(O))return T.isOdd()?O:v;if(T.eq(O))return this.isOdd()?O:v;if(this.isNegative())return T.isNegative()?this.neg().mul(T.neg()):this.neg().mul(T).neg();if(T.isNegative())return this.mul(T.neg()).neg();if(this.lt(y)&&T.lt(y))return u(this.toNumber()*T.toNumber(),this.unsigned);var W=this.high>>>16,q=this.high&65535,j=this.low>>>16,X=this.low&65535,Q=T.high>>>16,ne=T.high&65535,J=T.low>>>16,se=T.low&65535,te=0,oe=0,re=0,le=0;return le+=X*se,re+=le>>>16,le&=65535,re+=j*se,oe+=re>>>16,re&=65535,re+=X*J,oe+=re>>>16,re&=65535,oe+=q*se,te+=oe>>>16,oe&=65535,oe+=j*J,te+=oe>>>16,oe&=65535,oe+=X*ne,te+=oe>>>16,oe&=65535,te+=W*se+q*J+j*ne+X*Q,te&=65535,l(re<<16|le,te<<16|oe,this.unsigned)},R.mul=R.multiply,R.divide=function(T){if(r(T)||(T=d(T)),T.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&T.low===-1&&T.high===-1)return this;var L=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,T.low,T.high);return l(L,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?x:v;var W,q,j;if(this.unsigned){if(T.unsigned||(T=T.toUnsigned()),T.gt(this))return x;if(T.gt(this.shru(1)))return C;j=x}else{if(this.eq(O)){if(T.eq(k)||T.eq($))return O;if(T.eq(O))return k;var X=this.shr(1);return W=X.div(T).shl(1),W.eq(v)?T.isNegative()?k:$:(q=this.sub(T.mul(W)),j=W.add(q.div(T)),j)}else if(T.eq(O))return this.unsigned?x:v;if(this.isNegative())return T.isNegative()?this.neg().div(T.neg()):this.neg().div(T).neg();if(T.isNegative())return this.div(T.neg()).neg();j=v}for(q=this;q.gte(T);){W=Math.max(1,Math.floor(q.toNumber()/T.toNumber()));for(var Q=Math.ceil(Math.log(W)/Math.LN2),ne=Q<=48?1:c(2,Q-48),J=u(W),se=J.mul(T);se.isNegative()||se.gt(q);)W-=ne,J=u(W,this.unsigned),se=J.mul(T);J.isZero()&&(J=k),j=j.add(J),q=q.sub(se)}return j},R.div=R.divide,R.modulo=function(T){if(r(T)||(T=d(T)),n){var L=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,T.low,T.high);return l(L,n.get_high(),this.unsigned)}return this.sub(this.div(T).mul(T))},R.mod=R.modulo,R.rem=R.modulo,R.not=function(){return l(~this.low,~this.high,this.unsigned)},R.and=function(T){return r(T)||(T=d(T)),l(this.low&T.low,this.high&T.high,this.unsigned)},R.or=function(T){return r(T)||(T=d(T)),l(this.low|T.low,this.high|T.high,this.unsigned)},R.xor=function(T){return r(T)||(T=d(T)),l(this.low^T.low,this.high^T.high,this.unsigned)},R.shiftLeft=function(T){return r(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?l(this.low<<T,this.high<<T|this.low>>>32-T,this.unsigned):l(0,this.low<<T-32,this.unsigned)},R.shl=R.shiftLeft,R.shiftRight=function(T){return r(T)&&(T=T.toInt()),(T&=63)===0?this:T<32?l(this.low>>>T|this.high<<32-T,this.high>>T,this.unsigned):l(this.high>>T-32,this.high>=0?0:-1,this.unsigned)},R.shr=R.shiftRight,R.shiftRightUnsigned=function(T){if(r(T)&&(T=T.toInt()),T&=63,T===0)return this;var L=this.high;if(T<32){var W=this.low;return l(W>>>T|L<<32-T,L>>>T,this.unsigned)}else return T===32?l(L,0,this.unsigned):l(L>>>T-32,0,this.unsigned)},R.shru=R.shiftRightUnsigned,R.shr_u=R.shiftRightUnsigned,R.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},R.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},R.toBytes=function(T){return T?this.toBytesLE():this.toBytesBE()},R.toBytesLE=function(){var T=this.high,L=this.low;return[L&255,L>>>8&255,L>>>16&255,L>>>24,T&255,T>>>8&255,T>>>16&255,T>>>24]},R.toBytesBE=function(){var T=this.high,L=this.low;return[T>>>24,T>>>16&255,T>>>8&255,T&255,L>>>24,L>>>16&255,L>>>8&255,L&255]},s.fromBytes=function(T,L,W){return W?s.fromBytesLE(T,L):s.fromBytesBE(T,L)},s.fromBytesLE=function(T,L){return new s(T[0]|T[1]<<8|T[2]<<16|T[3]<<24,T[4]|T[5]<<8|T[6]<<16|T[7]<<24,L)},s.fromBytesBE=function(T,L){return new s(T[4]<<24|T[5]<<16|T[6]<<8|T[7],T[0]<<24|T[1]<<16|T[2]<<8|T[3],L)}}}),d_=Bt({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),p_=Bt({"(disabled):util"(){}}),h_=Bt({"src/node_modules/seedrandom/lib/alea.js"(e,t){(function(n,s,r){function a(l){var c=this,p=u();c.next=function(){var d=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=d-(c.c=d|0)},c.c=1,c.s0=p(" "),c.s1=p(" "),c.s2=p(" "),c.s0-=p(l),c.s0<0&&(c.s0+=1),c.s1-=p(l),c.s1<0&&(c.s1+=1),c.s2-=p(l),c.s2<0&&(c.s2+=1),p=null}function i(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var p=new a(l),d=c&&c.state,h=p.next;return h.int32=function(){return p.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&i(d,p),h.state=function(){return i(p,{})}),h}function u(){var l=4022871197,c=function(p){p=String(p);for(var d=0;d<p.length;d++){l+=p.charCodeAt(d);var h=.02519603282416938*l;l=h>>>0,h-=l,h*=l,l=h>>>0,h-=l,l+=h*4294967296}return(l>>>0)*23283064365386963e-26};return c}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),f_=Bt({"src/node_modules/seedrandom/lib/xor128.js"(e,t){(function(n,s,r){function a(u){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var d=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^d^d>>>8},u===(u|0)?l.x=u:c+=u;for(var p=0;p<c.length+64;p++)l.x^=c.charCodeAt(p)|0,l.next()}function i(u,l){return l.x=u.x,l.y=u.y,l.z=u.z,l.w=u.w,l}function o(u,l){var c=new a(u),p=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),m_=Bt({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){(function(n,s,r){function a(u){var l=this,c="";l.next=function(){var d=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(d^d<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,u===(u|0)?l.x=u:c+=u;for(var p=0;p<c.length+64;p++)l.x^=c.charCodeAt(p)|0,p==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(u,l){return l.x=u.x,l.y=u.y,l.z=u.z,l.w=u.w,l.v=u.v,l.d=u.d,l}function o(u,l){var c=new a(u),p=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),g_=Bt({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){(function(n,s,r){function a(u){var l=this;l.next=function(){var p=l.x,d=l.i,h,f,m;return h=p[d],h^=h>>>7,f=h^h<<24,h=p[d+1&7],f^=h^h>>>10,h=p[d+3&7],f^=h^h>>>3,h=p[d+4&7],f^=h^h<<7,h=p[d+7&7],h=h^h<<13,f^=h^h<<9,p[d]=f,l.i=d+1&7,f};function c(p,d){var h,f,m=[];if(d===(d|0))f=m[0]=d;else for(d=""+d,h=0;h<d.length;++h)m[h&7]=m[h&7]<<15^d.charCodeAt(h)+m[h+1&7]<<13;for(;m.length<8;)m.push(0);for(h=0;h<8&&m[h]===0;++h);for(h==8?f=m[7]=-1:f=m[h],p.x=m,p.i=0,h=256;h>0;--h)p.next()}c(l,u)}function i(u,l){return l.x=u.x.slice(),l.i=u.i,l}function o(u,l){u==null&&(u=+new Date);var c=new a(u),p=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.x&&i(p,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),b_=Bt({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){(function(n,s,r){function a(u){var l=this;l.next=function(){var p=l.w,d=l.X,h=l.i,f,m;return l.w=p=p+1640531527|0,m=d[h+34&127],f=d[h=h+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,m=d[h]=m^f,l.i=h,m+(p^p>>>16)|0};function c(p,d){var h,f,m,g,b,y=[],v=128;for(d===(d|0)?(f=d,d=null):(d=d+"\0",f=0,v=Math.max(v,d.length)),m=0,g=-32;g<v;++g)d&&(f^=d.charCodeAt((g+32)%d.length)),g===0&&(b=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,g>=0&&(b=b+1640531527|0,h=y[g&127]^=f+b,m=h==0?m+1:0);for(m>=128&&(y[(d&&d.length||0)&127]=-1),m=127,g=4*128;g>0;--g)f=y[m+34&127],h=y[m=m+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,y[m]=f^h;p.w=b,p.X=y,p.i=m}c(l,u)}function i(u,l){return l.i=u.i,l.w=u.w,l.X=u.X.slice(),l}function o(u,l){u==null&&(u=+new Date);var c=new a(u),p=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(p.X&&i(p,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),y_=Bt({"src/node_modules/seedrandom/lib/tychei.js"(e,t){(function(n,s,r){function a(u){var l=this,c="";l.next=function(){var d=l.b,h=l.c,f=l.d,m=l.a;return d=d<<25^d>>>7^h,h=h-f|0,f=f<<24^f>>>8^m,m=m-d|0,l.b=d=d<<20^d>>>12^h,l.c=h=h-f|0,l.d=f<<16^h>>>16^m,l.a=m-d|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,u===Math.floor(u)?(l.a=u/4294967296|0,l.b=u|0):c+=u;for(var p=0;p<c.length+20;p++)l.b^=c.charCodeAt(p)|0,l.next()}function i(u,l){return l.a=u.a,l.b=u.b,l.c=u.c,l.d=u.d,l}function o(u,l){var c=new a(u),p=l&&l.state,d=function(){return(c.next()>>>0)/4294967296};return d.double=function(){do var h=c.next()>>>11,f=(c.next()>>>0)/4294967296,m=(h+f)/(1<<21);while(m===0);return m},d.int32=c.next,d.quick=d,p&&(typeof p=="object"&&i(p,c),d.state=function(){return i(c,{})}),d}s&&s.exports?s.exports=o:r&&r.amd?r(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}}),v_=Bt({"(disabled):crypto"(){}}),x_=Bt({"src/node_modules/seedrandom/seedrandom.js"(e,t){(function(n,s,r){var a=256,i=6,o=52,u="random",l=r.pow(a,i),c=r.pow(2,o),p=c*2,d=a-1,h;function f(k,C,$){var A=[];C=C==!0?{entropy:!0}:C||{};var E=y(b(C.entropy?[k,x(s)]:k==null?v():k,3),A),O=new m(A),R=function(){for(var D=O.g(i),T=l,L=0;D<c;)D=(D+L)*a,T*=a,L=O.g(1);for(;D>=p;)D/=2,T/=2,L>>>=1;return(D+L)/T};return R.int32=function(){return O.g(4)|0},R.quick=function(){return O.g(4)/4294967296},R.double=R,y(x(O.S),s),(C.pass||$||function(D,T,L,W){return W&&(W.S&&g(W,O),D.state=function(){return g(O,{})}),L?(r[u]=D,T):D})(R,E,"global"in C?C.global:this==r,C.state)}function m(k){var C,$=k.length,A=this,E=0,O=A.i=A.j=0,R=A.S=[];for($||(k=[$++]);E<a;)R[E]=E++;for(E=0;E<a;E++)R[E]=R[O=d&O+k[E%$]+(C=R[E])],R[O]=C;(A.g=function(D){for(var T,L=0,W=A.i,q=A.j,j=A.S;D--;)T=j[W=d&W+1],L=L*a+j[d&(j[W]=j[q=d&q+T])+(j[q]=T)];return A.i=W,A.j=q,L})(a)}function g(k,C){return C.i=k.i,C.j=k.j,C.S=k.S.slice(),C}function b(k,C){var $=[],A=typeof k,E;if(C&&A=="object")for(E in k)try{$.push(b(k[E],C-1))}catch(O){}return $.length?$:A=="string"?k:k+"\0"}function y(k,C){for(var $=k+"",A,E=0;E<$.length;)C[d&E]=d&(A^=C[d&E]*19)+$.charCodeAt(E++);return x(C)}function v(){try{var k;return h&&(k=h.randomBytes)?k=k(a):(k=new Uint8Array(a),(n.crypto||n.msCrypto).getRandomValues(k)),x(k)}catch(A){var C=n.navigator,$=C&&C.plugins;return[+new Date,n,$,n.screen,x(s)]}}function x(k){return String.fromCharCode.apply(0,k)}if(y(r.random(),s),typeof t=="object"&&t.exports){t.exports=f;try{h=v_()}catch(k){}}else typeof define=="function"&&define.amd?define(function(){return f}):r["seed"+u]=f})(typeof self!="undefined"?self:e,[],Math)}}),pp=Bt({"src/node_modules/seedrandom/index.js"(e,t){var n=h_(),s=f_(),r=m_(),a=g_(),i=b_(),o=y_(),u=x_();u.alea=n,u.xor128=s,u.xorwow=r,u.xorshift7=a,u.xor4096=i,u.tychei=o,t.exports=u}}),Dk=Bt({"(disabled):src/node_modules/string_decoder/index.js"(){}}),hp=Bt({"(disabled):fs"(){}}),$d=Bt({"(disabled):path"(){}}),Fk=Bt({"(disabled):worker_threads"(){}}),w_=Bt({"(disabled):perf_hooks"(){}}),k_=Bt({"(disabled):os"(){}}),S_=Bt({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};function a(){return Ce.buffer!=ln&&ps(Ce.buffer),wc}function i(){return Ce.buffer!=ln&&ps(Ce.buffer),kc}function o(){return Ce.buffer!=ln&&ps(Ce.buffer),_u}function u(){return Ce.buffer!=ln&&ps(Ce.buffer),Sc}function l(){return Ce.buffer!=ln&&ps(Ce.buffer),Ic}function c(){return Ce.buffer!=ln&&ps(Ce.buffer),Cc}function p(){return Ce.buffer!=ln&&ps(Ce.buffer),Nc}var d=typeof r!="undefined"?r:{},h,f;d.ready=new Promise(function(N,F){h=N,f=F});var m;typeof process!="undefined"&&process.listeners&&(m={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var g=Object.assign({},d),b=[],y="./this.program",v=(N,F)=>{throw F},x=typeof window=="object",k=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",$=d.ENVIRONMENT_IS_PTHREAD||!1,A="";function E(N){return d.locateFile?d.locateFile(N,A):A+N}var O,R,D,T;function L(N){if(N instanceof zu)return;J("exiting due to exception: "+N)}var W,q,j;if(C){k?A=$d().dirname(A)+"/":A=__dirname+"/",j=()=>{q||(W=hp(),q=$d())},O=function(B,Z){return j(),B=q.normalize(B),W.readFileSync(B,Z?void 0:"utf8")},D=F=>{var B=O(F,!0);return B.buffer||(B=new Uint8Array(B)),B},R=(F,B,Z)=>{j(),F=q.normalize(F),W.readFile(F,function(ue,he){ue?Z(ue):B(he.buffer)})},process.argv.length>1&&(y=process.argv[1].replace(/\\/g,"/")),b=process.argv.slice(2),process.on("uncaughtException",function(F){if(!(F instanceof zu))throw F}),process.on("unhandledRejection",function(F){throw F}),v=(F,B)=>{if(Gr())throw process.exitCode=F,B;L(B),process.exit(F)},d.inspect=function(){return"[Emscripten Module object]"};let N;try{N=Fk()}catch(F){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),F}global.Worker=N.Worker}else(x||k)&&(k?A=self.location.href:typeof document!="undefined"&&document.currentScript&&(A=document.currentScript.src),s&&(A=s),A.indexOf("blob:")!==0?A=A.substr(0,A.replace(/[?#].*/,"").lastIndexOf("/")+1):A="",C||(O=N=>{var F=new XMLHttpRequest;return F.open("GET",N,!1),F.send(null),F.responseText},k&&(D=N=>{var F=new XMLHttpRequest;return F.open("GET",N,!1),F.responseType="arraybuffer",F.send(null),new Uint8Array(F.response)}),R=(N,F,B)=>{var Z=new XMLHttpRequest;Z.open("GET",N,!0),Z.responseType="arraybuffer",Z.onload=()=>{if(Z.status==200||Z.status==0&&Z.response){F(Z.response);return}B()},Z.onerror=B,Z.send(null)}),T=N=>document.title=N);C&&typeof performance=="undefined"&&(global.performance=w_().performance);var X=console.log.bind(console),Q=console.warn.bind(console);C&&(j(),X=N=>W.writeSync(1,N+`
`),Q=N=>W.writeSync(2,N+`
`));var ne=d.print||X,J=d.printErr||Q;Object.assign(d,g),g=null,d.arguments&&(b=d.arguments),d.thisProgram&&(y=d.thisProgram),d.quit&&(v=d.quit);var se=4;function te(N){te.shown||(te.shown={}),te.shown[N]||(te.shown[N]=1,J(N))}function oe(N,F){if(typeof WebAssembly.Function=="function"){for(var B={i:"i32",j:"i64",f:"f32",d:"f64"},Z={parameters:[],results:F[0]=="v"?[]:[B[F[0]]]},ue=1;ue<F.length;++ue)Z.parameters.push(B[F[ue]]);return new WebAssembly.Function(Z,N)}var he=[1,0,1,96],ye=F.slice(0,1),Te=F.slice(1),vt={i:127,j:126,f:125,d:124};he.push(Te.length);for(var ue=0;ue<Te.length;++ue)he.push(vt[Te[ue]]);ye=="v"?he.push(0):he=he.concat([1,vt[ye]]),he[1]=he.length-2;var gs=new Uint8Array([0,97,115,109,1,0,0,0].concat(he,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),bs=new WebAssembly.Module(gs),td=new WebAssembly.Instance(bs,{e:{f:N}}),Mu=td.exports.f;return Mu}var re=[],le;function ge(){if(re.length)return re.pop();try{jn.grow(1)}catch(N){throw N instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":N}return jn.length-1}function we(N,F){for(var B=N;B<N+F;B++){var Z=Vi(B);Z&&le.set(Z,B)}}var Ie=0,De=N=>{Ie=N},Le=Atomics.load,Ye=Atomics.store,tt=Atomics.compareExchange,Ze;d.wasmBinary&&(Ze=d.wasmBinary);var nt=d.noExitRuntime||!0;typeof WebAssembly!="object"&&zi("no native wasm support detected");var Ce,ct,ot=!1,an;function $t(N,F){N||zi(F)}function On(N){var F=d["_"+N];return F}function Ft(N,F,B,Z,ue){var he={string:function(zn){var Ki=0;if(zn!=null&&zn!==0){var qx=(zn.length<<2)+1;Ki=ji(qx),qs(zn,Ki,qx)}return Ki},array:function(zn){var Ki=ji(zn.length);return js(zn,Ki),Ki}};function ye(zn){return F==="string"?un(zn):F==="boolean"?Boolean(zn):zn}var Te=On(N),vt=[],gs=0;if(Z)for(var bs=0;bs<Z.length;bs++){var td=he[B[bs]];td?(gs===0&&(gs=bm()),vt[bs]=td(Z[bs])):vt[bs]=Z[bs]}var Mu=Te.apply(null,vt);function e_(zn){return gs!==0&&Zc(gs),ye(zn)}return Mu=e_(Mu),Mu}function on(N,F,B,Z){B=B||[];var ue=B.every(function(ye){return ye==="number"}),he=F!=="string";return he&&ue&&!Z?On(N):function(){return Ft(N,F,B,arguments,Z)}}var Pn=1;function Ln(N){var F=new TextDecoder(N);this.decode=B=>(B.buffer instanceof SharedArrayBuffer&&(B=new Uint8Array(B)),F.decode.call(F,B))}var sn=typeof TextDecoder!="undefined"?new Ln("utf8"):void 0;function qn(N,F,B){for(var Z=F+B,ue=F;N[ue]&&!(ue>=Z);)++ue;if(ue-F>16&&N.subarray&&sn)return sn.decode(N.subarray(F,ue));for(var he="";F<ue;){var ye=N[F++];if(!(ye&128)){he+=String.fromCharCode(ye);continue}var Te=N[F++]&63;if((ye&224)==192){he+=String.fromCharCode((ye&31)<<6|Te);continue}var vt=N[F++]&63;if((ye&240)==224?ye=(ye&15)<<12|Te<<6|vt:ye=(ye&7)<<18|Te<<12|vt<<6|N[F++]&63,ye<65536)he+=String.fromCharCode(ye);else{var gs=ye-65536;he+=String.fromCharCode(55296|gs>>10,56320|gs&1023)}}return he}function un(N,F){return N?qn(i(),N,F):""}function Hs(N,F,B,Z){if(!(Z>0))return 0;for(var ue=B,he=B+Z-1,ye=0;ye<N.length;++ye){var Te=N.charCodeAt(ye);if(Te>=55296&&Te<=57343){var vt=N.charCodeAt(++ye);Te=65536+((Te&1023)<<10)|vt&1023}if(Te<=127){if(B>=he)break;F[B++]=Te}else if(Te<=2047){if(B+1>=he)break;F[B++]=192|Te>>6,F[B++]=128|Te&63}else if(Te<=65535){if(B+2>=he)break;F[B++]=224|Te>>12,F[B++]=128|Te>>6&63,F[B++]=128|Te&63}else{if(B+3>=he)break;F[B++]=240|Te>>18,F[B++]=128|Te>>12&63,F[B++]=128|Te>>6&63,F[B++]=128|Te&63}}return F[B]=0,B-ue}function qs(N,F,B){return Hs(N,i(),F,B)}function Oi(N){for(var F=0,B=0;B<N.length;++B){var Z=N.charCodeAt(B);Z>=55296&&Z<=57343&&(Z=65536+((Z&1023)<<10)|N.charCodeAt(++B)&1023),Z<=127?++F:Z<=2047?F+=2:Z<=65535?F+=3:F+=4}return F}var lr=typeof TextDecoder!="undefined"?new Ln("utf-16le"):void 0;function js(N,F){a().set(N,F)}function $u(N,F,B){for(var Z=0;Z<N.length;++Z)a()[F++>>0]=N.charCodeAt(Z);B||(a()[F>>0]=0)}function Pi(N,F){return N%F>0&&(N+=F-N%F),N}var ln,wc,kc,_u,Sc,Ic,Nx,Cc,Nc;$&&(ln=d.buffer);function ps(N){ln=N,d.HEAP8=wc=new Int8Array(N),d.HEAP16=_u=new Int16Array(N),d.HEAP32=Ic=new Int32Array(N),d.HEAPU8=kc=new Uint8Array(N),d.HEAPU16=Sc=new Uint16Array(N),d.HEAPU32=Nx=new Uint32Array(N),d.HEAPF32=Cc=new Float32Array(N),d.HEAPF64=Nc=new Float64Array(N)}var Tc=d.INITIAL_MEMORY||16777216;if($)Ce=d.wasmMemory,ln=d.buffer;else if(d.wasmMemory)Ce=d.wasmMemory;else if(Ce=new WebAssembly.Memory({initial:Tc/65536,maximum:32768,shared:!0}),!(Ce.buffer instanceof SharedArrayBuffer))throw J("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),C&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");Ce&&(ln=Ce.buffer),Tc=ln.byteLength,ps(ln);var jn,Li=[],cr=[],Lh=[],$c=[],Ur=!1,zh=!1,_c=0;function Gr(){return nt||_c>0}function cn(){if(d.preRun)for(typeof d.preRun=="function"&&(d.preRun=[d.preRun]);d.preRun.length;)Tx(d.preRun.shift());Fc(Li)}function Au(){Ur=!0,!$&&Fc(cr)}function Mh(){$||($e.terminateAllThreads(),zh=!0)}function Bh(){if(!$){if(d.postRun)for(typeof d.postRun=="function"&&(d.postRun=[d.postRun]);d.postRun.length;)Eu(d.postRun.shift());Fc($c)}}function Tx(N){Li.unshift(N)}function $x(N){cr.unshift(N)}function Eu(N){$c.unshift(N)}var dr=0,Ac=null,hs=null;function Ru(N){dr++,d.monitorRunDependencies&&d.monitorRunDependencies(dr)}function _x(N){if(dr--,d.monitorRunDependencies&&d.monitorRunDependencies(dr),dr==0&&(Ac!==null&&(clearInterval(Ac),Ac=null),hs)){var F=hs;hs=null,F()}}d.preloadedImages={},d.preloadedAudios={};function zi(N){$?postMessage({cmd:"onAbort",arg:N}):d.onAbort&&d.onAbort(N),N="Aborted("+N+")",J(N),ot=!0,an=1,N+=". Build with -s ASSERTIONS=1 for more info.";var F=new WebAssembly.RuntimeError(N);throw f(F),F}var Vh="data:application/octet-stream;base64,";function Ec(N){return N.startsWith(Vh)}function Rc(N){return N.startsWith("file://")}var dn;dn="tfjs-backend-wasm-threaded-simd.wasm",Ec(dn)||(dn=E(dn));function Dc(N){try{if(N==dn&&Ze)return new Uint8Array(Ze);if(D)return D(N);throw"both async and sync fetching of the wasm failed"}catch(F){zi(F)}}function Mi(){if(!Ze&&(x||k)){if(typeof fetch=="function"&&!Rc(dn))return fetch(dn,{credentials:"same-origin"}).then(function(N){if(!N.ok)throw"failed to load wasm binary file at '"+dn+"'";return N.arrayBuffer()}).catch(function(){return Dc(dn)});if(R)return new Promise(function(N,F){R(dn,function(B){N(new Uint8Array(B))},F)})}return Promise.resolve().then(function(){return Dc(dn)})}function Wh(){var N={env:qc,wasi_snapshot_preview1:qc};function F(ye,Te){var vt=ye.exports;if(d.asm=vt,Xh(d.asm.emscripten_tls_init),jn=d.asm.__indirect_function_table,$x(d.asm.__wasm_call_ctors),ct=Te,!$){var gs=$e.unusedWorkers.length;$e.unusedWorkers.forEach(function(bs){$e.loadWasmModuleToWorker(bs,function(){--gs||_x("wasm-instantiate")})})}}$||Ru("wasm-instantiate");function B(ye){F(ye.instance,ye.module)}function Z(ye){return Mi().then(function(Te){return WebAssembly.instantiate(Te,N)}).then(function(Te){return Te}).then(ye,function(Te){J("failed to asynchronously prepare wasm: "+Te),zi(Te)})}function ue(){return!Ze&&typeof WebAssembly.instantiateStreaming=="function"&&!Ec(dn)&&!Rc(dn)&&typeof fetch=="function"?fetch(dn,{credentials:"same-origin"}).then(function(ye){var Te=WebAssembly.instantiateStreaming(ye,N);return Te.then(B,function(vt){return J("wasm streaming compile failed: "+vt),J("falling back to ArrayBuffer instantiation"),Z(B)})}):Z(B)}if(d.instantiateWasm)try{var he=d.instantiateWasm(N,F);return he}catch(ye){return J("Module.instantiateWasm callback failed with error: "+ye),!1}return ue().catch(f),{}}var Ax,Ex,Uh={};function Fc(N){for(;N.length>0;){var F=N.shift();if(typeof F=="function"){F(d);continue}var B=F.func;typeof B=="number"?F.arg===void 0?Vi(B)():Vi(B)(F.arg):B(F.arg===void 0?null:F.arg)}}function Bi(N){var F=bm(),B=N();return Zc(F),B}function u$(N){return N}function Rx(N){var F=/\b_Z[\w\d_]+/g;return N.replace(F,function(B){var Z=B;return B===Z?B:Z+" ["+B+"]"})}function Gh(N){l()[N>>2]=0;var F=$e.pthreads[N];delete $e.pthreads[N],F.worker.terminate(),gm(N),$e.runningWorkers.splice($e.runningWorkers.indexOf(F.worker),1),F.worker.pthread=void 0}function Hh(N){var F=$e.pthreads[N];F.worker.postMessage({cmd:"cancel"})}function Oc(N){var F=$e.pthreads[N];if(F){l()[N>>2]=0;var B=F.worker;$e.returnWorkerToPool(B)}}function Pc(N){Z$(N)}function qh(N){if(N instanceof zu||N=="unwind")return an;v(1,N)}var $e={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],init:function(){$?$e.initWorker():$e.initMainThread()},initMainThread:function(){for(var N=8,F=0;F<N;++F)$e.allocateUnusedWorker()},initWorker:function(){nt=!1},pthreads:{},setExitStatus:function(N){an=N},terminateAllThreads:function(){for(var N in $e.pthreads){var F=$e.pthreads[N];F&&F.worker&&$e.returnWorkerToPool(F.worker)}for(var B=0;B<$e.unusedWorkers.length;++B){var Z=$e.unusedWorkers[B];Z.terminate()}$e.unusedWorkers=[]},returnWorkerToPool:function(N){$e.runWithoutMainThreadQueuedCalls(function(){delete $e.pthreads[N.pthread.threadInfoStruct],$e.unusedWorkers.push(N),$e.runningWorkers.splice($e.runningWorkers.indexOf(N),1),gm(N.pthread.threadInfoStruct),N.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(N){l()[Hx>>2]=0;try{N()}finally{l()[Hx>>2]=1}},receiveObjectTransfer:function(N){},threadInit:function(){for(var N in $e.tlsInitFunctions)$e.tlsInitFunctions[N]()},loadWasmModuleToWorker:function(N,F){N.onmessage=B=>{var Z=B.data,ue=Z.cmd;if(N.pthread&&($e.currentProxiedOperationCallerThread=N.pthread.threadInfoStruct),Z.targetThread&&Z.targetThread!=Yc()){var he=$e.pthreads[Z.targetThread];he?he.worker.postMessage(Z,Z.transferList):J('Internal error! Worker sent a message "'+ue+'" to target pthread '+Z.targetThread+", but that thread no longer exists!"),$e.currentProxiedOperationCallerThread=void 0;return}ue==="processQueuedMainThreadWork"?Bx():ue==="spawnThread"?zc(Z):ue==="cleanupThread"?Oc(Z.thread):ue==="killThread"?Gh(Z.thread):ue==="cancelThread"?Hh(Z.thread):ue==="loaded"?(N.loaded=!0,F&&F(N),N.runPthread&&(N.runPthread(),delete N.runPthread)):ue==="print"?ne("Thread "+Z.threadId+": "+Z.text):ue==="printErr"?J("Thread "+Z.threadId+": "+Z.text):ue==="alert"?alert("Thread "+Z.threadId+": "+Z.text):Z.target==="setimmediate"?N.postMessage(Z):ue==="onAbort"?d.onAbort&&d.onAbort(Z.arg):J("worker sent an unknown command "+ue),$e.currentProxiedOperationCallerThread=void 0},N.onerror=B=>{var Z="worker sent an error!";throw J(Z+" "+B.filename+":"+B.lineno+": "+B.message),B},C&&(N.on("message",function(B){N.onmessage({data:B})}),N.on("error",function(B){N.onerror(B)}),N.on("detachedExit",function(){})),N.postMessage({cmd:"load",urlOrBlob:d.mainScriptUrlOrBlob||s,wasmMemory:Ce,wasmModule:ct})},allocateUnusedWorker:function(){var N=E("tfjs-backend-wasm-threaded-simd.worker.js");$e.unusedWorkers.push(new Worker(N))},getNewWorker:function(){return $e.unusedWorkers.length==0&&($e.allocateUnusedWorker(),$e.loadWasmModuleToWorker($e.unusedWorkers[0])),$e.unusedWorkers.pop()}};function jh(){var N=Yc(),F=l()[N+44>>2],B=l()[N+48>>2],Z=F-B;Gx(F,Z),Zc(F)}d.establishStackSpace=jh;function Lc(N){if($)return jr(1,0,N);try{Pc(N)}catch(F){qh(F)}}var Hr=[];function Vi(N){var F=Hr[N];return F||(N>=Hr.length&&(Hr.length=N+1),Hr[N]=F=jn.get(N)),F}function Kh(N,F){return Vi(N)(F)}d.invokeEntryPoint=Kh;function Dx(){var N=new Error;if(!N.stack){try{throw new Error}catch(F){N=F}if(!N.stack)return"(no stack trace available)"}return N.stack.toString()}function Xh(N,F,B){$e.tlsInitFunctions.push(N)}function Fx(N,F){jn.set(N,F),Hr[N]=F}var qr;C?qr=()=>{var N=process.hrtime();return N[0]*1e3+N[1]/1e6}:$?qr=()=>performance.now()-d.__performance_now_clock_drift:qr=()=>performance.now();var Yh=!0;function Zh(N){return l()[Mx()>>2]=N,N}function Qh(N,F){var B;if(N===0)B=Date.now();else if((N===1||N===4)&&Yh)B=qr();else return Zh(28),-1;return l()[F>>2]=B/1e3|0,l()[F+4>>2]=B%1e3*1e3*1e3|0,0}function Jh(N,F){return Qh(N,F)}function ef(N){Vx(N,!k,1,!x),$e.threadInit()}function tf(N){$?postMessage({cmd:"cleanupThread",thread:N}):Oc(N)}function zc(N){var F=$e.getNewWorker();if(!F)return 6;$e.runningWorkers.push(F);var B=$e.pthreads[N.pthread_ptr]={worker:F,threadInfoStruct:N.pthread_ptr};F.pthread=B;var Z={cmd:"run",start_routine:N.startRoutine,arg:N.arg,threadInfoStruct:N.pthread_ptr};return F.runPthread=()=>{Z.time=performance.now(),F.postMessage(Z,N.transferList)},F.loaded&&(F.runPthread(),delete F.runPthread),0}function nf(N,F,B,Z){if(typeof SharedArrayBuffer=="undefined")return J("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ue=[],he=0;if($&&(ue.length===0||he))return Wx(687865856,N,F,B,Z);if(he)return he;var ye={startRoutine:B,pthread_ptr:N,arg:Z,transferList:ue};return $?(ye.cmd="spawnThread",postMessage(ye,ue),0):zc(ye)}function sf(){return 2097152}function rf(N,F){if(N==F)postMessage({cmd:"processQueuedMainThreadWork"});else if($)postMessage({targetThread:N,cmd:"processThreadQueue"});else{var B=$e.pthreads[N],Z=B&&B.worker;if(!Z)return;Z.postMessage({cmd:"processThreadQueue"})}return 1}function af(){zi("")}function of(){C||k||te("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Mc(){return 2147483648}function uf(N,F,B){i().copyWithin(N,F,F+B)}function lf(){return C?k_().cpus().length:navigator.hardwareConcurrency}function jr(N,F){var B=arguments.length-2,Z=arguments;return Bi(function(){for(var ue=B,he=ji(ue*8),ye=he>>3,Te=0;Te<B;Te++){var vt=Z[2+Te];p()[ye+Te]=vt}return Ux(N,ue,he,F)})}var Du=[];function cf(N,F,B){Du.length=F;for(var Z=B>>3,ue=0;ue<F;ue++)Du[ue]=p()[Z+ue];var he=N<0,ye=he?Uh[-N-1]:_f[N];return ye.apply(null,Du)}function df(N){try{return Ce.grow(N-ln.byteLength+65535>>>16),ps(Ce.buffer),1}catch(F){}}function pf(N){var F=i().length;if(N=N>>>0,N<=F)return!1;var B=Mc();if(N>B)return!1;for(var Z=1;Z<=4;Z*=2){var ue=F*(1+.2/Z);ue=Math.min(ue,N+100663296);var he=Math.min(B,Pi(Math.max(N,ue),65536)),ye=df(he);if(ye)return!0}return!1}var Me={inEventHandler:0,removeAllEventListeners:function(){for(var N=Me.eventHandlers.length-1;N>=0;--N)Me._removeHandler(N);Me.eventHandlers=[],Me.deferredCalls=[]},registerRemoveEventListeners:function(){Me.removeEventListenersRegistered||(Lh.push(Me.removeAllEventListeners),Me.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(N,F,B){function Z(ye,Te){if(ye.length!=Te.length)return!1;for(var vt in ye)if(ye[vt]!=Te[vt])return!1;return!0}for(var ue in Me.deferredCalls){var he=Me.deferredCalls[ue];if(he.targetFunction==N&&Z(he.argsList,B))return}Me.deferredCalls.push({targetFunction:N,precedence:F,argsList:B}),Me.deferredCalls.sort(function(ye,Te){return ye.precedence<Te.precedence})},removeDeferredCalls:function(N){for(var F=0;F<Me.deferredCalls.length;++F)Me.deferredCalls[F].targetFunction==N&&(Me.deferredCalls.splice(F,1),--F)},canPerformEventHandlerRequests:function(){return Me.inEventHandler&&Me.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(!!Me.canPerformEventHandlerRequests())for(var N=0;N<Me.deferredCalls.length;++N){var F=Me.deferredCalls[N];Me.deferredCalls.splice(N,1),--N,F.targetFunction.apply(null,F.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(N,F){for(var B=0;B<Me.eventHandlers.length;++B)Me.eventHandlers[B].target==N&&(!F||F==Me.eventHandlers[B].eventTypeString)&&Me._removeHandler(B--)},_removeHandler:function(N){var F=Me.eventHandlers[N];F.target.removeEventListener(F.eventTypeString,F.eventListenerFunc,F.useCapture),Me.eventHandlers.splice(N,1)},registerOrRemoveHandler:function(N){var F=function(ue){++Me.inEventHandler,Me.currentEventHandler=N,Me.runDeferredCalls(),N.handlerFunc(ue),Me.runDeferredCalls(),--Me.inEventHandler};if(N.callbackfunc)N.eventListenerFunc=F,N.target.addEventListener(N.eventTypeString,F,N.useCapture),Me.eventHandlers.push(N),Me.registerRemoveEventListeners();else for(var B=0;B<Me.eventHandlers.length;++B)Me.eventHandlers[B].target==N.target&&Me.eventHandlers[B].eventTypeString==N.eventTypeString&&Me._removeHandler(B--)},queueEventHandlerOnThread_iiii:function(N,F,B,Z,ue){Bi(function(){var he=ji(12);l()[he>>2]=B,l()[he+4>>2]=Z,l()[he+8>>2]=ue,mm(N,637534208,F,Z,he)})},getTargetThreadForEventCallback:function(N){switch(N){case 1:return 0;case 2:return $e.currentProxiedOperationCallerThread;default:return N}},getNodeNameForTarget:function(N){return N?N==window?"#window":N==screen?"#screen":N&&N.nodeName?N.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function hf(N){var F=Oi(N)+1,B=fm(F);return qs(N,B,F),B}function ff(N,F,B,Z){Bi(function(){var ue=ji(12),he=0;F&&(he=hf(F)),l()[ue>>2]=he,l()[ue+4>>2]=B,l()[ue+8>>2]=Z,mm(N,657457152,0,he,ue)})}function mf(N,F,B,Z){F=F?un(F):"",ff(N,F,B,Z)}function gf(N){return N>2?un(N):N}var bf=[0,typeof document!="undefined"?document:0,typeof window!="undefined"?window:0];function yf(N){N=gf(N);var F=bf[N]||(typeof document!="undefined"?document.querySelector(N):void 0);return F}function Fu(N){return yf(N)}function Bc(N,F,B){var Z=Fu(N);if(!Z)return-4;if(Z.canvasSharedPtr&&(l()[Z.canvasSharedPtr>>2]=F,l()[Z.canvasSharedPtr+4>>2]=B),Z.offscreenCanvas||!Z.controlTransferredOffscreen){Z.offscreenCanvas&&(Z=Z.offscreenCanvas);var ue=!1;if(Z.GLctxObject&&Z.GLctxObject.GLctx){var he=Z.GLctxObject.GLctx.getParameter(2978);ue=he[0]===0&&he[1]===0&&he[2]===Z.width&&he[3]===Z.height}Z.width=F,Z.height=B,ue&&Z.GLctxObject.GLctx.viewport(0,0,F,B)}else if(Z.canvasSharedPtr){var ye=l()[Z.canvasSharedPtr+8>>2];return mf(ye,N,F,B),1}else return-4;return 0}function Vc(N,F,B){return $?jr(2,1,N,F,B):Bc(N,F,B)}function vf(N,F,B){var Z=Fu(N);return Z?Bc(N,F,B):Vc(N,F,B)}function xf(){throw"unwind"}function wf(N){var F=N.getExtension("ANGLE_instanced_arrays");if(F)return N.vertexAttribDivisor=function(B,Z){F.vertexAttribDivisorANGLE(B,Z)},N.drawArraysInstanced=function(B,Z,ue,he){F.drawArraysInstancedANGLE(B,Z,ue,he)},N.drawElementsInstanced=function(B,Z,ue,he,ye){F.drawElementsInstancedANGLE(B,Z,ue,he,ye)},1}function kf(N){var F=N.getExtension("OES_vertex_array_object");if(F)return N.createVertexArray=function(){return F.createVertexArrayOES()},N.deleteVertexArray=function(B){F.deleteVertexArrayOES(B)},N.bindVertexArray=function(B){F.bindVertexArrayOES(B)},N.isVertexArray=function(B){return F.isVertexArrayOES(B)},1}function Sf(N){var F=N.getExtension("WEBGL_draw_buffers");if(F)return N.drawBuffers=function(B,Z){F.drawBuffersWEBGL(B,Z)},1}function If(N){return!!(N.multiDrawWebgl=N.getExtension("WEBGL_multi_draw"))}var yt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},queries:[],stringCache:{},unpackAlignment:4,recordError:function(F){yt.lastError||(yt.lastError=F)},getNewId:function(N){for(var F=yt.counter++,B=N.length;B<F;B++)N[B]=null;return F},getSource:function(N,F,B,Z){for(var ue="",he=0;he<F;++he){var ye=Z?l()[Z+he*4>>2]:-1;ue+=un(l()[B+he*4>>2],ye<0?void 0:ye)}return ue},createContext:function(N,F){N.getContextSafariWebGL2Fixed||(N.getContextSafariWebGL2Fixed=N.getContext,N.getContext=function(ue,he){var ye=N.getContextSafariWebGL2Fixed(ue,he);return ue=="webgl"==ye instanceof WebGLRenderingContext?ye:null});var B=N.getContext("webgl",F);if(!B)return 0;var Z=yt.registerContext(B,F);return Z},registerContext:function(N,F){var B=fm(8);l()[B+4>>2]=Yc();var Z={handle:B,attributes:F,version:F.majorVersion,GLctx:N};return N.canvas&&(N.canvas.GLctxObject=Z),yt.contexts[B]=Z,(typeof F.enableExtensionsByDefault=="undefined"||F.enableExtensionsByDefault)&&yt.initExtensions(Z),B},makeContextCurrent:function(N){return yt.currentContext=yt.contexts[N],d.ctx=Hc=yt.currentContext&&yt.currentContext.GLctx,!(N&&!Hc)},getContext:function(N){return yt.contexts[N]},deleteContext:function(N){yt.currentContext===yt.contexts[N]&&(yt.currentContext=null),typeof Me=="object"&&Me.removeAllHandlersOnTarget(yt.contexts[N].GLctx.canvas),yt.contexts[N]&&yt.contexts[N].GLctx.canvas&&(yt.contexts[N].GLctx.canvas.GLctxObject=void 0),zx(yt.contexts[N].handle),yt.contexts[N]=null},initExtensions:function(N){if(N||(N=yt.currentContext),!N.initExtensionsDone){N.initExtensionsDone=!0;var F=N.GLctx;wf(F),kf(F),Sf(F),F.disjointTimerQueryExt=F.getExtension("EXT_disjoint_timer_query"),If(F);var B=F.getSupportedExtensions()||[];B.forEach(function(Z){!Z.includes("lose_context")&&!Z.includes("debug")&&F.getExtension(Z)})}}},Cf=["default","low-power","high-performance"];function Nf(N,F){var B=F>>2,Z=l()[B+6],ue={alpha:!!l()[B+0],depth:!!l()[B+1],stencil:!!l()[B+2],antialias:!!l()[B+3],premultipliedAlpha:!!l()[B+4],preserveDrawingBuffer:!!l()[B+5],powerPreference:Cf[Z],failIfMajorPerformanceCaveat:!!l()[B+7],majorVersion:l()[B+8],minorVersion:l()[B+9],enableExtensionsByDefault:l()[B+10],explicitSwapControl:l()[B+11],proxyContextToMainThread:l()[B+12],renderViaOffscreenBackBuffer:l()[B+13]},he=Fu(N);if(!he||ue.explicitSwapControl)return 0;var ye=yt.createContext(he,ue);return ye}function Tf(N,F){return Nf(N,F)}var Wi={mappings:{},buffers:[null,[],[]],printChar:function(N,F){var B=Wi.buffers[N];F===0||F===10?((N===1?ne:J)(qn(B,0)),B.length=0):B.push(F)},varargs:void 0,get:function(){Wi.varargs+=4;var N=l()[Wi.varargs-4>>2];return N},getStr:function(N){var F=un(N);return F},get64:function(N,F){return N}};function Wc(N){return $?jr(3,1,N):0}function Uc(N,F,B,Z,ue){if($)return jr(4,1,N,F,B,Z,ue)}function Gc(N,F,B,Z){if($)return jr(5,1,N,F,B,Z);for(var ue=0,he=0;he<B;he++){var ye=l()[F>>2],Te=l()[F+4>>2];F+=8;for(var vt=0;vt<Te;vt++)Wi.printChar(N,i()[ye+vt]);ue+=Te}return l()[Z>>2]=ue,0}function $f(N){De(N)}$e.init();var Hc,_f=[null,Lc,Vc,Wc,Uc,Gc],Ox=!1,qc={__clock_gettime:Jh,__emscripten_init_main_thread_js:ef,__emscripten_thread_cleanup:tf,__pthread_create_js:nf,_emscripten_default_pthread_stack_size:sf,_emscripten_notify_thread_queue:rf,abort:af,emscripten_check_blocking_allowed:of,emscripten_get_heap_max:Mc,emscripten_get_now:qr,emscripten_memcpy_big:uf,emscripten_num_logical_cores:lf,emscripten_receive_on_main_thread_js:cf,emscripten_resize_heap:pf,emscripten_set_canvas_element_size:vf,emscripten_unwind_to_js_event_loop:xf,emscripten_webgl_create_context:Tf,exit:Pc,fd_close:Wc,fd_seek:Uc,fd_write:Gc,memory:Ce||d.wasmMemory,setTempRet0:$f},Px=Wh(),Af=d.___wasm_call_ctors=function(){return(Af=d.___wasm_call_ctors=d.asm.__wasm_call_ctors).apply(null,arguments)},Ef=d._init=function(){return(Ef=d._init=d.asm.init).apply(null,arguments)},Rf=d._init_with_threads_count=function(){return(Rf=d._init_with_threads_count=d.asm.init_with_threads_count).apply(null,arguments)},Df=d._get_threads_count=function(){return(Df=d._get_threads_count=d.asm.get_threads_count).apply(null,arguments)},Ff=d._register_tensor=function(){return(Ff=d._register_tensor=d.asm.register_tensor).apply(null,arguments)},Of=d._dispose_data=function(){return(Of=d._dispose_data=d.asm.dispose_data).apply(null,arguments)},Pf=d._dispose=function(){return(Pf=d._dispose=d.asm.dispose).apply(null,arguments)},Lf=d._Abs=function(){return(Lf=d._Abs=d.asm.Abs).apply(null,arguments)},zf=d._Add=function(){return(zf=d._Add=d.asm.Add).apply(null,arguments)},Mf=d._AddN=function(){return(Mf=d._AddN=d.asm.AddN).apply(null,arguments)},Bf=d._All=function(){return(Bf=d._All=d.asm.All).apply(null,arguments)},Vf=d._Any=function(){return(Vf=d._Any=d.asm.Any).apply(null,arguments)},Wf=d._ArgMax=function(){return(Wf=d._ArgMax=d.asm.ArgMax).apply(null,arguments)},Uf=d._AvgPool=function(){return(Uf=d._AvgPool=d.asm.AvgPool).apply(null,arguments)},Gf=d._BatchMatMul=function(){return(Gf=d._BatchMatMul=d.asm.BatchMatMul).apply(null,arguments)},Hf=d._Ceil=function(){return(Hf=d._Ceil=d.asm.Ceil).apply(null,arguments)},qf=d._ClipByValue=function(){return(qf=d._ClipByValue=d.asm.ClipByValue).apply(null,arguments)},jf=d._Conv2D=function(){return(jf=d._Conv2D=d.asm.Conv2D).apply(null,arguments)},Kf=d._Conv2DBackpropInput=function(){return(Kf=d._Conv2DBackpropInput=d.asm.Conv2DBackpropInput).apply(null,arguments)},Xf=d._Cos=function(){return(Xf=d._Cos=d.asm.Cos).apply(null,arguments)},Yf=d._Cosh=function(){return(Yf=d._Cosh=d.asm.Cosh).apply(null,arguments)},Zf=d._CropAndResize=function(){return(Zf=d._CropAndResize=d.asm.CropAndResize).apply(null,arguments)},Qf=d._Cumprod=function(){return(Qf=d._Cumprod=d.asm.Cumprod).apply(null,arguments)},Jf=d._Cumsum=function(){return(Jf=d._Cumsum=d.asm.Cumsum).apply(null,arguments)},em=d._DepthToSpace=function(){return(em=d._DepthToSpace=d.asm.DepthToSpace).apply(null,arguments)},tm=d._DepthwiseConv2dNative=function(){return(tm=d._DepthwiseConv2dNative=d.asm.DepthwiseConv2dNative).apply(null,arguments)},nm=d._Elu=function(){return(nm=d._Elu=d.asm.Elu).apply(null,arguments)},sm=d._Equal=function(){return(sm=d._Equal=d.asm.Equal).apply(null,arguments)},rm=d._Exp=function(){return(rm=d._Exp=d.asm.Exp).apply(null,arguments)},am=d._FlipLeftRight=function(){return(am=d._FlipLeftRight=d.asm.FlipLeftRight).apply(null,arguments)},im=d._Floor=function(){return(im=d._Floor=d.asm.Floor).apply(null,arguments)},om=d._FloorDiv=function(){return(om=d._FloorDiv=d.asm.FloorDiv).apply(null,arguments)},um=d._FusedBatchNorm=function(){return(um=d._FusedBatchNorm=d.asm.FusedBatchNorm).apply(null,arguments)},lm=d._FusedConv2D=function(){return(lm=d._FusedConv2D=d.asm.FusedConv2D).apply(null,arguments)},jc=d._FusedDepthwiseConv2D=function(){return(jc=d._FusedDepthwiseConv2D=d.asm.FusedDepthwiseConv2D).apply(null,arguments)},Kc=d._Gather=function(){return(Kc=d._Gather=d.asm.Gather).apply(null,arguments)},Ou=d._GatherNd=function(){return(Ou=d._GatherNd=d.asm.GatherNd).apply(null,arguments)},cm=d._Greater=function(){return(cm=d._Greater=d.asm.Greater).apply(null,arguments)},dm=d._GreaterEqual=function(){return(dm=d._GreaterEqual=d.asm.GreaterEqual).apply(null,arguments)},Ui=d._LeakyRelu=function(){return(Ui=d._LeakyRelu=d.asm.LeakyRelu).apply(null,arguments)},Pu=d._Less=function(){return(Pu=d._Less=d.asm.Less).apply(null,arguments)},Lu=d._LessEqual=function(){return(Lu=d._LessEqual=d.asm.LessEqual).apply(null,arguments)},Lx=d._Log=function(){return(Lx=d._Log=d.asm.Log).apply(null,arguments)},Gi=d._LogicalAnd=function(){return(Gi=d._LogicalAnd=d.asm.LogicalAnd).apply(null,arguments)},Hi=d._LogicalNot=function(){return(Hi=d._LogicalNot=d.asm.LogicalNot).apply(null,arguments)},pm=d._LogicalOr=function(){return(pm=d._LogicalOr=d.asm.LogicalOr).apply(null,arguments)},G=d._LogicalXor=function(){return(G=d._LogicalXor=d.asm.LogicalXor).apply(null,arguments)},ee=d._Max=function(){return(ee=d._Max=d.asm.Max).apply(null,arguments)},ce=d._MaxPool=function(){return(ce=d._MaxPool=d.asm.MaxPool).apply(null,arguments)},ke=d._Maximum=function(){return(ke=d._Maximum=d.asm.Maximum).apply(null,arguments)},Qe=d._Mean=function(){return(Qe=d._Mean=d.asm.Mean).apply(null,arguments)},Je=d._Min=function(){return(Je=d._Min=d.asm.Min).apply(null,arguments)},Be=d._Minimum=function(){return(Be=d._Minimum=d.asm.Minimum).apply(null,arguments)},ze=d._MirrorPad=function(){return(ze=d._MirrorPad=d.asm.MirrorPad).apply(null,arguments)},_t=d._Multiply=function(){return(_t=d._Multiply=d.asm.Multiply).apply(null,arguments)},fs=d._Neg=function(){return(fs=d._Neg=d.asm.Neg).apply(null,arguments)},ms=d._NonMaxSuppressionV3=function(){return(ms=d._NonMaxSuppressionV3=d.asm.NonMaxSuppressionV3).apply(null,arguments)},qi=d._NonMaxSuppressionV4=function(){return(qi=d._NonMaxSuppressionV4=d.asm.NonMaxSuppressionV4).apply(null,arguments)},Kr=d._NonMaxSuppressionV5=function(){return(Kr=d._NonMaxSuppressionV5=d.asm.NonMaxSuppressionV5).apply(null,arguments)},hm=d._NotEqual=function(){return(hm=d._NotEqual=d.asm.NotEqual).apply(null,arguments)},pn=d._OneHot=function(){return(pn=d._OneHot=d.asm.OneHot).apply(null,arguments)},pr=d._PadV2=function(){return(pr=d._PadV2=d.asm.PadV2).apply(null,arguments)},Xc=d._Pow=function(){return(Xc=d._Pow=d.asm.Pow).apply(null,arguments)},l$=d._Prelu=function(){return(l$=d._Prelu=d.asm.Prelu).apply(null,arguments)},c$=d._Prod=function(){return(c$=d._Prod=d.asm.Prod).apply(null,arguments)},d$=d._RealDiv=function(){return(d$=d._RealDiv=d.asm.RealDiv).apply(null,arguments)},p$=d._Relu=function(){return(p$=d._Relu=d.asm.Relu).apply(null,arguments)},h$=d._Relu6=function(){return(h$=d._Relu6=d.asm.Relu6).apply(null,arguments)},f$=d._ResizeBilinear=function(){return(f$=d._ResizeBilinear=d.asm.ResizeBilinear).apply(null,arguments)},m$=d._ResizeNearestNeighbor=function(){return(m$=d._ResizeNearestNeighbor=d.asm.ResizeNearestNeighbor).apply(null,arguments)},g$=d._Reverse=function(){return(g$=d._Reverse=d.asm.Reverse).apply(null,arguments)},b$=d._RotateWithOffset=function(){return(b$=d._RotateWithOffset=d.asm.RotateWithOffset).apply(null,arguments)},y$=d._Round=function(){return(y$=d._Round=d.asm.Round).apply(null,arguments)},v$=d._Rsqrt=function(){return(v$=d._Rsqrt=d.asm.Rsqrt).apply(null,arguments)},x$=d._ScatterNd=function(){return(x$=d._ScatterNd=d.asm.ScatterNd).apply(null,arguments)},w$=d._SelectV2=function(){return(w$=d._SelectV2=d.asm.SelectV2).apply(null,arguments)},k$=d._Sigmoid=function(){return(k$=d._Sigmoid=d.asm.Sigmoid).apply(null,arguments)},S$=d._Sin=function(){return(S$=d._Sin=d.asm.Sin).apply(null,arguments)},I$=d._Softmax=function(){return(I$=d._Softmax=d.asm.Softmax).apply(null,arguments)},C$=d._SparseFillEmptyRows=function(){return(C$=d._SparseFillEmptyRows=d.asm.SparseFillEmptyRows).apply(null,arguments)},N$=d._SparseReshape=function(){return(N$=d._SparseReshape=d.asm.SparseReshape).apply(null,arguments)},T$=d._SparseSegmentReduction=function(){return(T$=d._SparseSegmentReduction=d.asm.SparseSegmentReduction).apply(null,arguments)},$$=d._Sqrt=function(){return($$=d._Sqrt=d.asm.Sqrt).apply(null,arguments)},_$=d._Square=function(){return(_$=d._Square=d.asm.Square).apply(null,arguments)},A$=d._SquaredDifference=function(){return(A$=d._SquaredDifference=d.asm.SquaredDifference).apply(null,arguments)},E$=d._Step=function(){return(E$=d._Step=d.asm.Step).apply(null,arguments)},R$=d._StridedSlice=function(){return(R$=d._StridedSlice=d.asm.StridedSlice).apply(null,arguments)},D$=d._Sub=function(){return(D$=d._Sub=d.asm.Sub).apply(null,arguments)},F$=d._Sum=function(){return(F$=d._Sum=d.asm.Sum).apply(null,arguments)},O$=d._Tan=function(){return(O$=d._Tan=d.asm.Tan).apply(null,arguments)},P$=d._Tanh=function(){return(P$=d._Tanh=d.asm.Tanh).apply(null,arguments)},L$=d._Tile=function(){return(L$=d._Tile=d.asm.Tile).apply(null,arguments)},z$=d._TopK=function(){return(z$=d._TopK=d.asm.TopK).apply(null,arguments)},M$=d._Transform=function(){return(M$=d._Transform=d.asm.Transform).apply(null,arguments)},B$=d._Transpose=function(){return(B$=d._Transpose=d.asm.Transpose).apply(null,arguments)},V$=d.__FusedMatMul=function(){return(V$=d.__FusedMatMul=d.asm._FusedMatMul).apply(null,arguments)},fm=d._malloc=function(){return(fm=d._malloc=d.asm.malloc).apply(null,arguments)},zx=d._free=function(){return(zx=d._free=d.asm.free).apply(null,arguments)},W$=d._emscripten_tls_init=function(){return(W$=d._emscripten_tls_init=d.asm.emscripten_tls_init).apply(null,arguments)},Mx=d.___errno_location=function(){return(Mx=d.___errno_location=d.asm.__errno_location).apply(null,arguments)},Yc=d._pthread_self=function(){return(Yc=d._pthread_self=d.asm.pthread_self).apply(null,arguments)},Bx=d._emscripten_main_thread_process_queued_calls=function(){return(Bx=d._emscripten_main_thread_process_queued_calls=d.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},U$=d.__emscripten_thread_crashed=function(){return(U$=d.__emscripten_thread_crashed=d.asm._emscripten_thread_crashed).apply(null,arguments)},Vx=d.__emscripten_thread_init=function(){return(Vx=d.__emscripten_thread_init=d.asm._emscripten_thread_init).apply(null,arguments)},G$=d._emscripten_current_thread_process_queued_calls=function(){return(G$=d._emscripten_current_thread_process_queued_calls=d.asm.emscripten_current_thread_process_queued_calls).apply(null,arguments)},H$=d._emscripten_main_browser_thread_id=function(){return(H$=d._emscripten_main_browser_thread_id=d.asm.emscripten_main_browser_thread_id).apply(null,arguments)},q$=d._emscripten_sync_run_in_main_thread_2=function(){return(q$=d._emscripten_sync_run_in_main_thread_2=d.asm.emscripten_sync_run_in_main_thread_2).apply(null,arguments)},Wx=d._emscripten_sync_run_in_main_thread_4=function(){return(Wx=d._emscripten_sync_run_in_main_thread_4=d.asm.emscripten_sync_run_in_main_thread_4).apply(null,arguments)},Ux=d._emscripten_run_in_main_runtime_thread_js=function(){return(Ux=d._emscripten_run_in_main_runtime_thread_js=d.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)},mm=d._emscripten_dispatch_to_thread_=function(){return(mm=d._emscripten_dispatch_to_thread_=d.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},gm=d.__emscripten_thread_free_data=function(){return(gm=d.__emscripten_thread_free_data=d.asm._emscripten_thread_free_data).apply(null,arguments)},j$=d.__emscripten_thread_exit=function(){return(j$=d.__emscripten_thread_exit=d.asm._emscripten_thread_exit).apply(null,arguments)},K$=d._memalign=function(){return(K$=d._memalign=d.asm.memalign).apply(null,arguments)},Gx=d._emscripten_stack_set_limits=function(){return(Gx=d._emscripten_stack_set_limits=d.asm.emscripten_stack_set_limits).apply(null,arguments)},bm=d.stackSave=function(){return(bm=d.stackSave=d.asm.stackSave).apply(null,arguments)},Zc=d.stackRestore=function(){return(Zc=d.stackRestore=d.asm.stackRestore).apply(null,arguments)},ji=d.stackAlloc=function(){return(ji=d.stackAlloc=d.asm.stackAlloc).apply(null,arguments)},X$=d.dynCall_iijjiiii=function(){return(X$=d.dynCall_iijjiiii=d.asm.dynCall_iijjiiii).apply(null,arguments)},Y$=d.dynCall_jiji=function(){return(Y$=d.dynCall_jiji=d.asm.dynCall_jiji).apply(null,arguments)},Hx=d.__emscripten_allow_main_runtime_queued_calls=21664;d.cwrap=on,d.keepRuntimeAlive=Gr,d.PThread=$e,d.PThread=$e,d.wasmMemory=Ce,d.ExitStatus=zu;var Qc;function zu(N){this.name="ExitStatus",this.message="Program terminated with exit("+N+")",this.status=N}hs=function N(){Qc||ym(),Qc||(hs=N)};function ym(N){if(N=N||b,dr>0)return;if($){h(d),Au(),postMessage({cmd:"loaded"});return}if(cn(),dr>0)return;function F(){Qc||(Qc=!0,d.calledRun=!0,!ot&&(Au(),h(d),d.onRuntimeInitialized&&d.onRuntimeInitialized(),Bh()))}d.setStatus?(d.setStatus("Running..."),setTimeout(function(){setTimeout(function(){d.setStatus("")},1),F()},1)):F()}d.run=ym;function Z$(N,F){if(an=N,!F&&$)throw Lc(N),"unwind";Gr()||Mh(),Q$(N)}function Q$(N){an=N,Gr()||($e.terminateAllThreads(),d.onExit&&d.onExit(N),ot=!0),v(N,new zu(N))}if(d.preInit)for(typeof d.preInit=="function"&&(d.preInit=[d.preInit]);d.preInit.length>0;)d.preInit.pop()();ym();var Jc;m&&(Jc={uncaughtException:process.listeners("uncaughtException").filter(function(N){return!m.uncaughtException.indexOf(N)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(N){return!m.unhandledRejection.indexOf(N)>-1})});var ed;if(typeof WasmBackendModule!="undefined")ed=WasmBackendModule;else if(typeof r!="undefined")ed=r;else throw new Error("Could not find wasm module in post.js");if(Jc){var J$=ed._dispose;ed._dispose=function(){J$(),Jc.uncaughtException.forEach(function(N){process.removeListener("uncaughtException",N)}),Jc.unhandledRejection.forEach(function(N){process.removeListener("unhandledRejection",N)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}}),I_=Bt({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var n=(()=>{var s=typeof document!="undefined"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename!="undefined"&&(s=s||__filename),function(r){r=r||{};var a=typeof r!="undefined"?r:{},i,o;a.ready=new Promise(function(G,ee){i=G,o=ee});var u;typeof process!="undefined"&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var l=Object.assign({},a),c=[],p="./this.program",d=(G,ee)=>{throw ee},h=typeof window=="object",f=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",g="";function b(G){return a.locateFile?a.locateFile(G,g):g+G}var y,v,x,k;function C(G){if(G instanceof Pu)return;R("exiting due to exception: "+G)}var $,A,E;m?(f?g=$d().dirname(g)+"/":g=__dirname+"/",E=()=>{A||($=hp(),A=$d())},y=function(ee,ce){return E(),ee=A.normalize(ee),$.readFileSync(ee,ce?void 0:"utf8")},x=G=>{var ee=y(G,!0);return ee.buffer||(ee=new Uint8Array(ee)),ee},v=(G,ee,ce)=>{E(),G=A.normalize(G),$.readFile(G,function(ke,Qe){ke?ce(ke):ee(Qe.buffer)})},process.argv.length>1&&(p=process.argv[1].replace(/\\/g,"/")),c=process.argv.slice(2),process.on("uncaughtException",function(G){if(!(G instanceof Pu))throw G}),process.on("unhandledRejection",function(G){throw G}),d=(G,ee)=>{if(_u())throw process.exitCode=G,ee;C(ee),process.exit(G)},a.inspect=function(){return"[Emscripten Module object]"}):(h||f)&&(f?g=self.location.href:typeof document!="undefined"&&document.currentScript&&(g=document.currentScript.src),s&&(g=s),g.indexOf("blob:")!==0?g=g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):g="",y=G=>{var ee=new XMLHttpRequest;return ee.open("GET",G,!1),ee.send(null),ee.responseText},f&&(x=G=>{var ee=new XMLHttpRequest;return ee.open("GET",G,!1),ee.responseType="arraybuffer",ee.send(null),new Uint8Array(ee.response)}),v=(G,ee,ce)=>{var ke=new XMLHttpRequest;ke.open("GET",G,!0),ke.responseType="arraybuffer",ke.onload=()=>{if(ke.status==200||ke.status==0&&ke.response){ee(ke.response);return}ce()},ke.onerror=ce,ke.send(null)},k=G=>document.title=G);var O=a.print||console.log.bind(console),R=a.printErr||console.warn.bind(console);Object.assign(a,l),l=null,a.arguments&&(c=a.arguments),a.thisProgram&&(p=a.thisProgram),a.quit&&(d=a.quit);var D=4;function T(G){T.shown||(T.shown={}),T.shown[G]||(T.shown[G]=1,R(G))}function L(G,ee){if(typeof WebAssembly.Function=="function"){for(var ce={i:"i32",j:"i64",f:"f32",d:"f64"},ke={parameters:[],results:ee[0]=="v"?[]:[ce[ee[0]]]},Qe=1;Qe<ee.length;++Qe)ke.parameters.push(ce[ee[Qe]]);return new WebAssembly.Function(ke,G)}var Je=[1,0,1,96],Be=ee.slice(0,1),ze=ee.slice(1),_t={i:127,j:126,f:125,d:124};Je.push(ze.length);for(var Qe=0;Qe<ze.length;++Qe)Je.push(_t[ze[Qe]]);Be=="v"?Je.push(0):Je=Je.concat([1,_t[Be]]),Je[1]=Je.length-2;var fs=new Uint8Array([0,97,115,109,1,0,0,0].concat(Je,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0])),ms=new WebAssembly.Module(fs),qi=new WebAssembly.Instance(ms,{e:{f:G}}),Kr=qi.exports.f;return Kr}var W=[],q;function j(){if(W.length)return W.pop();try{lr.grow(1)}catch(G){throw G instanceof RangeError?"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.":G}return lr.length-1}function X(G,ee){for(var ce=G;ce<G+ee;ce++){var ke=Ru(ce);ke&&q.set(ke,ce)}}var Q=0,ne=G=>{Q=G},J;a.wasmBinary&&(J=a.wasmBinary);var se=a.noExitRuntime||!0;typeof WebAssembly!="object"&&Ur("no native wasm support detected");var te,oe=!1,re;function le(G,ee){G||Ur(ee)}function ge(G){var ee=a["_"+G];return ee}function we(G,ee,ce,ke,Qe){var Je={string:function(pn){var pr=0;if(pn!=null&&pn!==0){var Xc=(pn.length<<2)+1;pr=Ou(Xc),nt(pn,pr,Xc)}return pr},array:function(pn){var pr=Ou(pn.length);return ot(pn,pr),pr}};function Be(pn){return ee==="string"?tt(pn):ee==="boolean"?Boolean(pn):pn}var ze=ge(G),_t=[],fs=0;if(ke)for(var ms=0;ms<ke.length;ms++){var qi=Je[ce[ms]];qi?(fs===0&&(fs=jc()),_t[ms]=qi(ke[ms])):_t[ms]=ke[ms]}var Kr=ze.apply(null,_t);function hm(pn){return fs!==0&&Kc(fs),Be(pn)}return Kr=hm(Kr),Kr}function Ie(G,ee,ce,ke){ce=ce||[];var Qe=ce.every(function(Be){return Be==="number"}),Je=ee!=="string";return Je&&Qe&&!ke?ge(G):function(){return we(G,ee,ce,arguments,ke)}}var De=1,Le=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):void 0;function Ye(G,ee,ce){for(var ke=ee+ce,Qe=ee;G[Qe]&&!(Qe>=ke);)++Qe;if(Qe-ee>16&&G.subarray&&Le)return Le.decode(G.subarray(ee,Qe));for(var Je="";ee<Qe;){var Be=G[ee++];if(!(Be&128)){Je+=String.fromCharCode(Be);continue}var ze=G[ee++]&63;if((Be&224)==192){Je+=String.fromCharCode((Be&31)<<6|ze);continue}var _t=G[ee++]&63;if((Be&240)==224?Be=(Be&15)<<12|ze<<6|_t:Be=(Be&7)<<18|ze<<12|_t<<6|G[ee++]&63,Be<65536)Je+=String.fromCharCode(Be);else{var fs=Be-65536;Je+=String.fromCharCode(55296|fs>>10,56320|fs&1023)}}return Je}function tt(G,ee){return G?Ye(on,G,ee):""}function Ze(G,ee,ce,ke){if(!(ke>0))return 0;for(var Qe=ce,Je=ce+ke-1,Be=0;Be<G.length;++Be){var ze=G.charCodeAt(Be);if(ze>=55296&&ze<=57343){var _t=G.charCodeAt(++Be);ze=65536+((ze&1023)<<10)|_t&1023}if(ze<=127){if(ce>=Je)break;ee[ce++]=ze}else if(ze<=2047){if(ce+1>=Je)break;ee[ce++]=192|ze>>6,ee[ce++]=128|ze&63}else if(ze<=65535){if(ce+2>=Je)break;ee[ce++]=224|ze>>12,ee[ce++]=128|ze>>6&63,ee[ce++]=128|ze&63}else{if(ce+3>=Je)break;ee[ce++]=240|ze>>18,ee[ce++]=128|ze>>12&63,ee[ce++]=128|ze>>6&63,ee[ce++]=128|ze&63}}return ee[ce]=0,ce-Qe}function nt(G,ee,ce){return Ze(G,on,ee,ce)}function Ce(G){for(var ee=0,ce=0;ce<G.length;++ce){var ke=G.charCodeAt(ce);ke>=55296&&ke<=57343&&(ke=65536+((ke&1023)<<10)|G.charCodeAt(++ce)&1023),ke<=127?++ee:ke<=2047?ee+=2:ke<=65535?ee+=3:ee+=4}return ee}var ct=typeof TextDecoder!="undefined"?new TextDecoder("utf-16le"):void 0;function ot(G,ee){Ft.set(G,ee)}function an(G,ee,ce){for(var ke=0;ke<G.length;++ke)Ft[ee++>>0]=G.charCodeAt(ke);ce||(Ft[ee>>0]=0)}function $t(G,ee){return G%ee>0&&(G+=ee-G%ee),G}var On,Ft,on,Pn,Ln,sn,qn,un,Hs;function qs(G){On=G,a.HEAP8=Ft=new Int8Array(G),a.HEAP16=Pn=new Int16Array(G),a.HEAP32=sn=new Int32Array(G),a.HEAPU8=on=new Uint8Array(G),a.HEAPU16=Ln=new Uint16Array(G),a.HEAPU32=qn=new Uint32Array(G),a.HEAPF32=un=new Float32Array(G),a.HEAPF64=Hs=new Float64Array(G)}var Oi=a.INITIAL_MEMORY||16777216,lr,js=[],$u=[],Pi=[],ln=!1,wc=!1,kc=0;function _u(){return se||kc>0}function Sc(){if(a.preRun)for(typeof a.preRun=="function"&&(a.preRun=[a.preRun]);a.preRun.length;)Nc(a.preRun.shift());Eu(js)}function Ic(){ln=!0,Eu($u)}function Nx(){wc=!0}function Cc(){if(a.postRun)for(typeof a.postRun=="function"&&(a.postRun=[a.postRun]);a.postRun.length;)Tc(a.postRun.shift());Eu(Pi)}function Nc(G){js.unshift(G)}function ps(G){$u.unshift(G)}function Tc(G){Pi.unshift(G)}var jn=0,Li=null,cr=null;function Lh(G){jn++,a.monitorRunDependencies&&a.monitorRunDependencies(jn)}function $c(G){if(jn--,a.monitorRunDependencies&&a.monitorRunDependencies(jn),jn==0&&(Li!==null&&(clearInterval(Li),Li=null),cr)){var ee=cr;cr=null,ee()}}a.preloadedImages={},a.preloadedAudios={};function Ur(G){a.onAbort&&a.onAbort(G),G="Aborted("+G+")",R(G),oe=!0,re=1,G+=". Build with -s ASSERTIONS=1 for more info.";var ee=new WebAssembly.RuntimeError(G);throw o(ee),ee}var zh="data:application/octet-stream;base64,";function _c(G){return G.startsWith(zh)}function Gr(G){return G.startsWith("file://")}var cn;cn="tfjs-backend-wasm.wasm",_c(cn)||(cn=b(cn));function Au(G){try{if(G==cn&&J)return new Uint8Array(J);if(x)return x(G);throw"both async and sync fetching of the wasm failed"}catch(ee){Ur(ee)}}function Mh(){if(!J&&(h||f)){if(typeof fetch=="function"&&!Gr(cn))return fetch(cn,{credentials:"same-origin"}).then(function(G){if(!G.ok)throw"failed to load wasm binary file at '"+cn+"'";return G.arrayBuffer()}).catch(function(){return Au(cn)});if(v)return new Promise(function(G,ee){v(cn,function(ce){G(new Uint8Array(ce))},ee)})}return Promise.resolve().then(function(){return Au(cn)})}function Bh(){var G={env:Bi,wasi_snapshot_preview1:Bi};function ee(Be,ze){var _t=Be.exports;a.asm=_t,te=a.asm.memory,qs(te.buffer),lr=a.asm.__indirect_function_table,ps(a.asm.__wasm_call_ctors),$c("wasm-instantiate")}Lh("wasm-instantiate");function ce(Be){ee(Be.instance)}function ke(Be){return Mh().then(function(ze){return WebAssembly.instantiate(ze,G)}).then(function(ze){return ze}).then(Be,function(ze){R("failed to asynchronously prepare wasm: "+ze),Ur(ze)})}function Qe(){return!J&&typeof WebAssembly.instantiateStreaming=="function"&&!_c(cn)&&!Gr(cn)&&typeof fetch=="function"?fetch(cn,{credentials:"same-origin"}).then(function(Be){var ze=WebAssembly.instantiateStreaming(Be,G);return ze.then(ce,function(_t){return R("wasm streaming compile failed: "+_t),R("falling back to ArrayBuffer instantiation"),ke(ce)})}):ke(ce)}if(a.instantiateWasm)try{var Je=a.instantiateWasm(G,ee);return Je}catch(Be){return R("Module.instantiateWasm callback failed with error: "+Be),!1}return Qe().catch(o),{}}var Tx,$x;function Eu(G){for(;G.length>0;){var ee=G.shift();if(typeof ee=="function"){ee(a);continue}var ce=ee.func;typeof ce=="number"?ee.arg===void 0?Ru(ce)():Ru(ce)(ee.arg):ce(ee.arg===void 0?null:ee.arg)}}function dr(G){return G}function Ac(G){var ee=/\b_Z[\w\d_]+/g;return G.replace(ee,function(ce){var ke=ce;return ce===ke?ce:ke+" ["+ce+"]"})}var hs=[];function Ru(G){var ee=hs[G];return ee||(G>=hs.length&&(hs.length=G+1),hs[G]=ee=lr.get(G)),ee}function _x(){var G=new Error;if(!G.stack){try{throw new Error}catch(ee){G=ee}if(!G.stack)return"(no stack trace available)"}return G.stack.toString()}function zi(G,ee){lr.set(G,ee),hs[G]=ee}function Vh(){Ur("")}function Ec(G,ee,ce){on.copyWithin(G,ee,ee+ce)}function Rc(){return 2147483648}function dn(G){try{return te.grow(G-On.byteLength+65535>>>16),qs(te.buffer),1}catch(ee){}}function Dc(G){var ee=on.length;G=G>>>0;var ce=Rc();if(G>ce)return!1;for(var ke=1;ke<=4;ke*=2){var Qe=ee*(1+.2/ke);Qe=Math.min(Qe,G+100663296);var Je=Math.min(ce,$t(Math.max(G,Qe),65536)),Be=dn(Je);if(Be)return!0}return!1}var Mi={mappings:{},buffers:[null,[],[]],printChar:function(G,ee){var ce=Mi.buffers[G];ee===0||ee===10?((G===1?O:R)(Ye(ce,0)),ce.length=0):ce.push(ee)},varargs:void 0,get:function(){Mi.varargs+=4;var G=sn[Mi.varargs-4>>2];return G},getStr:function(G){var ee=tt(G);return ee},get64:function(G,ee){return G}};function Wh(G){return 0}function Ax(G,ee,ce,ke,Qe){}function Ex(G,ee,ce,ke){for(var Qe=0,Je=0;Je<ce;Je++){var Be=sn[ee>>2],ze=sn[ee+4>>2];ee+=8;for(var _t=0;_t<ze;_t++)Mi.printChar(G,on[Be+_t]);Qe+=ze}return sn[ke>>2]=Qe,0}function Uh(G){ne(G)}var Fc=!1,Bi={abort:Vh,emscripten_memcpy_big:Ec,emscripten_resize_heap:Dc,fd_close:Wh,fd_seek:Ax,fd_write:Ex,setTempRet0:Uh},u$=Bh(),Rx=a.___wasm_call_ctors=function(){return(Rx=a.___wasm_call_ctors=a.asm.__wasm_call_ctors).apply(null,arguments)},Gh=a._init=function(){return(Gh=a._init=a.asm.init).apply(null,arguments)},Hh=a._init_with_threads_count=function(){return(Hh=a._init_with_threads_count=a.asm.init_with_threads_count).apply(null,arguments)},Oc=a._get_threads_count=function(){return(Oc=a._get_threads_count=a.asm.get_threads_count).apply(null,arguments)},Pc=a._register_tensor=function(){return(Pc=a._register_tensor=a.asm.register_tensor).apply(null,arguments)},qh=a._dispose_data=function(){return(qh=a._dispose_data=a.asm.dispose_data).apply(null,arguments)},$e=a._dispose=function(){return($e=a._dispose=a.asm.dispose).apply(null,arguments)},jh=a._Abs=function(){return(jh=a._Abs=a.asm.Abs).apply(null,arguments)},Lc=a._Add=function(){return(Lc=a._Add=a.asm.Add).apply(null,arguments)},Hr=a._AddN=function(){return(Hr=a._AddN=a.asm.AddN).apply(null,arguments)},Vi=a._All=function(){return(Vi=a._All=a.asm.All).apply(null,arguments)},Kh=a._Any=function(){return(Kh=a._Any=a.asm.Any).apply(null,arguments)},Dx=a._ArgMax=function(){return(Dx=a._ArgMax=a.asm.ArgMax).apply(null,arguments)},Xh=a._AvgPool=function(){return(Xh=a._AvgPool=a.asm.AvgPool).apply(null,arguments)},Fx=a._BatchMatMul=function(){return(Fx=a._BatchMatMul=a.asm.BatchMatMul).apply(null,arguments)},qr=a._Ceil=function(){return(qr=a._Ceil=a.asm.Ceil).apply(null,arguments)},Yh=a._ClipByValue=function(){return(Yh=a._ClipByValue=a.asm.ClipByValue).apply(null,arguments)},Zh=a._Conv2D=function(){return(Zh=a._Conv2D=a.asm.Conv2D).apply(null,arguments)},Qh=a._Conv2DBackpropInput=function(){return(Qh=a._Conv2DBackpropInput=a.asm.Conv2DBackpropInput).apply(null,arguments)},Jh=a._Cos=function(){return(Jh=a._Cos=a.asm.Cos).apply(null,arguments)},ef=a._Cosh=function(){return(ef=a._Cosh=a.asm.Cosh).apply(null,arguments)},tf=a._CropAndResize=function(){return(tf=a._CropAndResize=a.asm.CropAndResize).apply(null,arguments)},zc=a._Cumprod=function(){return(zc=a._Cumprod=a.asm.Cumprod).apply(null,arguments)},nf=a._Cumsum=function(){return(nf=a._Cumsum=a.asm.Cumsum).apply(null,arguments)},sf=a._DepthToSpace=function(){return(sf=a._DepthToSpace=a.asm.DepthToSpace).apply(null,arguments)},rf=a._DepthwiseConv2dNative=function(){return(rf=a._DepthwiseConv2dNative=a.asm.DepthwiseConv2dNative).apply(null,arguments)},af=a._Elu=function(){return(af=a._Elu=a.asm.Elu).apply(null,arguments)},of=a._Equal=function(){return(of=a._Equal=a.asm.Equal).apply(null,arguments)},Mc=a._Exp=function(){return(Mc=a._Exp=a.asm.Exp).apply(null,arguments)},uf=a._FlipLeftRight=function(){return(uf=a._FlipLeftRight=a.asm.FlipLeftRight).apply(null,arguments)},lf=a._Floor=function(){return(lf=a._Floor=a.asm.Floor).apply(null,arguments)},jr=a._FloorDiv=function(){return(jr=a._FloorDiv=a.asm.FloorDiv).apply(null,arguments)},Du=a._FusedBatchNorm=function(){return(Du=a._FusedBatchNorm=a.asm.FusedBatchNorm).apply(null,arguments)},cf=a._FusedConv2D=function(){return(cf=a._FusedConv2D=a.asm.FusedConv2D).apply(null,arguments)},df=a._FusedDepthwiseConv2D=function(){return(df=a._FusedDepthwiseConv2D=a.asm.FusedDepthwiseConv2D).apply(null,arguments)},pf=a._Gather=function(){return(pf=a._Gather=a.asm.Gather).apply(null,arguments)},Me=a._GatherNd=function(){return(Me=a._GatherNd=a.asm.GatherNd).apply(null,arguments)},hf=a._Greater=function(){return(hf=a._Greater=a.asm.Greater).apply(null,arguments)},ff=a._GreaterEqual=function(){return(ff=a._GreaterEqual=a.asm.GreaterEqual).apply(null,arguments)},mf=a._LeakyRelu=function(){return(mf=a._LeakyRelu=a.asm.LeakyRelu).apply(null,arguments)},gf=a._Less=function(){return(gf=a._Less=a.asm.Less).apply(null,arguments)},bf=a._LessEqual=function(){return(bf=a._LessEqual=a.asm.LessEqual).apply(null,arguments)},yf=a._Log=function(){return(yf=a._Log=a.asm.Log).apply(null,arguments)},Fu=a._LogicalAnd=function(){return(Fu=a._LogicalAnd=a.asm.LogicalAnd).apply(null,arguments)},Bc=a._LogicalNot=function(){return(Bc=a._LogicalNot=a.asm.LogicalNot).apply(null,arguments)},Vc=a._LogicalOr=function(){return(Vc=a._LogicalOr=a.asm.LogicalOr).apply(null,arguments)},vf=a._LogicalXor=function(){return(vf=a._LogicalXor=a.asm.LogicalXor).apply(null,arguments)},xf=a._Max=function(){return(xf=a._Max=a.asm.Max).apply(null,arguments)},wf=a._MaxPool=function(){return(wf=a._MaxPool=a.asm.MaxPool).apply(null,arguments)},kf=a._Maximum=function(){return(kf=a._Maximum=a.asm.Maximum).apply(null,arguments)},Sf=a._Mean=function(){return(Sf=a._Mean=a.asm.Mean).apply(null,arguments)},If=a._Min=function(){return(If=a._Min=a.asm.Min).apply(null,arguments)},yt=a._Minimum=function(){return(yt=a._Minimum=a.asm.Minimum).apply(null,arguments)},Cf=a._MirrorPad=function(){return(Cf=a._MirrorPad=a.asm.MirrorPad).apply(null,arguments)},Nf=a._Multiply=function(){return(Nf=a._Multiply=a.asm.Multiply).apply(null,arguments)},Tf=a._Neg=function(){return(Tf=a._Neg=a.asm.Neg).apply(null,arguments)},Wi=a._NonMaxSuppressionV3=function(){return(Wi=a._NonMaxSuppressionV3=a.asm.NonMaxSuppressionV3).apply(null,arguments)},Wc=a._NonMaxSuppressionV4=function(){return(Wc=a._NonMaxSuppressionV4=a.asm.NonMaxSuppressionV4).apply(null,arguments)},Uc=a._NonMaxSuppressionV5=function(){return(Uc=a._NonMaxSuppressionV5=a.asm.NonMaxSuppressionV5).apply(null,arguments)},Gc=a._NotEqual=function(){return(Gc=a._NotEqual=a.asm.NotEqual).apply(null,arguments)},$f=a._OneHot=function(){return($f=a._OneHot=a.asm.OneHot).apply(null,arguments)},Hc=a._PadV2=function(){return(Hc=a._PadV2=a.asm.PadV2).apply(null,arguments)},_f=a._Pow=function(){return(_f=a._Pow=a.asm.Pow).apply(null,arguments)},Ox=a._Prelu=function(){return(Ox=a._Prelu=a.asm.Prelu).apply(null,arguments)},qc=a._Prod=function(){return(qc=a._Prod=a.asm.Prod).apply(null,arguments)},Px=a._RealDiv=function(){return(Px=a._RealDiv=a.asm.RealDiv).apply(null,arguments)},Af=a._Relu=function(){return(Af=a._Relu=a.asm.Relu).apply(null,arguments)},Ef=a._Relu6=function(){return(Ef=a._Relu6=a.asm.Relu6).apply(null,arguments)},Rf=a._ResizeBilinear=function(){return(Rf=a._ResizeBilinear=a.asm.ResizeBilinear).apply(null,arguments)},Df=a._ResizeNearestNeighbor=function(){return(Df=a._ResizeNearestNeighbor=a.asm.ResizeNearestNeighbor).apply(null,arguments)},Ff=a._Reverse=function(){return(Ff=a._Reverse=a.asm.Reverse).apply(null,arguments)},Of=a._RotateWithOffset=function(){return(Of=a._RotateWithOffset=a.asm.RotateWithOffset).apply(null,arguments)},Pf=a._Round=function(){return(Pf=a._Round=a.asm.Round).apply(null,arguments)},Lf=a._Rsqrt=function(){return(Lf=a._Rsqrt=a.asm.Rsqrt).apply(null,arguments)},zf=a._ScatterNd=function(){return(zf=a._ScatterNd=a.asm.ScatterNd).apply(null,arguments)},Mf=a._SelectV2=function(){return(Mf=a._SelectV2=a.asm.SelectV2).apply(null,arguments)},Bf=a._Sigmoid=function(){return(Bf=a._Sigmoid=a.asm.Sigmoid).apply(null,arguments)},Vf=a._Sin=function(){return(Vf=a._Sin=a.asm.Sin).apply(null,arguments)},Wf=a._Softmax=function(){return(Wf=a._Softmax=a.asm.Softmax).apply(null,arguments)},Uf=a._SparseFillEmptyRows=function(){return(Uf=a._SparseFillEmptyRows=a.asm.SparseFillEmptyRows).apply(null,arguments)},Gf=a._SparseReshape=function(){return(Gf=a._SparseReshape=a.asm.SparseReshape).apply(null,arguments)},Hf=a._SparseSegmentReduction=function(){return(Hf=a._SparseSegmentReduction=a.asm.SparseSegmentReduction).apply(null,arguments)},qf=a._Sqrt=function(){return(qf=a._Sqrt=a.asm.Sqrt).apply(null,arguments)},jf=a._Square=function(){return(jf=a._Square=a.asm.Square).apply(null,arguments)},Kf=a._SquaredDifference=function(){return(Kf=a._SquaredDifference=a.asm.SquaredDifference).apply(null,arguments)},Xf=a._Step=function(){return(Xf=a._Step=a.asm.Step).apply(null,arguments)},Yf=a._StridedSlice=function(){return(Yf=a._StridedSlice=a.asm.StridedSlice).apply(null,arguments)},Zf=a._Sub=function(){return(Zf=a._Sub=a.asm.Sub).apply(null,arguments)},Qf=a._Sum=function(){return(Qf=a._Sum=a.asm.Sum).apply(null,arguments)},Jf=a._Tan=function(){return(Jf=a._Tan=a.asm.Tan).apply(null,arguments)},em=a._Tanh=function(){return(em=a._Tanh=a.asm.Tanh).apply(null,arguments)},tm=a._Tile=function(){return(tm=a._Tile=a.asm.Tile).apply(null,arguments)},nm=a._TopK=function(){return(nm=a._TopK=a.asm.TopK).apply(null,arguments)},sm=a._Transform=function(){return(sm=a._Transform=a.asm.Transform).apply(null,arguments)},rm=a._Transpose=function(){return(rm=a._Transpose=a.asm.Transpose).apply(null,arguments)},am=a.__FusedMatMul=function(){return(am=a.__FusedMatMul=a.asm._FusedMatMul).apply(null,arguments)},im=a._malloc=function(){return(im=a._malloc=a.asm.malloc).apply(null,arguments)},om=a._free=function(){return(om=a._free=a.asm.free).apply(null,arguments)},um=a.___errno_location=function(){return(um=a.___errno_location=a.asm.__errno_location).apply(null,arguments)},lm=a._emscripten_main_thread_process_queued_calls=function(){return(lm=a._emscripten_main_thread_process_queued_calls=a.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},jc=a.stackSave=function(){return(jc=a.stackSave=a.asm.stackSave).apply(null,arguments)},Kc=a.stackRestore=function(){return(Kc=a.stackRestore=a.asm.stackRestore).apply(null,arguments)},Ou=a.stackAlloc=function(){return(Ou=a.stackAlloc=a.asm.stackAlloc).apply(null,arguments)},cm=a.dynCall_iijjiiii=function(){return(cm=a.dynCall_iijjiiii=a.asm.dynCall_iijjiiii).apply(null,arguments)},dm=a.dynCall_jiji=function(){return(dm=a.dynCall_jiji=a.asm.dynCall_jiji).apply(null,arguments)};a.cwrap=Ie;var Ui;function Pu(G){this.name="ExitStatus",this.message="Program terminated with exit("+G+")",this.status=G}cr=function G(){Ui||Lu(),Ui||(cr=G)};function Lu(G){if(G=G||c,jn>0||(Sc(),jn>0))return;function ee(){Ui||(Ui=!0,a.calledRun=!0,!oe&&(Ic(),i(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),Cc()))}a.setStatus?(a.setStatus("Running..."),setTimeout(function(){setTimeout(function(){a.setStatus("")},1),ee()},1)):ee()}a.run=Lu;function Lx(G){re=G,_u()||(a.onExit&&a.onExit(G),oe=!0),d(G,new Pu(G))}if(a.preInit)for(typeof a.preInit=="function"&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();Lu();var Gi;u&&(Gi={uncaughtException:process.listeners("uncaughtException").filter(function(G){return!u.uncaughtException.indexOf(G)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(G){return!u.unhandledRejection.indexOf(G)>-1})});var Hi;if(typeof r!="undefined")Hi=r;else if(typeof WasmBackendModuleThreadedSimd!="undefined")Hi=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(Gi){var pm=Hi._dispose;Hi._dispose=function(){pm(),Gi.uncaughtException.forEach(function(G){process.removeListener("uncaughtException",G)}),Gi.unhandledRejection.forEach(function(G){process.removeListener("unhandledRejection",G)})}}return r.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}}),C_=1e-7,N_=1e-4,fp=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},xl=class{refCount(e){return Kn("refCount")}incRef(e){return Kn("incRef")}timerAvailable(){return!0}time(e){return Kn("time")}read(e){return Kn("read")}readSync(e){return Kn("readSync")}readToGPU(e,t){return Kn("readToGPU")}numDataIds(){return Kn("numDataIds")}disposeData(e,t){return Kn("disposeData")}write(e,t,n){return Kn("write")}move(e,t,n,s,r){return Kn("move")}memory(){return Kn("memory")}floatPrecision(){return Kn("floatPrecision")}epsilon(){return this.floatPrecision()===32?C_:N_}dispose(){return Kn("dispose")}};function Kn(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Ok(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,_d(e,t,n)}function T_(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,_d(e,n,s),_d(t,n,s)}function rl(e,t,n){return Math.max(e,Math.min(t,n))}function $_(e){return e%2===0?e:e+1}function _d(e,t,n){let s=e[t];e[t]=e[n],e[n]=s}function __(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function A_(e,t){let n=Math.random();return t*n+(1-n)*e}function E_(e,t){let n=0;for(let s=0;s<e.length;s++){let r=Number(e[s])-Number(t[s]);n+=r*r}return n}function P(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function Qn(e,t,n=""){P(Ar(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Aa(e){P(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function fa(e,t=[],n=!1){if(t==null&&(t=[]),Array.isArray(e)||rn(e)&&!n)for(let s=0;s<e.length;++s)fa(e[s],t,n);else t.push(e);return t}function ht(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function R_(e){return e.length===0}function Ar(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function lo(e){return e%1===0}function D_(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function F_(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function O_(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Ok(t),t}function el(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function P_(e,t=s=>0,n){return new Promise((s,r)=>{let a=0,i=()=>{if(e()){s();return}a++;let o=t(a);if(n!=null&&a>=n){r();return}setTimeout(i,o)};i()})}function L_(e,t){let n=1,s=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(e[a]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${a}`);s=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(s===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[s]=t/n,r}function ls(e,t){let n=t.length;return e=e==null?t.map((s,r)=>r):[].concat(e),P(e.every(s=>s>=-n&&s<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),P(e.every(s=>lo(s)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(s=>s<0?n+s:s)}function Pk(e,t){let n=[],s=[],r=t!=null&&Array.isArray(t)&&t.length===0,a=t==null||r?null:ls(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(a!=null){if(a[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(a[i]==null||a[i]>o)&&e[o]===1&&(n.push(e[o]),s.push(o)),a[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),s.push(o))}return{newShape:n,keptDims:s}}function Lk(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else throw new Error(`Unknown data type ${e}`);return n}function zk(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function Mk(e,t){for(let n=0;n<e.length;n++){let s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Bk(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function z_(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function rn(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function zm(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function Vk(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function fr(e){return typeof e=="string"||e instanceof String}function Wk(e){return typeof e=="boolean"}function Uk(e){return typeof e=="number"}function mp(e){return Array.isArray(e)?mp(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Uk(e)?"float32":fr(e)?"string":Wk(e)?"bool":"float32"}function Ad(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Ed(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function yo(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function Gk(e,t,n,s=!1){let r=new Array;if(t.length===1){let a=t[0]*(s?2:1);for(let i=0;i<a;i++)r[i]=n[e+i]}else{let a=t[0],i=t.slice(1),o=i.reduce((u,l)=>u*l)*(s?2:1);for(let u=0;u<a;u++)r[u]=Gk(e+u*o,i,n,s)}return r}function ro(e,t,n=!1){if(e.length===0)return t[0];let s=e.reduce((r,a)=>r*a)*(n?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Gk(0,e,t,n)}function Gg(e,t){let n=gp(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function gp(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function M_(e,t){let n=e.reduce((s,r)=>s*r,1);if(t==null||t==="float32")return ro(e,new Float32Array(n));if(t==="int32")return ro(e,new Int32Array(n));if(t==="bool")return ro(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Hg(e){e.forEach(t=>{P(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function B_(e,t,n){if(t===0)return 0;if(t===1)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function V_(e,t,n){if(t===0)return[];if(t===1)return[e];let s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function qg(e){return e&&e.then&&typeof e.then=="function"}var jx="tfjsflags",W_=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=U_,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let s=this.urlFlags[e];K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(qg(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;let e=this.getQueryParams(this.global.location.search);jx in e&&e[jx].split(",").forEach(n=>{let[s,r]=n.split(":");this.urlFlags[s]=H_(s,r)})}};function U_(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...s)=>(G_(t,s[0],s[1]),s.join("="))),t}function G_(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function H_(e,t){if(t=t.toLowerCase(),t==="true"||t==="false")return t==="true";if(`${+t}`===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function K(){return bp}var bp=null;function q_(e){bp=e}var vm;function Hk(){if(vm==null){let e;if(typeof window!="undefined")e=window;else if(typeof global!="undefined")e=global;else if(typeof process!="undefined")e=process;else if(typeof self!="undefined")e=self;else throw new Error("Could not find a global object");vm=e}return vm}function j_(){let e=Hk();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function jg(e,t){let n=j_();if(n.has(e))return n.get(e);{let s=t();return n.set(e,s),n.get(e)}}var vo="Abs",wl="Acos",kl="Acosh",Er="Add",Ea="AddN",Sl="All",Il="Any",Ra="ArgMax",Cl="ArgMin",Nl="Asin",Tl="Asinh",$l="Atan",_l="Atanh",Al="Atan2",Da="AvgPool",Kg="AvgPoolGrad",yp="AvgPool3D",Xg="AvgPool3DGrad",Fa="BatchMatMul",xo="BatchToSpaceND",Yg="Bincount",K_="BroadcastTo",Zg="BroadcastArgs",Oa="Cast",Pa="Ceil",Rr="ClipByValue",vp="Complex",xp="ComplexAbs",wo="Concat",La="Conv2D",Qg="Conv2DBackpropFilter",za="Conv2DBackpropInput",wp="Conv3D",Jg="Conv3DBackpropFilterV2",eb="Conv3DBackpropInputV2",Ma="Cos",Ba="Cosh",ko="Cumprod",Va="Cumsum",So="CropAndResize",tb="DenseBincount",Io="DepthToSpace",Wa="DepthwiseConv2dNative",nb="DepthwiseConv2dNativeBackpropFilter",sb="DepthwiseConv2dNativeBackpropInput",rb="Diag",kp="Dilation2D",Mm="Dilation2DBackpropInput",Bm="Dilation2DBackpropFilter",Ua="RealDiv",Sp="Einsum",Ga="Elu",ab="EluGrad",El="Erf",Co="Equal",Ha="Exp",No="ExpandDims",To="Expm1",ib="FFT",Rl="Fill",$o="FlipLeftRight",qa="Floor",ja="FloorDiv",Ka="FusedBatchNorm",_o="GatherV2",Ao="GatherNd",Eo="Greater",Xa="GreaterEqual",Ya="Identity",ob="IFFT",Ip="Imag",Dl="IsFinite",Fl="IsInf",Ol="IsNan",Za="LeakyRelu",Ro="Less",Do="LessEqual",ub="LinSpace",Qa="Log",Pl="Log1p",Fo="LogicalAnd",Oo="LogicalNot",Ll="LogicalOr",X_="LogicalXor",Y_="LogSoftmax";var Cp="LRN",lb="LRNGrad",Ja="Max",ei="Maximum",ti="MaxPool",cb="MaxPoolGrad",Np="MaxPool3D",db="MaxPool3DGrad",pb="MaxPoolWithArgmax",ni="Mean",si="Min",ri="Minimum",ai="MirrorPad",zl="Mod",hb="Multinomial",ii="Multiply",Po="Neg",Lo="NotEqual",zo="NonMaxSuppressionV3",Ml="NonMaxSuppressionV4",Mo="NonMaxSuppressionV5",Bo="OnesLike",Vo="OneHot",Wo="Pack",oi="PadV2";var ui="Pow",li="Prelu",ci="Prod",Bl="Range",Tp="Real",Vl="Reciprocal",di="Relu",Uo="Reshape",pi="ResizeNearestNeighbor",fb="ResizeNearestNeighborGrad",hi="ResizeBilinear",mb="ResizeBilinearGrad",fi="Relu6",Go="Reverse",Ho="Round",mi="Rsqrt",qo="ScatterNd",gb="SearchSorted",jo="Select",Wl="Selu",Ko="Slice",gi="Sin",Xo="Sinh",Ul="Sign",bi="Sigmoid",Gl="Softplus",yi="Sqrt",vi="Sum",Yo="SpaceToBatchND",Zo="SplitV",xi="Softmax",$p="SparseFillEmptyRows",Hl="SparseReshape",_p="SparseSegmentMean",Ap="SparseSegmentSum",Ep="SparseToDense",wi="SquaredDifference",ql="Square",Qo="StridedSlice",jl="StringNGrams",Rp="StringSplit",Dp="StringToHashBucketFast",ki="Sub",Jo="Tan",Si="Tanh",Dr="Tile",eu="TopK",tu="Transform",Js="Transpose",bb="Unique",nu="Unpack",Fp="UnsortedSegmentSum";var su="ZerosLike",Ii="Step",Rd="FromPixels",ru="RotateWithOffset",ma="_FusedMatMul",ga="FusedConv2D",ba="FusedDepthwiseConv2D";function hr(...e){K().getBool("IS_TEST")||K().getBool("PROD")||console.warn(...e)}function Z_(...e){K().getBool("IS_TEST")||K().getBool("PROD")||console.log(...e)}var Dd=jg("kernelRegistry",()=>new Map),Vm=jg("gradRegistry",()=>new Map);function Wm(e,t){let n=qk(e,t);return Dd.get(n)}function Kx(e){return Vm.get(e)}function Fd(e){let t=Dd.entries(),n=[];for(;;){let{done:s,value:r}=t.next();if(s)break;let[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function au(e){let{kernelName:t,backendName:n}=e,s=qk(t,n);Dd.has(s)&&hr(`The kernel '${t}' for backend '${n}' is already registered`),Dd.set(s,e)}function Q_(e){let{kernelName:t}=e;Vm.has(t)&&K().getBool("DEBUG")&&hr(`Overriding the gradient for '${t}'`),Vm.set(t,e)}function qk(e,t){return`${t}_${e}`}var w={};Ee(w,{arraysEqual:()=>Ar,assert:()=>P,assertNonNegativeIntegerDimensions:()=>Hg,assertNonNull:()=>Aa,assertShapesMatch:()=>Qn,bytesFromStringArray:()=>Vk,bytesPerElement:()=>zm,checkConversionForErrors:()=>Mk,clamp:()=>rl,computeStrides:()=>yo,createScalarValue:()=>rA,createShuffledIndices:()=>O_,decodeString:()=>Od,distSquared:()=>E_,encodeString:()=>Xl,fetch:()=>iA,fingerPrint64:()=>sA,flatten:()=>fa,getArrayFromDType:()=>zk,getTypedArrayFromDType:()=>Lk,hasEncodingLoss:()=>z_,hexToLong:()=>Kl,indexToLoc:()=>V_,inferDtype:()=>mp,inferFromImplicitShape:()=>L_,isBoolean:()=>Wk,isFunction:()=>Ad,isInt:()=>lo,isNumber:()=>Uk,isPromise:()=>qg,isScalarShape:()=>R_,isString:()=>fr,isTypedArray:()=>rn,isValidDtype:()=>Bk,locToIndex:()=>B_,makeOnesTypedArray:()=>Gg,makeZerosNestedTypedArray:()=>M_,makeZerosTypedArray:()=>gp,nearestDivisor:()=>Ed,nearestLargerEven:()=>$_,now:()=>al,parseAxisParam:()=>ls,randUniform:()=>A_,repeatedTry:()=>P_,rightPad:()=>el,shuffle:()=>Ok,shuffleCombo:()=>T_,sizeFromShape:()=>ht,sizeToSquarishShape:()=>F_,squeezeShape:()=>Pk,sum:()=>__,swap:()=>_d,tanh:()=>D_,toNestedArray:()=>ro,toTypedArray:()=>Op});var Xx=_a(c_()),na=Xx.default||Xx;function Kl(e){return na.fromString(e,!0,16)}var jk=Kl("c3a5c85c97cb3127"),ea=Kl("b492b66fbe98f273"),hn=Kl("9ae16a3b2f90404f");function Um(e){return e.xor(e.shru(47))}function Kk(e,t,n){let s=e.slice(t,t+n);return na.fromBytes(Array.from(s),!0,!0)}function dt(e,t){return Kk(e,t,8)}function Yx(e,t){return Kk(e,t,4)}function Ut(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function yr(e,t,n=Kl("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function J_(e,t,n,s,r,a){r=r.add(e),a=Ut(a.add(r).add(s),21);let i=r;return r=r.add(t),r=r.add(n),a=a.add(Ut(r,44)),[r.add(s),a.add(i)]}function nd(e,t,n,s){return J_(dt(e,t),dt(e,t+8),dt(e,t+16),dt(e,t+24),n,s)}function eA(e,t=e.length){if(t>=8){let n=hn.add(t*2),s=dt(e,0).add(hn),r=dt(e,t-8),a=Ut(r,37).mul(n).add(s),i=Ut(s,25).add(r).mul(n);return yr(a,i,n)}if(t>=4){let n=hn.add(t*2),s=Yx(e,0);return yr(s.shl(3).add(t),Yx(e,t-4),n)}if(t>0){let n=e[0],s=e[t>>1],r=e[t-1],a=n+(s<<8),i=t+(r<<2);return Um(hn.mul(a).xor(jk.mul(i))).mul(hn)}return hn}function tA(e,t=e.length){let n=hn.add(t*2),s=dt(e,0).mul(ea),r=dt(e,8),a=dt(e,t-8).mul(n),i=dt(e,t-16).mul(hn);return yr(Ut(s.add(r),43).add(Ut(a,30)).add(i),s.add(Ut(r.add(hn),18)).add(a),n)}function nA(e,t=e.length){let n=hn.add(t*2),s=dt(e,0).mul(hn),r=dt(e,8),a=dt(e,t-8).mul(n),i=dt(e,t-16).mul(hn),o=Ut(s.add(r),43).add(Ut(a,30)).add(i),u=yr(o,s.add(Ut(r.add(hn),18)).add(a),n),l=dt(e,16).mul(n),c=dt(e,24),p=o.add(dt(e,t-32)).mul(n),d=u.add(dt(e,t-24)).mul(n);return yr(Ut(l.add(c),43).add(Ut(p,30)).add(d),l.add(Ut(c.add(s),18)).add(p),n)}function sA(e,t=e.length){let n=na.fromNumber(81,!0);if(t<=32)return t<=16?eA(e,t):tA(e,t);if(t<=64)return nA(e,t);let s=n,r=n.mul(ea).add(113),a=Um(r.mul(hn).add(113)).mul(hn),i=[na.UZERO,na.UZERO],o=[na.UZERO,na.UZERO];s=s.mul(hn).add(dt(e,0));let u=0,l=(t-1>>6)*64,c=l+(t-1&63)-63;do s=Ut(s.add(r).add(i[0]).add(dt(e,u+8)),37).mul(ea),r=Ut(r.add(i[1]).add(dt(e,u+48)),42).mul(ea),s=s.xor(o[1]),r=r.add(i[0]).add(dt(e,u+40)),a=Ut(a.add(o[0]),33).mul(ea),i=nd(e,u,i[1].mul(ea),s.add(o[0])),o=nd(e,u+32,a.add(o[1]),r.add(dt(e,u+16))),[a,s]=[s,a],u+=64;while(u!==l);let p=ea.add(a.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Ut(s.add(r).add(i[0]).add(dt(e,u+8)),37).mul(p),r=Ut(r.add(i[1]).add(dt(e,u+48)),42).mul(p),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(dt(e,u+40))),a=Ut(a.add(o[0]),33).mul(p),i=nd(e,u,i[1].mul(p),s.add(o[0])),o=nd(e,u+32,a.add(o[1]),r.add(dt(e,u+16))),[a,s]=[s,a],yr(yr(i[0],o[0],p).add(Um(r).mul(jk)).add(a),yr(i[1],o[1],p).add(s),p)}function rA(e,t){return t==="string"?Xl(e):Op([e],t)}function aA(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function Op(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=fa(e)),K().getBool("DEBUG")&&Mk(e,t),aA(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let s=0;s<n.length;++s)Math.round(e[s])!==0&&(n[s]=1);return n}else throw new Error(`Unknown data type ${t}`)}function al(){return K().platform.now()}function iA(e,t){return K().platform.fetch(e,t)}function Xl(e,t="utf-8"){return t=t||"utf-8",K().platform.encode(e,t)}function Od(e,t="utf-8"){return t=t||"utf-8",K().platform.decode(e,t)}var oA=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new lA)}profileKernel(e,t,n){let s,r=()=>{s=n()},a,i=al();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(let u of s)u.dataSync();a=Promise.resolve({kernelMs:al()-i})}if(K().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<s.length;u++){let l=s[u];l.data().then(c=>{uA(c,l.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach(i=>{Promise.all([i.data(),s,a]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],r,o[2])})})}};function uA(e,t,n){if(t!=="float32")return!1;for(let s=0;s<e.length;s++){let r=e[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}var lA=class{logKernelProfile(e,t,n,s,r,a){let i=typeof s=="number"?el(`${s}ms`,9):s.error,o=el(e,25),u=t.rank,l=t.size,c=el(t.shape.toString(),14),p="";for(let d in r){let h=r[d];if(h!=null){let f=h.shape||t.shape,m=f.length;p+=`${d}: ${m}D ${m>0?f:""} `}}console.log(`%c${o}	%c${i}	%c${u}D ${c}	%c${l}	%c${p}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function cA(e,t,n){let s={},r={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<e.length;u++){let l=e[u],c=l.inputs;for(let p in c){let d=c[p],h=!1;for(let f=0;f<t.length;f++)if(s[d.id]){l.outputs.forEach(m=>s[m.id]=!0),h=!0,r[l.id]=!0;break}if(h)break}}let a={};a[n.id]=!0;let i={};for(let u=e.length-1;u>=0;u--){let l=e[u],c=l.inputs;for(let p=0;p<l.outputs.length;p++)if(a[l.outputs[p].id]){for(let d in c)a[c[d].id]=!0,i[l.id]=!0;break}}let o=[];for(let u=0;u<e.length;u++){let l=e[u];if(r[l.id]&&i[l.id]){let c={};for(let d in l.inputs){let h=l.inputs[d];s[h.id]&&(c[d]=h)}let p=Object.assign({},l);p.inputs=c,p.outputs=l.outputs,o.push(p)}}return o}function dA(e,t,n,s){for(let r=t.length-1;r>=0;r--){let a=t[r],i=[];if(a.outputs.forEach(u=>{let l=e[u.id];l!=null?i.push(l):i.push(null)}),a.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);let o=a.gradient(i);for(let u in a.inputs){if(!(u in o))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(o)}.`);let l=n(()=>o[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);let c=a.inputs[u];if(!Ar(l.shape,c.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${c.shape}'`);if(e[c.id]==null)e[c.id]=l;else{let p=e[c.id];e[c.id]=s(p,l),p.dispose()}}}}var Zx=20,Bu=3,xm=7;function pA(e,t,n,s){let r=yo(t),a=hA(e,t,n,r),i=t.length,o=bd(e,t,n,r,a),u=["Tensor"];return s&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(l=>"    "+l).join(`
`)),u.join(`
`)}function hA(e,t,n,s){let r=ht(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,u=n==="complex64"?Hu(e):e;if(o>1)for(let l=0;l<r/a;l++){let c=l*a;for(let p=0;p<a;p++)i[p]=Math.max(i[p],Gu(u[c+p],0,n).length)}return i}function Gu(e,t,n){let s;return Array.isArray(e)?s=`${parseFloat(e[0].toFixed(xm))} + ${parseFloat(e[1].toFixed(xm))}j`:fr(e)?s=`'${e}'`:n==="bool"?s=Xk(e):s=parseFloat(e.toFixed(xm)).toString(),el(s,t)}function Xk(e){return e===0?"false":"true"}function bd(e,t,n,s,r,a=!0){let i=n==="complex64"?2:1,o=t[0],u=t.length;if(u===0){if(n==="complex64"){let m=Hu(e);return[Gu(m[0],0,n)]}return n==="bool"?[Xk(e[0])]:[e[0].toString()]}if(u===1){if(o>Zx){let g=Bu*i,b=Array.from(e.slice(0,g)),y=Array.from(e.slice((o-Bu)*i,o*i));return n==="complex64"&&(b=Hu(b),y=Hu(y)),["["+b.map((v,x)=>Gu(v,r[x],n)).join(", ")+", ..., "+y.map((v,x)=>Gu(v,r[o-Bu+x],n)).join(", ")+"]"]}let m=n==="complex64"?Hu(e):Array.from(e);return["["+m.map((g,b)=>Gu(g,r[b],n)).join(", ")+"]"]}let l=t.slice(1),c=s.slice(1),p=s[0]*i,d=[];if(o>Zx){for(let m=0;m<Bu;m++){let g=m*p,b=g+p;d.push(...bd(e.slice(g,b),l,n,c,r,!1))}d.push("...");for(let m=o-Bu;m<o;m++){let g=m*p,b=g+p;d.push(...bd(e.slice(g,b),l,n,c,r,m===o-1))}}else for(let m=0;m<o;m++){let g=m*p,b=g+p;d.push(...bd(e.slice(g,b),l,n,c,r,m===o-1))}let h=u===2?",":"";d[0]="["+d[0]+h;for(let m=1;m<d.length-1;m++)d[m]=" "+d[m]+h;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Hu(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Ht=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=ht(e),n!=null){let s=n.length;P(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||zk(t,this.size),this.strides=yo(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let s of e){if(s<0||s>=this.shape[t]){let r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ys().makeTensor(this.values,this.shape,this.dtype)}},ys=null,to=null,fA=null;function mA(e){ys=e}function gA(e){to=e}function bA(e){fA=e}var ut=class{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ht(e),this.strides=yo(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return to.buffer(this.shape,this.dtype,e)}bufferSync(){return to.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return ro(this.shape,e,this.dtype==="complex64")}arraySync(){return ro(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=ys().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>Od(n))}catch(n){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ys().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=ys().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Od(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await ys().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ys().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return to.print(this,e)}clone(){return this.throwIfDisposed(),to.clone(this)}toString(e=!1){let t=this.dataSync();return pA(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),to.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),ys().makeVariable(this,e,t,n)}};Object.defineProperty(ut,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function yA(){return jg("Tensor",()=>ut)}yA();var Pd=class extends ut{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ar(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ys().disposeTensor(this),this.dataId=e.dataId,ys().incRef(this,null)}dispose(){ys().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Pd,Symbol.hasInstance,{value:e=>e instanceof ut&&e.assign!=null&&e.assign instanceof Function});var Ps={};Ee(Ps,{assertTypesMatch:()=>e0,getTensorsInContainer:()=>yb,isTensorInList:()=>wA,makeTypesMatch:()=>kt});var vA=(e=>(e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6",e))(vA||{}),Yk=(e=>(e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64",e))(Yk||{}),Zk=(e=>(e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64",e))(Zk||{}),Qk=(e=>(e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64",e))(Qk||{}),Jk=(e=>(e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64",e))(Jk||{}),xA={float32:Qk,int32:Yk,bool:Zk,complex64:Jk};function bn(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return xA[e][t]}function Pp(e){return bn(e,"int32")}function kt(e,t){if(e.dtype===t.dtype)return[e,t];let n=bn(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function e0(e,t){P(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function wA(e,t){return t.some(n=>n.id===e.id)}function yb(e){let t=[];return t0(e,t,new Set),t}function t0(e,t,n){if(e==null)return;if(e instanceof ut){t.push(e);return}if(!kA(e))return;let s=e;for(let r in s){let a=s[r];n.has(a)||(n.add(a),t0(a,t,n))}}function kA(e){return Array.isArray(e)||typeof e=="object"}function wm(e){return e.kernelName!=null}var Qx=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Gm=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Qx}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(hr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new oA(this.backendInstance),!0}setupRegisteredKernels(){Fd(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Fd(e).forEach(n=>{n.disposeFunc!=null&&n.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof xl)&&typeof n.then=="function"){let s=++this.pendingBackendInitId,r=n.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,hr(`Initialization of backend ${e} failed`),hr(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return hr(`Initialization of backend ${e} failed`),hr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let s;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,n){e();try{let s=n();return t(),s}catch(s){throw t(),s}}nextTensorId(){return Gm.nextTensorId++}nextVariableId(){return Gm.nextVariableId++}clone(e){let t=M.runKernel(Ya,{x:e}),n={x:e},s=a=>({x:()=>{let i="float32",o={x:a},u={dtype:i};return M.runKernel(Oa,o,u)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,!(Wm(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let s=this.backend.numDataIds(),r=0;n.forEach(o=>{r+=o.dtype==="complex64"?3:1});let a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,u=wm(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(wm(e)){let{kernelName:h,inputs:f,attrs:m}=e;this.backendName==null&&this.backend;let g=Wm(h,this.backendName);P(g!=null,()=>`Cannot find registered kernel '${h}' for backend '${this.backendName}'`),i=()=>{let b=this.backend.numDataIds();o=g.kernelFunc({inputs:f,attrs:m,backend:this.backend});let y=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,b,y);let v=y.map(x=>x.rank!=null?x:this.makeTensorFromTensorInfo(x));if(s){let x=this.getTensorsForGradient(h,f,v);n=this.saveTensorsForBackwardMode(x)}return v}}else{let{forwardFunc:h}=e,f=m=>{!s||(n=m.map(g=>this.keep(this.clone(g))))};i=()=>{let m=this.backend.numDataIds();o=this.tidy(()=>h(this.backend,f));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,m,g),g}}let{inputs:l,attrs:c}=e,p=wm(e)?null:e.backwardsFunc,d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(d=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs)}),s&&this.addTapeNode(u,l,t,p,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(h=>l[h]!=null?l[h].shape:null),outputShapes:t.map(h=>h.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(n=>this.keep(this.clone(n)))}getTensorsForGradient(e,t,n){let s=Kx(e);if(s!=null){let r=s.inputsToSave||[],a=s.outputsToSave||[],i;s.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=r.map(u=>t[u]);let o=n.filter((u,l)=>a[l]);return i.concat(o)}return[]}makeTensor(e,t,n,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;n==="string"&&fr(e[0])&&(r=e.map(o=>Xl(o)));let a=s.write(r,t,n),i=new ut(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),n==="string"){let o=this.state.tensorInfo.get(a),u=Vk(r);this.state.numBytes+=u-o.bytes,o.bytes=u}return i}makeTensorFromDataId(e,t,n,s){n=n||"float32";let r={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:s,dtype:r}=e,a=new ut(s,r,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));let r=new Pd(e,t,n,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*zm(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Pd||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*zm(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,s,r,a){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=Kx(e);o!=null&&(s=o.gradFunc),s!=null&&(i.gradient=u=>(u=u.map((l,c)=>{if(l==null){let p=n[c],d=gp(p.size,p.dtype);return this.makeTensor(d,p.shape,p.dtype)}return l}),s(u.length>1?u:u[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=yb(e),n=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){let a=this.state.activeScope.track[r];!a.kept&&!n.has(a.id)&&a.dispose()}let s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===s.id&&this.track(r)})}gradients(e,t,n,s=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(r instanceof ut,()=>"The result y returned by f() must be a tensor.");let a=cA(this.state.activeTape,t,r);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[r.id]=n==null?SA(r.shape):n,dA(i,a,u=>this.tidy(u),IA);let o=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let l of u.saved)l.dispose()}),this.state.activeTape=null),{value:r,grads:o}})}customGrad(e){return P(Ad(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(i=>i instanceof ut),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,s={};t.forEach((i,o)=>{s[o]=i});let r=(i,o)=>(n=e(...t,o),P(n.value instanceof ut,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(Ad(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),a=(i,o)=>{let u=n.gradFunc(i,o),l=Array.isArray(u)?u:[u];P(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(l.every(p=>p instanceof ut),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let c={};return l.forEach((p,d)=>{c[d]=()=>p}),c};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=al(),n=await this.backend.time(e);return n.wallMs=al()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Qx;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},vb=Gm;vb.nextTensorId=0;vb.nextVariableId=0;function SA(e){let t=Gg(ht(e),"float32");return M.makeTensor(t,e,"float32")}function n0(){let e=Hk();if(e._tfengine==null){let t=new W_(e);e._tfengine=new vb(t)}return q_(e._tfengine.ENV),mA(()=>e._tfengine),e._tfengine}var M=n0();function IA(e,t){let n={a:e,b:t};return M.runKernel(Er,n)}var Lp={};Ee(Lp,{isBrowser:()=>s0,isMobile:()=>TA,mockIsMobile:()=>NA});function CA(){return typeof navigator!="undefined"&&navigator!=null}var Hm;function NA(e){Hm=e}function TA(e){if(Hm!==void 0)return Hm;if(e||CA()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window!="undefined"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function s0(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var Yn=K();Yn.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Yn.registerFlag("IS_BROWSER",()=>s0());Yn.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");Yn.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Yn.registerFlag("PROD",()=>!1);Yn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Yn.getBool("DEBUG"));Yn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Yn.registerFlag("IS_TEST",()=>!1);Yn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Yn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Yn.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);Yn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);function Bs(e,t){let n=e;if(rn(e))return t==="string"?[]:[e.length];if(!Array.isArray(e))return[];let s=[];for(;Array.isArray(n)||rn(n)&&t!=="string";)s.push(n.length),n=n[0];return Array.isArray(e)&&K().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&r0(e,s,[]),s}function r0(e,t,n){if(n=n||[],!Array.isArray(e)&&!rn(e)){P(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}P(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),P(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let s=t.slice(1);for(let r=0;r<e.length;++r)r0(e[r],s,n.concat(r))}function Jx(e,t,n,s){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,n,s="numeric"){if(e instanceof ut)return Jx(s,e.dtype,t,n),e;let r=mp(e);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Jx(s,r,t,n),e==null||!rn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let u=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${u}'`)}let a=Bs(e,r);!rn(e)&&!Array.isArray(e)&&(e=[e]);let o=r!=="string"?Op(e,r):fa(e,[],!0);return M.makeTensor(o,a,r)}function Ld(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,i)=>_(a,`${t}[${i}]`,n,s))}var a0="__op";function z(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+a0;let r=(...a)=>{M.startScope(n);try{let i=s(...a);return qg(i)&&console.error("Cannot return a Promise inside of tidy."),M.endScope(i),i}catch(i){throw M.endScope(null),i}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function $A(e,t){let n=_(e,"real","complex"),s=_(t,"imag","complex");Qn(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);let r={real:n,imag:s};return M.runKernel(vp,r)}var kr=z({complex_:$A});function Fr(e,t,n,s){if(s==null&&(s=mp(e)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!rn(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Hg(t);let r=ht(t),a=ht(n);P(r===a,()=>`Based on the provided shape, [${t}], the tensor should have ${r} values but has ${a}`);for(let i=0;i<n.length;++i){let o=n[i],u=i===n.length-1?o!==ht(t.slice(i)):!0;P(n[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!rn(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=s!=="string"?Op(e,s):fa(e,[],!0),M.makeTensor(e,t,s)}function rs(e,t,n){let s=Bs(e,n);return Fr(e,t,s,n)}var qm={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},zd=4;async function _A(e,t){let n=[],s=[],r=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<r.length;++i){let o=r[i],u=Array.isArray(e)?e[i].tensor:e[o];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${u.dtype}`);let l={name:o,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let c=new Promise(async p=>{let d=await u.bytes(),h=d.reduce((g,b)=>g+b.length,0)+zd*d.length,f=new Uint8Array(h),m=0;for(let g=0;g<d.length;g++){let b=d[g],y=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(y,m),m+=zd,f.set(b,m),m+=b.length}p(f)});s.push(c)}else s.push(u.data());t!=null&&(l.group=t),n.push(l)}let a=await Promise.all(s);return{data:AA(a),specs:n}}function i0(e,t){let n={},s,r=0;for(let a of t){let i=a.name,o=a.dtype,u=a.shape,l=ht(u),c;if("quantization"in a){let p=a.quantization;if(p.dtype==="uint8"||p.dtype==="uint16"){if(!("min"in p&&"scale"in p))throw new Error(`Weight ${a.name} with quantization ${p.dtype} doesn't have corresponding metadata min and scale.`)}else if(p.dtype==="float16"){if(o!=="float32")throw new Error(`Weight ${a.name} is quantized with ${p.dtype} which only supports weights of type float32 not ${o}.`)}else throw new Error(`Weight ${a.name} has unknown quantization dtype ${p.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let d=qm[p.dtype],h=e.slice(r,r+l*d),f=p.dtype==="uint8"?new Uint8Array(h):new Uint16Array(h);if(o==="float32")if(p.dtype==="uint8"||p.dtype==="uint16"){c=new Float32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=g*p.scale+p.min}}else if(p.dtype==="float16")s===void 0&&(s=PA()),c=s(f);else throw new Error(`Unsupported quantization type ${p.dtype} for weight type float32.`);else if(o==="int32"){if(p.dtype!=="uint8"&&p.dtype!=="uint16")throw new Error(`Unsupported quantization type ${p.dtype} for weight type int32.`);c=new Int32Array(f.length);for(let m=0;m<f.length;m++){let g=f[m];c[m]=Math.round(g*p.scale+p.min)}}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=l*d}else if(o==="string"){let p=ht(a.shape);c=[];for(let d=0;d<p;d++){let h=new Uint32Array(e.slice(r,r+zd))[0];r+=zd;let f=new Uint8Array(e.slice(r,r+h));c.push(f),r+=h}}else{let p=qm[o],d=e.slice(r,r+l*p);if(o==="float32")c=new Float32Array(d);else if(o==="int32")c=new Int32Array(d);else if(o==="bool")c=new Uint8Array(d);else if(o==="complex64"){c=new Float32Array(d);let h=new Float32Array(c.length/2),f=new Float32Array(c.length/2);for(let b=0;b<h.length;b++)h[b]=c[b*2],f[b]=c[b*2+1];let m=rs(h,u,"float32"),g=rs(f,u,"float32");n[i]=kr(m,g),m.dispose(),g.dispose()}else throw new Error(`Unsupported dtype in weight '${i}': ${o}`);r+=l*p}o!=="complex64"&&(n[i]=rs(c,u,o))}return n}function AA(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(a=>{if(t+=a.byteLength,n.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});let s=new Uint8Array(t),r=0;return n.forEach(a=>{s.set(new Uint8Array(a.buffer),r),r+=a.byteLength}),s.buffer}var xb=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function ew(e){return xb?Buffer.byteLength(e):new Blob([e]).size}function EA(e){if(xb)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function RA(e){if(xb){let s=Buffer.from(e,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function wb(e){if(e.length===1)return e[0];let t=0;e.forEach(r=>{t+=r.byteLength});let n=new Uint8Array(t),s=0;return e.forEach(r=>{n.set(new Uint8Array(r),s),s+=r.byteLength}),n.buffer}function tw(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function o0(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}async function kb(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),e.weightsManifest!=null){let[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),n}function Yl(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:ew(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:ew(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:e.weightData.byteLength}}function DA(){let e=n=>{let s=n<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function FA(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function OA(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function PA(){let e=DA(),t=FA(),n=OA();return s=>{let r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let i=0;i<s.length;i++){let o=s[i],u=e[n[o>>10]+(o&1023)]+t[o>>10];a[i]=u}return new Float32Array(r)}}var St=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return St.instance==null&&(St.instance=new St),St.instance}static registerSaveRouter(e){St.getInstance().saveRouters.push(e)}static registerLoadRouter(e){St.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return St.getHandlers(e,"save")}static getLoadHandlers(e,t){return St.getHandlers(e,"load",t)}static getHandlers(e,t,n){let s=[];return(t==="load"?St.getInstance().loadRouters:St.getInstance().saveRouters).forEach(a=>{let i=a(e,n);i!==null&&s.push(i)}),s}},LA=e=>St.registerSaveRouter(e),zA=e=>St.registerLoadRouter(e),MA=e=>St.getSaveHandlers(e),BA=(e,t)=>St.getLoadHandlers(e,t),jm="tensorflowjs",Km=1,ia="models_store",mr="model_info_store";function u0(){if(!K().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window=="undefined"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Xm(e){let t=e.result;t.createObjectStore(ia,{keyPath:"modelPath"}),t.createObjectStore(mr,{keyPath:"modelPath"})}var ya=class{constructor(e){if(this.indexedDB=u0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,s)=>{let r=this.indexedDB.open(jm,Km);r.onupgradeneeded=()=>Xm(r),r.onsuccess=()=>{let a=r.result;if(t==null){let i=a.transaction(ia,"readonly"),u=i.objectStore(ia).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(u.result.modelArtifacts)},u.onerror=l=>(a.close(),s(u.error)),i.oncomplete=()=>a.close()}else{let i=Yl(t),o=a.transaction(mr,"readwrite"),u=o.objectStore(mr),l=u.put({modelPath:this.modelPath,modelArtifactsInfo:i}),c;l.onsuccess=()=>{c=a.transaction(ia,"readwrite");let d=c.objectStore(ia).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});d.onsuccess=()=>n({modelArtifactsInfo:i}),d.onerror=h=>{u=o.objectStore(mr);let f=u.delete(this.modelPath);f.onsuccess=()=>(a.close(),s(d.error)),f.onerror=m=>(a.close(),s(d.error))}},l.onerror=p=>(a.close(),s(l.error)),o.oncomplete=()=>{c==null?a.close():c.oncomplete=()=>a.close()}}},r.onerror=a=>s(r.error)})}};ya.URL_SCHEME="indexeddb://";var l0=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ya.URL_SCHEME)?VA(e.slice(ya.URL_SCHEME.length)):null;St.registerSaveRouter(l0);St.registerLoadRouter(l0);function VA(e){return new ya(e)}function WA(e){return e.startsWith(ya.URL_SCHEME)?e.slice(ya.URL_SCHEME.length):e}var UA=class{constructor(){this.indexedDB=u0()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(jm,Km);n.onupgradeneeded=()=>Xm(n),n.onsuccess=()=>{let s=n.result,r=s.transaction(mr,"readonly"),i=r.objectStore(mr).getAll();i.onsuccess=()=>{let o={};for(let u of i.result)o[u.modelPath]=u.modelArtifactsInfo;e(o)},i.onerror=o=>(s.close(),t(i.error)),r.oncomplete=()=>s.close()},n.onerror=s=>t(n.error)})}async removeModel(e){return e=WA(e),new Promise((t,n)=>{let s=this.indexedDB.open(jm,Km);s.onupgradeneeded=()=>Xm(s),s.onsuccess=()=>{let r=s.result,a=r.transaction(mr,"readwrite"),i=a.objectStore(mr),o=i.get(e),u;o.onsuccess=()=>{if(o.result==null)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let l=i.delete(e),c=()=>{u=r.transaction(ia,"readwrite");let d=u.objectStore(ia).delete(e);d.onsuccess=()=>t(o.result.modelArtifactsInfo),d.onerror=h=>n(o.error)};l.onsuccess=c,l.onerror=p=>(c(),r.close(),n(o.error))}},o.onerror=l=>(r.close(),n(o.error)),a.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},s.onerror=r=>n(s.error)})}},Zs="/",no="tensorflowjs_models",c0="info",GA="model_topology",HA="weight_specs",qA="weight_data",jA="model_metadata";function d0(e){return{info:[no,e,c0].join(Zs),topology:[no,e,GA].join(Zs),weightSpecs:[no,e,HA].join(Zs),weightData:[no,e,qA].join(Zs),modelMetadata:[no,e,jA].join(Zs)}}function p0(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function KA(e){let t=e.split(Zs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Zs)}function XA(e){return e.startsWith(va.URL_SCHEME)?e.slice(va.URL_SCHEME.length):e}var va=class{constructor(e){if(!K().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=d0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Yl(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,EA(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(r){throw p0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;let r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){let i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=RA(a),t}};va.URL_SCHEME="localstorage://";var h0=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(va.URL_SCHEME)?YA(e.slice(va.URL_SCHEME.length)):null;St.registerSaveRouter(h0);St.registerLoadRouter(h0);function YA(e){return new va(e)}var ZA=class{constructor(){P(K().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=no+Zs,n=Zs+c0;for(let s=0;s<this.LS.length;++s){let r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){let a=KA(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=XA(e);let t=d0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return p0(t),n}},ao="://",Cn=class{constructor(){this.managers={}}static getInstance(){return Cn.instance==null&&(Cn.instance=new Cn),Cn.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(ao)&&(e=e.slice(0,e.indexOf(ao))),P(e.length>0,()=>"scheme must not be an empty string.");let n=Cn.getInstance();P(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=Cn.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Cn.getInstance().managers)}};function yd(e){if(e.indexOf(ao)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Cn.getSchemes().join(",")}`);return{scheme:e.split(ao)[0],path:e.split(ao)[1]}}async function f0(e,t,n=!1){P(e!==t,()=>`Old path and new path are the same: '${e}'`);let s=St.getLoadHandlers(e);P(s.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),P(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`);let r=s[0],a=St.getSaveHandlers(t);P(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),P(a.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);let i=a[0],o=yd(e).scheme,u=yd(e).path,l=o===yd(e).scheme,c=await r.load();n&&l&&await Cn.getManager(o).removeModel(u);let p=await i.save(c);return n&&!l&&await Cn.getManager(o).removeModel(u),p.modelArtifactsInfo}async function QA(){let e=Cn.getSchemes(),t={};for(let n of e){let s=await Cn.getManager(n).listModels();for(let r in s){let a=n+ao+r;t[a]=s[r]}}return t}async function JA(e){let t=yd(e);return Cn.getManager(t.scheme).removeModel(t.path)}async function eE(e,t){return f0(e,t,!1)}async function tE(e,t){return f0(e,t,!0)}var nE=class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}};if(K().get("IS_BROWSER")){K().setPlatform("browser",new nE);try{Cn.registerManager(va.URL_SCHEME,new ZA)}catch(e){}try{Cn.registerManager(ya.URL_SCHEME,new UA)}catch(e){}}var sE={importFetch:()=>d_()},km,rE=class{constructor(){this.util=p_(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return K().global.fetch!=null?K().global.fetch(e,t):(km==null&&(km=sE.importFetch()),km(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}};K().get("IS_NODE")&&!K().get("IS_BROWSER")&&K().setPlatform("node",new rE);function _e(e,t="float32",n){return t=t||"float32",Hg(e),new Ht(e,t,n)}function aE(e,t){let n=_(e,"x","cast");if(!Bk(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let s={x:n},r={dtype:t};return M.runKernel(Oa,s,r)}var de=z({cast_:aE});function iE(e){let n={x:_(e,"x","clone","string_or_numeric")};return M.runKernel(Ya,n)}var er=z({clone_:iE});function m0(e,t=!1){console.log(e.toString(t))}n0();var oE={buffer:_e,cast:de,clone:er,print:m0};gA(oE);var gr={};Ee(gr,{browserFiles:()=>fE,browserHTTPRequest:()=>vE,concatenateArrayBuffers:()=>wb,copyModel:()=>eE,decodeWeights:()=>i0,encodeWeights:()=>_A,fromMemory:()=>wE,fromMemorySync:()=>x0,getLoadHandlers:()=>BA,getModelArtifactsForJSON:()=>kb,getModelArtifactsInfoForJSON:()=>Yl,getSaveHandlers:()=>MA,http:()=>Ib,isHTTPScheme:()=>Zm,listModels:()=>QA,loadWeights:()=>mE,moveModel:()=>tE,registerLoadRouter:()=>zA,registerSaveRouter:()=>LA,removeModel:()=>JA,weightsLoaderFactory:()=>b0,withSaveHandler:()=>kE,withSaveHandlerSync:()=>SE});var uE="model",lE=".json",cE=".weights.bin";function nw(e){return new Promise(t=>setTimeout(t)).then(e)}var Ym=class{constructor(e){if(!K().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ym.URL_SCHEME)&&(e=e.slice(Ym.URL_SCHEME.length)),(e==null||e.length===0)&&(e=uE),this.modelJsonFileName=e+lE,this.weightDataFileName=e+cE}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=o0(e,n),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await nw(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await nw(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Yl(e)}}}},Md=Ym;Md.URL_SCHEME="downloads://";var dE=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=s=>{let r=JSON.parse(s.target.result),a=r.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}let o=kb(r,u=>this.loadWeights(u));e(o)},n.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let s=this.checkManifestAndWeightFiles(e),r=n.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(r).then(a=>[t,wb(a)])}loadWeightsFile(e,t){return new Promise((n,s)=>{let r=new FileReader;r.onload=a=>{let i=a.target.result;n(i)},r.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(r=>tw(r.name)),s={};for(let r of e)r.paths.forEach(a=>{let i=tw(a);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);s[a]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}},pE=e=>K().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Md.URL_SCHEME)?hE(e.slice(Md.URL_SCHEME.length)):null;St.registerSaveRouter(pE);function hE(e="model"){return new Md(e)}function fE(e){return new dE(e)}function sw(e,t,n,s){i(e),n=n==null?0:n,s=s==null?1:s,o(n,s);let r=0,a=u=>(u.then(l=>{let c=n+ ++r/e.length*(s-n);return t(c),l}),u);function i(u){P(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function o(u,l){P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),P(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(e.map(a))}async function g0(e,t){t==null&&(t={});let n=t.fetchFunc==null?K().platform.fetch:t.fetchFunc,s=e.map(p=>n(p,t.requestInit,{isBinary:!0})),r=0,a=.5,o=(t.onProgress==null?await Promise.all(s):await sw(s,t.onProgress,r,a)).map(p=>p.arrayBuffer()),u=.5,l=1;return t.onProgress==null?await Promise.all(o):await sw(o,t.onProgress,u,l)}async function mE(e,t="",n,s){return b0(i=>g0(i,{requestInit:s}))(e,t,n)}function b0(e){return async(t,n="",s)=>{let r=t.map(()=>!1),a={},i=s!=null?s.map(()=>!1):[],o=[];if(t.forEach((h,f)=>{let m=0;h.weights.forEach(g=>{let b="quantization"in g?g.quantization.dtype:g.dtype,y=qm[b]*ht(g.shape),v=()=>{r[f]=!0,a[f]==null&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:y})};s!=null?s.forEach((x,k)=>{x===g.name&&(v(),i[k]=!0)}):v(),o.push(g.name),m+=y})}),!i.every(h=>h)){let h=s.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let u=r.reduce((h,f,m)=>(f&&h.push(m),h),[]),l=[];u.forEach(h=>{t[h].paths.forEach(f=>{let m=n+(n.endsWith("/")?"":"/")+f;l.push(m)})});let c=await e(l),p={},d=0;return u.forEach(h=>{let f=t[h].paths.length,m=0;for(let x=0;x<f;x++)m+=c[d+x].byteLength;let g=new ArrayBuffer(m),b=new Uint8Array(g),y=0;for(let x=0;x<f;x++){let k=new Uint8Array(c[d+x]);b.set(k,y),y+=k.byteLength}a[h].forEach(x=>{let k=g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),C=i0(k,[x.manifestEntry]);for(let $ in C)p[$]=C[$]}),d+=f}),p}}var gE="application/octet-stream",bE="application/json",Sb=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=K().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=o0(e,n);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:bE}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:gE}),"model.weights.bin");let r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Yl(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}let n=t.modelTopology,s=t.weightsManifest;if(n==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return kb(t,r=>this.loadWeights(r))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=yE(t),r=this.weightPathPrefix||n,a=[];for(let l of e)a.push(...l.weights);let i=[],o=[];for(let l of e)for(let c of l.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(c)):i.push(r+c+s);this.weightUrlConverter&&i.push(...await Promise.all(o));let u=await g0(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,wb(u)]}};Sb.URL_SCHEME_REGEX=/^https?:\/\//;function yE(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function Zm(e){return e.match(Sb.URL_SCHEME_REGEX)!=null}var y0=(e,t)=>{if(typeof fetch=="undefined"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(s=>Zm(s)):n=Zm(e),n)return Ib(e,t)}return null};St.registerSaveRouter(y0);St.registerLoadRouter(y0);function Ib(e,t){return new Sb(e,t)}function vE(e,t){return Ib(e,t)}var Sm=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},v0=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},xE=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function wE(e,t,n,s){let r=arguments;return new xE(x0(...r))}function x0(e,t,n,s){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Sm(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Sm({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Sm({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function kE(e){return new v0(e)}function SE(e){return new v0(e)}var IE={};Ee(IE,{confusionMatrix:()=>DE});function CE(e,t,n=!1,s=!1){let r=_(e,"a","matMul"),a=_(t,"b","matMul");[r,a]=kt(r,a);let i={a:r,b:a},o={transposeA:n,transposeB:s};return M.runKernel(Fa,i,o)}var Ve=z({matMul_:CE});function NE(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let a={indices:_(e,"indices","oneHot","int32")},i={depth:t,onValue:n,offValue:s};return M.runKernel(Vo,a,i)}var Bd=z({oneHot_:NE});function TE(e){K().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}bA(TE);function vs(){return M}function il(){return M.memory()}function Y(e,t){return M.tidy(e,t)}function Fe(e){yb(e).forEach(n=>n.dispose())}function Zt(e){return M.keep(e)}function w0(e){return M.setBackend(e)}function k0(){return M.ready()}function S0(){return M.backendName}function I0(e){return M.findBackend(e)}function iu(e,t,n=1){return M.registerBackend(e,t,n)}function zp(){return M.backend}function $E(e){let n={input:_(e,"input","imag")};return M.runKernel(Ip,n)}var Mp=z({imag_:$E});function _E(e){let n={x:_(e,"x","neg")};return M.runKernel(Po,n)}var wt=z({neg_:_E});function AE(e){let n={input:_(e,"input","real")};return M.runKernel(Tp,n)}var ol=z({real_:AE});function EE(e,t,n){let s=_(e,"x","transpose");if(t==null&&(t=s.shape.map((i,o)=>o).reverse()),P(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(i=>{P(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();let r={x:s},a={perm:t};return s.dtype==="complex64"?Y(()=>{let i=ol(s),o=Mp(s);return i=M.runKernel(Js,{x:i},a),o=M.runKernel(Js,{x:o},a),n&&(o=wt(o)),kr(i,o)}):M.runKernel(Js,r,a)}var Ue=z({transpose_:EE});function RE(e,t,n){let s=_(e,"labels","confusionMatrix"),r=_(t,"predictions","confusionMatrix");P(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),P(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),P(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),P(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),P(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let a=Bd(de(s,"int32"),n),i=Bd(de(r,"int32"),n),o=Ue(a),u=Ve(o,i);return de(u,"int32")}var DE=z({confusionMatrix_:RE}),ou={};Ee(ou,{assertAndGetBroadcastShape:()=>it,getBroadcastDims:()=>C0,getReductionAxes:()=>Rt});function C0(e,t){let n=e.length,s=[];for(let r=0;r<n;r++){let a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&i===1&&s.unshift(a)}return s}function Rt(e,t){let n=[];for(let s=0;s<t.length;s++){let r=e[e.length-s-1],a=t.length-s-1,i=t[a];(r==null||r===1&&i>1)&&n.unshift(a)}return n}function it(e,t){let n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let a=e[e.length-r-1];a==null&&(a=1);let i=t[t.length-r-1];if(i==null&&(i=1),a===1)n.unshift(i);else if(i===1)n.unshift(a);else if(a!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else n.unshift(a)}return n}var Bp={};Ee(Bp,{fromPixels:()=>BE,fromPixelsAsync:()=>zE,toPixels:()=>ME});function N0(e,t,n){if(Aa(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let s=Bs(e,n);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Fr(e,t,s,n)}var Yr;function T0(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&e instanceof ImageData)s=!0;else if(typeof HTMLVideoElement!="undefined"&&e instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement)a=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(r&&r&&e.readyState<2)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.");if(Wm(Rd,M.backendName)!=null){let f={pixels:e},m={numChannels:t};return M.runKernel(Rd,f,m)}let[l,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height],p;if(i)p=e.getContext("2d").getImageData(0,0,l,c).data;else if(s||n)p=e.data;else if(a||r||o){if(Yr==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")Yr=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Yr=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Yr.canvas.width=l,Yr.canvas.height=c,Yr.drawImage(e,0,0,l,c),p=Yr.getImageData(0,0,l,c).data}let d;if(t===4)d=new Int32Array(p);else{let f=l*c;d=new Int32Array(f*t);for(let m=0;m<f;m++)for(let g=0;g<t;++g)d[m*t+g]=p[m*4+g]}return N0(d,[c,l,t],"int32")}function FE(e){return e!=null&&e.data instanceof Uint8Array}function OE(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function PE(e){return e!=null&&e.width!==0&&e.height!==0}function LE(e){return OE()&&!(e instanceof ImageBitmap)&&PE(e)&&!FE(e)}async function zE(e,t=3){let n=null;if(K().getBool("WRAP_TO_IMAGEBITMAP")&&LE(e)){let s;try{s=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){s=null}s!=null&&s.width===e.width&&s.height===e.height?n=s:n=e}else n=e;return T0(n,t)}async function ME(e,t){let n=_(e,"img","toPixels");if(!(e instanceof ut)){let l=n;n=de(l,"int32"),l.dispose()}if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[s,r]=n.shape.slice(0,2),a=n.rank===2?1:n.shape[2];if(a>4||a===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o=n.dtype==="float32"?255:1,u=new Uint8ClampedArray(r*s*4);for(let l=0;l<s*r;++l){let c=[0,0,0,255];for(let d=0;d<a;d++){let h=i[l*a+d];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);a===1?(c[0]=h*o,c[1]=h*o,c[2]=h*o):c[d]=h*o}let p=l*4;u[p+0]=Math.round(c[0]),u[p+1]=Math.round(c[1]),u[p+2]=Math.round(c[2]),u[p+3]=Math.round(c[3])}if(t!=null){t.width=r,t.height=s;let l=t.getContext("2d"),c=new ImageData(u,r,s);l.putImageData(c,0,0)}return n!==e&&n.dispose(),u}var BE=z({fromPixels_:T0}),$0={};Ee($0,{prepareAndValidate:()=>_0});function _0(e,t){let n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(ht(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,a=r[r.length-1],i=1;for(let p=0;p<r.length-1;++p)i*=r[p];let o=e.shape,u=r.slice();u.pop();let l=1;for(let p=a;p<n;++p)l*=o[p],u.push(o[p]);let c=[...yo(e.shape).map(p=>p/l),1].slice(0,a);return[u,i,l,c]}var A0={};Ee(A0,{calculateShapes:()=>E0,validateInput:()=>Nb,validateUpdateShape:()=>Cb});function Cb(e,t,n){let s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+` update.rank != ${r+e.length-s}`);for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+s])throw new Error(a+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function Nb(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Cb(n,t,e)}function E0(e,t,n){let s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length,i=1;for(let p=r;p<a;++p)i*=n[p];let o=r<1?1:r,u=ht(t.shape)/o,l=[...yo(n.slice(0,r)),1],c=ht(n);return{sliceRank:r,numUpdates:u,sliceSize:i,strides:l,outputSize:c}}var It={};Ee(It,{assertParamsValid:()=>WE,computeFlatOffset:()=>jE,computeOutShape:()=>GE,getNormalizedAxes:()=>HE,isSliceContinous:()=>qE,maskToAxes:()=>UE,parseSliceParams:()=>B0,sliceInfo:()=>KE,startForAxis:()=>z0,startIndicesWithElidedDims:()=>O0,stopForAxis:()=>M0,stopIndicesWithElidedDims:()=>P0,stridesForAxis:()=>L0,stridesWithElidedDims:()=>R0});var Qm=-2,VE=-1;function WE(e,t,n){let s=e.shape.length;P(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),P(s===n.length,()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)P(t[r]+n[r]<=e.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`)}function UE(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function GE(e,t,n){let s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function R0(e,t,n,s){let r=[...e];for(let a=r.length;a<s.length;a++)r.push(1);for(let a=0;a<n;a++)a===0?r[t]=1:(r.splice(t,0,1),r.pop());return r}function D0(e,t,n){return n<=e?n:n-(t-1)}function F0(e,t){let n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function HE(e,t,n,s,r,a,i,o,u){let l=e.length,c=new Array(l),p=new Array(l),d=new Array(l);if(t.length&&n>0){let h=t[0],f=n+1;c=O0(i,h,f,s,e),p=P0(o,h,f,r,e),d=R0(a,h,f,e)}else for(let h=0;h<l;h++)c[h]=z0(i,s,a,e,h,u),p[h]=M0(o,r,a,e,h,u),d[h]=L0(a,h,u);return{begin:c,end:p,strides:d}}function O0(e,t,n,s,r){let a=[...r],i=F0(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{let u=D0(t,n,o),l=s[u];e&1<<u&&(l=0),a[o]=l}return a}function P0(e,t,n,s,r){let a=[...r],i=F0(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{let u=D0(t,n,o),l=s[u];e&1<<u&&(l=Number.MAX_SAFE_INTEGER),a[o]=l}for(let o=0;o<a.length;o++){let u=r[o];a[o]<0&&(a[o]+=u),a[o]=rl(0,a[o],r[o])}return a}function L0(e,t,n){let s=e[t];return(n&1<<t||s==null)&&(s=1),s}function z0(e,t,n,s,r,a){let i=t[r],o=n[r]||1;(e&1<<r||a&1<<r||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=s[r];return i<0&&(i+=u),i=rl(0,i,u-1),i}function M0(e,t,n,s,r,a){let i=t[r],o=n[r]||1;(e&1<<r||a&1<<r||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=s[r];return i<0&&(i+=u),o>0?i=rl(0,i,u):i=rl(-1,i,u-1),i}function qE(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function jE(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function B0(e,t,n){let s,r=e.shape.length;typeof t=="number"?s=[t,...new Array(r-1).fill(0)]:t.length<r?s=t.concat(new Array(r-t.length).fill(0)):s=t.slice(),s.forEach(i=>{P(i!==-1,()=>"slice() does not support negative begin indexing.")});let a;return n==null?a=new Array(r).fill(-1):typeof n=="number"?a=[n,...new Array(r-1).fill(-1)]:n.length<r?a=n.concat(new Array(r-n.length).fill(-1)):a=n,a=a.map((i,o)=>i>=0?i:(P(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-s[o])),[s,a]}function KE(e,t,n,s,r,a,i,o,u){let l;if(s==null?(l=new Array(t.length),l.fill(1)):l=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1,p={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let v=0;v<p.dims;v++)c&&(1<<v&o)!==0&&p.numAddAxisAfterEllipsis++,1<<v&i&&(c=!0);c||(p.ellipsisMask|=1<<p.dims,p.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};XE(p,d);let h=!0,f=!0,m=!0,g=[],b=[];for(let v=0;v<e.length;++v){if(d.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);let x=!!(d.shrinkAxisMask&1<<v),k=e[v];if(k===-1){g.push(x?1:-1);continue}let C=[d.beginMask&1<<v,d.endMask&1<<v],$=[d.strides[v]>0?0:-1,d.strides[v]>0?k:k-1];if(x&&d.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&d.strides[v]===1;let A=!!(d.beginMask&1<<v&&d.endMask&1<<v);if(d.beginValid&&d.endValid){if(x){let D=d.begin[v]<0?k+d.begin[v]:d.begin[v];if(d.begin[v]=D,d.end[v]=d.begin[v]+1,D<0||D>=k)throw Error(`slice index ${d.begin[v]} of dimension ${v} out of bounds.`)}else d.begin[v]=rw(d.begin[v],0,d.strides[v],k,C,$),d.end[v]=rw(d.end[v],1,d.strides[v],k,C,$);let R=d.strides[v]===1&&d.begin[v]===0&&d.end[v]===k;h=h&&R,f=f&&(v===0&&d.strides[v]===1||R)}else h=h&&d.strides[v]===1&&A,f=f&&(v===0&&d.strides[v]===1||A);let E,O=!1;if(d.beginValid&&d.endValid?(E=d.end[v]-d.begin[v],O=!0):x?(E=1,O=!0):A&&k>=0&&(d.strides[v]<0?E=-k:E=k,O=!0),O){let R;E===0||E<0!=d.strides[v]<0?R=0:R=Math.trunc(E/d.strides[v])+(E%d.strides[v]!==0?1:0),g.push(R)}else g.push(-1)}for(let v=0;v<d.finalShapeGatherIndices.length;++v){let x=d.finalShapeGatherIndices[v];x>=0?b.push(g[x]):x===Qm&&b.push(1)}return{finalShapeSparse:b.filter((v,x)=>d.finalShapeGatherIndices[x]!==Qm),finalShape:b,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function XE(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(Qm),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[s]),e.end!=null&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(VE),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function rw(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{let i=e<0?s+e:e;return i<a[0]?a[0]:i>a[1]?a[1]:i}}var ae={};Ee(ae,{Serializable:()=>V0,SerializationMap:()=>sa,registerClass:()=>Or});var V0=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},sa=class{constructor(){this.classNameMap={}}static getMap(){return sa.instance==null&&(sa.instance=new sa),sa.instance}static register(e){sa.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Or(e){P(e.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),P(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),sa.register(e)}var YE={};Ee(YE,{TEST_EPSILON_FLOAT16:()=>W0,encodeStrings:()=>U0,expectArrayBuffersEqual:()=>sR,expectArraysClose:()=>QE,expectArraysEqual:()=>eR,expectNumbersClose:()=>tR,expectPromiseToFail:()=>JE,expectValuesInRange:()=>nR,testEpsilon:()=>Tb});var ZE=.001,W0=.1;function QE(e,t,n){return n==null&&(n=Tb()),Jm(e,t,(s,r)=>$b(s,r,n))}function Tb(){return M.backend.floatPrecision()===32?ZE:W0}function Jm(e,t,n){let s=!0;if((rn(e)||rn(t))&&(s=!1),rn(e)&&rn(t)&&(s=!0),s){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Bs(e),o=Bs(t);if(!Ar(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let r=rn(e)?e:fa(e),a=rn(t)?t:fa(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.
Actual:   ${r}.
Expected: ${a}.`);for(let i=0;i<a.length;++i){let o=r[i],u=a[i];if(!n(o,u))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${u}.
Actual:   ${r}.
Expected: ${a}.`)}typeof expect!="undefined"&&expect().nothing()}function JE(e,t){e().then(()=>t.fail(),()=>t()),typeof expect!="undefined"&&expect().nothing()}function eR(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return fr(e)||fr(e[0])||fr(t)||fr(t[0])?Jm(e,n,(s,r)=>s==r):Jm(e,t,(s,r)=>$b(s,r,0))}function tR(e,t,n){if(n==null&&(n=Tb()),!$b(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect!="undefined"&&expect().nothing()}function $b(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function nR(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function sR(e,t){let n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let r=0;r<s.length;r++)if(n[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${n[r]} instead`)}function U0(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?U0(n):e[t]=Xl(n)}return e}var G0="0.0.0";function rR(e,t){let n=_(e,"a","add"),s=_(t,"b","add");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(Er,r)}var ie=z({add_:rR});function aR(e,t){let n=_(e,"a","floorDiv"),s=_(t,"b","floorDiv");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(ja,r)}var H0=z({floorDiv_:aR});function iR(e,t){let n=_(e,"a","div"),s=_(t,"b","div");if([n,s]=kt(n,s),n.dtype==="int32"&&s.dtype==="int32")return H0(n,s);let r={a:n,b:s},a={};return M.runKernel(Ua,r,a)}var xe=z({div_:iR});function oR(e,t){let n=_(e,"a","mul"),s=_(t,"b","mul");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(ii,r)}var V=z({mul_:oR});function uR(e){let t=_(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return M.runKernel(xp,n)}else{let n={x:t};return M.runKernel(vo,n)}}var Wt=z({abs_:uR});function lR(e){let n={x:_(e,"x","acos")};return M.runKernel(wl,n)}var cR=z({acos_:lR});function dR(e){let n={x:_(e,"x","acosh")};return M.runKernel(kl,n)}var pR=z({acosh_:dR});function hR(e){P(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),P(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((r,a)=>_(r,`tensors${a}`,"addN")),n=t[0];t.forEach(r=>{if(r.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(r=>{if(!Ar(r.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let s=t;return M.runKernel(Ea,s)}var fR=z({addN_:hR});function mR(e,t=null,n=!1){let r={x:_(e,"x","all","bool")},a={axis:t,keepDims:n};return M.runKernel(Sl,r,a)}var q0=z({all_:mR});function gR(e,t=null,n=!1){let r={x:_(e,"x","any","bool")},a={axis:t,keepDims:n};return M.runKernel(Il,r,a)}var eg=z({any_:gR});function bR(e,t=0){let s={x:_(e,"x","argMax")},r={axis:t};return M.runKernel(Ra,s,r)}var ul=z({argMax_:bR});function yR(e,t=0){let s={x:_(e,"x","argMin")},r={axis:t};return M.runKernel(Cl,s,r)}var vR=z({argMin_:yR});function xR(e){let n={x:_(e,"x","asin")};return M.runKernel(Nl,n)}var wR=z({asin_:xR});function kR(e){let n={x:_(e,"x","asinh")};return M.runKernel(Tl,n)}var SR=z({asinh_:kR});function IR(e){let n={x:_(e,"x","atan")};return M.runKernel($l,n)}var CR=z({atan_:IR});function NR(e,t){let n=_(e,"a","atan2"),s=_(t,"b","atan2");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(Al,r)}var TR=z({atan2_:NR});function $R(e){let n={x:_(e,"x","atanh")};return M.runKernel(_l,n)}var _R=z({atanh_:$R});function AR(e,t,n,s,r="NHWC",a){let i=e[3],o=[...t,i],u=X0(r);return Zl(e,o,n,a,s,null,null,u)}function j0(e,t,n,s,r,a,i="channelsLast"){let[o,u]=Vd(t),l;if(i==="channelsLast")l=[o,u,e[3],e[3]];else if(i==="channelsFirst")l=[o,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Zl(e,l,n,s,r,a,!1,i)}function ER(e,t,n,s,r,a,i="NDHWC"){let[o,u,l]=tg(t),c,p;if(i==="NDHWC")p="channelsLast",c=[o,u,l,e[4],e[4]];else if(i==="NCDHW")p="channelsFirst",c=[o,u,l,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return K0(e,c,n,s,r,!1,p,a)}function Zl(e,t,n,s,r,a,i=!1,o="channelsLast"){let[u,l,c,p]=[-1,-1,-1,-1];if(o==="channelsLast")[u,l,c,p]=e;else if(o==="channelsFirst")[u,p,l,c]=e;else throw new Error(`Unknown dataFormat ${o}`);let[d,h,,f]=t,[m,g]=Vd(n),[b,y]=Vd(s),v=io(d,b),x=io(h,y),{padInfo:k,outHeight:C,outWidth:$}=FR(r,l,c,m,g,v,x,a,o),A=i?f*p:f,E;return o==="channelsFirst"?E=[u,A,C,$]:o==="channelsLast"&&(E=[u,C,$,A]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:p,outHeight:C,outWidth:$,outChannels:A,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:d,filterWidth:h,effectiveFilterHeight:v,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:y,inShape:e,outShape:E,filterShape:t}}function K0(e,t,n,s,r,a=!1,i="channelsLast",o){let[u,l,c,p,d]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,l,c,p,d]=e;else if(i==="channelsFirst")[u,d,l,c,p]=e;else throw new Error(`Unknown dataFormat ${i}`);let[h,f,m,,g]=t,[b,y,v]=tg(n),[x,k,C]=tg(s),$=io(h,x),A=io(f,k),E=io(m,C),{padInfo:O,outDepth:R,outHeight:D,outWidth:T}=OR(r,l,c,p,b,y,v,$,A,E,o),L=a?g*d:g,W;return i==="channelsFirst"?W=[u,L,R,D,T]:i==="channelsLast"&&(W=[u,R,D,T,L]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:p,inChannels:d,outDepth:R,outHeight:D,outWidth:T,outChannels:L,padInfo:O,strideDepth:b,strideHeight:y,strideWidth:v,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:$,effectiveFilterHeight:A,effectiveFilterWidth:E,dilationDepth:x,dilationHeight:k,dilationWidth:C,inShape:e,outShape:W,filterShape:t}}function RR(e,t,n,s,r){s==null&&(s=_b(e,t,n));let a=e[0],i=e[1],o=la((a-t+2*s)/n+1,r),u=la((i-t+2*s)/n+1,r);return[o,u]}function DR(e,t,n,s,r,a){r==null&&(r=_b(e,t,s));let i=e[0],o=e[1],u=e[2],l=la((i-t+2*r)/s+1,a),c=la((o-t+2*r)/s+1,a),p=la((u-t+2*r)/s+1,a);return[l,c,p,n]}function _b(e,t,n,s=1){let r=io(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Vd(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function tg(e){return typeof e=="number"?[e,e,e]:e}function io(e,t){return t<=1?e:e+(e-1)*(t-1)}function FR(e,t,n,s,r,a,i,o,u){let l,c,p;if(typeof e=="number"){l={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=RR([t,n],a,s,e,o);c=h[0],p=h[1]}else if(e==="same"){c=Math.ceil(t/s),p=Math.ceil(n/r);let d=Math.max(0,(c-1)*s+a-t),h=Math.max(0,(p-1)*r+i-n),f=Math.floor(d/2),m=d-f,g=Math.floor(h/2),b=h-g;l={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(e==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),p=Math.ceil((n-i+1)/r);else if(typeof e=="object"){let d=u==="channelsLast"?e[1][0]:e[2][0],h=u==="channelsLast"?e[1][1]:e[2][1],f=u==="channelsLast"?e[2][0]:e[3][0],m=u==="channelsLast"?e[2][1]:e[3][1];l={top:d,bottom:h,left:f,right:m,type:d===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=la((t-a+d+h)/s+1,o),p=la((n-i+f+m)/r+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:l,outHeight:c,outWidth:p}}function OR(e,t,n,s,r,a,i,o,u,l,c){let p,d,h,f;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let g=DR([t,n,s,1],o,1,r,e,c);d=g[0],h=g[1],f=g[2]}else if(e==="same"){d=Math.ceil(t/r),h=Math.ceil(n/a),f=Math.ceil(s/i);let m=(d-1)*r+o-t,g=(h-1)*a+u-n,b=(f-1)*i+l-s,y=Math.floor(m/2),v=m-y,x=Math.floor(g/2),k=g-x,C=Math.floor(b/2),$=b-C;p={top:x,bottom:k,left:C,right:$,front:y,back:v,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),h=Math.ceil((n-u+1)/a),f=Math.ceil((s-l+1)/i);else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:h,outWidth:f}}function la(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Sr(e){let[t,n,s]=Vd(e);return t===1&&n===1&&s===1}function Gs(e,t){return Sr(e)||Sr(t)}function X0(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function xn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")P(lo(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(r=>{P(lo(r),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${r}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function PR(e,t){let s={x:_(e,"x","reshape","string_or_numeric")},r={shape:t};return M.runKernel(Uo,s,r)}var U=z({reshape_:PR});function LR(e,t,n,s,r){let a=_(e,"x","avgPool","float32"),i=1;P(Gs(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=a,u=!1;a.rank===3&&(u=!0,o=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),xn("avgPool",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},p=M.runKernel(Da,l,c);return p=de(p,a.dtype),u?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Ab=z({avgPool_:LR});function zR(e,t,n,s,r,a="NDHWC"){let i=_(e,"x","avgPool3d","float32"),o=i,u=!1;i.rank===4&&(u=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),P(a==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),xn("avgPool3d",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=M.runKernel(yp,l,c);return p=de(p,o.dtype),u?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var Y0=z({avgPool3d_:zR});function MR(e,t=0){P(e.length>=1,()=>"Pass at least one tensor to concat");let n=Ld(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(a=>{if(a.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${a.dtype}. `)}),n.length===1)return er(n[0]);let s=n,r={axis:t};return M.runKernel(wo,s,r)}var Lt=z({concat_:MR});function BR(e){let n={x:_(e,"x","sigmoid","float32")};return M.runKernel(bi,n)}var tr=z({sigmoid_:BR});function VR(e,t,n){let s=_(e,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");let r={x:s},a={begin:t,size:n};return M.runKernel(Ko,r,a)}var je=z({slice_:VR});function WR(e){let n={x:_(e,"x","tanh","float32")};return M.runKernel(Si,n)}var ll=z({tanh_:WR});function UR(e,t,n,s,r,a){let i=_(e,"forgetBias","basicLSTMCell"),o=_(t,"lstmKernel","basicLSTMCell"),u=_(n,"lstmBias","basicLSTMCell"),l=_(s,"data","basicLSTMCell"),c=_(r,"c","basicLSTMCell"),p=_(a,"h","basicLSTMCell"),d=Lt([l,p],1),h=Ve(d,o),f=ie(h,u),m=f.shape[0],g=f.shape[1]/4,b=[m,g],y=je(f,[0,0],b),v=je(f,[0,g],b),x=je(f,[0,g*2],b),k=je(f,[0,g*3],b),C=ie(V(tr(y),ll(v)),V(c,tr(ie(i,x)))),$=V(ll(C),tr(k));return[C,$]}var GR=z({basicLSTMCell_:UR});function HR(e,t,n){let s=_(e,"x","batchToSpaceND"),r=t.reduce((o,u)=>o*u);P(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),P(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),P(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`);let a={x:s},i={blockShape:t,crops:n};return M.runKernel(xo,a,i)}var Eb=z({batchToSpaceND_:HR});function qR(e){let t;return e.rank===0||e.rank===1?t=U(e,[1,1,1,e.size]):e.rank===2?t=U(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function jR(e,t,n,s,r,a){a==null&&(a=.001);let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;s!=null&&(c=_(s,"offset","batchNorm")),P(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(c==null||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(l==null||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:qR(i),scale:l,offset:c,mean:o,variance:u},h={varianceEpsilon:a},f=M.runKernel(Ka,d,h);return U(f,i.shape)}var Vp=z({batchNorm_:jR});function KR(e,t,n,s,r,a){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),P(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),P(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Vp(i,o,u,c,l,a)}var Z0=z({batchNorm2d_:KR});function XR(e,t,n,s,r,a){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),P(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),P(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Vp(i,o,u,c,l,a)}var Q0=z({batchNorm3d_:XR});function YR(e,t,n,s,r,a){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),l;r!=null&&(l=_(r,"scale","batchNorm"));let c;return s!=null&&(c=_(s,"offset","batchNorm")),P(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),P(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&P(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Vp(i,o,u,c,l,a)}var J0=z({batchNorm4d_:YR});function ZR(e,t,n){let s=_(e,"x","bincount"),r=_(t,"weights","bincount");P(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),P(n>=0,()=>`size must be non-negative, but got ${n}.`),P(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);let a={x:s,weights:r},i={size:n};return M.runKernel(Yg,a,i)}var eS=z({bincount_:ZR});function QR(e,t){let n=_(e,"s0","broadcastArgs","int32"),s=_(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);let r={s0:n,s1:s};return M.runKernel(Zg,r)}var JR=z({broadcastArgs_:QR});function eD(e,t){let n=_(e,"broadcastTo","x"),s=n.shape;if(t.some(l=>!(l>0)||l%1!==0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let l=n.shape.slice();for(;l.length<t.length;)l.unshift(1);n=U(n,l)}let r=n.shape,a=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])a[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(a.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return er(n);let o={x:n},u={reps:a};return M.runKernel(Dr,o,u)}var vd=z({broadcastTo_:eD});function tD(e){let n={x:_(e,"x","ceil","float32")};return M.runKernel(Pa,n)}var nD=z({ceil_:tD});function sD(e,t,n){let s=_(e,"x","clipByValue");P(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);let r={x:s},a={clipValueMin:t,clipValueMax:n};return M.runKernel(Rr,r,a)}var Zn=z({clipByValue_:sD});function rD(e){return Lt(e,0)}var tS=z({concat1d_:rD});function aD(e,t){return Lt(e,t)}var nS=z({concat2d_:aD});function iD(e,t){return Lt(e,t)}var sS=z({concat3d_:iD});function oD(e,t){return Lt(e,t)}var rS=z({concat4d_:oD});function uD(e,t,n,s,r="NHWC",a=[1,1],i){let o=_(e,"x","conv2d","float32"),u=_(t,"filter","conv2d","float32"),l=o,c=!1;o.rank===3&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),xn("conv2d",s,i);let p=r==="NHWC"?l.shape[3]:l.shape[1];P(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),P(Gs(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let d={x:l,filter:u},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=M.runKernel(La,d,h);return c?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var xa=z({conv2d_:uD});function lD(e,t,n,s,r="NWC",a=1,i){let o=_(e,"x","conv1d"),u=_(t,"filter","conv1d"),l=o,c=!1;o.rank===2&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1]])),P(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),P(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),xn("conv1d",s,i),P(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),P(Gs(n,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`),P(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);let p=U(u,[1,u.shape[0],u.shape[1],u.shape[2]]),d=U(l,[l.shape[0],1,l.shape[1],l.shape[2]]),g=xa(d,p,[1,n],s,"NHWC",[1,a],i);return c?U(g,[g.shape[2],g.shape[3]]):U(g,[g.shape[0],g.shape[2],g.shape[3]])}var aS=z({conv1d_:lD});function cD(e,t,n,s,r,a="NHWC",i){P(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,l=!1;t.rank===3&&(l=!0,u=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),P(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),P(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),P(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let c=a==="NHWC"?o[3]:o[1],p=a==="NHWC"?u.shape[3]:u.shape[1];P(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),P(p===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[3]}.`),xn("conv2dDerInput",r,i);let d={dy:u,filter:n},h={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=M.runKernel(za,d,h);return l?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Rb=z({conv2DBackpropInput_:cD});function dD(e,t,n,s,r,a){let i=_(e,"x","conv2dTranspose"),o=_(t,"filter","conv2dTranspose");return Rb(n,i,o,s,r,"NHWC",a)}var iS=z({conv2dTranspose_:dD});function pD(e,t,n,s,r="NDHWC",a=[1,1,1]){let i=_(e,"x","conv3d"),o=_(t,"filter","conv3d"),u=i,l=!1;i.rank===4&&(l=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),P(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),P(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),P(Gs(n,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),P(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);let c={x:u,filter:o},p={strides:n,pad:s,dataFormat:r,dilations:a},d=M.runKernel(wp,c,p);return l?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var oS=z({conv3d_:pD});function hD(e,t,n,s,r){P(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let a=e,i=t,o=!1;t.rank===4&&(o=!0,i=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);let u=a[4],l=i.shape[4];P(a.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),P(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),P(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),P(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),P(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);let c={dy:i,filter:n},p={pad:r,strides:s,inputShape:a},d=M.runKernel(eb,c,p);return o?U(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var uS=z({conv3DBackpropInput_:hD});function fD(e,t,n,s,r){let a=_(e,"x","conv3dTranspose"),i=_(t,"filter","conv3dTranspose");return uS(n,a,i,s,r)}var lS=z({conv3dTranspose_:fD});function mD(e){let n={x:_(e,"x","cos","float32")};return M.runKernel(Ma,n)}var Db=z({cos_:mD});function gD(e){let n={x:_(e,"x","cosh","float32")};return M.runKernel(Ba,n)}var cS=z({cosh_:gD});function bD(e,t=0,n=!1,s=!1){let a={x:_(e,"x","cumprod")},i={axis:t,exclusive:n,reverse:s};return M.runKernel(ko,a,i)}var ng=z({cumprod_:bD});function yD(e,t=0,n=!1,s=!1){let a={x:_(e,"x","cumsum")},i={axis:t,exclusive:n,reverse:s};return M.runKernel(Va,a,i)}var dS=z({cumsum_:yD});function vD(e,t,n,s=!1){let r=_(e,"x","denseBincount"),a=_(t,"weights","denseBincount");P(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),P(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),P(n>=0,()=>`size must be non-negative, but got ${n}.`),P(a.size===r.size||a.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`);let i={x:r,weights:a},o={size:n,binaryOutput:s};return M.runKernel(tb,i,o)}var xD=z({denseBincount_:vD});function wD(e,t,n="NHWC"){let s=_(e,"x","depthToSpace","float32"),r=n==="NHWC"?s.shape[1]:s.shape[2],a=n==="NHWC"?s.shape[2]:s.shape[3],i=n==="NHWC"?s.shape[3]:s.shape[1];P(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),P(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t}  for depthToSpace with input shape
    ${s.shape}`),P(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t} for depthToSpace with input shape
        ${s.shape}`),P(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);let o={x:s},u={blockSize:t,dataFormat:n};return M.runKernel(Io,o,u)}var kD=z({depthToSpace_:wD});function SD(e,t,n,s,r="NHWC",a=[1,1],i){let o=_(e,"x","depthwiseConv2d","float32"),u=_(t,"filter","depthwiseConv2d","float32"),l=o,c=!1;o.rank===3&&(c=!0,l=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let p=r==="NHWC"?l.shape[3]:l.shape[1];P(p===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${u.shape[2]}.`),xn("depthwiseConv2d",s,i);let d={x:l,filter:u},h={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=M.runKernel(Wa,d,h);return c?U(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Wp=z({depthwiseConv2d_:SD});function ID(e){let n={x:_(e,"x","diag")};return M.runKernel(rb,n)}var CD=z({diag_:ID});function ND(e,t,n,s,r=[1,1],a="NHWC"){let i=_(e,"x","dilation2d"),o=_(t,"filter","dilation2d");P(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),P(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),P(a==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let u=i,l=!1;i.rank===3&&(u=U(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);let c={x:u,filter:o},p={strides:n,pad:s,dilations:r},d=M.runKernel(kp,c,p);return l?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var TD=z({dilation2d_:ND});function $D(e,t){let n=_(e,"a","equal","string_or_numeric"),s=_(t,"b","equal","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Co,r)}var as=z({equal_:$D});function _D(e,t,n){let s=_(t,"a","where"),r=_(n,"b","where"),a=_(e,"condition","where","bool"),i=it(it(a.shape,s.shape),r.shape),o=vd(a,i),u=vd(s,i),l=vd(r,i),c={condition:o,t:u,e:l};return M.runKernel(jo,c)}var En=z({where_:_D});function AD(e){let n={x:_(e,"x","zerosLike")};return M.runKernel(su,n)}var Ke=z({zerosLike_:AD});function ED(e,t){let n=_(e,"a","div"),s=_(t,"b","div");[n,s]=kt(n,s);let r=xe(n,s),a=Ke(r),i=as(s,a);return En(i,a,r)}var RD=z({divNoNan_:ED});function DD(e,t){let n=_(e,"t1","dot"),s=_(t,"t2","dot");P((n.rank===1||n.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`);let r=n.rank===1?n.size:n.shape[1],a=s.rank===1?s.size:s.shape[0];if(P(r===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`),n.rank===1&&s.rank===1){let i=U(n,[1,-1]),o=U(s,[-1,1]),u=Ve(i,o);return U(u,[])}else if(n.rank===1&&s.rank===2){let i=U(n,[1,-1]),o=U(s,[s.shape[0],s.shape[1]]),u=Ve(i,o);return U(u,[u.size])}else if(n.rank===2&&s.rank===1){let i=U(s,[-1,1]),o=Ve(n,i);return U(o,[o.size])}else{let i=U(s,[s.shape[0],s.shape[1]]);return Ve(n,i)}}var FD=z({dot_:DD});function OD(e,...t){let n=t.map((r,a)=>_(r,`tensors${a}`,"einsum")),s={equation:e};return M.runKernel(Sp,n,s)}var PD=z({einsum_:OD});function LD(e){let n={x:_(e,"x","elu","float32")};return M.runKernel(Ga,n)}var Up=z({elu_:LD});function zD(e){let t=_(e,"x","erf");P(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=de(t,"float32"));let n={x:t};return M.runKernel(El,n)}var MD=z({erf_:zD});function Fb(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function pS(e,t,n){let s=e.length+t.length,r=[],a=0,i=0;for(let o=0;o<s;o++)n.indexOf(o)===-1?r.push(e[a++]):r.push(t[i++]);return r}function hS(e,t){let n=[],s=e.length;for(let a=0;a<s;a++)t.indexOf(a)===-1&&n.push(e[a]);let r=t.map(a=>e[a]);return[n,r]}function wa(e,t){let n=t.map(s=>1);return pS(e,n,t)}function BD(e,t,n){P(Fb(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function fS(e,t){if(Fb(e,t))return null;let n=[];for(let s=0;s<t;++s)e.indexOf(s)===-1&&n.push(s);return e.forEach(s=>n.push(s)),n}function Ob(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function VD(e,t){let n=[];for(let s=t-e;s<t;++s)n.push(s);return n}function WD(e,t=null,n=!1){let r={x:_(e,"x","max")},a={reductionIndices:t,keepDims:n};return M.runKernel(Ja,r,a)}var Ls=z({max_:WD});function UD(e,t=null,n=!1){let r={x:_(e,"x","min")},a={axis:t,keepDims:n};return M.runKernel(si,r,a)}var sg=z({min_:UD});function GD(e,t){let n=_(e,"base","pow"),s=_(t,"exp","pow");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(ui,r)}var ka=z({pow_:GD});function Se(e,t){if((rn(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&rn(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Fr(e,[],[],t)}function HD(e){let n={x:_(e,"x","sqrt","float32")};return M.runKernel(yi,n)}var yn=z({sqrt_:HD});function qD(e){let t=_(e,"x","square"),n={};return M.runKernel("Square",{x:t},n)}var pt=z({square_:qD});function jD(e,t=null,n=!1){let s=_(e,"x","sum");s.dtype==="bool"&&(s=de(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return M.runKernel(vi,r,a)}var ve=z({sum_:jD});function KD(e,t="euclidean",n=null,s=!1){e=_(e,"x","norm");let r=mS(e,t,n),a=r.shape;if(s){let i=ls(n,e.shape);a=wa(r.shape,i)}return U(r,a)}function mS(e,t,n=null){if(e.rank===0)return Wt(e);if(e.rank!==1&&n===null)return mS(U(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ve(Wt(e),n);if(t===1/0)return Ls(Wt(e),n);if(t===-1/0)return sg(Wt(e),n);if(t==="euclidean"||t===2)return yn(ve(ka(Wt(e),Se(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return Ls(ve(Wt(e),n[0]),n[1]-1);if(t===1/0)return Ls(ve(Wt(e),n[1]),n[0]);if(t===-1/0)return sg(ve(Wt(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return yn(ve(pt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var Gp=z({norm_:KD});function XD(e,t=null,n=!1){return Gp(e,"euclidean",t,n)}var YD=z({euclideanNorm_:XD});function ZD(e){let n={x:_(e,"x","exp")};return M.runKernel(Ha,n)}var is=z({exp_:ZD});function QD(e,t=0){let n=_(e,"x","expandDims","string_or_numeric");P(t<=n.rank,()=>"Axis must be <= rank of the tensor");let s={input:n},r={dim:t};return M.runKernel(No,s,r)}var Nn=z({expandDims_:QD});function JD(e){let n={x:_(e,"x","expm1")};return M.runKernel(To,n)}var eF=z({expm1_:JD});function tF(e,t){let n=_(e,"x","tile","string_or_numeric");P(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let s={x:n},r={reps:t};return M.runKernel(Dr,s,r)}var ws=z({tile_:tF});function nF(e,t,n,s="float32"){t==null&&(t=e);let r=_e([e,t],s),a=e<=t?e:t;for(let o=0;o<a;++o)r.set(1,o,o);let i=U(r.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return ws(Nn(i,0),[n[0],1,1]);if(n.length===2)return ws(Nn(Nn(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return ws(Nn(Nn(Nn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var Pb=z({eye_:nF});function Ql(e,t,n){let s={shape:e,value:t,dtype:n};return M.runKernel(Rl,{},s)}function sF(e){let n={x:_(e,"x","floor","float32")};return M.runKernel(qa,n)}var Hp=z({floor_:sF});function rF(e,t,n=0,s=0){let r=_(e,"x","gather"),a=_(t,"indices","gather","int32"),i={x:r,indices:a},o={axis:n,batchDims:s};return M.runKernel(_o,i,o)}var qp=z({gather_:rF});function aF(e,t){let n=_(e,"a","greater","string_or_numeric"),s=_(t,"b","greater","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Eo,r)}var Jn=z({greater_:aF});function iF(e,t){let n=_(e,"a","greaterEqual","string_or_numeric"),s=_(t,"b","greaterEqual","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Xa,r)}var uu=z({greaterEqual_:iF});function oF(e){let n={x:_(e,"x","isFinite")};return M.runKernel(Dl,n)}var uF=z({isFinite_:oF});function lF(e){let n={x:_(e,"x","isInf")};return M.runKernel(Fl,n)}var cF=z({isInf_:lF});function dF(e){let n={x:_(e,"x","isNaN")};return M.runKernel(Ol,n)}var pF=z({isNaN_:dF});function hF(e,t=.2){let s={x:_(e,"x","leakyRelu")},r={alpha:t};return M.runKernel(Za,s,r)}var Lb=z({leakyRelu_:hF});function fF(e,t){let n=_(e,"a","less","string_or_numeric"),s=_(t,"b","less","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Ro,r)}var gS=z({less_:fF});function mF(e,t){let n=_(e,"a","lessEqual","string_or_numeric"),s=_(t,"b","lessEqual","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Do,r)}var lu=z({lessEqual_:mF});function gF(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let s={start:e,stop:t,num:n};return M.runKernel(ub,{},s)}function bF(e,t=5,n=1,s=1,r=.5){let a=_(e,"x","localResponseNormalization");P(a.rank===4||a.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${a.rank}.`),P(lo(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;a.rank===3&&(o=!0,i=U(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let u={x:i},l={depthRadius:t,bias:n,alpha:s,beta:r},c=M.runKernel(Cp,u,l);return o?U(c,[c.shape[1],c.shape[2],c.shape[3]]):c}var yF=z({localResponseNormalization_:bF});function vF(e){let n={x:_(e,"x","log","float32")};return M.runKernel(Qa,n)}var os=z({log_:vF});function xF(e){let n={x:_(e,"x","log1p")};return M.runKernel(Pl,n)}var zb=z({log1p_:xF});function wF(e,t){P(Ad(e),()=>"The f passed in variableGrads(f) must be a function"),P(t==null||Array.isArray(t)&&t.every(l=>l instanceof Pd),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let l in M.registeredVariables)t.push(M.registeredVariables[l])}let s=n?t.filter(l=>!l.trainable):null,r=t.length;t=t.filter(l=>l.trainable),P(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);let a=!0,{value:i,grads:o}=M.gradients(e,t,null,a);P(o.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return t.forEach((l,c)=>{o[c]!=null&&(u[l.name]=o[c])}),s!=null&&s.forEach(l=>u[l.name]=null),{value:i,grads:u}}function nr(e){return M.customGrad(e)}function kF(e){let n={x:_(e,"x","softplus")};return M.runKernel(Gl,n)}var Jl=z({softplus_:kF});function SF(e){let t=_(e,"x","logSigmoid");return nr(s=>({value:wt(Jl(wt(s))),gradFunc:i=>V(i,tr(wt(s)))}))(t)}var IF=z({logSigmoid_:SF});function CF(e,t){let n=_(e,"a","sub"),s=_(t,"b","sub");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(ki,r)}var me=z({sub_:CF});function NF(e,t=-1){let n=_(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return nr((r,a)=>{let o=Ls(r,t,!0),u=me(r,o),l=me(de(u,"float32"),os(ve(is(u),t,!0)));return a([l]),{value:l,gradFunc:(p,d)=>{let[h]=d,f=!0,m=is(h);return me(p,V(ve(p,t,f),m))}}})(n)}var bS=z({logSoftmax_:NF});function TF(e,t=null,n=!1){let s=_(e,"x","logSumExp"),r=ls(t,s.shape),a=Ls(s,r,!0),i=me(s,a),o=is(i),u=ve(o,r),l=os(u),c=ie(U(a,l.shape),l);if(n){let p=wa(c.shape,r);return U(c,p)}return c}var yS=z({logSumExp_:TF});function $F(e,t){let n=_(e,"a","logicalAnd","bool"),s=_(t,"b","logicalAnd","bool");it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Fo,r)}var Vs=z({logicalAnd_:$F});function _F(e){let n={x:_(e,"x","logicalNot","bool")};return M.runKernel(Oo,n)}var Mb=z({logicalNot_:_F});function AF(e,t){let n=_(e,"a","logicalOr","bool"),s=_(t,"b","logicalOr","bool");it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Ll,r)}var vS=z({logicalOr_:AF});function EF(e,t){let n=_(e,"a","logicalXor","bool"),s=_(t,"b","logicalXor","bool");return it(n.shape,s.shape),Vs(vS(e,t),Mb(Vs(e,t)))}var RF=z({logicalXor_:EF}),sd=2147483648;function DF(e,t,n="left"){let s=_(e,"sortedSequence","searchSorted"),r=_(t,"values","searchSorted"),a=s.shape[s.shape.length-1],i=r.shape[r.shape.length-1],o=U(s,[-1,a]),u=U(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ht(u.shape)>=sd)throw new Error(`values tensor size must less than ${sd}`);if(o.shape[1]>=sd)throw new Error(`trailing dim_size must less than ${sd} for int32 output type, was ${o.shape[1]}`);let l={sortedSequence:o,values:u},c={side:n};return M.runKernel(gb,l,c)}var Bb=z({searchSorted_:DF});function FF(e,t){return Bb(e,t,"left")}function OF(e,t,n,s,r){let a=_(e,"x","maxPool"),i=1,o=a,u=!1;a.rank===3&&(u=!0,o=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),P(Gs(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),xn("maxPool",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},p=M.runKernel(ti,l,c);return u?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Vb=z({maxPool_:OF});function PF(e,t=[1,1,1],n,s,r,a="NDHWC"){let i=_(e,"x","maxPool3d"),o=i,u=!1;i.rank===4&&(u=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),P(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),P(a==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),xn("maxPool3d",s,r);let l={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=M.runKernel(Np,l,c);return u?U(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}var xS=z({maxPool3d_:PF});function LF(e,t,n,s,r=!1){let i={x:_(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},u=M.runKernel(pb,i,o);return{result:u[0],indexes:u[1]}}var zF=z({maxPoolWithArgmax_:LF});function MF(e,t){let n=_(e,"a","maximum"),s=_(t,"b","maximum");[n,s]=kt(n,s),n.dtype==="bool"&&(n=de(n,"int32"),s=de(s,"int32")),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(ei,r)}var Pr=z({maximum_:MF});function BF(e,t=null,n=!1){let r={x:_(e,"x","mean")},a={axis:t,keepDims:n};return M.runKernel(ni,r,a)}var Nt=z({mean_:BF});function Et(e,t="float32"){if(t==="complex64"){let s=Et(e,"float32"),r=Et(e,"float32");return kr(s,r)}let n=gp(ht(e),t);return M.makeTensor(n,e,t)}function $n(e,t="float32"){if(t==="complex64"){let s=$n(e,"float32"),r=Et(e,"float32");return kr(s,r)}let n=Gg(ht(e),t);return M.makeTensor(n,e,t)}function VF(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let s=_(e,"x","meshgrid",e instanceof ut?e.dtype:"float32");if(t===void 0)return[s];let r=_(t,"y","meshgrid",t instanceof ut?t.dtype:"float32"),a=ht(s.shape),i=ht(r.shape);return n==="xy"?(s=U(s,[1,-1]),r=U(r,[-1,1]),[Ve($n([i,1],s.dtype),s),Ve(r,$n([1,a],r.dtype))]):(s=U(s,[-1,1]),r=U(r,[1,-1]),[Ve(s,$n([1,i],s.dtype)),Ve($n([a,1],r.dtype),r)])}function WF(e,t){let n=_(e,"a","minimum"),s=_(t,"b","minimum");[n,s]=kt(n,s),n.dtype==="bool"&&(n=de(n,"int32"),s=de(s,"int32")),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(ri,r)}var jp=z({minimum_:WF});function UF(e,t,n){P(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let s=_(e,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);let r=n==="reflect"?1:0;for(let o=0;o<s.rank;o++)P(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(t[o][0]>=0&&t[o][0]<=s.shape[o]-r&&t[o][1]>=0&&t[o][1]<=s.shape[o]-r,()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-r} or less than 0 for input of shape ${s.shape}`);let a={paddings:t,mode:n},i={x:s};return M.runKernel(ai,i,a)}var GF=z({mirrorPad_:UF});function HF(e,t){let n=_(e,"a","mod"),s=_(t,"b","mod");[n,s]=kt(n,s);let r={a:n,b:s};return M.runKernel(zl,r)}var qF=z({mod_:HF});function jF(e,t=null,n=!1){e=_(e,"x","moments");let s=ls(t,e.shape),r=Nt(e,s,n),a=r.shape;n||(a=wa(r.shape,s));let i=pt(me(de(e,"float32"),U(r,a))),o=Nt(i,s,n);return{mean:r,variance:o}}var Kp=z({moments_:jF});function KF(e,t,n,s){let r=_(t,"data","multiRNNCell"),a=Ld(n,"c","multiRNNCell"),i=Ld(s,"h","multiRNNCell"),o=r,u=[];for(let p=0;p<e.length;p++){let d=e[p](o,a[p],i[p]);u.push(d[0]),u.push(d[1]),o=d[1]}let l=[],c=[];for(let p=0;p<u.length;p+=2)l.push(u[p]),c.push(u[p+1]);return[l,c]}var XF=z({multiRNNCell_:KF});function YF(e,t,n,s=!1){let r=_(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let u={logits:i===1?U(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:s},c=M.runKernel(hb,u,l);return i===1?U(c,[c.size]):c}var ZF=z({multinomial_:YF});function QF(e,t){let n=_(e,"a","notEqual","string_or_numeric"),s=_(t,"b","notEqual","string_or_numeric");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s};return M.runKernel(Lo,r)}var cl=z({notEqual_:QF});function JF(e){let n={x:_(e,"x","onesLike")};return M.runKernel(Bo,n)}var us=z({onesLike_:JF});function e3(e,t){let n=_(e,"v1","outerProduct"),s=_(t,"v2","outerProduct");P(n.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`);let r=U(n,[-1,1]),a=U(s,[1,-1]);return Ve(r,a)}var t3=z({outerProduct_:e3});function n3(e,t,n=0){let s=_(e,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},a={x:s};return M.runKernel(oi,a,r)}var Ci=z({pad_:n3});function s3(e,t,n=0){return P(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ci(e,[t],n)}var r3=z({pad1d_:s3});function a3(e,t,n=0){return P(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ci(e,t,n)}var i3=z({pad2d_:a3});function o3(e,t,n=0){return P(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ci(e,t,n)}var u3=z({pad3d_:o3});function l3(e,t,n=0){return P(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ci(e,t,n)}var c3=z({pad4d_:l3});function d3(e,t,n){let s=_(e,"x","spaceToBatchND");P(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),P(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),P(s.shape.reduce((i,o,u)=>u>0&&u<=t.length?i&&(o+n[u-1][0]+n[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let r={x:s},a={blockShape:t,paddings:n};return M.runKernel(Yo,r,a)}var Wb=z({spaceToBatchND_:d3});function p3(e,t,n,s,r,a,i){r==null&&(r=[1,1]),a==null&&(a=1),s===0&&(s="valid");let o=_(e,"x","maxPool"),u=o,l=!1;o.rank===3&&(l=!0,u=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(Gs(a,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`);let c=j0(u.shape,t,a,r,s),p=[c.dilationHeight,c.dilationWidth],d;s==="same"?d=f3([c.filterHeight,c.filterWidth],p):d=[[0,0],[0,0]];let h=p[0]===1&&p[1]===1,[f,m]=h3([c.inHeight,c.inWidth],p,d),g=h?s:"valid",b=h?u:Wb(u,p,f),v=(n==="avg"?()=>Ab(b,t,a,g,i):()=>Vb(b,t,a,g,i))(),x=h?v:Eb(v,p,m);return l?U(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function h3(e,t,n){let s=n.map(c=>c[0]),r=n.map(c=>c[1]),a=e.concat(s,r),i=t.map((c,p)=>(c-a[p]%c)%c),o=r.map((c,p)=>c+i[p]),u=t.map((c,p)=>[s[p],o[p]]),l=t.map((c,p)=>[0,i[p]]);return[u,l]}function f3(e,t){let s=e.map((i,o)=>i+(i-1)*(t[o]-1)).map(i=>i-1),r=s.map(i=>Math.floor(i/2)),a=s.map((i,o)=>i-r[o]);return s.map((i,o)=>[r[o],a[o]])}var m3=z({pool_:p3});function g3(e,t){let n=_(e,"x","prelu"),s=_(t,"alpha","prelu"),r={x:n,alpha:s};return M.runKernel(li,r)}var Ub=z({prelu_:g3});function b3(e,t=null,n=!1){let s=_(e,"x","prod");s.dtype==="bool"&&(s=de(s,"int32"));let r={x:s},a={axis:t,keepDims:n};return M.runKernel(ci,r,a)}var y3=z({prod_:b3});function v3(e,t,n){let s=ht(e),r=null;if(n==null||n==="float32")r=new Float32Array(s);else if(n==="int32")r=new Int32Array(s);else if(n==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${n}`);for(let a=0;a<s;a++)r[a]=t();return M.makeTensor(r,e,n)}var x3=z({rand_:v3}),Gb=_a(pp()),Hb=class{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let a=r||Math.random();this.random=Gb.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){let s=this.nextVal;return this.nextVal=NaN,s}let e,t,n=!1;for(;!n;){let s,r,a;do s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r;while(a>=1||a===0);let i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},w3=class{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;let r=s||Math.random();this.randu=Gb.alea(r.toString()),this.randn=new Hb(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},k3=class{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Gb.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function S3(e,t,n=1,s="float32",r){if(n==null&&(n=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);let a=new w3(t,n,s,r),i=_e(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var I3=z({randomGamma_:S3});function C3(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);let a=new Hb(t,n,s,!1,r),i=_e(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var qb=z({randomNormal_:C3});function N3(e,t,n){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return qb(e,0,1,t,n)}var T3=z({randomStandardNormal_:N3});function $3(e,t=0,n=1,s="float32",r){let a=_e(e,s),i=new k3(t,n,null,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}var ec=z({randomUniform_:$3});function dl(e,t,n=1,s="float32"){if(n===0)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:s};return M.runKernel(Bl,{},r)}function _3(e){let n={x:_(e,"x","reciprocal")};return M.runKernel(Vl,n)}var A3=z({reciprocal_:_3});function E3(e){let n={x:_(e,"x","relu")};return M.runKernel(di,n)}var rr=z({relu_:E3});function R3(e){let n={x:_(e,"x","relu6")};return M.runKernel(fi,n)}var wS=z({relu6_:R3});function D3(e,t){let s={x:_(e,"x","reverse")},r={dims:t};return M.runKernel(Go,s,r)}var Is=z({reverse_:D3});function F3(e){let t=_(e,"x","reverse");return P(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Is(t,0)}var O3=z({reverse1d_:F3});function P3(e,t){let n=_(e,"x","reverse");return P(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Is(n,t)}var L3=z({reverse2d_:P3});function z3(e,t){let n=_(e,"x","reverse");return P(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Is(n,t)}var M3=z({reverse3d_:z3});function B3(e,t){let n=_(e,"x","reverse");return P(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Is(n,t)}var V3=z({reverse4d_:B3});function W3(e){let n={x:_(e,"x","round")};return M.runKernel(Ho,n)}var kS=z({round_:W3});function U3(e){let n={x:_(e,"x","rsqrt","float32")};return M.runKernel(mi,n)}var SS=z({rsqrt_:U3});function G3(e){let n={x:_(e,"x","selu")};return M.runKernel(Wl,n)}var IS=z({selu_:G3});function H3(e,t,n,s,r,a=[1,1],i="NHWC"){let o=_(e,"x","separableConv2d"),u=_(t,"depthwiseFilter","separableConv2d"),l=_(n,"pointwiseFilter","separableConv2d"),c=o,p=!1;if(o.rank===3&&(p=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),P(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);let d=u.shape[2],h=u.shape[3];P(l.shape[2]===d*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*h}, but got ${l.shape[2]}.`);let f=Wp(c,u,s,r,i,a),g=xa(f,l,1,"valid",i);return p?U(g,[g.shape[1],g.shape[2],g.shape[3]]):g}var CS=z({separableConv2d_:H3});async function q3(e,t){let n=_(e,"x","setdiff1d"),s=_(t,"y","setdiff1d");P(n.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`),P(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),P(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);let r=await n.data(),a=await s.data(),i=new Set(a),o=0;for(let c=0;c<r.length;c++)i.has(r[c])||o++;let u=new Ht([o],n.dtype),l=new Ht([o],"int32");for(let c=0,p=0;c<r.length;c++)i.has(r[c])||(u.values[p]=r[c],l.values[p]=c,p++);return[u.toTensor(),l.toTensor()]}var j3=q3;function K3(e){let n={x:_(e,"x","sign")};return M.runKernel(Ul,n)}var X3=z({sign_:K3});function Y3(e){let n={x:_(e,"x","sin","float32")};return M.runKernel(gi,n)}var NS=z({sin_:Y3});function Z3(e){let n={x:_(e,"x","sinh")};return M.runKernel(Xo,n)}var TS=z({sinh_:Z3});function Q3(e,t,n){let s=_(e,"x","slice1d");return P(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),je(s,[t],[n])}var Xp=z({slice1d_:Q3});function J3(e,t,n){let s=_(e,"x","slice2d");return P(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),je(s,t,n)}var jb=z({slice2d_:J3});function eO(e,t,n){let s=_(e,"x","slice3d");return P(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),je(s,t,n)}var Yp=z({slice3d_:eO});function tO(e,t,n){let s=_(e,"x","slice4d");return P(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),je(s,t,n)}var pl=z({slice4d_:tO});function nO(e,t=-1){let n=_(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let s={logits:n},r={dim:t};return M.runKernel(xi,s,r)}var Kb=z({softmax_:nO});function sO(e){P(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return M.runKernel(ib,t)}var Xb=z({fft_:sO});function rO(e){P(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return M.runKernel(ob,t)}var Wd=z({ifft_:rO});function aO(e){let t=e.shape[e.shape.length-1],n=e.size/t,s;if(t<=2){let r=U(e,[n,t]);s=Wd(r)}else{let r=[n,2*(t-1)],a=U(ol(e),[n,t]),i=U(Mp(e),[n,t]),o=Is(je(a,[0,1],[n,t-2]),1),u=V(Is(je(i,[0,1],[n,t-2]),1),Se(-1)),l=Lt([a,o],1),c=Lt([i,u],1),p=U(kr(l,c),[r[0],r[1]]);s=Wd(p)}if(s=ol(s),e.rank===3&&e.shape[0]!==0){let r=s,a=e.shape[0];s=U(s,[a,s.shape[0]/a,s.shape[1]]),r.dispose()}return s}var $S=z({irfft_:aO});function iO(e,t,n=0){let r={x:_(e,"x","split")},a={numOrSizeSplits:t,axis:n};return M.runKernel(Zo,r,a)}var _n=z({split_:iO});function oO(e,t){P(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],s=e.size/n,r;if(t!=null&&t<n){let f=e.shape.map(g=>0),m=e.shape.map(g=>g);m[e.shape.length-1]=t,r=je(e,f,m),n=t}else if(t!=null&&t>n){let f=e.shape.map(m=>m);f[e.shape.length-1]=t-n,r=Lt([e,Et(f)],e.shape.length-1),n=t}else r=e;let a=Ke(r),i=U(kr(r,a),[s,n]),o=Xb(i),u=Math.floor(n/2)+1,l=ol(o),c=Mp(o),p=_n(l,[u,n-u],l.shape.length-1),d=_n(c,[u,n-u],c.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=u,U(kr(p[0],d[0]),h)}var Yb=z({rfft_:oO});function uO(e,t){let n=_(e,"a","squaredDifference"),s=_(t,"b","squaredDifference");[n,s]=kt(n,s),it(n.shape,s.shape);let r={a:n,b:s},a={};return M.runKernel(wi,r,a)}var _S=z({squaredDifference_:uO});function lO(e,t){let n=_(e,"x","squeeze","string_or_numeric");return U(n,Pk(n.shape,t).newShape)}var Lr=z({squeeze_:lO});function cO(e,t=0){let n=Ld(e,"tensors","stack","string_or_numeric");P(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&P(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let s=n,r={axis:t};return M.runKernel(Wo,s,r)}var Wn=z({stack_:cO});function dO(e,t=0){let s={x:_(e,"x","step")},r={alpha:t};return M.runKernel(Ii,s,r)}var tc=z({step_:dO});function pO(e,t,n,s,r=0,a=0,i=0,o=0,u=0){let c={x:_(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return M.runKernel(Qo,c,p)}var hO=z({stridedSlice_:pO});function fO(e){let n={x:_(e,"x","tan","float32")};return M.runKernel(Jo,n)}var mO=z({tan_:fO});function gn(e,t){Aa(e);let n=Bs(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Fr(e,null,n,t)}function ca(e,t,n){if(Aa(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let s=Bs(e,n);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Fr(e,t,s,n)}function gO(e,t,n){if(Aa(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let s=Bs(e,n);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Fr(e,t,s,n)}function bO(e,t,n){if(Aa(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let s=Bs(e,n);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Fr(e,t,s,n)}function yO(e,t,n){if(Aa(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let s=Bs(e,n);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Fr(e,t,s,n)}function vO(e,t=1,n=!0){let s=_(e,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let a={x:s},i={k:t,sorted:n},[o,u]=M.runKernel(eu,a,i);return{values:o,indices:u}}var xO=z({topk_:vO});function wO(e,t=0,n=1,s,r){if(s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");let a=new Hb(t,n,s,!0,r),i=_e(e,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}var Zb=z({truncatedNormal_:wO});function kO(e,t=0){let n=_(e,"x","unique","string_or_numeric");P(n.rank>0,()=>"The input tensor must be at least 1D");let s={x:n},r={axis:t},[a,i]=M.runKernel(bb,s,r);return{values:a,indices:i}}var SO=z({unique_:kO});function IO(e,t,n){let s=_(e,"x","unsortedSegmentSum"),r=_(t,"segmentIds","unsortedSegmentSum","int32");P(lo(n),()=>"numSegments must be of dtype int");let a={x:s,segmentIds:r},i={numSegments:n};return M.runKernel(Fp,a,i)}var AS=z({unsortedSegmentSum_:IO});function CO(e,t=0){let n=_(e,"x","unstack","string_or_numeric");P(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let s={value:n},r={axis:t};return M.runKernel(nu,s,r)}var Ws=z({unstack_:CO});function NO(e,t){return Bb(e,t,"right")}function ES(e,t=!0,n,s){return M.makeVariable(e,t,n,s)}function RS(e,t){let n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);let s=_e(e,"int32"),r=_e([n.length,e.length],"int32");for(let a=0;a<n.length;a++){let i=s.indexToLoc(n[a]),o=a*e.length;r.values.set(i,o)}return r.toTensor()}async function TO(e){let t=_(e,"condition","whereAsync","bool"),n=await t.data(),s=RS(t.shape,n);return e!==t&&t.dispose(),s}var DS=TO;async function $O(e,t,n){let s=_(e,"tensor","boolMask"),r=_(t,"mask","boolMask","bool"),a=n==null?0:n,i=r.rank,o=s.shape;P(i>0,()=>"mask cannot be scalar"),Qn(o.slice(a,a+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=a;m<a+i;m++)u*=o[m];let l=o.slice(0,a).concat([u],o.slice(a+i)),c=U(s,l),p=U(r,[-1]),d=await DS(p),h=Lr(d,[1]),f=qp(c,h,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),h.dispose(),c.dispose(),p.dispose(),d.dispose(),f}var _O=$O;function AO(e,t,n,s,r=!0){let a=_(e,"v","movingAverage"),i=_(t,"x","movingAverage"),o=_(n,"decay","movingAverage");e0(a,i),P(Ar(a.shape,i.shape),()=>"Shape mismatch in v and x");let u=Se(1),l=me(u,o),c=V(me(i,a),l);if(r){P(s!=null,()=>"When using zeroDebias: true, step is required.");let p=_(s,"step","movingAverage");c=xe(c,me(u,ka(o,p)))}return ie(a,c)}var EO=z({movingAverage_:AO});function RO(e,t,n){let s=_(e,"indices","scatterND","int32"),r=_(t,"updates","scatterND");Nb(r,s,n);let a={indices:s,updates:r},i={shape:n};return M.runKernel(qo,a,i)}var DO=z({scatterND_:RO});function FO(e,t,n,s){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function OO(e,t,n,s=0){let r=_(e,"sparseIndices","sparseToDense","int32"),a=_(t,"sparseValues","sparseToDense","string_or_numeric"),i=_(s,"defaultValue","sparseToDense",a.dtype);FO(r,a,n,i);let o={sparseIndices:r,sparseValues:a,defaultValue:i},u={outputShape:n};return M.runKernel(Ep,o,u)}var PO=z({sparseToDense_:OO});function LO(e,t){let n=_(t,"indices","gatherND","int32"),r={params:_(e,"x","gatherND","string_or_numeric"),indices:n};return M.runKernel(Ao,r)}var zO=z({gatherND_:LO});function MO(e,t){if(t==null)return e.shape.slice();if(Ar(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let s=0;s<e.shape.length;s++)t[s]==null&&e.shape[s]!=null?n.push(e.shape[s]):n.push(t[s]);return n}return t}function BO(e,t,n,s){let r=_(e,"x","dropout");if(P(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),P(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof ut?r.clone():r;let a=MO(r,n),i=1-t,o=xe(Hp(ie(ec(a,0,1,"float32",s),i)),i);return V(r,o)}var FS=z({dropout_:BO});function OS(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Qb(e,t,n){let s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){let i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return gn(r,"float32")}async function VO(e,t,n=1){let s=_(e,"predictions","inTopK"),r=_(t,"targets","inTopK");P(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),P(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),Qn(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let a=s.shape[s.shape.length-1];P(n>0&&n<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`);let i=await s.data(),o=await r.data(),[u,l]=[i.length/a,a],c=Lk("bool",u);for(let p=0;p<u;p++){let d=p*l,h=i.subarray(d,d+l),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,g)=>g.value-m.value),c[p]=0;for(let m=0;m<n;m++)if(f[m].index===o[p]){c[p]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),rs(c,r.shape,"bool")}var WO=VO,hl={};Ee(hl,{conv2d:()=>HO,depthwiseConv2d:()=>XO,matMul:()=>ZO});function UO(e,t,n,s,r,a="NHWC",i){let o=e;e.rank===3&&(o=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=U(t,[1,t.shape[0],t.shape[1],t.shape[2]])),P(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),P(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),P(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let l=a==="NHWC"?o.shape[3]:o.shape[1],c=a==="NHWC"?u.shape[3]:u.shape[1];P(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),P(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),xn("conv2dDerFilter",r,i);let p={x:o,dy:u},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return M.runKernel(Qg,p,d)}var Jb=z({conv2DBackpropFilter_:UO});function Zp(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return V(e,tc(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Qp(e,t){let n=t,s=Rt(e.shape,t.shape);return s.length>0&&(n=ve(n,s)),U(n,e.shape)}function Jp(e,t,n,s){if(t==="linear")return e;if(t==="relu")return rr(e);if(t==="elu")return Up(e);if(t==="relu6")return wS(e);if(t==="prelu")return Ub(e,n);if(t==="leakyrelu")return Lb(e,s);if(t==="sigmoid")return tr(e);throw new Error(`Unknown fused activation ${t}.`)}var eh=(e,t)=>!(e>0)||t==="linear";function GO({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",eh(M.state.gradientDepth,u)===!1){P(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let C=xa(e,t,n,s,r,a,i);return o!=null&&(C=ie(C,o)),Jp(C,u,l,c)}let p=_(e,"x","conv2d","float32"),d=_(t,"filter","conv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=U(p,[1,p.shape[0],p.shape[1],p.shape[2]])),P(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),P(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),xn("fused conv2d",s,i);let m=r==="NHWC"?h.shape[3]:h.shape[1];P(d.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`),P(Gs(n,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let g=Zl(h.shape,d.shape,n,a,s,i),b;o!=null&&(b=_(o,"bias","fused conv2d"),[b]=kt(b,p),r==="NHWC"?it(g.outShape,b.shape):(P(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),P(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let y;if(l!=null){let C=l.shape;if(P(C.length<=1||C.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${C.length}.`),C.length===1)P(C[0]===1||C[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the number of output channels (${g.outChannels}).`);else if(C.length===3)try{it(C,g.outShape)}catch($){let A=`Error in fused conv2d: PReLU activation weights (${C}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(A)}y=_(l,"prelu weights","fused conv2d")}let v=(C,$)=>{P(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);let[A,E,O,R]=$,D=Zp(C,O,u);P(Sr(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);let T=Rb(E.shape,D,A,n,s),L=Jb(E,D,A.shape,n,s),W=[T,L];if(R!=null){let q=Qp(R,D);W.push(q)}return W},x={x:h,filter:d,bias:b,preluActivationWeights:y},k={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return o==null?nr(($,A,E)=>{let O=M.runKernel(ga,x,k);return E([A,$,O]),f&&(O=U(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:v}})(h,d):nr(($,A,E,O)=>{let R=M.runKernel(ga,x,k);return O([A,$,R,E]),f&&(R=U(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:v}})(h,d,b)}var HO=z({fusedConv2d_:GO});function qO(e,t,n,s,r,a=[1,1],i){let o=e;e.rank===3&&(o=U(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={x:o,dy:u},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return M.runKernel(nb,l,c)}var PS=z({depthwiseConv2dNativeBackpropFilter_:qO});function jO(e,t,n,s,r,a=[1,1],i){let o=t,u=!1;t.rank===3&&(u=!0,o=U(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let l={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},p=M.runKernel(sb,l,c);return u?U(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var LS=z({depthwiseConv2dNativeBackpropInput_:jO});function KO({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(eh(M.state.gradientDepth,u)===!1){let k=Wp(e,t,n,s,r,a,i);return o!=null&&(k=ie(k,o)),Jp(k,u,l,c)}let p=_(e,"x","depthwiseConv2d","float32"),d=_(t,"filter","depthwiseConv2d","float32"),h=p,f=!1;p.rank===3&&(f=!0,h=U(p,[1,p.shape[0],p.shape[1],p.shape[2]])),P(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),P(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),P(h.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),a==null&&(a=[1,1]),P(Gs(n,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),xn("fused depthwiseConv2d",s,i);let m=Zl(h.shape,d.shape,n,a,s,i,!0),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=kt(g,p),it(m.outShape,g.shape));let b;l!=null&&(b=_(l,"prelu weights","fused depthwiseConv2d"));let y=(k,C)=>{P(Sr(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);let[$,A,E,O]=C,R=Zp(k,E,u),D=LS(A.shape,R,$,n,s,a,i),T=PS(A,R,$.shape,n,s,a,i);if(O!=null){let L=Qp(g,R);return[D,T,L]}return[D,T]},v={x:h,filter:d,bias:g,preluActivationWeights:b},x={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};return o==null?nr((C,$,A)=>{let E=M.runKernel(ba,v,x);return A([$,C,E]),f&&(E=U(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:y}})(h,d):nr((C,$,A,E)=>{let O=M.runKernel(ba,v,x);return E([$,C,O,A]),f&&(O=U(O,[O.shape[1],O.shape[2],O.shape[3]])),{value:O,gradFunc:y}})(h,d,g)}var XO=z({fusedDepthwiseConv2d_:KO});function YO({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(eh(M.state.gradientDepth,a)===!1){let R=Ve(e,t,n,s);return r!=null&&(R=ie(R,r)),Jp(R,a,i,o)}let u=_(e,"a","fused matMul"),l=_(t,"b","fused matMul");[u,l]=kt(u,l);let c=n?u.shape[u.rank-2]:u.shape[u.rank-1],p=s?l.shape[l.rank-1]:l.shape[l.rank-2],d=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=s?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=ht(f),b=ht(m);P(c===p,()=>`Error in fused matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${s} must match.`);let v=it(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([d,h]),x=n?U(u,[g,c,d]):U(u,[g,d,c]),k=s?U(l,[b,h,p]):U(l,[b,p,h]),C;r!=null&&(C=_(r,"bias","fused matMul"),[C]=kt(C,u),it(v,C.shape));let $;i!=null&&($=_(i,"prelu weights","fused matMul"));let A=(R,D)=>{let[T,L,W,q]=D,j=Zp(U(R,W.shape),W,a),X,Q;if(!n&&!s?(X=Ve(j,L,!1,!0),Q=Ve(T,j,!0,!1)):!n&&s?(X=Ve(j,L,!1,!1),Q=Ve(j,T,!0,!1)):n&&!s?(X=Ve(L,j,!1,!0),Q=Ve(T,j,!1,!1)):(X=Ve(L,j,!0,!0),Q=Ve(j,T,!0,!0)),r!=null){let ne=Qp(q,j);return[X,Q,ne]}else return[X,Q]},E={a:x,b:k,bias:C,preluActivationWeights:$},O={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};return r==null?nr((D,T,L)=>{let W=M.runKernel(ma,E,O);return L([D,T,W]),{value:U(W,v),gradFunc:A}})(x,k):nr((D,T,L,W)=>{let q=M.runKernel(ma,E,O);return W([D,T,q,L]),{value:U(q,v),gradFunc:A}})(x,k,C)}var ZO=z({fusedMatMul_:YO});function QO(e){return Qb(e,.54,.46)}var JO=z({hammingWindow_:QO});function eP(e){return Qb(e,.5,.5)}var zS=z({hannWindow_:eP});function tP(e,t,n,s=!1,r=0){let a=0,i=[];for(;a+t<=e.size;)i.push(je(e,a,t)),a+=n;if(s)for(;a<e.size;){let o=a+t-e.size,u=Lt([je(e,a,t-o),Ql([o],r)]);i.push(u),a+=n}return i.length===0?ca([],[0,t]):U(Lt(i),[i.length,t])}var MS=z({frame_:tP});function nP(e,t,n,s,r=zS){s==null&&(s=OS(t));let a=MS(e,t,n),i=V(a,r(t));return Yb(i,s)}var sP=z({stft_:nP});function rP(e,t,n,s,r="bilinear",a=0){let i=_(e,"image","cropAndResize"),o=_(t,"boxes","cropAndResize","float32"),u=_(n,"boxInd","cropAndResize","int32"),l=o.shape[0];P(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),P(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),P(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),P(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),P(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),P(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);let c={image:i,boxes:o,boxInd:u},p={method:r,extrapolationValue:a,cropSize:s};return M.runKernel(So,c,p)}var aP=z({cropAndResize_:rP});function iP(e){let t=_(e,"image","flipLeftRight","float32");P(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return M.runKernel($o,n,{})}var oP=z({flipLeftRight_:iP});function uP(e){let t=_(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];P(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),P(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,ws(t,r)}var lP=z({grayscaleToRGB_:uP});function cP(e,t,n=0,s=.5){let r=_(e,"image","rotateWithOffset","float32");P(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);let a={image:r},i={radians:t,fillValue:n,center:s};return M.runKernel(ru,a,i)}var dP=z({rotateWithOffset_:cP});function cu(e,t,n,s,r,a){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),a==null&&(a=0);let i=e.shape[0];return n=Math.min(n,i),P(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),P(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),P(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),P(t.rank===1,()=>"scores must be a 1D tensor"),P(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),P(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function pP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=_(e,"boxes","nonMaxSuppression","float32"),i=_(t,"scores","nonMaxSuppression","float32"),o=cu(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;let u={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return M.runKernel(zo,{boxes:a,scores:i},u)}var hP=z({nonMaxSuppression_:pP});function fP(e,t,n){let s=mP(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function mP(e,t,n){return bP(e,t,n||gP)}function gP(e,t){return e>t?1:e<t?-1:0}function bP(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);let o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}function BS(e,t,n,s,r){return ey(e,t,n,s,r,0)}function VS(e,t,n,s,r,a){return ey(e,t,n,s,r,0,!1,a,!0)}function WS(e,t,n,s,r,a){return ey(e,t,n,s,r,a,!0)}function ey(e,t,n,s,r,a,i=!1,o=!1,u=!1){let l=[];for(let g=0;g<t.length;g++)t[g]>r&&l.push({score:t[g],boxIndex:g,suppressBeginIndex:0});l.sort(aw);let c=a>0?-.5/a:0,p=[],d=[];for(;p.length<n&&l.length>0;){let g=l.pop(),{score:b,boxIndex:y,suppressBeginIndex:v}=g;if(b<r)break;let x=!1;for(let k=p.length-1;k>=v;--k){let C=yP(e,y,p[k]);if(C>=s){x=!0;break}if(g.score=g.score*vP(s,c,C),g.score<=r)break}g.suppressBeginIndex=p.length,x||(g.score===b?(p.push(y),d.push(g.score)):g.score>r&&fP(l,g,aw))}let h=p.length,f=n-h;o&&f>0&&(p.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:p};return i&&(m.selectedScores=d),u&&(m.validOutputs=h),m}function yP(e,t,n){let s=e.subarray(t*4,t*4+4),r=e.subarray(n*4,n*4+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),l=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),p=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),h=(o-a)*(u-i),f=(p-l)*(d-c);if(h<=0||f<=0)return 0;let m=Math.max(a,l),g=Math.max(i,c),b=Math.min(o,p),y=Math.min(u,d),v=Math.max(b-m,0)*Math.max(y-g,0);return v/(h+f-v)}function vP(e,t,n){let s=Math.exp(t*n*n);return n<=e?s:0}function aw(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function xP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){let a=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),o=cu(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;let u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:p}=BS(l,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),gn(p,"int32")}var wP=xP;function kP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),u=cu(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;let l={boxes:i,scores:o},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a},p=M.runKernel(Mo,l,c);return{selectedIndices:p[0],selectedScores:p[1]}}var SP=z({nonMaxSuppressionWithScore_:kP});async function IP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),u=cu(i,o,n,s,r,a);n=u.maxOutputSize,s=u.iouThreshold,r=u.scoreThreshold,a=u.softNmsSigma;let l=await Promise.all([i.data(),o.data()]),c=l[0],p=l[1],{selectedIndices:d,selectedScores:h}=WS(c,p,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:gn(d,"int32"),selectedScores:gn(h)}}var CP=IP;function NP(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),u=cu(i,o,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,d={boxes:i,scores:o},h={maxOutputSize:l,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:a},f=M.runKernel(Ml,d,h);return{selectedIndices:f[0],validOutputs:f[1]}}var TP=z({nonMaxSuppressionPadded_:NP});async function $P(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),u=cu(i,o,n,s,r,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[d,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=VS(d,h,l,c,p,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:gn(f,"int32"),validOutputs:Se(m,"int32")}}var _P=$P;function AP(e,t,n=!1,s=!1){let r=_(e,"images","resizeBilinear");P(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),P(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),P(s===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=r,i=!1;r.rank===3&&(i=!0,a=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},l=M.runKernel(hi,o,u);return i?U(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var EP=z({resizeBilinear_:AP});function RP(e,t,n=!1,s=!1){let r=_(e,"images","resizeNearestNeighbor");P(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),P(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),P(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(s===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=r,i=!1;r.rank===3&&(i=!0,a=U(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:s,size:t},l=M.runKernel(pi,o,u);return i?U(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var DP=z({resizeNearestNeighbor_:RP});function FP(e,t="binary",n=!1,s=.5){let r=_(e,"image","threshold"),a=.2989,i=.587,o=.114,u=r.shape[0]*r.shape[1],l=V(gn([s]),255),c,p,d,h;if(P(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),P(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),P(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),P(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),r.shape[2]===3){[c,p,d]=_n(r,[1,1,1],-1);let g=V(c,a),b=V(p,i),y=V(d,o);h=ie(ie(g,b),y)}else h=e;if(t==="otsu"){let g=eS(de(kS(h),"int32"),rs([]),256);l=OP(g,u)}let f=n?lu(h,l):Jn(h,l);return de(V(f,255),"int32")}function OP(e,t){let n=gn([-1]),s=gn([0]),r=gn([0]),a,i,o,u,l,c;for(let p=0;p<e.size-1;p++){a=je(e,0,p+1),i=je(e,p+1),l=xe(ve(a),t),c=xe(ve(i),t);let d=ve(V(a,dl(0,a.size)));o=xe(d,ve(a));let h=Ql(i.shape,a.size),f=ie(dl(0,i.size),h),m=V(i,f);u=xe(ve(m),ve(i));let g=me(o,u),b=me(o,u),y=V(l,c);r=V(V(y,g),b);let v=Jn(r,s);s=En(v,r,s),n=En(v,gn([p]),n)}return n}var PP=z({threshold_:FP});function LP(e,t,n="nearest",s="constant",r=0,a){let i=_(e,"image","transform","float32"),o=_(t,"transforms","transform","float32");P(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),P(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(a==null||a.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`);let u={image:i,transforms:o},l={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return M.runKernel(tu,u,l)}var zP=z({transform_:LP});function MP(e,t,n){P(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),P(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);let s=_(e,"a","bandPart");P(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);let r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);let o=U(dl(0,a,1,"int32"),[-1,1]),u=dl(0,i,1,"int32"),l=me(o,u),c=Vs(lu(l,Se(+t,"int32")),uu(l,Se(-n,"int32"))),p=Et([a,i],s.dtype);return U(Wn(Ws(U(s,[-1,a,i])).map(d=>En(c,d,p))),r)}var BP=z({bandPart_:MP});function VP(e){let t;if(Array.isArray(e)){t=!1,P(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let r=e[0].shape[0];for(let a=1;a<e.length;++a)P(e[a].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[a].shape[0]} vs. ${r})`)}else t=!0,e=_n(e,e.shape[0],0).map(r=>Lr(r,[0]));P(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],s=e;for(let r=0;r<e.length;++r)n.push(M.tidy(()=>{let a=s[r];if(r>0)for(let i=0;i<r;++i){let o=V(ve(V(n[i],a)),n[i]);a=me(a,o)}return xe(a,Gp(a,"euclidean"))}));return t?Wn(n,0):n}var WP=z({gramSchmidt_:VP});function UP(e,t=!1){if(P(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return iw(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((u,l)=>u*l),s=Ws(U(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];s.forEach(u=>{let[l,c]=iw(u,t);r.push(l),a.push(c)});let i=U(Wn(r,0),e.shape),o=U(Wn(a,0),e.shape);return[i,o]}}function iw(e,t=!1){return M.tidy(()=>{P(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],s=e.shape[1],r=Pb(n),a=er(e),i=ca([[1]],[1,1]),o=er(i),u=n>=s?s:n;for(let l=0;l<u;++l){let c=a,p=o,d=r;[o,a,r]=M.tidy(()=>{let h=je(a,[l,l],[n-l,1]),f=Gp(h),m=je(a,[l,l],[1,1]),g=En(Jn(m,0),ca([[-1]]),ca([[1]])),b=me(m,V(g,f)),y=xe(h,b);y.shape[0]===1?o=er(i):o=Lt([i,je(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);let v=wt(xe(Ve(g,b),f)),x=je(a,[l,0],[n-l,s]),k=V(v,o),C=Ue(o);if(l===0)a=me(x,Ve(k,Ve(C,x)));else{let E=me(x,Ve(k,Ve(C,x)));a=Lt([je(a,[0,0],[l,s]),E],0)}let $=Ue(k),A=je(r,[0,l],[n,r.shape[1]-l]);if(l===0)r=me(A,Ve(Ve(A,o),$));else{let E=me(A,Ve(Ve(A,o),$));r=Lt([je(r,[0,0],[n,l]),E],1)}return[o,a,r]}),Fe([c,p,d])}return!t&&n>s&&(r=je(r,[0,0],[n,s]),a=je(a,[0,0],[s,s])),[r,a]})}var GP=z({qr_:UP}),HP=(e=>(e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",e))(HP||{});function qP(e,t,n=3){let s=_(e,"losses","computeWeightedLoss"),r=null;t!=null&&(r=_(t,"weights","computeWeightedLoss"));let a=r==null?s:V(s,r);if(n===0)return a;if(n===2)return ve(a);if(n===1){if(r==null)return Nt(a);{let i=s.size/r.size,o=xe(ve(a),ve(r));return i>1?xe(o,Se(i)):o}}if(n===3){if(r==null)return xe(ve(a),Se(s.size));{let i=V(r,$n(s.shape)),o=de(ve(cl(i,Se(0))),"float32");return xe(ve(a),o)}}throw Error(`Unknown reduction: ${n}`)}var ar=z({computeWeightedLoss_:qP});function jP(e,t,n,s=3){let r=_(e,"labels","absoluteDifference"),a=_(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=_(n,"weights","absoluteDifference")),Qn(r.shape,a.shape,"Error in absoluteDifference: ");let o=Wt(me(r,a));return ar(o,i,s)}var KP=z({absoluteDifference_:jP});function XP(e,t,n,s,r=3){let a=_(e,"labels","cosineDistance"),i=_(t,"predictions","cosineDistance"),o=null;s!=null&&(o=_(s,"weights","cosineDistance")),Qn(a.shape,i.shape,"Error in cosineDistance: ");let u=Se(1),l=me(u,ve(V(a,i),n,!0));return ar(l,o,r)}var YP=z({cosineDistance_:XP});function ZP(e,t,n,s=3){let r=_(e,"labels","hingeLoss"),a=_(t,"predictions","hingeLoss"),i=null;n!=null&&(i=_(n,"weights","hingeLoss")),Qn(r.shape,a.shape,"Error in hingeLoss: ");let o=Se(1);r=me(V(Se(2),r),o);let u=rr(me(o,V(r,a)));return ar(u,i,s)}var QP=z({hingeLoss_:ZP});function JP(e,t,n,s=1,r=3){let a=_(e,"labels","huberLoss"),i=_(t,"predictions","huberLoss"),o=null;n!=null&&(o=_(n,"weights","huberLoss")),Qn(a.shape,i.shape,"Error in huberLoss: ");let u=Se(s),l=Wt(me(i,a)),c=jp(l,u),p=me(l,c),d=ie(V(Se(.5),pt(c)),V(u,p));return ar(d,o,r)}var eL=z({huberLoss_:JP});function tL(e,t,n,s=1e-7,r=3){let a=_(e,"labels","logLoss"),i=_(t,"predictions","logLoss"),o=null;n!=null&&(o=_(n,"weights","logLoss")),Qn(a.shape,i.shape,"Error in logLoss: ");let u=Se(1),l=Se(s),c=wt(V(a,os(ie(i,l)))),p=V(me(u,a),os(ie(me(u,i),l))),d=me(c,p);return ar(d,o,r)}var nL=z({logLoss_:tL});function sL(e,t,n,s=3){let r=_(e,"labels","meanSquaredError"),a=_(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=_(n,"weights","meanSquaredError")),Qn(r.shape,a.shape,"Error in meanSquaredError: ");let o=_S(r,a);return ar(o,i,s)}var rL=z({meanSquaredError_:sL});function aL(e,t){let n=_(e,"labels","sigmoidCrossEntropyWithLogits"),s=_(t,"logits","sigmoidCrossEntropyWithLogits");Qn(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=rr(s),a=V(s,n),i=zb(is(wt(Wt(s))));return ie(me(r,a),i)}function iL(e,t,n,s=0,r=3){let a=_(e,"multiClassLabels","sigmoidCrossEntropy"),i=_(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","sigmoidCrossEntropy")),Qn(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){let l=Se(s),c=Se(1),p=Se(.5);a=ie(V(a,me(c,l)),V(p,l))}let u=aL(a,i);return ar(u,o,r)}var oL=z({sigmoidCrossEntropy_:iL});function uL(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return nr((r,a,i)=>{let u=yS(a,[n],!0),l=me(de(a,"float32"),u);i([r,l]);let c=wt(V(l,r));return{value:ve(c,[n]),gradFunc:(h,f)=>{let[m,g]=f,b=wa(h.shape,[n]);return[V(U(h,b),me(de(m,"float32"),is(g))),V(U(h,b),me(is(g),de(m,"float32")))]}}})(e,t)}function lL(e,t,n,s=0,r=3){let a=_(e,"onehotLabels","softmaxCrossEntropy"),i=_(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","softmaxCrossEntropy")),Qn(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){let l=Se(s),c=Se(1),p=Se(a.shape[1]);a=ie(V(a,me(c,l)),xe(l,p))}let u=uL(a,i);return ar(u,o,r)}var cL=z({softmaxCrossEntropy_:lL});function dL(e,t,n,s){let r=_(e,"indices","sparseFillEmptyRows","int32"),a=_(t,"values","sparseFillEmptyRows"),i=_(n,"denseShape","sparseFillEmptyRows","int32"),o=_(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let u={indices:r,values:a,denseShape:i,defaultValue:o},l=M.runKernel($p,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}var pL=z({sparseFillEmptyRows_:dL});function hL(e,t,n){let s=_(e,"inputIndices","sparseReshape","int32"),r=_(t,"inputShape","sparseReshape","int32"),a=_(n,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);let i={inputIndices:s,inputShape:r,newShape:a},o=M.runKernel(Hl,i);return{outputIndices:o[0],outputShape:o[1]}}var fL=z({sparseReshape_:hL});function mL(e,t,n){let s=_(e,"data","sparseSegmentMean"),r=_(t,"indices","sparseSegmentMean","int32"),a=_(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${a.shape}`);let i={data:s,indices:r,segmentIds:a};return M.runKernel(_p,i)}var gL=z({sparseSegmentMean_:mL});function bL(e,t,n){let s=_(e,"data","sparseSegmentSum"),r=_(t,"indices","sparseSegmentSum","int32"),a=_(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(a.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${a.shape}`);let i={data:s,indices:r,segmentIds:a};return M.runKernel(Ap,i)}var yL=z({sparseSegmentSum_:bL});function vL(e,t,n,s,r,a,i,o){let u=_(e,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let l=_(t,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},p={data:u,dataSplits:l},d=M.runKernel(jl,p,c);return{nGrams:d[0],nGramsSplits:d[1]}}var xL=z({stringNGrams_:vL});function wL(e,t,n=!0){let s=_(e,"input","stringSplit","string"),r=_(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let a={skipEmpty:n},i={input:s,delimiter:r},o=M.runKernel(Rp,i,a);return{indices:o[0],values:o[1],shape:o[2]}}var kL=z({stringSplit_:wL});function SL(e,t){let n=_(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return M.runKernel(Dp,r,s)}var IL=z({stringToHashBucketFast_:SL}),CL={fft:Xb,ifft:Wd,rfft:Yb,irfft:$S},NL={hammingWindow:JO,hannWindow:zS,frame:MS,stft:sP},br={flipLeftRight:oP,grayscaleToRGB:lP,resizeNearestNeighbor:DP,resizeBilinear:EP,rotateWithOffset:dP,cropAndResize:aP,nonMaxSuppression:hP,nonMaxSuppressionAsync:wP,nonMaxSuppressionWithScore:SP,nonMaxSuppressionWithScoreAsync:CP,nonMaxSuppressionPadded:TP,nonMaxSuppressionPaddedAsync:_P,threshold:PP,transform:zP},US={bandPart:BP,gramSchmidt:WP,qr:GP},TL={absoluteDifference:KP,computeWeightedLoss:ar,cosineDistance:YP,hingeLoss:QP,huberLoss:eL,logLoss:nL,meanSquaredError:rL,sigmoidCrossEntropy:oL,softmaxCrossEntropy:cL},$L={sparseFillEmptyRows:pL,sparseReshape:fL,sparseSegmentMean:gL,sparseSegmentSum:yL},_L={stringNGrams:xL,stringSplit:kL,stringToHashBucketFast:IL},zr=class extends V0{minimize(e,t=!1,n){let{value:s,grads:r}=this.computeGradients(e,n);if(n!=null){let a=n.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(a)}else this.applyGradients(r);return Fe(r),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return wF(e,t)}dispose(){this.iterations_!=null&&Fe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Se(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(zr,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var ty=class extends zr{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accum_grad`,variable:Y(()=>Ke(r).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${n}/accum_var`,variable:Y(()=>Ke(r).variable(a))});let i=Array.isArray(e)?e[s].tensor:e[n];if(i==null)return;let o=this.accumulatedGrads[s].variable,u=this.accumulatedUpdates[s].variable;Y(()=>{let l=ie(V(o,this.rho),V(pt(i),1-this.rho)),c=V(xe(yn(ie(u,this.epsilon)),yn(ie(o,this.epsilon))),i),p=ie(V(u,this.rho),V(pt(c),1-this.rho));o.assign(l),u.assign(p);let d=ie(V(c,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Fe(this.accumulatedGrads.map(e=>e.variable)),Fe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};ty.className="Adadelta";Or(ty);var ny=class extends zr{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${n}/accumulator`,variable:Y(()=>Ql(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[s].tensor:e[n];if(a==null)return;let i=this.accumulatedGrads[s].variable;Y(()=>{let o=ie(i,pt(a));i.assign(o);let u=ie(V(xe(a,yn(ie(o,M.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Fe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};ny.className="Adagrad";Or(ny);var sy=class extends zr{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Y(()=>{this.accBeta1=Se(t).variable(),this.accBeta2=Se(n).variable()}),s==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);Y(()=>{let n=me(1,this.accBeta1),s=me(1,this.accBeta2);t.forEach((r,a)=>{let i=M.registeredVariables[r],o=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:Y(()=>Ke(i).variable(o))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:Y(()=>Ke(i).variable(o))});let u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;let l=this.accumulatedFirstMoment[a].variable,c=this.accumulatedSecondMoment[a].variable,p=ie(V(l,this.beta1),V(u,1-this.beta1)),d=ie(V(c,this.beta2),V(pt(u),1-this.beta2)),h=xe(p,n),f=xe(d,s);l.assign(p),c.assign(d);let m=ie(V(xe(h,ie(yn(f),this.epsilon)),-this.learningRate),i);i.assign(m)}),this.accBeta1.assign(V(this.accBeta1,this.beta1)),this.accBeta2.assign(V(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Fe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Y(()=>{this.accBeta1.assign(ka(this.beta1,this.iterations_+1)),this.accBeta2.assign(ka(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};sy.className="Adam";Or(sy);var ry=class extends zr{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Y(()=>{this.iteration=Se(0).variable(),this.accBeta1=Se(t).variable()}),s==null&&(this.epsilon=M.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);Y(()=>{let n=me(1,this.accBeta1),s=xe(-this.learningRate,ie(V(this.iteration,this.decay),1));t.forEach((r,a)=>{let i=M.registeredVariables[r],o=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:Ke(i).variable(o)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:Ke(i).variable(o)});let u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;let l=this.accumulatedFirstMoment[a].variable,c=this.accumulatedWeightedInfNorm[a].variable,p=ie(V(l,this.beta1),V(u,1-this.beta1)),d=V(c,this.beta2),h=Wt(u),f=Pr(d,h);l.assign(p),c.assign(f);let m=ie(V(xe(s,n),xe(p,ie(f,this.epsilon))),i);i.assign(m)}),this.iteration.assign(ie(this.iteration,1)),this.accBeta1.assign(V(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Fe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Fe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};ry.className="Adamax";Or(ry);var th=class extends zr{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=Array.isArray(e)?e[s].tensor:e[n];if(r==null)return;let a=M.registeredVariables[n];Y(()=>{let i=ie(V(this.c,r),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Zt(Se(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};th.className="SGD";Or(th);var ay=class extends th{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Se(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${n}/momentum`,variable:Y(()=>Ke(r).variable(!1))});let a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[n];i!=null&&Y(()=>{let o,u=ie(V(this.m,a),i);this.useNesterov?o=ie(V(this.c,ie(i,V(u,this.m))),r):o=ie(V(this.c,u),r),a.assign(u),r.assign(o)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Fe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};ay.className="Momentum";Or(ay);var iy=class extends zr{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,s==null&&(this.epsilon=M.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(n=>n.name):Object.keys(e)).forEach((n,s)=>{let r=M.registeredVariables[n],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${n}/rms`,variable:Y(()=>Ke(r).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${n}/momentum`,variable:Y(()=>Ke(r).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${n}/mg`,variable:Y(()=>Ke(r).variable(a))});let i=Array.isArray(e)?e[s].tensor:e[n];if(i==null)return;let o=this.accumulatedMeanSquares[s].variable,u=this.accumulatedMoments[s].variable;Y(()=>{let l=ie(V(o,this.decay),V(pt(i),1-this.decay));if(this.centered){let c=this.accumulatedMeanGrads[s].variable,p=ie(V(c,this.decay),V(i,1-this.decay)),d=xe(V(i,this.learningRate),yn(me(l,ie(pt(p),this.epsilon)))),h=ie(V(u,this.momentum),d);o.assign(l),c.assign(p),u.assign(h);let f=me(r,h);r.assign(f)}else{let c=ie(V(o,this.decay),V(pt(i),1-this.decay)),p=ie(V(u,this.momentum),xe(V(i,this.learningRate),yn(ie(c,this.epsilon))));o.assign(c),u.assign(p);let d=me(r,p);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Fe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Fe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Fe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};iy.className="RMSProp";Or(iy);var Zr=class{static sgd(e){return new th(e)}static momentum(e,t,n=!1){return new ay(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new iy(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new sy(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new ty(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new ry(e,t,n,s,r)}static adagrad(e,t=.1){return new ny(e,t)}},Xi={sgd:Zr.sgd,momentum:Zr.momentum,adadelta:Zr.adadelta,adagrad:Zr.adagrad,rmsprop:Zr.rmsprop,adamax:Zr.adamax,adam:Zr.adam},AL=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:e=>e())();function GS(){return new Promise(e=>AL(()=>e()))}var I={};Ee(I,{ERF_A1:()=>VL,ERF_A2:()=>WL,ERF_A3:()=>UL,ERF_A4:()=>GL,ERF_A5:()=>HL,ERF_P:()=>BL,PARALLELIZE_THRESHOLD:()=>oy,SELU_SCALE:()=>qS,SELU_SCALEALPHA:()=>HS,applyActivation:()=>Jp,assertAndGetBroadcastShape:()=>it,assertAxesAreInnerMostDims:()=>BD,assertParamsConsistent:()=>EL,assignToTypedArray:()=>ZL,axesAreInnerMostDims:()=>Fb,calculateShapes:()=>E0,checkEinsumDimSizes:()=>sz,checkPadOnDimRoundingMode:()=>xn,combineLocations:()=>pS,complexWithEvenIndex:()=>KL,complexWithOddIndex:()=>XL,computeConv2DInfo:()=>Zl,computeConv3DInfo:()=>K0,computeDefaultPad:()=>_b,computeDilation2DInfo:()=>AR,computeOptimalWindowSize:()=>DL,computeOutAndReduceShapes:()=>hS,computeOutShape:()=>RL,computePool2DInfo:()=>j0,computePool3DInfo:()=>ER,convertConv2DDataFormat:()=>X0,decodeEinsumEquation:()=>tz,eitherStridesOrDilationsAreOne:()=>Gs,expandShapeToKeepDim:()=>wa,exponent:()=>JL,exponents:()=>QL,fromStringArrayToUint8:()=>Iz,fromUint8ToStringArray:()=>Sz,getAxesPermutation:()=>fS,getBroadcastDims:()=>C0,getComplexWithIndex:()=>YL,getEinsumComputePath:()=>rz,getEinsumPermutation:()=>nz,getFusedBiasGradient:()=>Qp,getFusedDyActivation:()=>Zp,getImageCenter:()=>FL,getInnerMostAxes:()=>VD,getPermuted:()=>PL,getReductionAxes:()=>Rt,getReshaped:()=>OL,getReshapedPermuted:()=>LL,getSliceBeginCoords:()=>zL,getSliceSize:()=>ML,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>uz,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>lz,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>cz,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>hz,getSparseReshapeInputOutputMismatchErrorMessage:()=>mz,getSparseReshapeInputOutputMultipleErrorMessage:()=>fz,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>dz,getSparseReshapeNegativeOutputDimErrorMessage:()=>pz,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>vz,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>gz,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>bz,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>yz,getUndoAxesPermutation:()=>Ob,isIdentityPermutation:()=>az,log:()=>Z_,mergeRealAndImagArrays:()=>qL,prepareAndValidate:()=>_0,prepareSplitSize:()=>oz,segment_util:()=>jS,shouldFuse:()=>eh,slice_util:()=>It,splitRealAndImagArrays:()=>jL,tupleValuesAreOne:()=>Sr,upcastType:()=>bn,validateInput:()=>Nb,validateUpdateShape:()=>Cb,warn:()=>hr});function EL(e,t){let n=e[0].length;e.forEach((r,a)=>{P(r.length===n,()=>`Error in concat${n}D: rank of tensors[${a}] must be the same as the rank of the rest (${n})`)}),P(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let s=e[0];e.forEach((r,a)=>{for(let i=0;i<n;i++)P(i===t||r[i]===s[i],()=>`Error in concat${n}D: Shape of tensors[${a}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${a}.`)})}function RL(e,t){let n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}var oy=30;function DL(e){return e<=oy?e:Ed(e,Math.floor(Math.sqrt(e)))}function FL(e,t,n){let s=n*(typeof e=="number"?e:e[0]),r=t*(typeof e=="number"?e:e[1]);return[s,r]}function OL(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let a=t.length;for(let i=0;i<a;++i)r=r.concat([e[i+1]/t[i],t[i]]);r=r.concat(e.slice(a+1))}return r}function PL(e,t,n=!0){let s=[];if(n){s.push(t);for(let r=t+1;r<e;++r)r<=2*t?(s.push(r),s.push(r-(t+1))):s.push(r)}else{let r=[],a=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?a.push(i):r.push(i);s.push(...r),s.push(0),s.push(...a)}return s}function LL(e,t,n,s=!0){let r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let a=1;a<e.length;++a)a<=t.length?s?r.push(t[a-1]*e[a]):r.push(e[a]/t[a-1]):r.push(e[a]);return r}function zL(e,t){let n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function ML(e,t,n){let s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}var HS=1.7580993408473768,qS=1.0507009873554805,BL=.3275911,VL=.254829592,WL=-.284496736,UL=1.421413741,GL=-1.453152027,HL=1.061405429;function qL(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function jL(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function KL(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function XL(e){let t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function YL(e,t){let n=e[t*2],s=e[t*2+1];return{real:n,imag:s}}function ZL(e,t,n,s){e[s*2]=t,e[s*2+1]=n}function QL(e,t){let n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function JL(e,t,n){let s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),a=Math.sin(s);return{real:r,imag:a}}var Im="->",ez=/->/g,ow=",",uw="...";function tz(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(ez,"").length)/Im.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Im}").`);let[s,r]=e.split(Im);P(s.indexOf(uw)===-1,()=>`The ellipsis notation ("${uw}") is not supported yet.`);let a=s.split(ow),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let d=0;d<r.length;++d){let h=r[d];if(!a.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);o.indexOf(h)===-1&&o.push(h)}for(let d=0;d<s.length;++d){let h=s[d];o.indexOf(h)===-1&&h!==ow&&o.push(h)}let u=new Array(a.length);for(let d=0;d<i;++d){if(new Set(a[d].split("")).size!==a[d].length)throw new Error(`Found duplicate axes in input component ${a[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let h=0;h<a[d].length;++h)u[d].push(o.indexOf(a[d][h]))}let l=o.length,c=r.length,p=[];for(let d=c;d<l;++d)p.push(d);return{allDims:o,summedDims:p,idDims:u}}function nz(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;let s=[];for(let r=0;r<e;++r)n[r]===-1&&s.push(r);return n=n.filter(r=>r!==-1),{permutationIndices:n,expandDims:s}}function sz(e,t,n){let s=new Array(e);for(let r=0;r<n.length;++r){let a=n[r].shape;for(let i=0;i<t[r].length;++i)s[t[r][i]]===void 0?s[t[r][i]]=a[i]:P(s[t[r][i]]===a[i],()=>`Expected dimension ${s[t[r][i]]} at axis ${i} of input shaped ${JSON.stringify(a)}, but got dimension ${a[i]}`)}}function rz(e,t){let n=e,s=[],r=0;e.length===0&&n.push(-1),r=e.length+1;for(let i=0;i<r;++i)s.push([]);let a=[];for(let i=0;i<n.length;++i){let o=n[i],u=iz(t,o);for(let l of u)a.indexOf(l)===-1&&(s[i].push(l),a.push(l))}return{path:n,steps:s}}function az(e){return e.every((t,n)=>t===n)}function iz(e,t){let n=[];for(let s=0;s<e.length;++s)(e[s].length===0||e[s].indexOf(t)!==-1||t===-1)&&n.push(s);return n}function oz(e,t,n=0){let s=[];if(typeof t=="number")P(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(e.shape[n]/t);else{let r=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);P(r<=1,()=>"There should be only one negative value in split array.");let a=t.indexOf(-1);if(a!==-1){let i=t.reduce((o,u)=>u>0?o+u:o);t[a]=e.shape[n]-i}P(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}function uz(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function lz(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function cz(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function dz(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function pz(e,t){return`size ${e} must be non-negative, not ${t}`}function hz(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function fz(e,t){let n=ht(e),s=ht(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function mz(e,t){let n=ht(e),s=ht(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}function gz(){return"segment ids must be >= 0"}function bz(){return"segment ids are not increasing"}function yz(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function vz(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var jS={};Ee(jS,{collectGatherOpShapeInfo:()=>kz,computeOutShape:()=>wz,segOpComputeOptimalWindowSize:()=>xz});function xz(e,t){let n=!1,s;for(e<=oy?(s=e,n=!0):s=Ed(e,Math.floor(Math.sqrt(e)));!n;)s>t||s===e?n=!0:s=Ed(e,s+1);return s}function wz(e,t,n){let s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function kz(e,t,n,s){let r=t.shape.length,a=e.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let p=0;p<s;++p)if(e.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${e.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);let i=e.shape[n],o=[],u=1,l=1,c=1;for(let p=0;p<s;++p)o.push(e.shape[p]),u*=e.shape[p];for(let p=s;p<n;p++)o.push(e.shape[p]),l*=e.shape[p];for(let p=s;p<r;p++)o.push(t.shape[p]);for(let p=n+1;p<a;p++)o.push(e.shape[p]),c*=e.shape[p];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Sz(e){try{return e.map(t=>Od(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Iz(e){return e.map(t=>Xl(t))}var $s={};Ee($s,{nonMaxSuppressionV3Impl:()=>BS,nonMaxSuppressionV4Impl:()=>VS,nonMaxSuppressionV5Impl:()=>WS,whereImpl:()=>RS});var Ks=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ks.prototype)}},ks=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ks.prototype)}},H=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,H.prototype)}},Oe=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Oe.prototype)}},KS=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,KS.prototype)}},XS=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function Sa(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Rs(e,t){if(!e)throw new KS(t)}function lw(e,t){let n=0;for(let s of e)s===t&&n++;return n}function Tn(e){return e.length===1?e[0]:e}function mt(e){return Array.isArray(e)?e:[e]}function Xs(e){let n=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return n[0]!=="_"?n:"private"+n}function ra(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var ns={};function uy(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function rg(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>rg(t));else{let t=Object.keys(e);for(let n of t){let s=e[n];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?e[n]=s.value:rg(s))}}}function nc(e,t={},n={},s="object",r=!1){if(typeof e=="string"){let a=e,i;if(a in n)i=n[a];else if(a in ns)i=ns[a];else if(i=t[a],i==null)throw new H(`Unknown ${s}: ${e}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let a=e;if(a.className==null||a.config==null)throw new H(`${s}: Improper config format: ${JSON.stringify(a)}.
'className' and 'config' must set.`);let i=a.className,o,u;if(i in n?[o,u]=n[i]:i in ns?[o,u]=ns.className:i in t&&([o,u]=t[i]),o==null)throw new H(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let l={};for(let h of Object.keys(ns))l[h]=ns[h];for(let h of Object.keys(n))l[h]=n[h];let c=a.config;c.customObjects=l;let p={...ns};for(let h of Object.keys(n))ns[h]=n[h];rg(a.config);let d=u(o,a.config,n,r);return ns={...p},d}else{let l={...ns};for(let p of Object.keys(n))ns[p]=n[p];let c=new o(a.config);return ns={...l},c}}}function Cz(e,t){return e<t?-1:e>t?1:0}function rd(e,t){return-1*Cz(e,t)}function vr(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function Nz(e){if(e==null)throw new H(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ni(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new H(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function ly(e,t,n=0,s=1/0){return Rs(n>=0),Rs(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every(r=>typeof r===t)}function Gt(e,t){Array.isArray(e)?(w.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,s)=>Gt(n,`element ${s+1} of ${t}`))):w.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${YS(e)}.`)}function YS(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>YS(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function Tz(e,t,n){let s=n!=null?n():w.now(),r;return(...i)=>{let o=n!=null?n():w.now();return o-s<t||(s=o,r=e(...i)),r}}function ZS(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var $z=0;function QS(){return $z++}var ad={};function nh(e=""){return e in ad||(ad[e]=0),ad[e]+=1,e+ad[e].toString()}var _z=["channelsFirst","channelsLast"],Az=["nearest","bilinear"],Ez=["valid","same","causal"],Rz=["max","avg"],Dz=["sum","mul","concat","ave"],Yi=new Map;function Tt(e){Ni(_z,"DataFormat",e)}function Fz(e){Ni(Az,"InterpolationFormat",e)}function es(e){Ni(Ez,"PaddingMode",e)}function JS(e){Ni(Rz,"PoolMode",e)}var tl=[],cw="/";function da(e,t){tl.push(e);try{let n=t();return tl.pop(),n}catch(n){throw tl.pop(),n}}function Oz(){return tl.length===0?"":tl.join(cw)+cw}function eI(e){if(!nI(e))throw new Error("Not a valid tensor name: '"+e+"'");return Oz()+e}function tI(e){if(!nI(e))throw new Error("Not a valid tensor name: '"+e+"'");Yi.has(e)||Yi.set(e,0);let t=Yi.get(e);if(Yi.set(e,Yi.get(e)+1),t>0){let n=`${e}_${t}`;return Yi.set(n,1),n}else return e}var Pz=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function nI(e){return!!e.match(Pz)}function Lz(e){return e===parseInt(e.toString(),10)}function xr(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function co(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s<t&&(t=s)}return t}function Ir(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let s=e[n];s>t&&(t=s)}return t}function Cs(e,t){if(t<e)throw new H(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let s=e;s<t;++s)n.push(s);return n}var Cm;function Ot(){return Cm==null&&(Cm=zp().epsilon()),Cm}function Ns(){return"channelsLast"}function sh(e,t){return de(e,t)}function sc(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),U(e,n)}function zz(e,t){return Y(()=>{if(e.shape.length!==2)throw new H(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=sc(e,1);return ag(n,[1,t,1])})}function Mz(e){let t=[xr(e.shape)];return U(e,t)}function Bz(e){if(e.rank<=1)throw new H(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],xr(e.shape,1)];return U(e,t)}function pa(e,t,n){return Y(()=>{switch(e.rank){case 1:return Xp(e,t,n);case 2:return jb(e,[t,0],[n,e.shape[1]]);case 3:return Yp(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return pl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return je(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return je(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new H(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Nm(e,t,n){return Y(()=>{switch(e.rank){case 1:return Xp(e,t,n);case 2:return jb(e,[0,t],[e.shape[0],n]);case 3:return Yp(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return pl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function id(e,t,n,s){return Y(()=>{switch(e.rank){case 1:return Xp(e,t,n);case 2:switch(s){case 1:return pa(e,t,n);case 2:return Nm(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return pa(e,t,n);case 2:return Yp(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Nm(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return pa(e,t,n);case 2:return pl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return pl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Nm(e,t,n);default:throw new H(`The axis is not within the rank of the tensor ${s}`)}default:throw new H(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function cy(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),Lt(e,t)}function dw(e,t){switch(e.rank){case 1:return tS([e,t]);case 2:return nS([e,t],0);case 3:return sS([e,t],0);case 4:return rS([e,t],0);default:throw new H(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function ag(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new H(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return ws(e,t)}function rh(e,t=0,n=1,s,r){return qb(e,t,n,s,r)}function zs(e,t,n,s){if(e.rank<2||t.rank<2)throw new Oe(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let r=e.shape.slice(-1)[0],a=t.shape.slice(-2)[0];if(r!==a)throw new Oe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return hl.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?ig(e.rank,s,Ns()):null,activation:n});{let r=e.shape.slice(),a=r.pop();e=U(e,[-1,a]);let i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},(f,m)=>m===0?t.rank-2:m<=t.rank-2?m-1:m);t=U(Ue(t,c),[u,-1]);let p=[...r,...l],d=!1,h=!1;return U(hl.matMul({a:e,b:t,transposeA:d,transposeB:h,bias:s?ig(e.rank,s,Ns()):null,activation:n}),p)}}function sI(e,t,n){return Y(()=>(Array.isArray(t)?t=gn(t,"int32"):t=de(t,"int32"),qp(e,t,n)))}function rc(e){return V(e,e)}function ig(e,t,n){let s=t.shape;if(t.rank!==1&&t.rank!==e)throw new H(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1,1,1]):U(t,[1,s[3],s[0],s[1],s[2]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,1,1,s[0]]):U(t,[1].concat(s))}else if(e===4){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1,1]):U(t,[1,s[2],s[0],s[1]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,1,s[0]]):U(t,[1].concat(s))}else if(e===3){if(n==="channelsFirst")return s.length===1?U(t,[1,s[0],1]):U(t,[1,s[1],s[0]]);if(n==="channelsLast")return s.length===1?U(t,[1,1,s[0]]):U(t,[1].concat(s))}else if(e<3)return t;throw new H(`Unsupported input rank by biasAdd: ${t.rank}`)}function _s(e,t,n){return Y(()=>(n==null&&(n=Ns()),Tt(n),ie(e,ig(e.rank,t,n))))}function Vz(e,t=1){if(t!==1)throw new Oe(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Up(e)}function Wz(e){return Y(()=>xe(e,ie(Wt(e),1)))}function rI(e,t,n,s){return Y(()=>FS(e,t,n,s))}function Uz(e){return Y(()=>{let t=ie(.5,V(.2,e));return Zn(t,0,1)})}function ac(e,t,n=!1){return n?e():t()}var Gz=["fanIn","fanOut","fanAvg"],Hz=["normal","uniform","truncatedNormal"];function qz(e){Ni(Gz,"FanMode",e)}function jz(e){Ni(Hz,"Distribution",e)}var cs=class extends ae.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},dy=class extends cs{apply(e,t){return Et(e,t)}};dy.className="Zeros";ae.registerClass(dy);var ah=class extends cs{apply(e,t){return $n(e,t)}};ah.className="Ones";ae.registerClass(ah);var py=class extends cs{constructor(e){if(super(),typeof e!="object")throw new H(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new H(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Y(()=>V(Se(this.value),$n(e,t)))}getConfig(){return{value:this.value}}};py.className="Constant";ae.registerClass(py);var hy=class extends cs{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ec(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};hy.className="RandomUniform";ae.registerClass(hy);var fy=class extends cs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Oe(`randomNormal does not support dType ${t}.`);return rh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};fy.className="RandomNormal";ae.registerClass(fy);var my=class extends cs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Oe(`truncatedNormal does not support dType ${t}.`);return Zb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};my.className="TruncatedNormal";ae.registerClass(my);var gy=class extends cs{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return Y(()=>{if(e.length!==2||e[0]!==e[1])throw new H("Identity matrix initializer can only be used for 2D square matrices.");return V(this.gain,Pb(e[0]))})}getConfig(){return{gain:this.gain}}};gy.className="Identity";ae.registerClass(gy);function Kz(e,t="channelsLast"){let n,s;if(Tt(t),e.length===2)n=e[0],s=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let r=xr(e,2);n=e[1]*r,s=e[0]*r}else if(t==="channelsLast"){let r=xr(e,0,e.length-2);n=e[e.length-2]*r,s=e[e.length-1]*r}}else{let r=xr(e);n=Math.sqrt(r),s=Math.sqrt(r)}return[n,s]}var Rn=class extends cs{constructor(e){if(super(),e.scale<0)throw new H(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,qz(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,jz(this.distribution),this.seed=e.seed}apply(e,t){let n=Kz(e),s=n[0],r=n[1],a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),this.distribution==="normal"){let i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Oe(`${this.getClassName()} does not support dType ${t}.`);return Zb(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*a);return ec(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Rn.className="VarianceScaling";ae.registerClass(Rn);var ih=class extends Rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};ih.className="GlorotUniform";ae.registerClass(ih);var oh=class extends Rn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};oh.className="GlorotNormal";ae.registerClass(oh);var uh=class extends Rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};uh.className="HeNormal";ae.registerClass(uh);var lh=class extends Rn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};lh.className="HeUniform";ae.registerClass(lh);var ch=class extends Rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};ch.className="LeCunNormal";ae.registerClass(ch);var dh=class extends Rn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Rn.className}};dh.className="LeCunNormal";ae.registerClass(dh);var by=class extends cs{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new Oe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Y(()=>{if(e.length<2)throw new Oe("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let n=e[0]>e[1]?[e[1],e[0]]:e,s=rh(n,0,1,"float32"),r=US.gramSchmidt(s);return e[0]>e[1]&&(r=Ue(r)),V(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}};by.className="Orthogonal";ae.registerClass(by);var pw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function hw(e,t={}){return nc(e,ae.SerializationMap.getMap().classNameMap,t,"initializer")}function xt(e){return uy(e)}function gt(e){if(typeof e=="string"){let t=e in pw?pw[e]:e;if(t==="GlorotNormal")return new oh;if(t==="GlorotUniform")return new ih;if(t==="HeNormal")return new uh;if(t==="HeUniform")return new lh;if(t==="LeCunNormal")return new ch;if(t==="LeCunUniform")return new dh;{let n={};return n.className=t,n.config={},hw(n)}}else return e instanceof cs?e:hw(e)}function og(e){return Array.isArray(e)&&Array.isArray(e[0])}function Ud(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Pe(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new H(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function st(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new H(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function Gd(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((s,r)=>s*r);return t}var fw="Variable",Xz=class{constructor(e,t="float32",n=fw,s=!0,r=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=QS(),n=n==null?fw:n,this.originalName=eI(n),this.name=tI(this.originalName),this.trainable_=s,this.constraint=r,this.val=ES(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),Yz(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function Yz(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function ug(e){return e.map(t=>t.read())}function yy(e){e.forEach(t=>{t[0].write(t[1])})}var Pt=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Os=class{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=QS(),a!=null&&(this.originalName=eI(a),this.name=tI(this.originalName)),this.rank=t.length}},Zz=0,ph=class{constructor(e,t){this.callArgs=t,this.id=Zz++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},Qz=0,qe=class extends ae.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Qz++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=Xs(n)+"_"+nh(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),n=[r].concat(e.inputShape)}this.batchInputShape=n;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new ks(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new H(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Tn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Tn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ks(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ks(`Layer ${this.name} is not connected, no input to return.`);return Tn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ks(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ks(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Tn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=mt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=mt(this.inputSpec);if(e.length!==t.length)throw new H(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let s=e[n],r=t[n];if(r==null)continue;let a=s.rank;if(r.ndim!=null&&a!==r.ndim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&s.dtype!==r.dtype)throw new H(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){let i=s.shape;for(let o in r.axes){let u=Number(o),l=r.axes[o],c=u>=0?i[u]:i[i.length+u];if(l!=null&&[l,null].indexOf(c)===-1)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${l} but got shape ${i}.`)}}if(r.shape!=null)for(let i=0;i<r.shape.length;++i){let o=r.shape[i],u=s.shape[i];if(o!=null&&u!=null&&o!==u)throw new H(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=mt(e),s=!0;for(let a of n)if(!(a instanceof Os)){s=!1;break}let r=!0;for(let a of n)if(a instanceof Os){r=!1;break}if(s===r)throw new H("Arguments to apply() must be all SymbolicTensors or all Tensors");return da(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let a=[];for(let i of mt(e))a.push(i.shape);this.build(Tn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),i=mt(a),o=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),o.push(u);if(a=Tn(o),this.activityRegularizer!=null)throw new Oe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{let a=Jz(e),i=this.computeOutputShape(a),o,u=eM(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((l,c)=>new Os(u,l,this,mt(e),t,this.name,c)):o=new Os(u,i,this,mt(e),t,this.name),this.addInboundNode(e,o,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new Oe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,s)=>{n!=null&&e[s]!=null&&e[s]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ks(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Ks(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ks(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Gd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ug(e?this.trainableWeights:this.weights)}setWeights(e){Y(()=>{let t=this.weights;if(t.length!==e.length)throw new H(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],s=ug(t);for(let r=0;r<s.length;++r){let a=s[r],i=t[r],o=e[r];if(!w.arraysEqual(a.shape,o.shape))throw new H(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}yy(n)})}addWeight(e,t,n,s,r,a,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new H(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(s=o!=null?o():gt("zeros"));let u=s.apply(t,n),l=new Xz(u,n,e,a,i);return u.dispose(),r!=null&&this.addLoss(()=>r.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=mt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,s,r,a,i=null){let o=mt(e);t=mt(t),n=mt(n),s=mt(s),r=Ud(r),a=Ud(a);let u=[],l=[],c=[];for(let p of o)u.push(p.sourceLayer),l.push(p.nodeIndex),c.push(p.tensorIndex);new ph({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let p=0;p<t.length;p++)t[p].sourceLayer=this,t[p].nodeIndex=this.inboundNodes.length-1,t[p].tensorIndex=p}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function Jz(e){e=mt(e);let t=[];for(let n of e)t.push(n.shape);return Tn(t)}function eM(e){return"float32"}function aI(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let s=t.inboundNodes[n];if(s.inboundLayers.length===0)return s.inputTensors;{let r=[];for(let a=0;a<s.inboundLayers.length;a++){let i=s.inputTensors[a],o=s.inboundLayers[a],u=s.nodeIndices[a],l=aI(i,o,u);for(let c of l)r.indexOf(c)===-1&&r.push(c)}return r}}}var du=class extends qe{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:nh("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new H("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new H("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new H("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let s=new Os(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new ph({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new H(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};du.className="InputLayer";ae.registerClass(du);function iI(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new H("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new du({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function tM(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return de(t,e.dtype)}catch(n){throw new H(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var oa=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof oa)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=tM(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new H(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Os){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Os){if(this.id2Value[e.id]==null)throw new H(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new H(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Fe(this.id2Mask)}},Hd=new XS,qd=new XS;function nM(e){Hd!=null&&Hd.setMaxEntries(e),qd!=null&&qd.setMaxEntries(e)}function qu(e,t,n,s){let r=n==null?!1:n.training,a=Array.isArray(e),i=a?e:[e],o=i.map(f=>f.name),u=[],l=t.names();for(let f of o)l.indexOf(f)!==-1?u.push(t.getValue(f)):u.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);let c=o.join(",")+"|"+t.names().sort().join(","),p=Hd.get(c),d;if(p==null){let f=sM(i,t);p=f.sorted,d=f.recipientCounts,Hd.put(c,p),qd.put(c,d)}d={},r||Object.assign(d,qd.get(c));let h=new oa(t);for(let f=0;f<p.length;++f){if(s!=null){let E=il().numTensors;E>s.maxNumTensors&&(s.maxNumTensors=E),E<s.minNumTensors&&(s.minNumTensors=E)}let m=p[f],g=m.sourceLayer;if(g instanceof du)continue;let b=[],y=[],v=[],x=!1;for(let E of m.inputs){let O=h.getValue(E),R=h.getMask(E);b.push(O),y.push(R),R!=null&&(x=!0),r||(d[E.name]--,d[E.name]===0&&!t.hasKey(E)&&o.indexOf(E.name)===-1&&!O.isDisposed&&E.sourceLayer.stateful!==!0&&v.push(O))}x&&(n=n||{},n.mask=y[0]);let k=mt(g.apply(b,n)),C=null;g.supportsMasking&&(C=g.computeMask(b,y));let $=aM(m),A=Array.isArray($)?$:[$];for(let E=0;E<A.length;++E){h.hasKey(A[E])||h.add(A[E],k[E],Array.isArray(C)?C[0]:C);let O=o.indexOf(A[E].name);O!==-1&&(u[O]=k[E])}r||Fe(v)}return h.disposeMasks(),a?u:u[0]}function sM(e,t){w.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],s={};if(e.length===1){let r=mw(e[0],t);n=r.sorted,s=r.recipientMap}else{let r=new Set;for(let a of e){let{sorted:i,recipientMap:o}=mw(a,t);for(let u of i)r.has(u.name)||(n.push(u),r.add(u.name));for(let u in o)s[u]==null&&(s[u]=new Set),o[u].forEach(l=>s[u].add(l))}}return{sorted:n,recipientCounts:rM(s)}}function rM(e){let t={};for(let n in e)t[n]=e[n].size;return t}function mw(e,t){let n=new Set,s=[],r={};for(let o of t.names())n.add(o);let a=[],i=[];for(a.push(e);a.length>0;){let o=a[a.length-1];if(n.has(o.name)){a.pop();continue}let u=i[i.length-1]===a.length-1;if(o.inputs.length===0||u)a.pop(),s.push(o),n.add(o.name),u&&i.pop();else{i.push(a.length-1);for(let l of o.inputs)r[l.name]==null&&(r[l.name]=new Set),r[l.name].add(o.name),!n.has(l.name)&&a.push(l)}}return{sorted:s,recipientMap:r}}function aM(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let s=0;s<e.sourceLayer.inboundNodes.length;++s)for(let r of e.sourceLayer.inboundNodes[s].outputTensors)if(r.id===e.id){n=s;break}t=e.sourceLayer.getOutputAt(n)}return t}var iM=K();iM.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,nM);var oI={kernelName:vo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,tc(de(n,"float32"),-1))}}},oM={kernelName:wl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=pt(de(n,"float32")),r=yn(me(Se(1),s));return wt(xe(e,r))}}}},uM={kernelName:kl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=yn(me(pt(de(n,"float32")),1));return xe(e,s)}}}},lM={kernelName:Er,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=e,u=Rt(n.shape,r);return u.length>0&&(o=ve(o,u)),U(o,n.shape)},b:()=>{let o=e,u=Rt(s.shape,r);return u.length>0&&(o=ve(o,u)),U(o,s.shape)}}}},cM={kernelName:Ea,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((s,r)=>{n[r]=()=>e.clone()}),n}},dM={kernelName:Ra,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ke(n)}}},pM={kernelName:Cl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ke(n)}}},hM={kernelName:Nl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,yn(me(Se(1),pt(de(n,"float32")))))}}},fM={kernelName:Tl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=yn(ie(Se(1),pt(de(n,"float32"))));return xe(e,s)}}}},mM={kernelName:Al,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=ie(pt(n),pt(s)),u=V(e,xe(s,o)),l=Rt(n.shape,r);return l.length>0&&(u=ve(u,l)),U(u,n.shape)},b:()=>{let o=ie(pt(n),pt(s)),u=wt(V(e,xe(n,o))),l=Rt(s.shape,r);return l.length>0&&(u=ve(u,l)),U(u,s.shape)}}}},gM={kernelName:$l,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ie(pt(de(n,"float32")),1))}}},bM={kernelName:_l,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,me(Se(1),pt(de(n,"float32"))))}}};function yM(e,t,n,s,r,a){let i=_(e,"dy","avgPool3dGrad"),o=_(t,"input","avgPool3dGrad"),u=i,l=o,c=!1;o.rank===4&&(c=!0,u=U(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),P(l.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),xn("avgPool3dGrad",r,a);let p={dy:u,input:l},d={filterSize:n,strides:s,pad:r,dimRoundingMode:a},h=M.runKernel(Xg,p,d);return c?U(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var vM=z({avgPool3dGrad_:yM}),xM={kernelName:yp,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>vM(e,s,r,a,i,o)}}};function wM(e,t,n,s,r){let a=_(e,"dy","avgPoolGrad"),i=_(t,"input","avgPoolGrad");P(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,u=a,l=!1;i.rank===3&&(l=!0,o=U(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=U(a,[1,a.shape[0],a.shape[1],a.shape[2]])),P(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),P(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let c={dy:u,input:o},p={filterSize:n,strides:s,pad:r},d=M.runKernel(Kg,c,p);return l?U(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var kM=z({avgPoolGrad_:wM}),SM={kernelName:Da,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>kM(e,s,r,a,i)}}},IM={kernelName:Fa,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[s,r]=t,{transposeA:a,transposeB:i}=n;return!a&&!i?{a:()=>Ve(e,r,!1,!0),b:()=>Ve(s,e,!0,!1)}:!a&&i?{a:()=>Ve(e,r,!1,!1),b:()=>Ve(e,s,!0,!1)}:a&&!i?{a:()=>Ve(r,e,!1,!0),b:()=>Ve(s,e,!1,!1)}:{a:()=>Ve(r,e,!0,!0),b:()=>Ve(e,s,!0,!0)}}},CM={kernelName:xo,gradFunc:(e,t,n)=>{let{blockShape:s,crops:r}=n;return{x:()=>Wb(e,s,r)}}},NM={kernelName:K_,gradFunc:(e,t,n)=>{let s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let u=r.length-1;u>=0;u--)if(r[u]===a[u])i[u]=1;else if(r[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);let o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>ve(e,o,!0)}}},TM={kernelName:Oa,gradFunc:e=>({x:()=>e.clone()})},$M={kernelName:Pa,gradFunc:e=>({x:()=>Ke(e)})},_M={kernelName:Rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>En(Vs(uu(s,r),lu(s,a)),e,Ke(e))}}},AM={kernelName:xp,inputsToSave:["x"],gradFunc:oI.gradFunc},EM={kernelName:wo,saveAllInputs:!0,gradFunc:(e,t,n)=>{let s=t.map(u=>u.shape),{axis:r}=n,a=ls(r,t[0].shape)[0],i=s.map(u=>u[a]);return _n(e,i,a).map(u=>()=>u)}},RM={kernelName:La,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return P(Sr(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Rb(s.shape,e,r,i,o,u),filter:()=>Jb(s,e,r.shape,i,o,u)}}},DM={kernelName:za,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>xa(e,r,a,i,o,1,u),filter:()=>Jb(e,s,r.shape,a,i,o,u)}}};function FM(e,t,n,s,r){let a=e;e.rank===4&&(a=U(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=U(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P(a.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),P(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),P(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),P(a.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`),P(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:a,dy:i},u={strides:s,pad:r,filterShape:n};return M.runKernel(Jg,o,u)}var OM=z({conv3DBackpropFilter_:FM}),PM={kernelName:wp,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a}=n;P(Sr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let[i,o]=t;return{x:()=>uS(i.shape,e,o,r,a),filter:()=>OM(i,e,o.shape,r,a)}}},LM={kernelName:Ma,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(wt(NS(de(n,"float32"))),e)}}},zM={kernelName:Ba,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(TS(de(n,"float32")),e)}}},MM={kernelName:Va,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{let o=fS([r],s.rank),u=dS(e,r,a,!i);return o!=null&&(u=Ue(u,o)),u}}}},BM={kernelName:Wa,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=s==null?[1,1]:s;P(Sr(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[u,l]=t;return P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),P(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),P(Gs(r,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`),xn("depthwiseConv2d",a,i),{x:()=>LS(u.shape,e,l,r,a,o,i),filter:()=>PS(u,e,l.shape,r,a,o,i)}}},VM={kernelName:kp,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>M.runKernel(Mm,a,n),filter:()=>M.runKernel(Bm,i,n)}}},WM={kernelName:Ga,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,s={dy:e,y:n};return{x:()=>M.runKernel(ab,s)}}},UM={kernelName:El,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=V(is(wt(pt(n))),2/Math.sqrt(Math.PI));return{x:()=>V(e,s)}}},GM={kernelName:Ha,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,n)}}},HM={kernelName:No,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>U(e,n.shape)}}},qM={kernelName:To,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,is(n))}}},jM={kernelName:qa,gradFunc:e=>({x:()=>Ke(e)})},KM={kernelName:ja,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=xe(e,de(s,"float32")),u=Rt(n.shape,r);return u.length>0?U(ve(o,u),n.shape):o},b:()=>{let o=V(e,de(n,"float32")),u=Rt(s.shape,r);u.length>0&&(o=U(ve(o,u),s.shape));let l=pt(s);return wt(xe(o,de(l,"float32")))}}}},XM={kernelName:Ka,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:s}=n,[r,a,i,o]=t,u=o==null?Se(1):o,l=Rt(a.shape,r.shape),c=[];if(a.rank===1){for(let x=0;x<r.shape.length-1;++x)c.push(r.shape[x]);c.push(1)}let p=me(r,a),d=V(e,u),h=SS(ie(i,Se(s))),f=V(V(V(h,h),h),Se(-.5));return{x:()=>a.rank===1?U(V(V(e,ws(U(h,[1,1,1,a.shape[0]]),c)),u),r.shape):U(V(V(e,h),u),r.shape),mean:()=>{let x=V(V(h,Se(-1)),d);return a.rank===1&&(x=ve(x,l)),U(x,a.shape)},variance:()=>{let x=V(V(f,p),d);return a.rank===1&&(x=ve(x,l)),U(x,a.shape)},scale:()=>{let x=V(p,h),k=V(e,x);return a.rank===1&&(k=ve(k,l)),U(k,a.shape)},offset:()=>{let x=e;return a.rank===1&&(x=ve(x,l)),U(x,a.shape)}}}},YM={kernelName:_o,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[s,r]=t,{axis:a}=n,i=ls(a,s.shape)[0];return{x:()=>{let u=s.shape,l=r.size,c=u.slice(0,i),p=c.length,d=u.slice(a,u.length).slice(1),h=d.length,f=gw(0,p),m=gw(p+1,p+1+h),g=bw([c,[l],d]),b=U(e,g),y=U(r,[l]),v=bw([[p],f,m]),x=Ue(b,v),k=AS(x,y,s.shape[i]),C=Ob(v);return k=Ue(k,C),k},indices:()=>r}}};function gw(e,t){let n=[];for(let s=e;s<t;++s)n.push(s);return n}function bw(e){let t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}var ZM={kernelName:Xa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>Ke(n),b:()=>Ke(s)}}},QM={kernelName:Ya,gradFunc:e=>({x:()=>de(e,"float32")})},JM={kernelName:Dl,gradFunc:e=>({x:()=>Ke(e)})},eB={kernelName:Fl,gradFunc:e=>({x:()=>Ke(e)})},tB={kernelName:Ol,gradFunc:e=>({x:()=>Ke(e)})},nB={kernelName:Za,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{alpha:r}=n,a=Jn(s,0);return{x:()=>En(a,e,V(e,r))}}},sB={kernelName:Pl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,ie(n,1))}}},rB={kernelName:Qa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,de(n,"float32"))}}},aB={kernelName:Y_,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n;return{logits:()=>{let i=is(s);return me(e,V(ve(e,r,!0),i))}}}};function iB(e,t,n,s=5,r=1,a=1,i=.5){let o={x:e,y:t,dy:n},u={depthRadius:s,bias:r,alpha:a,beta:i};return M.runKernel(lb,o,u)}var oB=z({localResponseNormalizationBackprop_:iB}),uB={kernelName:Cp,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>oB(s,r,e,a,i,o,u)}}};function uI(e,t,n,s){return t.rank<n.rank&&(t=U(t,wa(t.shape,s))),e.rank<n.rank&&(e=U(e,wa(e.shape,s))),{x:()=>V(e,de(as(n,t),e.dtype))}}var yw={kernelName:Ja,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{reductionIndices:r}=s,a=t[0],i=t[1],o=ls(r,a.shape),u=uI(e,i,a,o);return{x:()=>u.x()}}},lB={kernelName:ei,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>V(e,de(uu(n,s),"float32")),b:()=>V(e,de(gS(n,s),"float32"))}}};function cB(e,t,n,s,r,a,i){let o=_(e,"dy","maxPool3dGrad"),u=_(t,"input","maxPool3dGrad"),l=_(n,"output","maxPool3dGrad"),c=o,p=u,d=l,h=!1;u.rank===4&&(h=!0,c=U(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=U(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),d=U(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P(c.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),P(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),P(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),xn("maxPool3dGrad",a,i);let f={dy:c,input:p,output:d},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=M.runKernel(db,f,m);return h?U(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var dB=z({maxPool3dGrad_:cB}),pB={kernelName:Np,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>dB(e,s,r,a,i,o,u)}}};function hB(e,t,n,s,r,a,i){let o=_(e,"dy","maxPoolGrad"),u=_(t,"input","maxPoolGrad"),l=_(n,"output","maxPoolGrad");P(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),P(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),P(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),xn("maxPoolGrad",a,i);let c={dy:o,input:u,output:l},p={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return M.runKernel(cb,c,p)}var fB=z({maxPoolGrad_:hB}),mB={kernelName:ti,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>fB(e,s,r,a,i,o)}}},gB={kernelName:ni,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=ls(r,s.shape),o=hS(s.shape,a)[1],u=ht(o);return{x:()=>{let c=s.shape.slice();a.forEach(h=>{c[h]=1});let p=U(e,c);return xe(V(p,$n(s.shape,"float32")),u)}}}},bB={kernelName:si,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let s=n,{axis:r}=s,[a,i]=t,o=ls(r,a.shape),u=uI(e,i,a,o);return{x:()=>u.x()}}},yB={kernelName:ri,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t;return{a:()=>V(e,de(lu(n,s),"float32")),b:()=>V(e,de(Jn(n,s),"float32"))}}},vB={kernelName:ai,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(i=>i[0]);return{x:()=>je(e,a,s.shape)}}},xB={kernelName:zl,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=Rt(n.shape,r);return o.length>0?U(ve(e,o),n.shape):e},b:()=>{let o=V(e,wt(Hp(xe(n,s)))),u=Rt(s.shape,r);return u.length>0?U(ve(o,u),s.shape):o}}}},wB={kernelName:ii,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=V(e,de(s,"float32")),u=Rt(n.shape,r);return u.length>0?U(ve(o,u),n.shape):o},b:()=>{let o=V(e,de(n,"float32")),u=Rt(s.shape,r);return u.length>0?U(ve(o,u),s.shape):o}}}},kB={kernelName:Po,gradFunc:e=>({x:()=>wt(e)})},SB={kernelName:Vo,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Et(n.shape,"float32")}}},IB={kernelName:Bo,gradFunc:e=>({x:()=>Ke(e)})},CB={kernelName:Wo,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:s}=n;return Ws(e,s).map(a=>()=>a)}},vw={kernelName:oi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let s=t[0],{paddings:r}=n,a=r.map(i=>i[0]);return{x:()=>je(e,a,s.shape)}}},NB={kernelName:ui,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,s,r]=t,a=n,i=s,o=it(a.shape,i.shape);return{a:()=>{let c=de(i,"float32"),p=V(e,V(c,ka(a,me(c,Se(1))))),d=Rt(a.shape,o);return d.length>0&&(p=ve(p,d)),U(p,a.shape)},b:()=>{let c=Jn(a,0),p=En(c,os(a),Ke(a)),d=V(e,V(r,p)),h=Rt(i.shape,o);return h.length>0&&(d=ve(d,h)),U(d,i.shape)}}}},TB={kernelName:li,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,s]=t,r=Jn(n,0);return{x:()=>En(r,e,V(e,s)),alpha:()=>{let a=En(r,Ke(e),V(e,n)),i=Rt(s.shape,e.shape);return i.length>0&&(a=ve(a,i)),U(a,s.shape)}}}};function $B(e,t,n){let s=e.shape.slice();s[n]=1;let r=U(t,s),a=ng(e,n,!0,!1),i=ng(e,n,!0,!0),o=V(a,i);return V(r,o)}function _B(e,t,n){let s=e.shape.length,r=s-n.length,a=I.getAxesPermutation(n,s),i=e;a!=null&&(i=Ue(e,a));let o=i.shape.slice(),l=o.splice(s-n.length,n.length).reduce((d,h)=>d*h,1);o.push(l);let c=i.reshape(o),p=$B(c,t,r);if(p=p.reshape(i.shape),a!=null){let d=I.getUndoAxesPermutation(a);p=Ue(p,d)}return p}var AB={kernelName:ci,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{axis:r}=n,a=[];return r==null?a=s.shape.map((i,o)=>o):typeof r=="number"?a=[r]:a=r,{x:()=>_B(s,e,a)}}},EB={kernelName:Ua,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=xe(e,de(s,"float32")),u=Rt(n.shape,r);return u.length>0?U(ve(o,u),n.shape):o},b:()=>{let o=V(e,de(n,"float32")),u=Rt(s.shape,r);u.length>0&&(o=U(ve(o,u),s.shape));let l=pt(s);return wt(xe(o,de(l,"float32")))}}}},RB={kernelName:Vl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,wt(pt(n)))}}},DB={kernelName:fi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,s=V(lu(n,6),tc(n));return{x:()=>V(e,de(s,"float32"))}}},FB={kernelName:di,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,de(tc(n),"float32"))}}},OB={kernelName:Uo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>U(e,n.shape)}}},PB={kernelName:hi,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>M.runKernel(mb,r,n)}}},LB={kernelName:pi,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[s]=t,r={dy:e,images:s};return{images:()=>M.runKernel(fb,r,n)}}},zB={kernelName:Go,gradFunc:(e,t,n)=>{let{dims:s}=n,r=ls(s,e.shape);return{x:()=>Is(e,r)}}},MB={kernelName:Ho,gradFunc:e=>({x:()=>Ke(e)})},BB={kernelName:mi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>wt(xe(e,V(ka(n,1.5),2)))}}},VB={kernelName:jo,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>de(Ke(n),"float32"),t:()=>V(e,de(n,e.dtype)),e:()=>V(e,de(Mb(n),e.dtype))}}},WB={kernelName:Wl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let s=Jn(n,Se(0)),r=Se(HS),a=Se(qS),i=V(e,a),o=V(V(e,r),is(de(n,"float32")));return En(s,i,o)}}}},UB={kernelName:bi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(n,me(Se(1),n)))}}},GB={kernelName:Ul,gradFunc:e=>({x:()=>Ke(e)})},HB={kernelName:gi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(Db(de(n,"float32")),e)}}},qB={kernelName:Xo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(cS(de(n,"float32")),e)}}},jB={kernelName:Ko,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{begin:r,size:a}=n,i=s.shape,[o,u]=B0(s,r,a),l=[];for(let c=0;c<e.rank;c++)l.push([o[c],i[c]-o[c]-u[c]]);return{x:()=>Ci(e,l)}}},KB={kernelName:xi,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[s]=t,{dim:r}=n,a=!0,i=V(e,s);return{logits:()=>me(i,V(ve(i,[r],a),s))}}},XB={kernelName:Gl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,tr(n))}}},xw={kernelName:Yo,gradFunc:(e,t,n)=>{let{blockShape:s,paddings:r}=n;return{x:()=>Eb(e,s,r)}}},ww={kernelName:Zo,gradFunc:(e,t,n)=>{let{axis:s}=n;return{x:()=>Lt(e,s)}}},YB={kernelName:yi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,V(yn(de(n,"float32")),2))}}},ZB={kernelName:ql,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(e,V(de(n,"float32"),2))}}},QB={kernelName:wi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=Se(2);return{a:()=>V(e,V(r,me(n,s))),b:()=>V(e,V(r,me(s,n)))}}},JB={kernelName:Ii,gradFunc:e=>({x:()=>Ke(e)})},eV={kernelName:ki,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,s]=t,r=it(n.shape,s.shape);return{a:()=>{let o=e,u=Rt(n.shape,r);return u.length>0&&(o=ve(o,u)),U(o,n.shape)},b:()=>{let o=e,u=Rt(s.shape,r);return u.length>0&&(o=ve(o,u)),U(wt(o),s.shape)}}}},tV={kernelName:vi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,r=s.shape.slice(),{axis:a}=n;ls(a,s.shape).forEach(l=>{r[l]=1});let o=U(e,r),u=V(o,$n(s.shape,"float32"));return{x:()=>u}}},nV={kernelName:Jo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>xe(e,pt(Db(n)))}}},sV={kernelName:Si,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>V(me(Se(1),pt(n)),e)}}},rV={kernelName:Dr,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[s]=t,{reps:r}=n;return{x:()=>{let i=Ke(s);if(s.rank===1)for(let o=0;o<r[0];++o)i=ie(i,je(e,[o*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)i=ie(i,je(e,[o*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)for(let l=0;l<r[2];++l)i=ie(i,je(e,[o*s.shape[0],u*s.shape[1],l*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let o=0;o<r[0];++o)for(let u=0;u<r[1];++u)for(let l=0;l<r[2];++l)for(let c=0;c<r[3];++c)i=ie(i,je(e,[o*s.shape[0],u*s.shape[1],l*s.shape[2],c*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}},aV={kernelName:Js,gradFunc:(e,t,n)=>{let s=n,{perm:r}=s,a=Ob(r);return{x:()=>Ue(e,a)}}},iV={kernelName:nu,gradFunc:(e,t,n)=>{let s=n,{axis:r}=s;return{value:()=>Wn(e,r)}}},oV={kernelName:Fp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>uV(e,n)}}};function uV(e,t){let n=Pr(t,Ke(t)),s=qp(e,n),r=uu(t,Se(0,"int32")),a=s.rank-r.rank;for(let o=0;o<a;++o)r=Nn(r,o+1);r=Vs(r,$n(s.shape,"bool"));let i=Ke(s);return En(r,s,i)}var lV={kernelName:su,gradFunc:e=>({x:()=>Ke(e)})},cV=[oI,oM,uM,lM,cM,dM,pM,hM,fM,mM,gM,bM,xM,SM,IM,CM,NM,TM,$M,_M,AM,EM,DM,RM,PM,LM,zM,MM,BM,VM,EB,WM,UM,GM,HM,qM,KM,jM,XM,YM,ZM,QM,JM,eB,tB,nB,sB,rB,aB,uB,yw,yw,lB,pB,mB,gB,bB,yB,vB,xB,wB,kB,SB,IB,CB,vw,vw,NB,TB,AB,RB,DB,FB,OB,PB,LB,zB,MB,BB,VB,WB,UB,GB,HB,qB,jB,KB,XB,xw,xw,ww,ww,YB,QB,ZB,JB,eV,tV,nV,sV,rV,aV,iV,oV,lV];for(let e of cV)Q_(e);var dV={};Ee(dV,{maxNorm:()=>pV,minMaxNorm:()=>mV,nonNeg:()=>fV,unitNorm:()=>hV});function vy(e,t){return Y(()=>yn(ve(V(e,e),t,!0)))}var ic=class extends ae.Serializable{getConfig(){return{}}},xy=class extends ic{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>{let t=vy(e,this.axis),n=Zn(t,0,this.maxValue);return V(e,xe(n,ie(Ot(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};xy.className="MaxNorm";ae.registerClass(xy);var wy=class extends ic{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>xe(e,ie(Ot(),vy(e,this.axis))))}getConfig(){return{axis:this.axis}}};wy.className="UnitNorm";ae.registerClass(wy);var ky=class extends ic{apply(e){return rr(e)}};ky.className="NonNeg";ae.registerClass(ky);var Sy=class extends ic{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return Y(()=>{let t=vy(e,this.axis),n=ie(V(this.rate,Zn(t,this.minValue,this.maxValue)),V(1-this.rate,t));return V(e,xe(n,ie(Ot(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Sy.className="MinMaxNorm";ae.registerClass(Sy);var kw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function zt(e){return uy(e)}function Sw(e,t={}){return nc(e,ae.SerializationMap.getMap().classNameMap,t,"constraint")}function Mt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in kw?kw[e]:e,config:{}};return Sw(n)}else return e instanceof ic?e:Sw(e)}function pV(e){return new xy(e)}function hV(e){return new wy(e)}function fV(){return new ky}function mV(e){return new Sy(e)}var gV={};Ee(gV,{constant:()=>vV,glorotNormal:()=>NV,glorotUniform:()=>CV,heNormal:()=>TV,heUniform:()=>$V,identity:()=>SV,leCunNormal:()=>_V,leCunUniform:()=>AV,ones:()=>yV,orthogonal:()=>EV,randomNormal:()=>wV,randomUniform:()=>xV,truncatedNormal:()=>kV,varianceScaling:()=>IV,zeros:()=>bV});function bV(){return new dy}function yV(){return new ah}function vV(e){return new py(e)}function xV(e){return new hy(e)}function wV(e){return new fy(e)}function kV(e){return new my(e)}function SV(e){return new gy(e)}function IV(e){return new Rn(e)}function CV(e){return new ih(e)}function NV(e){return new oh(e)}function TV(e){return new uh(e)}function $V(e){return new lh(e)}function _V(e){return new ch(e)}function AV(e){return new dh(e)}function EV(e){return new by(e)}var RV={};Ee(RV,{Layer:()=>qe,RNN:()=>Mr,RNNCell:()=>lc,activation:()=>e4,add:()=>l4,alphaDropout:()=>q4,average:()=>c4,averagePooling1d:()=>Av,averagePooling2d:()=>Ev,averagePooling3d:()=>Rv,avgPool1d:()=>v4,avgPool2d:()=>w4,avgPool3d:()=>S4,avgPooling1d:()=>x4,avgPooling2d:()=>k4,avgPooling3d:()=>I4,batchNormalization:()=>g4,bidirectional:()=>z4,concatenate:()=>d4,conv1d:()=>HW,conv2d:()=>qW,conv2dTranspose:()=>jW,conv3d:()=>KW,conv3dTranspose:()=>XW,convLstm2d:()=>F4,convLstm2dCell:()=>O4,cropping2D:()=>ZW,dense:()=>t4,depthwiseConv2d:()=>JW,dot:()=>m4,dropout:()=>n4,elu:()=>MW,embedding:()=>u4,flatten:()=>r4,gaussianDropout:()=>H4,gaussianNoise:()=>G4,globalAveragePooling1d:()=>C4,globalAveragePooling2d:()=>N4,globalMaxPool1d:()=>B4,globalMaxPool2d:()=>V4,globalMaxPooling1d:()=>nC,globalMaxPooling2d:()=>sC,gru:()=>$4,gruCell:()=>_4,input:()=>CW,inputLayer:()=>zW,layerNormalization:()=>b4,leakyReLU:()=>VW,lstm:()=>A4,lstmCell:()=>E4,masking:()=>j4,maxPool1d:()=>W4,maxPool2d:()=>U4,maxPooling1d:()=>rC,maxPooling2d:()=>aC,maxPooling3d:()=>T4,maximum:()=>p4,minimum:()=>h4,multiply:()=>f4,permute:()=>o4,prelu:()=>WW,reLU:()=>BW,repeatVector:()=>a4,reshape:()=>i4,rnn:()=>P4,separableConv2d:()=>YW,simpleRNN:()=>R4,simpleRNNCell:()=>D4,softmax:()=>UW,spatialDropout1d:()=>s4,stackedRNNCells:()=>L4,thresholdedReLU:()=>GW,timeDistributed:()=>M4,upSampling2d:()=>QW,zeroPadding2d:()=>y4});async function Qr(e){if(e==null)return;let t=[],n=[],s=[];for(let r in e){let a=e[r];if(typeof a!="number"){let i=a;t.push(i.data()),n.push(r),s.push(i)}}if(t.length>0){let r=await Promise.all(t);for(let a=0;a<r.length;++a)e[n[a]]=r[a][0];Fe(s)}}function lI(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var DV=125,fl=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},FV=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},OV=class extends fl{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let s in t){let r=t[s];if(typeof r=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+r*n;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;let i=Y(()=>ie(this.totals[s],V(r,n)));this.totals[s]=i,a!=null&&a.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:Y(()=>{let s=V(xe(1,this.seen),this.totals[n]);t[n]=s,this.totals[n].dispose(),Zt(t[n])}))}},PV=class extends fl{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let r in this.history){let a=this.history[r];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){let o=a[i];e.push(o.data()),t.push(r),n.push(i)}}let s=await Promise.all(e);for(let r=0;r<s.length;++r)this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=s[r][0]}},LV=class extends fl{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||GS,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=DV),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");w.isNumber(this.yieldEvery)&&(this.maybeWait=Tz(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let s=[];this.yield!=null&&(await Qr(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Qr(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Qr(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Qr(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Qr(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):w.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Qr(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Qr(e),await this.trainEnd(e))}};function cI(e,t){return e==null&&(e={}),e instanceof fl?[e]:Array.isArray(e)&&e[0]instanceof fl?e:mt(e).map(s=>new LV(s,t))}var As=class{constructor(){}static registerCallbackConstructor(e,t){w.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),As.checkForDuplicate(t),As.constructors[e]==null&&(As.constructors[e]=[]),As.constructors[e].push(t)}static checkForDuplicate(e){for(let t in As.constructors)As.constructors[+t].forEach(s=>{if(s===e)throw new H("Duplicate callback constructor.")})}static clear(){As.constructors={}}static createCallbacks(e){let t=[];for(let n in As.constructors){let s=+n;e>=s&&t.push(...As.constructors[s])}return t.map(n=>new n)}},dI=As;dI.constructors={};function pI(e,t,n,s,r,a,i,o,u){let l=new PV,c=[new OV,...dI.createCallbacks(t)];e!=null&&c.push(...e),c.push(l);let p=new FV(c);return p.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:p,history:l}}function Ms(e,t={},n=!1){return nc(e,ae.SerializationMap.getMap().classNameMap,t,"layer",n)}function jd(e,t){return Y(()=>{e.dtype!=="float32"&&(e=de(e,"float32"));let n=ve(rc(e),t,!0),s=Ql(n.shape,Ot()),r=yn(Pr(n,s));return xe(e,r)})}function Ti(e,t){return Y(()=>Nt(rc(me(t,e)),-1))}function hh(e,t){return Y(()=>Nt(Wt(me(t,e)),-1))}function pu(e,t){return Y(()=>{let n=me(e,t),s=Zn(Wt(e),Ot(),Number.MAX_VALUE),r=Wt(xe(n,s));return V(100,Nt(r,-1))})}function zV(e,t){return Y(()=>{let n=Zn(t,Ot(),Number.MAX_VALUE),s=os(ie(1,n)),r=Zn(e,Ot(),Number.MAX_VALUE),a=os(ie(1,r));return Nt(rc(me(s,a)),-1)})}function MV(e,t){return Y(()=>{let n=Pr(0,me(1,V(e,t)));return Nt(rc(n),-1)})}function BV(e,t){return Y(()=>{let n=Pr(0,me(1,V(e,t)));return Nt(n,-1)})}function VV(e,t){return Y(()=>{let n=ve(V(e,t),-1),s=Ls(V(me(1,e),t),-1);return Pr(0,ie(1,me(s,n)))})}function WV(e,t){return Y(()=>{let n=Math.log(2),s=me(t,e),r=me(ie(s,Jl(V(-2,s))),n);return Nt(r,-1)})}function ml(e,t,n=!1){return Y(()=>{if(n)t=Kb(t);else{let s=ve(t,t.shape.length-1,!0);t=xe(t,s)}return t=Zn(t,Ot(),1-Ot()),wt(ve(V(de(e,"float32"),os(t)),t.shape.length-1))})}function Kd(e,t,n=!1){return Y(()=>{let s=de(Hp(Mz(e)),"int32");t=Zn(t,Ot(),1-Ot());let r=t.shape,a=U(Bd(s,r[r.length-1]),r);return ml(a,t,n)})}function UV(e,t){if(!w.arraysEqual(e.shape,t.shape))throw new H(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Y(()=>{let n=rr(t),s=wt(Wt(t));return ie(me(n,V(t,e)),zb(is(s)))})}function fh(e,t){return Y(()=>{let n;return n=Zn(t,Ot(),1-Ot()),n=os(xe(n,me(1,n))),Nt(UV(e,n),-1)})}function GV(e,t){return Y(()=>{let n=Zn(e,Ot(),1),s=Zn(t,Ot(),1);return ve(V(e,os(xe(n,s))),-1)})}function HV(e,t){return Y(()=>{let n=os(ie(Ot(),t));return Nt(me(t,V(e,n)),-1)})}function Iy(e,t){return Y(()=>{let n=jd(e,-1),s=jd(t,-1),r=V(n,s);return wt(ve(r,-1))})}var Xd={meanSquaredError:Ti,meanAbsoluteError:hh,meanAbsolutePercentageError:pu,meanSquaredLogarithmicError:zV,squaredHinge:MV,hinge:BV,categoricalHinge:VV,logcosh:WV,categoricalCrossentropy:ml,sparseCategoricalCrossentropy:Kd,binaryCrossentropy:fh,kullbackLeiblerDivergence:GV,poisson:HV,cosineProximity:Iy};function Tm(e){if(typeof e=="string"){if(e in Xd)return Xd[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new H(t)}else return e}function Cy(e,t){return Y(()=>{let n=V(.5,us(t)),s=sh(Jn(t,n),e.dtype);return Nt(as(e,s),-1)})}function Ny(e,t){return Y(()=>sh(as(ul(e,-1),ul(t,-1)),"float32"))}function hI(e,t){return Y(()=>de(ve(Vs(as(e,1),as(t,1))),"float32"))}function qV(e,t){return Y(()=>de(ve(Vs(as(e,1),as(t,0))),"float32"))}function jV(e,t){return Y(()=>de(ve(Vs(as(e,0),as(t,1))),"float32"))}function fI(e,t){return Y(()=>{let n=hI(e,t),s=jV(e,t),r=ie(n,s);return de(En(Jn(r,0),xe(n,r),0),"float32")})}function KV(e,t){return Y(()=>{let n=hI(e,t),s=qV(e,t),r=ie(n,s);return de(En(Jn(r,0),xe(n,r),0),"float32")})}function mI(e,t){return fh(e,t)}function gI(e,t){return e.rank===t.rank&&(e=Lr(e,[e.rank-1])),t=ul(t,-1),t.dtype!==e.dtype&&(t=de(t,e.dtype)),de(as(e,t),"float32")}var XV=Ti,YV=Ti,ZV=hh,QV=hh,JV=pu,eW=pu,Ty=ml,tW=Iy,bI=Kd,Yd={binaryAccuracy:Cy,categoricalAccuracy:Ny,precision:fI,categoricalCrossentropy:Ty,sparseCategoricalCrossentropy:bI,mse:XV,MSE:YV,mae:ZV,MAE:QV,mape:JV,MAPE:eW,cosine:tW};function nW(e){if(typeof e=="string"&&e in Yd)return Yd[e];if(typeof e!="string"&&e!=null)return e;throw new H(`Unknown metric ${e}`)}function od(e){if(Rs(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(Xd))if(Xd[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(Yd))if(Yd[n]===e){t=n;break}return t!==void 0?t:e.name}}function sW(e){let t={Adagrad:()=>Xi.adagrad(.01),Adadelta:()=>Xi.adadelta(1,.95,Ot()),Adam:()=>Xi.adam(.001,.9,.999,Ot()),Adamax:()=>Xi.adamax(.002,.9,.999,Ot(),0),RMSProp:()=>Xi.rmsprop(.001,.9,0,Ot()),SGD:()=>Xi.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new H(`Unknown Optimizer ${e}`)}var Iw=1*1024*1024;function Cw(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!lg(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let s=JSON.stringify(e);s.length>Iw&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Iw}.`)}}function lg(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!lg(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!lg(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function rW(e,t,n,s=console.log){let r=iW(e),a=["Layer (type)","Input Shape","Output shape","Param #"];r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(c=>Math.floor(t*c)));let i;if(!r){a.push("Receives inputs"),i=[];for(let c in e.nodesByDepth)i.push(...e.nodesByDepth[c])}s("_".repeat(t)),Zd(a,n,s),s("=".repeat(t));let o=e.layers;for(let c=0;c<o.length;++c)r?oW(o[c],n,s):uW(o[c],n,i,s),s((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let u=aW(e),l=Gd(e.nonTrainableWeights);s(`Total params: ${u+l}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${l}`),s("_".repeat(t))}function aW(e){let t;return e.collectedTrainableWeights!=null?t=Gd(e.collectedTrainableWeights):t=Gd(e.trainableWeights),t}function iW(e){let t=!0,n=[],s=[];for(let r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(let r of n){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(let r of e.layers){let a=!1;for(let i of r.inboundNodes)if(s.indexOf(i)!==-1)if(a){t=!1;break}else a=!0;if(!t)break}return t}function Zd(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function oW(e,t,n){let s,r;try{r=e.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch(u){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(u){s="multiple"}let a=e.name,i=e.getClassName(),o=[`${a} (${i})`,r,s,e.countParams().toString()];Zd(o,t,n)}function uW(e,t,n,s){let r,a;try{a=e.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch(p){a="multiple"}try{r=JSON.stringify(e.outputShape)}catch(p){r="multiple"}let i=[];for(let p of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(p)===-1))for(let d=0;d<p.inboundLayers.length;++d){let h=p.inboundLayers[d].name,f=p.nodeIndices[d],m=p.tensorIndices[d];i.push(`${h}[${f}][${m}]`)}let o=e.name,u=e.getClassName(),l=i.length===0?"":i[0],c=[`${o} (${u})`,a,r,e.countParams().toString(),l];Zd(c,t,s);for(let p=1;p<i.length;++p)Zd(["","","","",i[p]],t,s)}function yI(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function Qd(e,t){if(e===null)return null;if(typeof e=="string")return ra(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];yI(t,r,a)?n.push(a):n.push(Qd(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s];if(s==="name"&&typeof r=="string")n[s]=r;else{let a=ra(s);n[a]=Qd(r,a)}}return n}}function cg(e,t){if(e==null)return null;if(typeof e=="string")return Xs(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],s=e.length;for(let r=0;r<s;++r){let a=e[r];yI(t,r,a)?n.push(a):n.push(cg(a,t))}return n}else{let n={};for(let s of Object.keys(e)){let r=e[s],a=Xs(s);(s==="name"||s==="className")&&typeof r=="string"?n[a]=r:n[a]=cg(r,s)}return n}}var vI="0.0.0",Es=class extends qe{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let b=this.getClassName().toLowerCase();this.name=nh(b)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],vr(this.inputs).length!==this.inputs.length)throw new H(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);vr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let b of this.outputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(v),this.outputLayersTensorIndices.push(x)}for(let b of this.inputs){let y=b.sourceLayer,v=b.nodeIndex,x=b.tensorIndex;Rs(v===0,"input layer has >1 nodes"),Rs(x===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(v),this.inputLayersTensorIndices.push(x)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){let y=this.inputLayers[b];if(!(y instanceof du))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(let b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);let t={},n={},s={},r={},a={},i=[],o=(b,y,v,x,k,C)=>{(x==null||k==null||C==null)&&(x=b.sourceLayer,k=b.nodeIndex,C=b.tensorIndex);let $=x.inboundNodes[k];if(v.indexOf($)!==-1)throw new ks(`The tensor ${b.name} at layer "${x.name}" is part of a cycle.`);if(y.indexOf($)!==-1)return;this.containerNodes.add(Es.nodeKey(x,k)),x.id in a||(a[x.id]=Object.keys(a).length),v.indexOf($)===-1&&v.push($);let A=$.inboundLayers.length;for(let E=0;E<A;E++){let O=$.inputTensors[E],R=$.inboundLayers[E],D=$.nodeIndices[E],T=$.tensorIndices[E];o(O,y,v,R,D,T)}for(y.push($);v.indexOf($)>=0;)v.splice(v.indexOf($),1);i.push($)},u=[],l=[];for(let b of this.outputs)o(b,u,l);let c=i.slice().reverse();for(let b of c){n[b.id]=b,b.id in t||(t[b.id]=0);let y=t[b.id],v=s[b.outboundLayer.id]==null?0:s[b.outboundLayer.id];y=Math.max(y,v),s[b.outboundLayer.id]=y,r[b.outboundLayer.id]=b.outboundLayer,t[b.id]=y;for(let x=0;x<b.inboundLayers.length;x++){let k=b.inboundLayers[x],C=b.nodeIndices[x],$=k.inboundNodes[C],A=t[$.id]==null?0:t[$.id];t[$.id]=Math.max(y+1,A),n[$.id]=$}}let p={};for(let b in t){let y=t[b];y in p||(p[y]=[]),p[y].push(n[b])}let d={};for(let b in s){let y=s[b];y in d||(d[y]=[]),d[y].push(r[b])}let h=Object.keys(d).map(b=>parseInt(b,10)).sort(rd);this.layers=[];for(let b of h){let y=d[b];y.sort((v,x)=>{let k=a[v.id],C=a[x.id];return k<C?-1:k>C?1:0});for(let v of y)v instanceof Es&&this.internalContainerRefs.push(v),this.layers.push(v)}this.layersByDepth=d,h=Object.keys(p).map(b=>parseInt(b,10)).sort(rd);let f=this.inputs.slice(),m=[];for(let b of h)for(let y of p[b]){let v=y.outboundLayer;if(v!=null){for(let x of y.inputTensors)if(f.indexOf(x)===-1)throw new ks(`Graph disconnected: cannot obtain value for tensor ${x} at layer "${v.name}". The following previous layers were accessed without issue: ${m}`);for(let x of y.outputTensors)f.push(x);m.push(v.name)}}this.nodesByDepth=p;let g=this.layers.map(b=>b.name);for(let b of g){let y=g.filter(v=>v===b).length;if(y!==1)throw new ks(`The name "${b}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new ph({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new H("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},s=0;for(let a of this.layers)for(let i of a.weights){if(n[i.originalName]!=null)throw new H(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,s++}let r=[];for(let a in e){let i=a;if(n[a]==null){let o=a.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(n[i]!=null)r.push([n[i],e[a]]);else if(t)throw new H(`Provided weight data has no target variable: ${a}`);delete n[i]}if(t){let a=[];for(let i in n)a.push(i);if(a.length>0)throw new H(`${a.length} of ${s} weights are not set: ${a}`)}yy(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${vI}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=cg(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Y(()=>{e=mt(e);let n=new oa;for(let s=0;s<this.inputs.length;++s)n.add(this.inputs[s],e[s]);return qu(this.outputs,n,t)})}computeMask(e,t){return Y(()=>{e=mt(e);let n;return t==null?n=Sa(null,e.length):n=mt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=Ud(e);if(t.length!==this.inputLayers.length)throw new H(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],u=t[i],l=o.name+"_0_0";n[l]=u}let s=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(rd);if(s.length>1)for(let i of s){let o=this.nodesByDepth[i];for(let u of o){let l=u.outboundLayer;if(this.inputLayers.map(f=>f.id).indexOf(l.id)!==-1)continue;let c=[];for(let f=0;f<u.inboundLayers.length;f++){let m=u.inboundLayers[f],g=u.nodeIndices[f],b=u.tensorIndices[f],y=`${m.name}_${g}_${b}`,v=n[y];c.push(v)}let p=l.computeOutputShape(Tn(c)),d=Ud(p),h=l.inboundNodes.indexOf(u);for(let f=0;f<d.length;f++){let m=`${l.name}_${h}_${f}`;n[m]=d[f]}}}let r=[],a=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],c=`${o.name}_${u}_${l}`;a.push(c)}for(let i=0;i<a.length;i++){let o=a[i];Rs(o in n),r.push(n[o])}return Tn(r)}runInternalGraph(e,t){t==null&&(t=Sa(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let u=this.inputs[o],l=e[o],c=t[o];n[u.id]=[l,c]}let s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(rd);for(let o of s){let u=this.nodesByDepth[o];for(let l of u){let c=l.outboundLayer,p=l.inputTensors,d=l.outputTensors,h=new Array;for(let f of p)f.id in n&&h.push(n[f.id]);if(h.length===p.length){let f={},m,g,b,y;if(l.callArgs!=null&&(f=l.callArgs),h.length===1){let[v,x]=h[0];f.mask==null&&(f.mask=x),b=mt(c.call(v,f)),y=mt(c.computeMask(v,x)),m=[v],g=[x]}else m=h.map(v=>v[0]),g=h.map(v=>v[1]),f.mask==null&&(f.mask=g),b=mt(c.call(m,f)),y=mt(c.computeMask(m,g));if(c.activityRegularizer)throw new Oe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let v=0;v<d.length;++v){let x=d[v],k=b[v],C=y[v];n[x.id]=[k,C]}}}}let r=[],a=[],i=[];for(let o of this.outputs){Rs(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[u,l]=n[o.id];i.push(u.shape),r.push(u),a.push(l)}return[r,a,i]}buildNodeConversionMap(e){let t={},n;for(let s of this.layers){n=s instanceof Es?1:0;for(let r=0;r<s.inboundNodes.length;r++){let a=Es.nodeKey(s,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new H(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new H("Provide either a layer name or layer index");for(let n of this.layers)if(n.name===e)return n;throw new H(`No such layer: ${e}`)}calculateLosses(){return Y(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let s=Es.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let a of this.layers){let i=a.getClassName(),o=a.getConfig(),u=[];for(let c=0;c<a.inboundNodes.length;c++){let p=a.inboundNodes[c],d=Es.nodeKey(a,c),h={};if(this.containerNodes.has(d)){if(p.callArgs)try{JSON.stringify(p.callArgs),h=p.callArgs}catch(f){console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),h={}}if(p.inboundLayers.length>0){let f=[];for(let m=0;m<p.inboundLayers.length;m++){let g=p.inboundLayers[m],b=p.nodeIndices[m],y=p.tensorIndices[m],v=Es.nodeKey(g,b),x=t[v];x==null&&(x=0),f.push([g.name,x,y,h])}u.push(f)}}}let l={};l.name=a.name,l.className=i,l.config=o,l.inboundNodes=u,n.push(l)}e.layers=n;let s=[];for(let a=0;a<this.inputLayers.length;a++){let i=this.inputLayers[a],o=this.inputLayersNodeIndices[a],u=Es.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let c=this.inputLayersTensorIndices[a];s.push([i.name,l,c])}e.inputLayers=s;let r=[];for(let a=0;a<this.outputLayers.length;a++){let i=this.outputLayers[a],o=this.outputLayersNodeIndices[a],u=Es.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);let c=this.outputLayersTensorIndices[a];r.push([i.name,l,c])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){let r={},a={};function i(m,g){m.name in a?a[m.name].push(g):a[m.name]=[g]}function o(m,g){let b=[],y;for(let v of g){let x=v[0],k=v[1],C=v[2];if(y=v[3]==null?{}:v[3],!(x in r)){i(m,g);return}let $=r[x];if($.inboundNodes.length<=k){i(m,g);return}let A=$.inboundNodes[k];b.push(A.outputTensors[C])}b.length>0&&m.apply(Tn(b),y)}function u(m){let g=m.name,b=Ms(m,t.customObjects!=null?t.customObjects:{});b.setFastWeightInitDuringBuild(s),r[g]=b,m.inboundNodes.forEach(v=>{if(!(v instanceof Array))throw new H(`Corrupted configuration, expected array for nodeData: ${v}`);i(b,v)})}let l=t.name,c=t.layers;for(let m of c)u(m);for(;!Nz(a);)for(let m of c){let g=r[m.name];if(g.name in a){let b=a[g.name];delete a[g.name];for(let y of b)o(g,y)}}let p=[],d=[],h=t.inputLayers;for(let m of h){let g=m[0],b=m[1],y=m[2];Rs(g in r);let x=r[g].inboundNodes[b].outputTensors;p.push(x[y])}let f=t.outputLayers;for(let m of f){let g=m[0],b=m[1],y=m[2];Rs(g in r);let x=r[g].inboundNodes[b].outputTensors;d.push(x[y])}return new e({inputs:p,outputs:d,name:l})}get stateful(){if(this._stateful)throw new H("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Y(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function lW(e,t,n){let s=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>null);if(s===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let r=[];return t.forEach(a=>{a in e?r.push(e[a]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function xI(e,t){return lW(e,t,"classWeight")}async function wI(e,t,n,s){if(t!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let r=Y(()=>{if(e.shape.length===1)return er(e);if(e.shape.length===2){if(e.shape[1]>1)return ul(e,1);if(e.shape[1]===1)return U(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await r.data());Fe(r);let i=[];return a.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),gn(i,"float32")}else return null}function cW(e,t){return V(e,t)}var dW=32;function kI(e,t){let n,s,r=t;n=r.xs,s=r.ys,w.assert(n!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let a=Nw("input",e.inputNames,n),i=Nw("output",e.outputNames,s),o=a[0].shape[0];w.assert(a.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),w.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let u=0;u<a.length;u++)w.assert(a[u].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${a[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let u=0;u<i.length;u++)w.assert(i[u].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:a,ys:i}}function Nw(e,t,n){if(n instanceof ut)return[n];if(Array.isArray(n))return w.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let s=[];for(let r of t){if(n[r]==null)throw new H(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function pW(e){if(e.length===3)throw new Oe("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function hW(e,t,n){let s=n.batchesPerEpoch!=null;if(w.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),w.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),w.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),w.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),w.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r=n.validationData!=null,a,i;if(r)if(Tw(n.validationData))w.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=pW(n.validationData);a=g.xs,i=g.ys}let o=e.makeTrainFunction(),u=e.getDedupedMetricsNames(),l;r?l=u.slice().concat(u.map(g=>"val_"+g)):l=u.slice();let c=cI(n.callbacks,n.yieldEvery),p=n.verbose==null?1:n.verbose,{callbackList:d,history:h}=pI(c,p,n.epochs,null,null,fW(t,n),null,r,l);d.setModel(e),e.history=h,await d.onTrainBegin(),e.stopTraining_=!1;let f=n.initialEpoch==null?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let g={};await d.onEpochBegin(f);let b=0,y=0;for(s||(m=await t.iterator());!s||b<n.batchesPerEpoch;){let v=await m.next();if(s&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){let{xs:x,ys:k}=kI(e,v.value),C={};C.batch=y,C.size=x[0].shape[0],await d.onBatchBegin(y,C);let $=[];if(n.classWeight!=null){let O=xI(n.classWeight,e.outputNames);for(let R=0;R<O.length;++R)$.push(await wI(k[R],null,O[R]))}let A=x.concat(k).concat($),E=o(A);Fe(A);for(let O=0;O<u.length;++O){let R=u[O],D=E[O];C[R]=D,Zt(D)}await d.onBatchEnd(y,C),lI(C),y++,b++}if(s?b>=n.batchesPerEpoch:v.done){if(r){let x;Tw(n.validationData)?x=mt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):x=mt(e.evaluate(a,i,{batchSize:n.validationBatchSize==null?dW:n.validationBatchSize,verbose:0}));for(let k=0;k<e.metricsNames.length;++k)g[`val_${e.metricsNames[k]}`]=x[k]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,g),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function fW(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function Tw(e){return typeof e.iterator=="function"}function mW(e){return typeof e.next=="function"}async function gW(e,t,n){n=n||{};let s=n.batches!=null,r=e.testFunction,a=[];if(n.verbose>0)throw new Oe("Verbose mode is not implemented yet.");w.assert(!s||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=mW(t)?t:await t.iterator(),o=0,u=0;for(;!s||u<n.batches;){let l=await i.next();if(a=Y(()=>{if(l.value){let{xs:c,ys:p}=kI(e,l.value),d=c.concat(p),h=Y(()=>r(d));if(Fe(d),u===0)for(let m=0;m<h.length;++m)a.push(Se(0));let f=d[0].shape[0];for(let m=0;m<h.length;++m){let g=h[m],b=a[m];a[m]=Y(()=>ie(a[m],V(f,g))),u>0&&Fe(b)}Fe(h),o+=f,++u}return a}),l.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<a.length;++l){let c=a[l];a[l]=xe(a[l],o),Fe(c)}return Tn(a)}function dg(e){w.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function ju(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(s=>pa(s,t,n-t)):pa(e,t,n-t)}function $y(e,t){return Y(()=>e==null?null:Array.isArray(e)?e.map(n=>$y(n,t)):sI(e,t.dtype==="int32"?t:de(t,"int32")))}function pg(e,t){let n=[],s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}async function bW(e,t,n,s,r,a,i,o,u,l,c,p,d,h,f){r==null&&(r=32),a==null&&(a=1),c==null&&(c=!0),d==null&&(d=0);let m=!1;if(u!=null&&l!=null&&(m=!0),f!=null&&(m=!0,h==null))throw new H("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let g=e.checkNumSamples(n,r,h,"steps_per_epoch"),b;g!=null&&(b=Cs(0,g)),i==null&&(i=1);let{callbackList:y,history:v}=pI(o,i,a,d,g,h,r,m,p);y.setModel(e),e.history=v,await y.onTrainBegin(),e.stopTraining_=!1;for(let x=d;x<a;++x){await y.onEpochBegin(x);let k={};if(h!=null)throw new Oe("stepsPerEpoch mode is not implemented yet.");{if(c==="batch")throw new Oe("batch shuffling is not implemneted yet");c&&w.shuffle(b);let C=gn(b),$=pg(g,r);for(let A=0;A<$.length;++A){let E={};if(await y.onBatchBegin(A,E),Y(()=>{let O=$[A][0],R=$[A][1],D=pa(C,O,R-O);E.batch=A,E.size=R-O;let T=$y(n,D),L=t(T);for(let W=0;W<s.length;++W){let q=s[W],j=L[W];E[q]=j,Zt(j)}if(A===$.length-1&&m){let W=e.testLoop(u,l,r);for(let q=0;q<s.length;++q){let j=s[q],X=W[q];Zt(X),k["val_"+j]=X}}}),await y.onBatchEnd(A,E),lI(E),e.stopTraining_)break}C.dispose()}if(await y.onEpochEnd(x,k),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}async function yW(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;let r,a,i,o,u,l,c,p,d;try{let h=s.batchSize==null?32:s.batchSize;dg(h);let f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,h);r=m[0],a=m[1],d=m[2];let g=!1,b;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)u=s.validationData[0],l=s.validationData[1];else throw s.validationData.length===3?new Oe("validationData including sample weights is not supported yet."):new H(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);let E=!0,O=await e.standardizeUserData(u,l,null,null,E,h);c=O[0],p=O[1],b=c.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;let E=Math.floor(r[0].shape[0]*(1-s.validationSplit)),O=r[0].shape[0];c=ju(r,E,O),i=r,r=ju(r,0,E),p=ju(a,E,O),o=a,a=ju(a,0,E),b=c.concat(p)}else s.validationSteps!=null&&(g=!0);let y=r.concat(a).concat(d);e.checkTrainableWeightsConsistency();let v=e.makeTrainFunction(),x=e.getDedupedMetricsNames(),k,C;g?(e.makeTestFunction(),k=e.testFunction,C=x.slice().concat(x.map(E=>"val_"+E))):(k=null,b=[],C=x.slice());let $=cI(s.callbacks,s.yieldEvery);return await bW(e,v,y,x,h,s.epochs,s.verbose,$,k,b,s.shuffle,C,s.initialEpoch,null,null)}finally{e.isTraining=!1,xs(r,t),xs(a,n),xs(i,t),xs(o,n),xs(c,u),xs(p,l),d!=null&&Fe(d)}}function SI(e){let t=[];e instanceof ut&&(e=[e]);for(let n=0;n<e.length;++n){let s=e[n];if(s.rank===1)t.push(sc(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function xs(e,t){if(e==null)return;let n=[];if(t instanceof ut)n.push(t.id);else if(Array.isArray(t))t.forEach(r=>n.push(r.id));else if(t!=null)for(let r in t){let a=t[r];n.push(a.id)}let s=[];if(e instanceof ut)n.indexOf(e.id)===-1&&s.push(e);else if(Array.isArray(e))e.forEach(r=>{n.indexOf(r.id)===-1&&s.push(r)});else if(e!=null)for(let r in e){let a=e[r];n.indexOf(a.id)===-1&&s.push(a)}s.forEach(r=>{r.isDisposed||r.dispose()})}function vW(e){return e instanceof ut}function hg(e){return Array.isArray(e)}function $w(e){return!vW(e)&&!hg(e)}function _w(e,t,n,s=!0,r=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(hg(e)&&e.length>0)i=!0;else if($w(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new H(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let a;if($w(e)){e=e,a=[];for(let i of t){if(e[i]==null)throw new H(`No data provided for "${i}". Need data for each key in: ${t}`);a.push(e[i])}}else if(hg(e)){if(e=e,e.length!==t.length)throw new H(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new H(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=SI(a),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=a[i];if(o.shape.length!==n[i].length)throw new H(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let u=0;u<n[i].length;++u){if(u===0&&!s)continue;let l=o.shape[u],c=n[i][u];if(c!=null&&c>=0&&l!==c)throw new H(`${r} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${r} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return a}function xW(e,t,n){let s=vr(e.map(a=>a.shape[0]));s.sort();let r=vr(t.map(a=>a.shape[0]));if(r.sort(),s.length>1)throw new H(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(a=>a.shape))}`);if(r.length>1)throw new H(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(a=>a.shape))}`);if(s.length>0&&r.length>0&&!w.arraysEqual(s,r))throw new H(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function wW(e,t,n){let s=[Ti,fh,ml];for(let r=0;r<e.length;++r){let a=e[r],i=t[r],o=n[r];if(i!=null){if(i===ml&&a.shape[a.shape.length-1]===1)throw new H(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){let u=a.shape.slice(1),l=o.slice(1);for(let c=0;c<u.length;++c){let p=u[c],d=l[c];if(d!=null&&p!==d)throw new H(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Aw(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new H(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new H(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=a[i];if(o.shape.length!==n[i].length)throw new H(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let u=0;u<n[i].length;++u){if(u===0&&!s)continue;let l=o.shape[u],c=n[i][u];if(c!=null&&c!==l)throw new H(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function kW(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(s=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(s=>n);{let s=[];for(let r of t){let a=n.hasOwnProperty(r)?n[r]:[];Array.isArray(a)||(a=[a]),s.push(a)}return s}}var SW="layers-model",oo=class extends Es{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new H("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");rW(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=sW(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof zr))throw new H("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new H(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(let a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Tm(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new H(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Tm(i))}else{let a=Tm(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){let i=this.internalOutputShapes[a],o=this.outputNames[a];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],da("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});let s=kW(e.metrics,this.outputNames),r=(a,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,a])};da("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(n.indexOf(a)!==-1)continue;let i=s[a];(u=>{let l="",c,p,d;for(let h of u){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[a];m[m.length-1]===1||this.lossFunctions[a]===fh?["accuracy","acc"].indexOf(h)!==-1?p=Cy:["crossentropy","ce"].indexOf(h)!==-1&&(p=mI):this.lossFunctions[a]===Kd?["accuracy","acc"].indexOf(h)!==-1?p=gI:["crossentropy","ce"].indexOf(h)!==-1&&(p=bI):["accuracy","acc"].indexOf(h)!==-1?p=Ny:["crossentropy","ce"].indexOf(h)!==-1&&(p=Ty);let g;["accuracy","acc"].indexOf(h)!==-1?g="acc":["crossentropy","ce"].indexOf(h)!==-1&&(g="ce"),d=p,c=l+g}else d=nW(h),c=l+od(h);let f;da(c,()=>{f=d}),r(a,c,f)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let s=n.batchSize==null?32:n.batchSize;dg(s);let r=!0,a=this.standardizeUserDataXY(e,t,r,s);try{let i=a[0].concat(a[1]);this.makeTestFunction();let o=this.testFunction,u=this.testLoop(o,i,s,n.verbose,n.steps);return Tn(u)}finally{xs(a[0],e),xs(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),gW(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(n!=null){if(r=null,t!=null)throw new H(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new H(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new H("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new oa;if(e instanceof ut&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new H(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)a.add(this.inputs[o],e[o])}else for(let o of this.inputs){let u=e[o.name];if(u==null)throw new H(`No value is provided for the model's input ${o.name}`);a.add(o,u)}let i=qu(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Sa(null,e.length),n=e.length;for(let s of this.layers){let r=Array.isArray(s.output)?s.output:[s.output],a=r.map(i=>i.name);for(let i=0;i<e.length;++i){let o=a.indexOf(e[i]);if(o!==-1&&(t[i]=r[o],n--),n===0)break}if(n===0)break}if(n>0){let s=[];throw t.forEach((r,a)=>{r==null&&s.push(e[a])}),new H(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,n=!1){return Y(()=>{let s=this.checkNumSamples(e);if(n)throw new Oe("Verbose predictLoop() is not implemented yet.");let r=pg(s,t),a=this.outputs.map(i=>[]);for(let i=0;i<r.length;++i)Y(()=>{let u=r[i][0],l=r[i][1],c=ju(e,u,l),p=[];if(Array.isArray(c))for(let h=0;h<c.length;++h)p.push({key:this.inputs[h],value:c[h]});else p.push({key:this.inputs[0],value:c});let d=new oa(p);return qu(this.outputs,d)}).forEach((u,l)=>a[l].push(u));return Tn(a.map(i=>Lt(i,0)))})}predict(e,t={}){let n=SI(e);Aw(n,this.inputNames,this.feedInputShapes,!1);try{let s=t.batchSize==null?32:t.batchSize;return dg(s),this.predictLoop(n,s)}finally{xs(n,e)}}predictOnBatch(e){Aw(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(this.optimizer_==null)throw new ks("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let a=0;a<this.feedOutputShapes.length;++a){let i=this.feedOutputShapes[a];this.feedLossFns[a]===Kd?r.push(i.slice(0,i.length-1).concat([1])):r.push(i)}if(e=_w(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=_w(t,this.feedOutputNames,r,!1,"target"),xW(e,t,null),wW(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new H(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){let[i,o]=this.standardizeUserDataXY(e,t,r,a);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(s!=null){let l=xI(s,this.outputNames);u=[];for(let c=0;c<l.length;++c)u.push(await wI(o[c],null,l[c]))}return[i,o,u]}testLoop(e,t,n,s=0,r){return Y(()=>{let a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new Oe("Verbose mode is not implemented yet.");if(r!=null)throw new Oe("steps mode in testLoop() is not implemented yet");{let o=pg(a,n),u=gn(Cs(0,a));for(let l=0;l<o.length;++l){let c=o[l][0],p=o[l][1],d=pa(u,c,p-c),h=$y(t,d),f=e(h);if(l===0)for(let m=0;m<f.length;++m)i.push(Se(0));for(let m=0;m<f.length;++m){let g=f[m];i[m]=ie(i[m],V(p-c,g))}}for(let l=0;l<i.length;++l)i[l]=xe(i[l],a)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let s=e[n],r=s;lw(e,s)>1&&(r+=`_${lw(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{let c=[];for(let f=0;f<this.inputs.length;++f)c.push({key:this.inputs[f],value:n[f]});let p=new oa(c),d=qu(this.outputs,p,{training:!0}),h;for(let f=0;f<this.lossFunctions.length;++f){let m=this.lossFunctions[f],g=m(s[f],d[f]);r[f]!=null&&(g=cW(g,r[f]));let b=Nt(g);t.push(b),f===0?h=g:h=ie(h,g)}for(let f=0;f<this.metricsTensors.length;++f){let m;if(this.outputs.length>1&&f<this.outputs.length)m=t[f];else{let g=this.metricsTensors[f][0],b=this.metricsTensors[f][1];m=Nt(g(s[b],d[b]))}Zt(m),a.push(m)}return h=Nt(h),this.calculateLosses().forEach(f=>{h=ie(h,f)}),h},o=this.collectedTrainableWeights.map(c=>c.read()),u=!0;return[this.optimizer_.minimize(i,u,o)].concat(a)}}makeTestFunction(){this.testFunction=e=>Y(()=>{let t=[],n,s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:s[u]});let i=new oa(a),o=qu(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let l=this.lossFunctions[u],c=Nt(l(r[u],o[u]));u===0?n=c:n=ie(n,c),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let l=this.metricsTensors[u][0],c=this.metricsTensors[u][1],p=Nt(l(r[c],o[c]));t.push(p)}return t})}async fit(e,t,n={}){return yW(this,e,t,n)}async fitDataset(e,t){return hW(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),s=n[0],r=n[1],i=this.makeTrainFunction()(s.concat(r)),o=[];for(let u of i){let l=await u.data();o.push(l[0])}return Fe(i),xs(n[0],e),xs(n[1],t),Tn(o)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let a=0;a<s.length;++a)n&&!s[a].trainable||t.push({name:s[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=il().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-il().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Xs(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Xs(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let s of t)if(typeof n[s]=="string")e[s]=Xs(n[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Xs(od(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Xs(od(e)));{let e={};for(let t in this.metrics)e[t]=Xs(od(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=Qd(e.optimizer_config),n=Ms(t),s;if(typeof e.loss=="string")s=ra(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>ra(a));else if(e.loss!=null){s={};for(let a in e.loss)s[a]=ra(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>ra(a));else if(e.metrics!=null){r={};for(let a in e.metrics)r[a]=ra(e.metrics[a])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if(typeof e=="string"){let u=gr.getSaveHandlers(e);if(u.length===0)throw new H(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new H(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new H("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await gr.encodeWeights(this.getNamedWeights(t)),s=!1,r=null,i={modelTopology:this.toJSON(r,s),format:SW,generatedBy:`TensorFlow.js tfjs-layers v${vI}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();let u="optimizer",{data:l,specs:c}=await gr.encodeWeights(await this.optimizer.getWeights(),u);n.specs.push(...c),n.data=gr.concatenateArrayBuffers([n.data,l])}return this.userDefinedMetadata!=null&&(Cw(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=n.data,i.weightSpecs=n.specs,e.save(i)}setUserDefinedMetadata(e){Cw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};oo.className="Model";ae.registerClass(oo);var II=class extends oo{};II.className="Functional";ae.registerClass(II);async function IW(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let s=Qd(n),r=Ms(s,t);if(e.weightsManifest!=null){let a=await gr.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map(o=>o.originalName)),i={};for(let o of r.weights)i[o.originalName]=a[o.originalName];r.loadWeights(i),Fe(a)}return r}var fg=class extends oo{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:nh("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(n=>n<0))throw new H(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof fg||e instanceof oo,n;if(t){if(n=e,n.outputs.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new H("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new H("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let s=iI({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new H(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new H("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=aI(this.outputs[0])}this.inboundNodes=[],new ph({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Sa(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{let s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(st(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new oo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new ks("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new ks("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new ks("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new ks("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new H("Legacy serialization format not supported yet.");r=t}else w.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;let i=new e(a);if(!(i instanceof fg))throw new Oe(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of r){let l=Ms(o,void 0,s);s&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new H("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new H("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},CI=fg;CI.className="Sequential";ae.registerClass(CI);function CW(e){return iI(e)}var Fn=class extends ae.Serializable{getConfig(){return{}}},NI=class extends Fn{apply(e,t=1){return Vz(e,t)}};NI.className="elu";ae.registerClass(NI);var TI=class extends Fn{apply(e){return IS(e)}};TI.className="selu";ae.registerClass(TI);var $I=class extends Fn{apply(e){return rr(e)}};$I.className="relu";ae.registerClass($I);var _I=class extends Fn{apply(e){return Y(()=>jp(6,rr(e)))}};_I.className="relu6";ae.registerClass(_I);var AI=class extends Fn{apply(e){return e}};AI.className="linear";ae.registerClass(AI);var EI=class extends Fn{apply(e){return tr(e)}};EI.className="sigmoid";ae.registerClass(EI);var RI=class extends Fn{apply(e){return Uz(e)}};RI.className="hardSigmoid";ae.registerClass(RI);var DI=class extends Fn{apply(e){return Jl(e)}};DI.className="softplus";ae.registerClass(DI);var FI=class extends Fn{apply(e){return Wz(e)}};FI.className="softsign";ae.registerClass(FI);var OI=class extends Fn{apply(e){return ll(e)}};OI.className="tanh";ae.registerClass(OI);var _y=class extends Fn{apply(e,t=-1){return Kb(e,t)}};_y.className="softmax";ae.registerClass(_y);var PI=class extends Fn{apply(e,t=-1){return bS(e,t)}};PI.className="logSoftmax";ae.registerClass(PI);var LI=class extends Fn{apply(e,t=1){return Y(()=>V(tr(V(e,t)),e))}};LI.className="swish";ae.registerClass(LI);var zI=class extends Fn{apply(e){return Y(()=>V(e,ll(Jl(e))))}};zI.className="mish";ae.registerClass(zI);function Cr(e){return e.getClassName()}function $m(e,t={}){return nc(e,ae.SerializationMap.getMap().classNameMap,t,"activation")}function Nr(e){if(e==null){let t={};return t.className="linear",t.config={},$m(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},$m(t)}else return e instanceof Fn?e:$m(e)}function Ay(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var MI=class extends ae.Serializable{},oc=class extends MI{constructor(e){super(),Ay(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return Y(()=>{let t=Et([1]);return this.hasL1&&(t=ie(t,ve(V(this.l1,Wt(e))))),this.hasL2&&(t=ie(t,ve(V(this.l2,rc(e))))),U(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};oc.className="L1L2";ae.registerClass(oc);function NW(e){return Ay(e),new oc({l1:e!=null?e.l1:null,l2:0})}function TW(e){return Ay(e),new oc({l2:e!=null?e.l2:null,l1:0})}var Ew={l1l2:"L1L2"};function lt(e){return uy(e)}function Rw(e,t={}){return nc(e,ae.SerializationMap.getMap().classNameMap,t,"regularizer")}function bt(e){if(e==null)return null;if(typeof e=="string"){let n={className:e in Ew?Ew[e]:e,config:{}};return Rw(n)}else return e instanceof MI?e:Rw(e)}var Ey=class extends qe{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Pe(e);let n=rr(e);return this.maxValue!=null&&(n=Zn(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Ey.className="ReLU";ae.registerClass(Ey);var Ry=class extends qe{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Pe(e);return Lb(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Ry.className="LeakyReLU";ae.registerClass(Ry);var Dy=class extends qe{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=gt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=bt(e.alphaRegularizer),this.alphaConstraint=Mt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new H(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=st(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new Pt({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Pe(e),Ub(e,this.alpha.read())}getConfig(){let e={alphaInitializer:xt(this.alphaInitializer),alphaRegularizer:lt(this.alphaRegularizer),alphaConstraint:zt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Dy.className="PReLU";ae.registerClass(Dy);var Fy=class extends qe{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Oe(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Pe(e);return Up(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Fy.className="ELU";ae.registerClass(Fy);var Oy=class extends qe{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Pe(e);return V(n,de(Jn(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Oy.className="ThresholdedReLU";ae.registerClass(Oy);var Py=class extends qe{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new _y().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Pe(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Py.className="Softmax";ae.registerClass(Py);function uo(e,t,n){if(typeof e=="number")return Sa(e,t);if(e.length!==t)throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){let r=e[s];if(!Lz(r))throw new H(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function Ss(e,t,n,s,r=1){if(e==null)return e;let a=t+(t-1)*(r-1),i;return n==="same"?i=e:i=e-a+1,Math.floor((i+s-1)/s)}function Ds(e,t,n,s){if(e==null)return null;if(s==="valid")e=e*t+Ir([n-t,0]);else if(s==="same")e=e*t;else throw new H(`Unsupport padding mode: ${s}.`);return e}function Ly(e,t){return Y(()=>(Tt(t),t==="channelsFirst"?Ue(e,[0,2,3,1]):e))}function BI(e,t){return Y(()=>(Tt(t),t==="channelsFirst"?Ue(e,[0,2,3,4,1]):e))}function $W(e,t,n,s=1,r="valid",a,i=1){return Y(()=>{if(a==null&&(a=Ns()),Tt(a),e.shape.length!==3)throw new H(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new H(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new H(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(a==="channelsFirst"&&(e=Ue(e,[0,2,1])),r==="causal")throw new Oe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=aS(e,t,s,r==="same"?"same":"valid","NWC",i);return n!=null&&(o=_s(o,n)),o})}function Dw(e,t,n,s=[1,1],r="valid",a,i,o=null){return Y(()=>{if(a==null&&(a=Ns()),Tt(a),e.rank!==3&&e.rank!==4)throw new H(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new H(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Ly(e,a);if(r==="causal")throw new Oe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=hl.conv2d({x:u,filter:t,strides:s,pad:r==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),a==="channelsFirst"&&(u=Ue(u,[0,3,1,2])),u})}function _W(e,t,n,s=[1,1,1],r="valid",a,i){return Y(()=>{if(a==null&&(a=Ns()),Tt(a),e.rank!==4&&e.rank!==5)throw new H(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new H(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=BI(e,a);if(r==="causal")throw new Oe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=oS(o,t,s,r==="same"?"same":"valid","NDHWC",i),n!=null&&(o=_s(o,n)),a==="channelsFirst"&&(o=Ue(o,[0,4,1,2,3])),o})}var zy=class extends qe{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",zy.verifyArgs(t),this.rank=e,Gt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Oe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=uo(t.kernelSize,e,"kernelSize"),this.strides=uo(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,es(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Tt(this.dataFormat),this.activation=Nr(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Mt(t.biasConstraint),this.biasRegularizer=bt(t.biasRegularizer),this.activityRegularizer=bt(t.activityRegularizer),this.dilationRate=uo(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new H(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new H(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new H(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Rs("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!ly(e.kernelSize,"number",1,3))throw new H(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Cr(this.activation),useBias:this.useBias,biasInitializer:xt(this.biasInitializer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},uc=class extends zy{constructor(e,t){super(e,t),this.kernel=null,uc.verifyArgs(t),this.filters=t.filters,Gt(this.filters,"filters"),this.kernelInitializer=gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Mt(t.kernelConstraint),this.kernelRegularizer=bt(t.kernelRegularizer)}build(e){e=st(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Y(()=>{e=Pe(e);let n,s=this.bias==null?null:this.bias.read(),r=ZS(this.activation.getClassName());if(r!=null&&this.rank===2)n=Dw(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)n=$W(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=Dw(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=_W(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Oe("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=st(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){let a=Ss(n[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){let e={filters:this.filters,kernelInitializer:xt(this.kernelInitializer),kernelRegularizer:lt(this.kernelRegularizer),kernelConstraint:zt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new H(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},VI=class extends uc{constructor(e){super(2,e),VI.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ly(e.kernelSize,"number",1,2))throw new H(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},mh=VI;mh.className="Conv2D";ae.registerClass(mh);var WI=class extends uc{constructor(e){super(3,e),WI.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new H(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},gh=WI;gh.className="Conv3D";ae.registerClass(gh);var My=class extends mh{constructor(e){if(super(e),this.inputSpec=[new Pt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=st(e),e.length!==4)throw new H("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Y(()=>{let n=Pe(e);if(n.shape.length!==4)throw new H(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);let o=s[a],u=s[i],l=this.kernelSize[0],c=this.kernelSize[1],p=this.strides[0],d=this.strides[1],h=Ds(o,p,l,this.padding),f=Ds(u,d,c,this.padding),m=[r,h,f,this.filters];this.dataFormat!=="channelsLast"&&(n=Ue(n,[0,2,3,1]));let g=iS(n,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Ue(g,[0,3,1,2])),this.bias!=null&&(g=_s(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=st(e);let t=e.slice(),n,s,r;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3):(n=3,s=1,r=2);let a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[s]=Ds(t[s],o,a,this.padding),t[r]=Ds(t[r],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};My.className="Conv2DTranspose";ae.registerClass(My);var By=class extends gh{constructor(e){if(super(e),this.inputSpec=[new Pt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new H(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=st(e),e.length!==5)throw new H("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new H("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Y(()=>{let n=Pe(e);if(n.shape.length!==5)throw new H(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let s=n.shape,r=s[0],a,i,o;this.dataFormat==="channelsFirst"?(o=2,a=3,i=4):(o=1,a=2,i=3);let u=s[o],l=s[a],c=s[i],p=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],b=Ds(u,f,p,this.padding),y=Ds(l,m,d,this.padding),v=Ds(c,g,h,this.padding),x=[r,b,y,v,this.filters];this.dataFormat!=="channelsLast"&&(n=Ue(n,[0,2,3,4,1]));let k=lS(n,this.kernel.read(),x,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=Ue(k,[0,4,1,2,3])),this.bias!==null&&(k=_s(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(e){e=st(e);let t=e.slice(),n,s,r,a;this.dataFormat==="channelsFirst"?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);let i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],p=this.strides[2];return t[n]=this.filters,t[s]=Ds(t[s],l,i,this.padding),t[r]=Ds(t[r],c,o,this.padding),t[a]=Ds(t[a],p,u,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};By.className="Conv3DTranspose";ae.registerClass(By);var UI=class extends uc{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new H("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new H("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new H(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=gt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=bt(t.depthwiseRegularizer),this.depthwiseConstraint=Mt(t.depthwiseConstraint),this.pointwiseInitializer=gt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=bt(t.pointwiseRegularizer),this.pointwiseConstraint=Mt(t.pointwiseConstraint)}build(e){if(e=st(e),e.length<this.rank+2)throw new H(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);let a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Pt({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Y(()=>{e=Pe(e);let n;if(this.rank===1)throw new Oe("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Ue(e,[0,2,3,1])),n=CS(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=_s(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=Ue(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=xt(this.depthwiseInitializer),e.pointwiseInitializer=xt(this.pointwiseInitializer),e.depthwiseRegularizer=lt(this.depthwiseRegularizer),e.pointwiseRegularizer=lt(this.pointwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseConstraint),e.pointwiseConstraint=zt(this.pointwiseConstraint),e}};UI.className="SeparableConv";var Vy=class extends UI{constructor(e){super(2,e)}};Vy.className="SeparableConv2D";ae.registerClass(Vy);var GI=class extends uc{constructor(e){super(1,e),GI.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ly(e.kernelSize,"number",1,1))throw new H(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},Wy=GI;Wy.className="Conv1D";ae.registerClass(Wy);var Uy=class extends qe{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Y(()=>{if(e=Pe(e),this.dataFormat==="channelsLast"){let n=id(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return id(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=id(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return id(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Uy.className="Cropping2D";ae.registerClass(Uy);var Gy=class extends qe{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,Fz(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Y(()=>{let n=Pe(e),s=n.shape;if(this.dataFormat==="channelsFirst"){n=Ue(n,[0,2,3,1]);let r=this.size[0]*s[2],a=this.size[1]*s[3],i=this.interpolation==="nearest"?br.resizeNearestNeighbor(n,[r,a]):br.resizeBilinear(n,[r,a]);return Ue(i,[0,3,1,2])}else{let r=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?br.resizeNearestNeighbor(n,[r,a]):br.resizeBilinear(n,[r,a])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};Gy.className="UpSampling2D";ae.registerClass(Gy);function AW(e,t,n=[1,1],s="valid",r,a){return Y(()=>{r==null&&(r=Ns()),Tt(r);let i=Ly(e,r);if(e.rank!==4)throw new H(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new H(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Wp(i,t,n,s==="same"?"same":"valid","NHWC",a),r==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}var Hy=class extends zy{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=gt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Mt(e.depthwiseConstraint),this.depthwiseRegularizer=bt(e.depthwiseRegularizer)}build(e){if(e=st(e),e.length<4)throw new H(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new H(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{e=Pe(e);let n=AW(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=_s(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=st(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Ss(t,this.kernelSize[0],this.padding,this.strides[0]),a=Ss(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=xt(this.depthwiseInitializer),e.depthwiseRegularizer=lt(this.depthwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseRegularizer),e}};Hy.className="DepthwiseConv2D";ae.registerClass(Hy);function HI(e,t,n,s){if(Array.isArray(e)){if(t!=null||n!=null)throw new H("When inputs is an array, neither initialState or constants should be provided");s!=null&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(a){return a==null||Array.isArray(a)?a:[a]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function qI(e,t,n,s=!1,r,a,i=!1,o=!1){return Y(()=>{let u=t.shape.length;if(u<3)throw new H(`Input should be at least 3D, but is ${u}D.`);let l=[1,0].concat(Cs(2,u));if(t=Ue(t,l),a!=null)throw new Oe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=de(de(r,"bool"),"float32"),r.rank===u-1&&(r=Nn(r,-1)),r=Ue(r,l)),s&&(t=Is(t,0),r!=null&&(r=Is(r,0)));let c=[],p,d=n,h=t.shape[0],f=Ws(t),m;r!=null&&(m=Ws(r));for(let b=0;b<h;++b){let y=f[b],v=Y(()=>e(y,d));if(r==null)p=v[0],d=v[1];else{let x=Y(()=>{let k=m[b],C=me(us(k),k),$=ie(V(v[0],k),V(d[0],C)),A=d.map((E,O)=>ie(V(v[1][O],k),V(E,C)));return{output:$,newStates:A}});p=x.output,d=x.newStates}o&&c.push(p)}let g;return o&&(g=Wn(c,1)),[p,g,d]})}var jI=class extends qe{constructor(e){super(e);let t;if(e.cell==null)throw new H("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new vh({cells:e.cell}):t=e.cell,t.stateSize==null)throw new H("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Pt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Cs(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){og(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],s;if(this.returnSequences?s=[e[0],e[1],n]:s=[e[0],n],this.returnState){let r=[];for(let a of t)r.push([e[0],a]);return[s].concat(r)}else return s}computeMask(e,t){return Y(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let s=this.states.map(r=>null);return[n].concat(s)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Oe("Constants support is not implemented in RNN yet.");og(e)&&(e=e[0]),e=e;let n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Pt({shape:[n,null,...s]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!w.arraysEqual(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new H(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new Pt({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Y(()=>{if(!this.stateful)throw new Ks("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Et([n,s])):this.states_=[Et([n,this.cell.stateSize])];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>Et([n,s])):this.states_[0]=Et([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let s=0;s<this.states_.length;++s){let r=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,i=[n,a];if(!w.arraysEqual(r.shape,i))throw new H(`State ${s} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[s]=r}}this.states_=this.states_.map(s=>Zt(s.clone()))})}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=HI(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(n!=null){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(let u of n)this.stateSpec.push(new Pt({shape:u.shape}));i=i.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Os){let u=[e].concat(a),l=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=l;let p=super.apply(u,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return Y(()=>{let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;e=Pe(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));let a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new H(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:s},u=qI((h,f)=>{let m=this.cell.call([h].concat(f),i);return[m[0],m.slice(1)]},e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=u[0],c=u[1],p=u[2];this.stateful&&this.resetStates(p,s);let d=this.returnSequences?c:l;return this.returnState?[d].concat(p):d})}getInitialState(e){return Y(()=>{let t=Et(e.shape);return t=ve(t,[1,2]),t=sc(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?ag(t,[1,n]):t):this.cell.stateSize>1?[ag(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===jI.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){let s=t.cell,r=Ms(s,n);return new e(Object.assign(t,{cell:r}))}},Mr=jI;Mr.className="RNN";ae.registerClass(Mr);var lc=class extends qe{},bh=class extends lc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Gt(this.units,"units"),this.activation=Nr(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=bt(e.kernelRegularizer),this.recurrentRegularizer=bt(e.recurrentRegularizer),this.biasRegularizer=bt(e.biasRegularizer),this.kernelConstraint=Mt(e.kernelConstraint),this.recurrentConstraint=Mt(e.recurrentConstraint),this.biasConstraint=Mt(e.biasConstraint),this.dropout=co([1,Ir([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=co([1,Ir([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=st(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{if(e=e,e.length!==2)throw new H(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tr({ones:()=>us(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tr({ones:()=>us(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let r,a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?r=zs(V(e,a),this.kernel.read()):r=zs(e,this.kernel.read()),this.bias!=null&&(r=_s(r,this.bias.read())),i!=null&&(n=V(n,i));let o=ie(r,zs(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Cr(this.activation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:lt(this.kernelRegularizer),recurrentRegularizer:lt(this.recurrentRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return{...e,...t}}};bh.className="SimpleRNNCell";ae.registerClass(bh);var qy=class extends Mr{constructor(e){e.cell=new bh(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return new e(t)}};qy.className="SimpleRNN";ae.registerClass(qy);var yh=class extends lc{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new H("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Gt(this.units,"units"),this.activation=Nr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Nr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=bt(e.kernelRegularizer),this.recurrentRegularizer=bt(e.recurrentRegularizer),this.biasRegularizer=bt(e.biasRegularizer),this.kernelConstraint=Mt(e.kernelConstraint),this.recurrentConstraint=Mt(e.recurrentConstraint),this.biasConstraint=Mt(e.biasConstraint),this.dropout=co([1,Ir([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=co([1,Ir([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=st(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Y(()=>{if(e=e,e.length!==2)throw new H(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tr({ones:()=>us(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tr({ones:()=>us(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r=this.dropoutMask,a=this.recurrentDropoutMask,i,o,u;0<this.dropout&&this.dropout<1&&(e=V(e,r[0]));let l=zs(e,this.kernel.read());this.useBias&&(l=_s(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=V(s,a[0]));let c=this.recurrentKernel.read(),[p,d]=_n(c,[2*this.units,this.units],c.rank-1),h=zs(s,p),[f,m,g]=_n(l,3,l.rank-1),[b,y]=_n(h,2,h.rank-1);i=this.recurrentActivation.apply(ie(f,b)),o=this.recurrentActivation.apply(ie(m,y));let v=zs(V(o,s),d);u=this.activation.apply(ie(g,v));let x=ie(V(i,s),V(ie(1,wt(i)),u));return[x,x]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Cr(this.activation),recurrentActivation:Cr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:lt(this.kernelRegularizer),recurrentRegularizer:lt(this.recurrentRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return{...e,...t}}};yh.className="GRUCell";ae.registerClass(yh);var jy=class extends Mr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new yh(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};jy.className="GRU";ae.registerClass(jy);var cc=class extends lc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Gt(this.units,"units"),this.activation=Nr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Nr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=bt(e.kernelRegularizer),this.recurrentRegularizer=bt(e.recurrentRegularizer),this.biasRegularizer=bt(e.biasRegularizer),this.kernelConstraint=Mt(e.kernelConstraint),this.recurrentConstraint=Mt(e.recurrentConstraint),this.biasConstraint=Mt(e.biasConstraint),this.dropout=co([1,Ir([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=co([1,Ir([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=st(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){let r=this.biasInitializer,a=this.units;s=new(t=class extends cs{apply(i,o){let u=r.apply([a]),l=new ah().apply([a]),c=r.apply([a*2]);return dw(dw(u,l),c)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Y(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new H(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tr({ones:()=>us(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tr({ones:()=>us(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,i=this.recurrentDropoutMask,o,u,l,c;0<this.dropout&&this.dropout<1&&(e=V(e,a[0]));let p=zs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=V(s,i[0])),p=ie(p,zs(s,this.recurrentKernel.read())),this.useBias&&(p=_s(p,this.bias.read()));let[d,h,f,m]=_n(p,4,p.rank-1);o=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(h),l=ie(V(u,r),V(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);let g=V(c,this.activation.apply(l));return[g,g,l]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Cr(this.activation),recurrentActivation:Cr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),recurrentInitializer:xt(this.recurrentInitializer),biasInitializer:xt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:lt(this.kernelRegularizer),recurrentRegularizer:lt(this.recurrentRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return{...e,...t}}};cc.className="LSTMCell";ae.registerClass(cc);var Ky=class extends Mr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cc(e),super(e)}call(e,t){return Y(()=>{this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};Ky.className="LSTM";ae.registerClass(Ky);var vh=class extends lc{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Y(()=>{e=e;let n=e.slice(1),s=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?s.push(n.splice(0,i.stateSize.length)):s.push(n.splice(0,1));s.reverse();let r=[],a;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=s[i],i===0?a=[e[0]].concat(n):a=[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(let i of r.slice().reverse())n.push(...i);return[a[0]].concat(n)})}build(e){og(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,s)=>{da(`RNNCell_${s}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),s={cells:this.cells.map(t)};return{...e,...s}}static fromConfig(e,t,n={}){let s=[];for(let r of t.cells)s.push(Ms(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return ug(e)}setWeights(e){let t=[];for(let n of this.cells){let s=n.weights.length,r=e.splice(s);for(let a=0;a<n.weights.length;++a)t.push([n.weights[a],r[a]])}yy(t)}};vh.className="StackedRNNCells";ae.registerClass(vh);function Tr(e){let{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>a!=null?a(t(),n):rI(t(),n),o=()=>ac(i,t,s);return!r||r<=1?Zt(o().clone()):Array(r).fill(void 0).map(o).map(l=>Zt(l.clone()))}var KI=class extends Mr{constructor(e){if(e.unroll)throw new Oe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Oe("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Pt({ndim:5})]}call(e,t){return Y(()=>{if(this.cell.dropoutMask!=null&&(Fe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Fe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new H("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,s=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Y(()=>{let{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],a=Et(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){Y(()=>{if(!this.stateful)throw new Ks("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(n[0]==null)throw new H("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Et(r)):this.states_=[Et(r)];else if(e==null)Fe(this.states_),this.keptStates!=null&&(Fe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Et(r)):this.states_[0]=Et(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new H(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Fe(this.states_);for(let i=0;i<this.states_.length;++i){let o=e[i],u=r;if(!w.arraysEqual(o.shape,u))throw new H(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${o.shape}`);this.states_[i]=o}}this.states_=this.states_.map(i=>Zt(i.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o=t==="channelsFirst",u=e[o?3:2],l=e[o?4:3],c=Ss(u,s[0],r,a[0],i[0]),p=Ss(l,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,p]:[c,p,n]]}};KI.className="ConvRNN2D";var xh=class extends cc{constructor(e){let{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super({...e,units:t}),this.filters=t,Gt(this.filters,"filters"),this.kernelSize=uo(n,2,"kernelSize"),this.kernelSize.forEach(o=>Gt(o,"kernelSize")),this.strides=uo(s||1,2,"strides"),this.strides.forEach(o=>Gt(o,"strides")),this.padding=r||"valid",es(this.padding),this.dataFormat=a||"channelsLast",Tt(this.dataFormat),this.dilationRate=uo(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>Gt(o,"dilationRate"))}build(e){var t;e=st(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new H(`The channel dimension of the input should be defined. Found ${e[n]}`);let s=e[n],r=4,a=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let u=this.biasInitializer,l=this.filters;o=new(t=class extends cs{apply(c,p){let d=u.apply([l]),h=$n([l]),f=u.apply([l*2]);return cy([d,h,f])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Y(()=>{if(e.length!==3)throw new H(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,s=e[0],r=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Tr({ones:()=>us(s),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,u=(Q,ne,J)=>!ne||!ne[J]?Q:V(ne[J],Q),l=u(s,o,0),c=u(s,o,1),p=u(s,o,2),d=u(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Tr({ones:()=>us(r),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let h=this.recurrentDropoutMask,f=u(r,h,0),m=u(r,h,1),g=u(r,h,2),b=u(r,h,3),y=3,[v,x,k,C]=_n(this.kernel.read(),i,y),[$,A,E,O]=this.useBias?_n(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,v,$,this.padding),c=this.inputConv(c,x,A,this.padding),p=this.inputConv(p,k,E,this.padding),d=this.inputConv(d,C,O,this.padding);let[R,D,T,L]=_n(this.recurrentKernel.read(),i,y);f=this.recurrentConv(f,R),m=this.recurrentConv(m,D),g=this.recurrentConv(g,T),b=this.recurrentConv(b,L);let W=this.recurrentActivation.apply(ie(l,f)),q=this.recurrentActivation.apply(ie(c,m)),j=ie(V(q,a),V(W,this.activation.apply(ie(p,g)))),X=V(this.recurrentActivation.apply(ie(d,b)),this.activation.apply(j));return[X,X,j]})}getConfig(){let{units:e,...t}=super.getConfig(),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return{...t,...n}}inputConv(e,t,n,s){let r=xa(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?_s(r,n,this.dataFormat):r}recurrentConv(e,t){return xa(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};xh.className="ConvLSTM2DCell";ae.registerClass(xh);var Xy=class extends KI{constructor(e){let t=new xh(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Xy.className="ConvLSTM2D";ae.registerClass(Xy);var wh=class extends qe{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return n}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);if(0<this.rate&&this.rate<1){let s=t.training==null?!1:t.training,r=this.getNoiseShape(n);return ac(()=>rI(n,this.rate,r,this.seed),()=>n,s)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};wh.className="Dropout";ae.registerClass(wh);var Yy=class extends wh{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};Yy.className="SpatialDropout1D";ae.registerClass(Yy);var Zy=class extends qe{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Gt(this.units,"units"),this.activation=Nr(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Mt(e.kernelConstraint),this.biasConstraint=Mt(e.biasConstraint),this.kernelRegularizer=bt(e.kernelRegularizer),this.biasRegularizer=bt(e.biasRegularizer),this.activityRegularizer=bt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=st(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=st(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e),s=ZS(this.activation.getClassName()),r;return s!=null?r=zs(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=zs(n,this.kernel.read()),this.bias!=null&&(r=_s(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){let e={units:this.units,activation:Cr(this.activation),useBias:this.useBias,kernelInitializer:xt(this.kernelInitializer),biasInitializer:xt(this.biasInitializer),kernelRegularizer:lt(this.kernelRegularizer),biasRegularizer:lt(this.biasRegularizer),activityRegularizer:lt(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Zy.className="Dense";ae.registerClass(Zy);var Qy=class extends qe{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=st(e);for(let t of e.slice(1))if(t==null)throw new H(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],xr(e,1)]}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let s=[0];for(let r=2;r<n.rank;++r)s.push(r);s.push(1),n=Ue(n,s)}return Bz(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};Qy.className="Flatten";ae.registerClass(Qy);var Jy=class extends qe{constructor(e){super(e),this.supportsMasking=!0,this.activation=Nr(e.activation)}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);return this.activation.apply(n)})}getConfig(){let e={activation:Cr(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Jy.className="Activation";ae.registerClass(Jy);var ev=class extends qe{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Y(()=>(e=Pe(e),zz(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};ev.className="RepeatVector";ae.registerClass(ev);var tv=class extends qe{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",s=t.slice(),r=1,a=null;for(let o=0;o<s.length;++o){let u=s[o];if(this.isUnknown(u))if(a===null)a=o;else throw new H("Can only specifiy one unknown dimension.");else r*=u}let i=xr(e);if(a!==null){if(r===0||i%r!==0)throw new H(n);s[a]=i/r}else if(i!==r)throw new H(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return U(n,r)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};tv.className="Reshape";ae.registerClass(tv);var nv=class extends qe{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Cs(1,e.dims.length+1);if(!w.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Pt({ndim:this.dims.length+1})]}computeOutputShape(e){e=st(e);let t=e.slice();return this.dims.forEach((n,s)=>{t[s+1]=e[n]}),t}call(e,t){return Ue(Pe(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};nv.className="Permute";ae.registerClass(nv);var sv=class extends qe{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Pe(e),s=-1;return eg(cl(n,this.maskValue),s)}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e),s=-1,r=!0,a=eg(cl(n,this.maskValue),s,r);return V(n,de(a,n.dtype))})}};sv.className="Masking";ae.registerClass(sv);var rv=class extends qe{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(mt(e.inputLength))}this.inputDim=e.inputDim,Gt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Gt(this.outputDim,"outputDim"),this.embeddingsInitializer=gt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=bt(e.embeddingsRegularizer),this.activityRegularizer=bt(e.activityRegularizer),this.embeddingsConstraint=Mt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Y(()=>this.maskZero?(e=Pe(e),cl(e,Ke(e))):null)}computeOutputShape(e){if(e=st(e),this.inputLength==null)return[...e,this.outputDim];let t=mt(this.inputLength);if(t.length!==e.length-1)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){let r=t[s],a=e[s+1];if(r!=null&&a!=null&&r!==a)throw new H(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);n.dtype!=="int32"&&(n=sh(n,"int32"));let s=sI(this.embeddings.read(),U(n,[n.size]));return U(s,st(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:xt(this.embeddingsInitializer),embeddingsRegularizer:lt(this.embeddingsRegularizer),activityRegularizer:lt(this.activityRegularizer),embeddingsConstraint:zt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};rv.className="Embedding";ae.registerClass(rv);var $i=class extends qe{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Oe}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){let r=e[e.length-t.length+s],a=t[s];if(r==null||a==null||r<0||a<0)n.push(null);else if(r===1)n.push(a);else if(a===1)n.push(r);else{if(r!==a)throw new H("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[st(e)]),e=e,e.length<2)throw new H(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=vr(t),t.length>1)throw new H(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let s=e.map(r=>r.length);e.indexOf(null)===-1&&vr(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Y(()=>{if(e=e,this.reshapeRequired){let n=[],s=e.map(r=>r.rank);if(s.indexOf(null)===-1){let r=Ir(s);for(let a of e){let i=a.rank;for(let o=0;o<r-i;++o)a=sc(a,1);n.push(a)}return this.mergeFunction(n)}else{let r=!1;for(let o of e){let u=o.rank;if(u==null){let l=o.shape,c=l[0],p=l.slice(1).concat([c]),d=U(o,[c].concat(xr(l.slice(1))));d=Ue(d,[1,0]),d=U(d,p),n.push(d),r=!0}else if(u>1){let l=Cs(1,u).concat([0]);n.push(Ue(o,l)),r=!0}else n.push(o)}let a=this.mergeFunction(n),i=a.rank;if(r){if(i==null){let o=a.shape,u=o.length,l=o[u-1],c=[l].concat(o.slice(0,o.length-1));a=U(Ue(U(a,[-1,l]),[1,0]),c)}else if(i>1){let o=[i-1].concat(Cs(0,i-1));a=Ue(a,o)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){let r=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(let s of e)s!=null&&s[0]!==null&&n.push(s[0]);return n=vr(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return Y(()=>{if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an Array");if(!Array.isArray(e))throw new H("`inputs` should be an Array");if(t.length!==e.length)throw new H(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Nn(s,0));let n=t[0];for(let s=1;s<t.length-1;++s)n=Vs(n,t[s]);return n})}},av=class extends $i{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ie(t,e[n]);return t})}};av.className="Add";ae.registerClass(av);var iv=class extends $i{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=V(t,e[n]);return t})}};iv.className="Multiply";ae.registerClass(iv);var ov=class extends $i{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ie(t,e[n]);return V(1/e.length,t)})}};ov.className="Average";ae.registerClass(ov);var uv=class extends $i{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Pr(t,e[n]);return t})}};uv.className="Maximum";ae.registerClass(uv);var lv=class extends $i{constructor(e){super(e)}mergeFunction(e){return Y(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=jp(t,e[n]);return t})}};lv.className="Minimum";ae.registerClass(lv);var cv=class extends $i{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new H("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let s of e)if(s!=null){t=!1;break}if(t)return;let n=[];for(let s=0;s<e.length;++s){let r=e[s].slice();r.splice(this.axis,1);let a=!1;for(let i of n)if(w.arraysEqual(i,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new H("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Y(()=>cy(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new H("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(let r of t.slice(1)){if(n[s]==null||r[s]==null){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new H("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new H("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new H(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Y(()=>{let n=!0;if(t.forEach(a=>{if(a!=null){n=!1;return}}),n)return null;let s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(de(us(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Nn(t[a],-1)):s.push(t[a]);let r=Lt(s,this.axis);return q0(r,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};cv.className="Concatenate";ae.registerClass(cv);function Vu(e,t){for(;e<0;)e+=t;return e}function EW(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Oe("batchDot is not implemented for tensors of 4D or higher rank yet");if(w.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),w.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Oe("batchDot is not implemented for complex64-type Tensors yet.");let s=e.shape.length,r=t.shape.length;n==null&&(n=[s-1,r-2]);let a=n;return Y(()=>{let i;if(s>r){i=s-r;let u=[];for(let l=0;l<i;++l)u.push(1);t=U(t,t.shape.concat(u))}else if(r>s){i=r-s;let u=[];for(let l=0;l<i;++l)u.push(1);e=U(e,e.shape.concat(u))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)a[0]===a[1]?o=ve(V(e,t),a[0]):o=ve(V(Ue(e,[1,0]),t),a[1]);else{let u=a[0]!==e.shape.length-1,l=a[1]===t.shape.length-1;o=Ve(e,t,u,l)}if(i>0){let u;s>r?u=s+r-3:u=s-1;let l=[];for(let c=u;c<u+i;++c)l.push(c);o=Lr(o,l)}return o.shape.length===1&&(o=Nn(o,1)),o})}var dv=class extends $i{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Oe("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new H(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new H(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((r,a)=>Vu(r,e[a].shape.length)):s=[Vu(this.axes,t.shape.length),Vu(this.axes,n.shape.length)],this.normalize&&(t=jd(t,s[0]),n=jd(n,s[1])),EW(t,n,s)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Vu(this.axes,e.length),Vu(this.axes,t.length)],n}computeOutputShape(e){w.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Oe("Dot layer does not support tensors of 4D or higher rank yet.");let s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);let r=t.concat(n);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};dv.className="Dot";ae.registerClass(dv);var pv=class extends qe{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);return ac(()=>ie(rh(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};pv.className="GaussianNoise";ae.registerClass(pv);var hv=class extends qe{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Y(()=>{this.invokeCallHook(e,t);let n=Pe(e);return this.rate>0&&this.rate<1?ac(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return V(n,rh(n.shape,1,r))},()=>n,t.training||!1):n})}};hv.className="GaussianDropout";ae.registerClass(hv);var fv=class extends qe{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Pe(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Y(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return ac(()=>{let r=Pe(e),a=1.6732632423543772,i=1.0507009873554805,o=-a*i,u=uu(ec(n),this.rate);u=sh(u,"float32");let l=((1-this.rate)*(1+this.rate*o**2))**-.5,c=-l*o*this.rate,p=ie(V(r,u),V(ie(u,-1),o));return ie(V(p,l),c)},()=>Pe(e),t.training||!1)}return e})}};fv.className="AlphaDropout";ae.registerClass(fv);function gl(e,t,n,s,r,a=.001){let i;if(e.rank===2)i=Z0(e,t,n,s,r,a);else if(e.rank===3)i=Q0(e,t,n,s,r,a);else if(e.rank===4)i=J0(e,t,n,s,r,a);else throw new Oe(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function RW(e,t,n,s,r=.001){return Y(()=>{let a=Kp(e,s),i=a.mean,o=a.variance;return[gl(e,i,o,n,t,r),i,o]})}function DW(e,t,n,s,r=.001){return Y(()=>{let a=Kp(e,s),i=a.mean,o=a.variance,u=[];for(let f of Cs(0,e.rank))s.indexOf(f)!==-1?u.push(1):u.push(e.shape[f]);let l=U(i,u),c=U(o,u),p=t==null?null:U(t,u),d=n==null?null:U(n,u);return[gl(e,l,c,d,p,r),i,o]})}function FW(e,t,n,s,r=.001){return w.arraysEqual(s.slice().sort(),Cs(0,e.rank-1))?RW(e,t,n,s,r):DW(e,t,n,s,r)}var mv=class extends qe{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=gt(e.betaInitializer||"zeros"),this.gammaInitializer=gt(e.gammaInitializer||"ones"),this.movingMeanInitializer=gt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=gt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Mt(e.betaConstraint),this.gammaConstraint=Mt(e.gammaConstraint),this.betaRegularizer=bt(e.betaRegularizer),this.gammaRegularizer=bt(e.gammaRegularizer)}build(e){e=st(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new H(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Pt({ndim:e.length,axes:{[t]:n}})];let s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Y(()=>{let n=t.training==null?!1:t.training,s=Pe(e),r=s.shape,a=r.length,i=Cs(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);let u=Sa(1,a);u[o]=r[o];let l=i.slice();l.sort();let c=!w.arraysEqual(l,Cs(0,a).slice(0,a-1)),p=()=>{if(c){let b=U(this.movingMean.read(),u),y=U(this.movingVariance.read(),u),v=this.center?U(this.beta.read(),u):null,x=this.scale?U(this.gamma.read(),u):null;return gl(s,b,y,v,x,this.epsilon)}else return gl(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return p();let[d,h,f]=FW(s,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(b,y,v)=>{Y(()=>{let x=1-v,k=b.read(),C=V(me(k,y),x);b.write(me(k,C))})};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),d})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xt(this.betaInitializer),gammaInitializer:xt(this.gammaInitializer),movingMeanInitializer:xt(this.movingMeanInitializer),movingVarianceInitializer:xt(this.movingVarianceInitializer),betaRegularizer:lt(this.betaRegularizer),gammaRegularizer:lt(this.gammaRegularizer),betaConstraint:zt(this.betaConstraint),gammaConstraint:zt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};mv.className="BatchNormalization";ae.registerClass(mv);var gv=class extends qe{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=gt(e.betaInitializer||"zeros"),this.gammaInitializer=gt(e.gammaInitializer||"ones"),this.betaRegularizer=bt(e.betaRegularizer),this.gammaRegularizer=bt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=st(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(let r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==vr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(r=>e[r]),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){let n=Pe(e),s=n.shape,r=s.length;return Y(()=>{let{mean:i,variance:o}=Kp(n,this.axis,!0),u=Sa(1,r);for(let f of this.axis)u[f]=s[f];let l=f=>f!=null&&f.shape.length!==r?U(f,u):f,c=this.scale?l(this.gamma.read()):null,p=this.center?l(this.beta.read()):null,d=[],h=[];for(let f=0;f<r;++f)this.axis.indexOf(f)!==-1?(d.push(s[f]),h.push(1)):(d.push(1),h.push(s[f]));return i=ws(i,d),o=ws(o,d),c!=null&&(c=ws(c,h)),p!=null&&(p=ws(p,h)),gl(n,i,o,p,c,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:xt(this.betaInitializer),gammaInitializer:xt(this.gammaInitializer),betaRegularizer:lt(this.betaRegularizer),gammaRegularizer:lt(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};gv.className="LayerNormalization";ae.registerClass(gv);function OW(e,t,n){return Y(()=>{if(e.rank!==4)throw new H(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new H("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=Ns()),n!=="channelsLast"&&n!=="channelsFirst")throw new H(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return n==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Ci(e,s)})}var bv=class extends qe{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Ns():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new H(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new H(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new H(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=st(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return Y(()=>OW(Pe(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};bv.className="ZeroPadding2D";ae.registerClass(bv);function kh(e,t,n,s,r,a){return Y(()=>{Tt(r),JS(a),es(s),n==null&&(n=[1,1]),s==null&&(s="valid"),r==null&&(r=Ns()),a==null&&(a="max"),e=Ly(e,r);let i,o=s==="same"?"same":"valid";return a==="max"?i=Vb(e,t,n,o):i=Ab(e,t,n,o),r==="channelsFirst"&&(i=Ue(i,[0,3,1,2])),i})}function XI(e,t,n,s,r,a){return Y(()=>{Tt(r),JS(a),es(s),n==null&&(n=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Ns()),a==null&&(a="max"),e=BI(e,r);let i,o=s==="same"?"same":"valid";return a==="max"?i=xS(e,t,n,o):i=Y0(e,t,n,o),r==="channelsFirst"&&(i=Ue(i,[0,4,1,2,3])),i})}var YI=class extends qe{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new H(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(Gt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new H(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);Gt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,es(this.padding),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){e=st(e);let t=Ss(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Y(()=>{this.invokeCallHook(e,t),e=sc(Pe(e),2);let n=this.poolingFunction(Pe(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Lr(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},yv=class extends YI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),es(s),kh(e,t,n,s,r,"max")}};yv.className="MaxPooling1D";ae.registerClass(yv);var vv=class extends YI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),es(s),kh(e,t,n,s,r,"avg")}};vv.className="AveragePooling1D";ae.registerClass(vv);var ZI=class extends qe{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new H(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Gt(this.poolSize,"poolSize"),Gt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),es(this.padding),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=st(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Ss(t,this.poolSize[0],this.padding,this.strides[0]),n=Ss(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Y(()=>(this.invokeCallHook(e,t),this.poolingFunction(Pe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xv=class extends ZI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),es(s),kh(e,t,n,s,r,"max")}};xv.className="MaxPooling2D";ae.registerClass(xv);var wv=class extends ZI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),es(s),kh(e,t,n,s,r,"avg")}};wv.className="AveragePooling2D";ae.registerClass(wv);var QI=class extends qe{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new H(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Gt(this.poolSize,"poolSize"),Gt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),es(this.padding),this.inputSpec=[new Pt({ndim:5})]}computeOutputShape(e){e=st(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Ss(t,this.poolSize[0],this.padding,this.strides[0]),n=Ss(n,this.poolSize[1],this.padding,this.strides[1]),s=Ss(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Y(()=>(this.invokeCallHook(e,t),this.poolingFunction(Pe(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},kv=class extends QI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),es(s),XI(e,t,n,s,r,"max")}};kv.className="MaxPooling3D";ae.registerClass(kv);var Sv=class extends QI{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Tt(r),es(s),XI(e,t,n,s,r,"avg")}};Sv.className="AveragePooling3D";ae.registerClass(Sv);var JI=class extends qe{constructor(e){super(e),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Oe}},Iv=class extends JI{constructor(e){super(e||{})}call(e,t){return Y(()=>{let n=Pe(e);return Nt(n,1)})}};Iv.className="GlobalAveragePooling1D";ae.registerClass(Iv);var Cv=class extends JI{constructor(e){super(e||{})}call(e,t){return Y(()=>{let n=Pe(e);return Ls(n,1)})}};Cv.className="GlobalMaxPooling1D";ae.registerClass(Cv);var eC=class extends qe{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Oe}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Nv=class extends eC{call(e,t){return Y(()=>{let n=Pe(e);return this.dataFormat==="channelsLast"?Nt(n,[1,2]):Nt(n,[2,3])})}};Nv.className="GlobalAveragePooling2D";ae.registerClass(Nv);var Tv=class extends eC{call(e,t){return Y(()=>{let n=Pe(e);return this.dataFormat==="channelsLast"?Ls(n,[1,2]):Ls(n,[2,3])})}};Tv.className="GlobalMaxPooling2D";ae.registerClass(Tv);var tC=class extends qe{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let s=t.layer,r=Ms(s,n);delete t.layer;let a={layer:r};return Object.assign(a,t),new e(a)}},$v=class extends tC{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=st(e),e.length<3)throw new H(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=st(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Y(()=>(e=Pe(e),qI((a,i)=>[Pe(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};$v.className="TimeDistributed";ae.registerClass($v);function PW(e){Ni(Dz,"BidirectionalMergeMode",e)}var LW="concat",_v=class extends tC{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ms(n),t.goBackwards=t.goBackwards!==!0;let s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Ms(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?LW:e.mergeMode,PW(this.mergeMode),e.weights)throw new Oe("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,s,r;return this.returnState&&(r=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,s=[n]):this.mergeMode==null?s=[n,n.slice()]:s=[n],this.returnState?this.mergeMode==null?s.concat(r).concat(r.slice()):[n].concat(r).concat(r.slice()):Tn(s)}apply(e,t){let n=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});let r=HI(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&s==null)return super.apply(e,t);let a=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new H("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);let l=n.map(c=>new Pt({shape:c.shape}));this.forwardLayer.stateSpec=l.slice(0,u/2),this.backwardLayer.stateSpec=l.slice(u/2),i.push(...l)}if(s!=null)throw new Oe("Support for constants in Bidirectional layers is not implemented yet.");let o=a[0]instanceof Os;for(let u of a)if(u instanceof Os!==o)throw new H("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let u=[e].concat(a),l=this.inputSpec.concat(i),c=this.inputSpec;this.inputSpec=l;let p=super.apply(u,t);return this.inputSpec=c,p}else return super.apply(e,t)}call(e,t){return Y(()=>{let n=t.initialState,s,r;if(n==null)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),u=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Is(r,1));let i;return this.mergeMode==="concat"?i=cy([s,r]):this.mergeMode==="sum"?i=ie(s,r):this.mergeMode==="ave"?i=V(.5,ie(s,r)):this.mergeMode==="mul"?i=V(s,r):this.mergeMode==null&&(i=[s,r]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){da(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),da(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Ms(t.layer);if(delete t.layer,t.numConstants!=null)throw new Oe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let s=t;return s.layer=n,new e(s)}};_v.className="Bidirectional";ae.registerClass(_v);function zW(e){return new du(e)}function MW(e){return new Fy(e)}function BW(e){return new Ey(e)}function VW(e){return new Ry(e)}function WW(e){return new Dy(e)}function UW(e){return new Py(e)}function GW(e){return new Oy(e)}function HW(e){return new Wy(e)}function qW(e){return new mh(e)}function jW(e){return new My(e)}function KW(e){return new gh(e)}function XW(e){return new By(e)}function YW(e){return new Vy(e)}function ZW(e){return new Uy(e)}function QW(e){return new Gy(e)}function JW(e){return new Hy(e)}function e4(e){return new Jy(e)}function t4(e){return new Zy(e)}function n4(e){return new wh(e)}function s4(e){return new Yy(e)}function r4(e){return new Qy(e)}function a4(e){return new ev(e)}function i4(e){return new tv(e)}function o4(e){return new nv(e)}function u4(e){return new rv(e)}function l4(e){return new av(e)}function c4(e){return new ov(e)}function d4(e){return new cv(e)}function p4(e){return new uv(e)}function h4(e){return new lv(e)}function f4(e){return new iv(e)}function m4(e){return new dv(e)}function g4(e){return new mv(e)}function b4(e){return new gv(e)}function y4(e){return new bv(e)}function Av(e){return new vv(e)}function v4(e){return Av(e)}function x4(e){return Av(e)}function Ev(e){return new wv(e)}function w4(e){return Ev(e)}function k4(e){return Ev(e)}function Rv(e){return new Sv(e)}function S4(e){return Rv(e)}function I4(e){return Rv(e)}function C4(e){return new Iv(e)}function N4(e){return new Nv(e)}function nC(e){return new Cv(e)}function sC(e){return new Tv(e)}function rC(e){return new yv(e)}function aC(e){return new xv(e)}function T4(e){return new kv(e)}function $4(e){return new jy(e)}function _4(e){return new yh(e)}function A4(e){return new Ky(e)}function E4(e){return new cc(e)}function R4(e){return new qy(e)}function D4(e){return new bh(e)}function F4(e){return new Xy(e)}function O4(e){return new xh(e)}function P4(e){return new Mr(e)}function L4(e){return new vh(e)}function z4(e){return new _v(e)}function M4(e){return new $v(e)}var B4=nC,V4=sC,W4=rC,U4=aC;function G4(e){return new pv(e)}function H4(e){return new hv(e)}function q4(e){return new fv(e)}function j4(e){return new sv(e)}var K4={};Ee(K4,{MAPE:()=>aU,MSE:()=>uU,binaryAccuracy:()=>X4,binaryCrossentropy:()=>Y4,categoricalAccuracy:()=>Q4,categoricalCrossentropy:()=>J4,cosineProximity:()=>nU,mape:()=>iU,meanAbsoluteError:()=>sU,meanAbsolutePercentageError:()=>rU,meanSquaredError:()=>oU,mse:()=>lU,precision:()=>eU,recall:()=>tU,sparseCategoricalAccuracy:()=>Z4});function X4(e,t){return Cy(e,t)}function Y4(e,t){return mI(e,t)}function Z4(e,t){return gI(e,t)}function Q4(e,t){return Ny(e,t)}function J4(e,t){return Ty(e,t)}function eU(e,t){return fI(e,t)}function tU(e,t){return KV(e,t)}function nU(e,t){return Iy(e,t)}function sU(e,t){return hh(e,t)}function rU(e,t){return pu(e,t)}function aU(e,t){return pu(e,t)}function iU(e,t){return pu(e,t)}function oU(e,t){return Ti(e,t)}function uU(e,t){return Ti(e,t)}function lU(e,t){return Ti(e,t)}var cU={};Ee(cU,{modelFromJSON:()=>IW});var dU={};Ee(dU,{l1:()=>hU,l1l2:()=>pU,l2:()=>fU});function pU(e){return new oc(e)}function hU(e){return NW(e)}function fU(e){return TW(e)}var mU=K();mU.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var iC=(e=>(e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF",e))(iC||{}),Fw;(e=>{let t;(n=>{n[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(Fw||(Fw={}));var gU={};function oC(e){return gU[e]}function S(e,t,n,s,r){let a=t.inputParams[e];if(a&&a.inputIndexStart!==void 0){let o=a.inputIndexStart,u=a.inputIndexEnd===0?void 0:a.inputIndexEnd===void 0?o+1:a.inputIndexEnd;if(a.type==="tensor")return fn(t.inputNames[a.inputIndexStart],n,s,r);if(a.type==="tensors")return t.inputNames.slice(o,u).map(d=>fn(d,n,s,r));let l=fn(t.inputNames.slice(o)[0],n,s,r),c=l.dataSync();return a.type==="number"?c[0]:w.toNestedArray(l.shape,c)}let i=t.attrParams[e];return i&&i.value}function fn(e,t,n,s){let[r,a]=Bn(e);if(s!=null){let o=s.getHashTableHandleByName(r);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[Jd(r,o)]);return i!==void 0?t[Jd(r,i)][a]:void 0}function bU(e,t,n){return t[Jd(e,n.currentContextId)]}function Fs(e,t){let[n,s,r]=Bn(e);return[Jd(n,t&&t.currentContextId),s,r]}function Jd(e,t){return t?`${e}-${t}`:e}function Bn(e){let t=e.split(":");if(t.length===1)return[e,0,void 0];let n=t[0],s=t.length===3?t[1]:void 0,r=Number(t[t.length-1]);return[n,r,s]}function xd(e,t,n){let s=S("pad",e,t,n);if(s==="explicit"){s=S("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)r[a][0]=s[a*2],r[a][1]=s[a*2+1];return r}return s}function Ys(e){return e.kept?e:er(e)}var uC={};Ee(uC,{json:()=>yU});var yU=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lC={};Ee(lC,{json:()=>vU});var vU=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],cC={};Ee(cC,{json:()=>xU});var xU=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],dC={};Ee(dC,{json:()=>wU});var wU=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],pC={};Ee(pC,{json:()=>kU});var kU=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],hC={};Ee(hC,{json:()=>SU});var SU=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fC={};Ee(fC,{json:()=>IU});var IU=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],mC={};Ee(mC,{json:()=>CU});var CU=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],gC={};Ee(gC,{json:()=>NU});var NU=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],bC={};Ee(bC,{json:()=>TU});var TU=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],yC={};Ee(yC,{json:()=>$U});var $U=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],vC={};Ee(vC,{json:()=>_U});var _U=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],xC={};Ee(xC,{json:()=>AU});var AU=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],wC={};Ee(wC,{json:()=>EU});var EU=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],kC={};Ee(kC,{json:()=>RU});var RU=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],SC={};Ee(SC,{json:()=>DU});var DU=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],IC={};Ee(IC,{json:()=>FU});var FU=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],CC={};Ee(CC,{json:()=>OU});var OU=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],NC={};Ee(NC,{json:()=>PU});var PU=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Ow=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[uC,lC,cC,dC,pC,hC,fC,mC,gC,bC,yC,vC,xC,wC,kC,SC,IC,CC,NC],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,s)=>(n[s.tfOpName]=s,n),{})}transformGraph(e,t={}){let n=e.node,s=[],r=[],a=[],i=n.reduce((f,m)=>(f[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?s.push(f[m.name]):m.op==="Const"?r.push(f[m.name]):(m.input==null||m.input.length===0)&&a.push(f[m.name]),f),{}),o=[],u=[],l={},c={};t!=null&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));let p=Object.keys(i);p.forEach(f=>{let m=i[f];m.inputNames.forEach((g,b)=>{let[y,,v]=Fs(g),x=i[y];if(x.outputs!=null){let k=x.outputs.indexOf(v);if(k!==-1){let C=`${y}:${k}`;m.inputNames[b]=C}}m.inputs.push(x),x.children.push(m)})}),Object.keys(c).length===0?p.forEach(f=>{let m=i[f];m.children.length===0&&u.push(m)}):Object.keys(c).forEach(f=>{let[m]=Fs(f),g=i[m];g!=null&&(g.signatureKey=c[f],u.push(g))}),Object.keys(l).length>0?Object.keys(l).forEach(f=>{let[m]=Fs(f),g=i[m];g&&(g.signatureKey=l[f],o.push(g))}):o=s;let d={};e.library!=null&&e.library.function!=null&&(d=e.library.function.reduce((f,m)=>(f[m.signature.name]=this.mapFunction(m),f),{}));let h={nodes:i,inputs:o,outputs:u,weights:r,placeholders:s,signature:t,functions:d};return a.length>0&&(h.initNodes=a),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=oC(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((s,r)=>(s[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},s),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((s,r)=>{let a=r.type,i;switch(r.type){case"string":i=mg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=mg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":i=kg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=kg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":i=bg(e.attr,r.tfName,r.defaultValue||0),i===void 0&&!!r.tfDeprecatedName&&(i=bg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":i=wg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=wg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":i=gg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=gg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":i=Ig(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Ig(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":i=xg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=xg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":i=Sg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Sg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":i=yg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=yg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":i=vg(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=vg(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":i=Pw(e.attr,r.tfName,r.defaultValue),i===void 0&&!!r.tfDeprecatedName&&(i=Pw(e.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${e.op}`)}return s[r.name]={value:i,type:a},s},{})),n}mapFunction(e){let t=e.nodeDef,n=[],s=[],r={};t!=null&&(r=t.reduce((c,p)=>(c[p.name]=this.mapNode(p),p.op==="Const"&&s.push(c[p.name]),c),{}));let a=[],i=[];e.signature.inputArg.forEach(c=>{let[p]=Fs(c.name),d={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Dv(c.type),type:"dtype"}},children:[]};d.signatureKey=c.name,a.push(d),r[p]=d}),Object.keys(r).forEach(c=>{let p=r[c];p.inputNames.forEach((d,h)=>{let[f,,m]=Fs(d),g=r[f];if(g.outputs!=null){let b=g.outputs.indexOf(m);if(b!==-1){let y=`${f}:${b}`;p.inputNames[h]=y}}p.inputs.push(g),g.children.push(p)})});let u=e.ret;e.signature.outputArg.forEach(c=>{let[p,d]=Fs(u[c.name]),h=r[p];h!=null&&(h.defaultOutput=d,i.push(h))});let l=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:i,weights:s,placeholders:n,signature:l}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function LU(e){let t=K().global;if(typeof t.atob!="undefined")return t.atob(e);if(typeof Buffer!="undefined")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function TC(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):LU(e);return t?n:n.toLowerCase()}function mg(e,t,n,s=!1){let r=e[t];return r!=null?TC(r.s,s):n}function gg(e,t,n){let s=e[t];return s?s.b:n}function bg(e,t,n){let s=e[t]||{},r=s.i!=null?s.i:s.f!=null?s.f:n;return typeof r=="number"?r:parseInt(r,10)}function Dv(e){switch(typeof e=="string"&&(e=iC[e]),e){case 1:case 19:return"float32";case 3:case 9:case 6:case 4:return"int32";case 10:return"bool";case 2:return"float32";case 7:return"string";default:return null}}function Pw(e,t,n){let s=e[t];return s&&s.func?s.func.name:n}function yg(e,t,n){let s=e[t];return s&&s.type?Dv(s.type):n}function vg(e,t,n){let s=e[t];return s&&s.list&&s.list.type?s.list.type.map(r=>Dv(r)):n}function $C(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function xg(e,t,n){let s=e[t];return s&&s.shape?$C(s.shape):n}function wg(e,t,n){let s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):n}function kg(e,t,n,s=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map(a=>TC(a,s)):n}function Sg(e,t,n){let s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map(r=>$C(r)):n}function Ig(e,t,n){let s=e[t];return s&&s.list&&s.list.b?s.list.b:n}var zU=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,r)=>(s[r]=this.getAttr(r),s),{}))}getInput(e){return fn(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return fn(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return bg(this.node.rawAttrs,e,t);if(n.s!=null)return mg(this.node.rawAttrs,e,t);if(n.b!=null)return gg(this.node.rawAttrs,e,t);if(n.shape!=null)return xg(this.node.rawAttrs,e,t);if(n.type!=null)return yg(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return wg(this.node.rawAttrs,e,t);if(n.list.s!=null)return kg(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Sg(this.node.rawAttrs,e,t);if(n.list.b!=null)return Ig(this.node.rawAttrs,e,t);if(n.list.type!=null)return vg(this.node.rawAttrs,e,t)}return t}},Jt={};Ee(Jt,{OP_SCOPE_SUFFIX:()=>a0,abs:()=>Wt,acos:()=>cR,acosh:()=>pR,add:()=>ie,addN:()=>fR,all:()=>q0,any:()=>eg,argMax:()=>ul,argMin:()=>vR,asin:()=>wR,asinh:()=>SR,atan:()=>CR,atan2:()=>TR,atanh:()=>_R,avgPool:()=>Ab,avgPool3d:()=>Y0,basicLSTMCell:()=>GR,batchNorm:()=>Vp,batchNorm2d:()=>Z0,batchNorm3d:()=>Q0,batchNorm4d:()=>J0,batchToSpaceND:()=>Eb,bincount:()=>eS,booleanMaskAsync:()=>_O,broadcastArgs:()=>JR,broadcastTo:()=>vd,buffer:()=>_e,cast:()=>de,ceil:()=>nD,clipByValue:()=>Zn,clone:()=>er,complex:()=>kr,concat:()=>Lt,concat1d:()=>tS,concat2d:()=>nS,concat3d:()=>sS,concat4d:()=>rS,conv1d:()=>aS,conv2d:()=>xa,conv2dTranspose:()=>iS,conv3d:()=>oS,conv3dTranspose:()=>lS,cos:()=>Db,cosh:()=>cS,cosineWindow:()=>Qb,cumprod:()=>ng,cumsum:()=>dS,denseBincount:()=>xD,depthToSpace:()=>kD,depthwiseConv2d:()=>Wp,diag:()=>CD,dilation2d:()=>TD,div:()=>xe,divNoNan:()=>RD,dot:()=>FD,dropout:()=>FS,einsum:()=>PD,elu:()=>Up,enclosingPowerOfTwo:()=>OS,equal:()=>as,erf:()=>MD,euclideanNorm:()=>YD,exp:()=>is,expandDims:()=>Nn,expm1:()=>eF,eye:()=>Pb,fft:()=>Xb,fill:()=>Ql,floor:()=>Hp,floorDiv:()=>H0,fused:()=>hl,gather:()=>qp,gatherND:()=>zO,greater:()=>Jn,greaterEqual:()=>uu,ifft:()=>Wd,imag:()=>Mp,image:()=>br,inTopKAsync:()=>WO,irfft:()=>$S,isFinite:()=>uF,isInf:()=>cF,isNaN:()=>pF,leakyRelu:()=>Lb,less:()=>gS,lessEqual:()=>lu,linalg:()=>US,linspace:()=>gF,localResponseNormalization:()=>yF,log:()=>os,log1p:()=>zb,logSigmoid:()=>IF,logSoftmax:()=>bS,logSumExp:()=>yS,logicalAnd:()=>Vs,logicalNot:()=>Mb,logicalOr:()=>vS,logicalXor:()=>RF,losses:()=>TL,lowerBound:()=>FF,matMul:()=>Ve,max:()=>Ls,maxPool:()=>Vb,maxPool3d:()=>xS,maxPoolWithArgmax:()=>zF,maximum:()=>Pr,mean:()=>Nt,meshgrid:()=>VF,min:()=>sg,minimum:()=>jp,mirrorPad:()=>GF,mod:()=>qF,moments:()=>Kp,movingAverage:()=>EO,mul:()=>V,multiRNNCell:()=>XF,multinomial:()=>ZF,neg:()=>wt,norm:()=>Gp,notEqual:()=>cl,oneHot:()=>Bd,ones:()=>$n,onesLike:()=>us,op:()=>z,outerProduct:()=>t3,pad:()=>Ci,pad1d:()=>r3,pad2d:()=>i3,pad3d:()=>u3,pad4d:()=>c3,pool:()=>m3,pow:()=>ka,prelu:()=>Ub,print:()=>m0,prod:()=>y3,rand:()=>x3,randomGamma:()=>I3,randomNormal:()=>qb,randomStandardNormal:()=>T3,randomUniform:()=>ec,range:()=>dl,real:()=>ol,reciprocal:()=>A3,relu:()=>rr,relu6:()=>wS,reshape:()=>U,reverse:()=>Is,reverse1d:()=>O3,reverse2d:()=>L3,reverse3d:()=>M3,reverse4d:()=>V3,rfft:()=>Yb,round:()=>kS,rsqrt:()=>SS,scalar:()=>Se,scatterND:()=>DO,searchSorted:()=>Bb,selu:()=>IS,separableConv2d:()=>CS,setdiff1dAsync:()=>j3,sigmoid:()=>tr,sign:()=>X3,signal:()=>NL,sin:()=>NS,sinh:()=>TS,slice:()=>je,slice1d:()=>Xp,slice2d:()=>jb,slice3d:()=>Yp,slice4d:()=>pl,softmax:()=>Kb,softplus:()=>Jl,spaceToBatchND:()=>Wb,sparse:()=>$L,sparseToDense:()=>PO,spectral:()=>CL,split:()=>_n,sqrt:()=>yn,square:()=>pt,squaredDifference:()=>_S,squeeze:()=>Lr,stack:()=>Wn,step:()=>tc,stridedSlice:()=>hO,string:()=>_L,sub:()=>me,sum:()=>ve,tan:()=>mO,tanh:()=>ll,tensor:()=>rs,tensor1d:()=>gn,tensor2d:()=>ca,tensor3d:()=>N0,tensor4d:()=>gO,tensor5d:()=>bO,tensor6d:()=>yO,tile:()=>ws,topk:()=>xO,transpose:()=>Ue,truncatedNormal:()=>Zb,unique:()=>SO,unsortedSegmentSum:()=>AS,unstack:()=>Ws,upperBound:()=>NO,variable:()=>ES,where:()=>En,whereAsync:()=>DS,zeros:()=>Et,zerosLike:()=>Ke});var MU=(e,t,n,s=Jt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(S("a",e,t,n),S("b",e,t,n))];case"AddN":return[s.addN(S("tensors",e,t,n))];case"FloorMod":case"Mod":return[s.mod(S("a",e,t,n),S("b",e,t,n))];case"Mul":return[s.mul(S("a",e,t,n),S("b",e,t,n))];case"RealDiv":case"Div":return[s.div(S("a",e,t,n),S("b",e,t,n))];case"DivNoNan":return[s.divNoNan(S("a",e,t,n),S("b",e,t,n))];case"FloorDiv":return[s.floorDiv(S("a",e,t,n),S("b",e,t,n))];case"Sub":return[s.sub(S("a",e,t,n),S("b",e,t,n))];case"Minimum":return[s.minimum(S("a",e,t,n),S("b",e,t,n))];case"Maximum":return[s.maximum(S("a",e,t,n),S("b",e,t,n))];case"Pow":return[s.pow(S("a",e,t,n),S("b",e,t,n))];case"SquaredDifference":return[s.squaredDifference(S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},BU=(e,t,n,s=Jt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[s.abs(S("x",e,t,n))];case"Acos":return[s.acos(S("x",e,t,n))];case"Acosh":return[s.acosh(S("x",e,t,n))];case"Asin":return[s.asin(S("x",e,t,n))];case"Asinh":return[s.asinh(S("x",e,t,n))];case"Atan":return[s.atan(S("x",e,t,n))];case"Atan2":return[s.atan2(S("x",e,t,n),S("y",e,t,n))];case"Atanh":return[s.atanh(S("x",e,t,n))];case"Ceil":return[s.ceil(S("x",e,t,n))];case"Complex":return[s.complex(S("real",e,t,n),S("imag",e,t,n))];case"Cos":return[s.cos(S("x",e,t,n))];case"Cosh":return[s.cosh(S("x",e,t,n))];case"Elu":return[s.elu(S("x",e,t,n))];case"Erf":return[s.erf(S("x",e,t,n))];case"Exp":return[s.exp(S("x",e,t,n))];case"Expm1":return[s.expm1(S("x",e,t,n))];case"Floor":return[s.floor(S("x",e,t,n))];case"Log":return[s.log(S("x",e,t,n))];case"Log1p":return[s.log1p(S("x",e,t,n))];case"Imag":return[s.imag(S("x",e,t,n))];case"Neg":return[s.neg(S("x",e,t,n))];case"Reciprocal":return[s.reciprocal(S("x",e,t,n))];case"Real":return[s.real(S("x",e,t,n))];case"Relu":return[s.relu(S("x",e,t,n))];case"Round":return[s.round(S("x",e,t,n))];case"Selu":return[s.selu(S("x",e,t,n))];case"Sigmoid":return[s.sigmoid(S("x",e,t,n))];case"Sin":return[s.sin(S("x",e,t,n))];case"Sign":return[s.sign(S("x",e,t,n))];case"Sinh":return[s.sinh(S("x",e,t,n))];case"Softplus":return[s.softplus(S("x",e,t,n))];case"Sqrt":return[s.sqrt(S("x",e,t,n))];case"Square":return[s.square(S("x",e,t,n))];case"Tanh":return[s.tanh(S("x",e,t,n))];case"Tan":return[s.tan(S("x",e,t,n))];case"ClipByValue":return[s.clipByValue(S("x",e,t,n),S("clipValueMin",e,t,n),S("clipValueMax",e,t,n))];case"Relu6":return[s.relu6(S("x",e,t,n))];case"Rsqrt":return[s.rsqrt(fn(e.inputNames[0],t,n))];case"Prod":return[s.prod(S("x",e,t,n),S("axes",e,t,n))];case"LeakyRelu":return[s.leakyRelu(S("x",e,t,n),S("alpha",e,t,n))];case"Prelu":return[s.prelu(S("x",e,t,n),S("alpha",e,t,n))];case"IsNan":return[s.isNaN(fn(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ss(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){w.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let s=0;s<e.length;s++){let r=e[s],a=t[s];w.assert(r<0||a<0||r===a,()=>n+` Shapes ${e} and ${t} must match`)}}}function Lw(e){return!(typeof e=="number"||e.some(t=>t<0))}function Wu(e,t,n){let s=Cg(e,n),r=!Lw(s);if(r&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach(a=>{s=Cg(a.shape,s)}),!Lw(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function Cg(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let s=0;s<e.length;++s){let r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}var VU=class{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Se(0),Zt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),ss(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Zt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,s)=>this.write(n,t[s]))}gather(e,t){if(!!t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return rs([],[0].concat(this.elementShape));let n=this.readMany(e);return ss(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Wn(n,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return rs([],[0].concat(this.elementShape));let t=[];for(let s=0;s<this.size();s++)t.push(s);let n=this.readMany(t);return ss(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Lt(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Ws(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,s=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=n===0?0:t.size/n,a=[];Y(()=>{t=U(t,[1,n,r]);for(let o=0;o<e.length;++o){let u=o===0?0:s[o-1],l=[0,u,0],c=[1,e[o],r];a[o]=U(je(t,l,c),this.elementShape)}return a});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,a)}},po=class{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(r=>{if(n!==r.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${r.dtype}`);ss(t,r.shape,"TensorList shape mismatch: "),Zt(r)}),this.idTensor=Se(0),this.maxNumElements=s,Zt(this.idTensor)}get id(){return this.idTensor.id}copy(){return new po([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);ss(e,this.elementShape,"TensorList shape mismatch: ");let s=Wu(this.elementShape,this.tensors,e);return Y(()=>{let r=this.tensors.map(a=>U(a,s));return Wn(r,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Wu(this.elementShape,this.tensors,e),s=this.tensors.pop();return ss(s.shape,e,"TensorList shape mismatch: "),U(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(ss(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Zt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new po([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);ss(this.tensors[e].shape,t,"TensorList shape mismatch: ");let s=Wu(this.elementShape,this.tensors,t);return U(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);ss(this.elementShape,t.shape,"TensorList shape mismatch: "),Zt(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);ss(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let s=Wu(this.elementShape,this.tensors,n);return e.length===0?rs([],[0].concat(s)):Y(()=>{let r=e.map(a=>U(this.tensors[a],s));return Wn(r,0)})}concat(e,t){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);ss(this.elementShape,t,"TensorList shape mismatch: ");let n=Wu(this.elementShape,this.tensors,t);return this.size()===0?rs([],[0].concat(n)):Y(()=>{let s=this.tensors.map(r=>U(r,n));return Lt(s,0)})}};function WU(e,t,n){let s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let r=e.shape.slice(1);ss(r,t,"TensorList shape mismatch: ");let a=Ws(e);return new po(a,t,s)}function UU(e,t,n,s){return new po([],e,t,s)}function GU(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);let a=new po([],n,e.dtype,s),i=Ws(e,0);return t.forEach((o,u)=>{a.setItem(o,i[u])}),a}function HU(e,t,n){let s=0,r=t.map(c=>(s+=c,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);let a=e.shape.slice(1),i=Cg(a,n),o=s===0?0:e.size/s,u=Y(()=>{let c=[];e=U(e,[1,s,o]);for(let p=0;p<t.length;++p){let d=p===0?0:r[p-1],h=[0,d,0],f=[1,t[p],o];c[p]=U(je(e,h,f),i)}return e.dispose(),c}),l=new po([],n,e.dtype,t.length);for(let c=0;c<u.length;c++)l.setItem(c,u[c]);return l}var qU=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let s=S("thenBranch",e,t,n),r=S("elseBranch",e,t,n),a=S("cond",e,t,n),i=S("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let s=S("body",e,t,n),r=S("cond",e,t,n),a=S("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map(c=>c.id),u=await i[0].data();i.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&c.dispose()});let l=a;for(;u[0];){let c=l;l=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);let p=l.map(h=>h.id);c.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()});let d=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await d[0].data(),d.forEach(h=>{!h.kept&&o.indexOf(h.id)===-1&&p.indexOf(h.id)===-1&&h.dispose()})}return l}case"LoopCond":{let s=S("pred",e,t,n);return[Ys(s)]}case"Switch":{let s=S("pred",e,t,n),r=S("data",e,t,n);return r.kept||(r=Ys(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let s=e.inputNames.find(r=>fn(r,t,n)!==void 0);if(s){let r=fn(s,t,n);return[Ys(r)]}return}case"Enter":{let s=S("frameName",e,t,n),r=S("tensor",e,t,n);return n.enterFrame(s),[Ys(r)]}case"Exit":{let s=S("tensor",e,t,n);return n.exitFrame(),[Ys(s)]}case"NextIteration":{let s=S("tensor",e,t,n);return n.nextIteration(),[Ys(s)]}case"TensorArrayV3":{let s=S("size",e,t,n),r=S("dtype",e,t,n),a=S("elementShape",e,t,n),i=S("dynamicSize",e,t,n),o=S("clearAfterRead",e,t,n),u=S("identicalElementShapes",e,t,n),l=S("name",e,t,n),c=new VU(l,r,s,a,u,i,o);return n.addTensorArray(c),[c.idTensor,Se(1)]}case"TensorArrayWriteV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{let s=S("tensorArrayId",e,t,n),r=S("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{let s=S("tensorArrayId",e,t,n),r=S("indices",e,t,n),a=S("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=S("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{let s=S("tensorArrayId",e,t,n),r=S("tensor",e,t,n),a=S("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return[Se(r.size(),"int32")]}case"TensorArrayCloseV3":{let s=S("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{let s=S("tensorListId",e,t,n),r=S("index",e,t,n),a=S("elementShape",e,t,n),i=S("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{let s=S("indices",e,t,n),r=S("tensor",e,t,n),a=S("elementShape",e,t,n),i=S("numElements",e,t,n),o=GU(r,s,a,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let s=S("elementShape",e,t,n),r=S("elementDType",e,t,n),a;e.op==="TensorListReserve"?a="numElements":a="maxNumElements";let i=S(a,e,t,n),o=e.op==="TensorListReserve"?-1:i,u=UU(s,r,i,o);return n.addTensorList(u),[u.idTensor]}case"TensorListGather":{let s=S("tensorListId",e,t,n),r=S("indices",e,t,n),a=S("elementShape",e,t,n),i=S("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),i=S("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n),i=WU(s,r,a);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id),a=S("dtype",e,t,n),i=S("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{let s=S("tensorListId",e,t,n),r=S("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{let s=S("tensorListId",e,t,n),r=S("elementShape",e,t,n),a=S("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{let s=S("tensor",e,t,n),r=S("elementShape",e,t,n),a=S("lengths",e,t,n),i=HU(s,a,r);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let s=S("tensorListId",e,t,n),r=n.getTensorList(s.id);return[Se(r.size(),"int32")]}case"TensorListResize":{let s=S("tensorListId",e,t,n),r=S("size",e,t,n),i=n.getTensorList(s.id).resize(r);return n.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function zw(e,t,n){let[s,r]=S("fusedOps",e,t,n),a=s==="biasadd",i=!a,o=r==="prelu",u=s==="fusedbatchnorm",l=S("numArgs",e,t,n);if(a){if(o&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let c=S("strides",e,t,n),p=xd(e,t,n),d=S("dataFormat",e,t,n).toUpperCase(),h=S("dilations",e,t,n),[f,m]=S("args",e,t,n);i&&(m=f,f=void 0);let g=S("leakyreluAlpha",e,t,n);return{stride:c,pad:p,dataFormat:d,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:g}}var jU=(e,t,n,s=Jt)=>{switch(e.op){case"Conv1D":{let r=S("stride",e,t,n),a=S("pad",e,t,n),i=S("dataFormat",e,t,n).toUpperCase(),o=S("dilation",e,t,n);return[s.conv1d(S("x",e,t,n),S("filter",e,t,n),r,a,i,o)]}case"Conv2D":{let r=S("strides",e,t,n),a=xd(e,t,n),i=S("dataFormat",e,t,n).toUpperCase(),o=S("dilations",e,t,n);return[s.conv2d(S("x",e,t,n),S("filter",e,t,n),[r[1],r[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=zw(e,t,n);return[s.fused.conv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:p}=zw(e,t,n);return[s.fused.depthwiseConv2d({x:S("x",e,t,n),filter:S("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=S("outputShape",e,t,n),a=S("strides",e,t,n),i=xd(e,t,n);return[s.conv2dTranspose(S("x",e,t,n),S("filter",e,t,n),r,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=S("strides",e,t,n),a=xd(e,t,n),i=S("dilations",e,t,n),o=S("dataFormat",e,t,n).toUpperCase();return[s.depthwiseConv2d(S("input",e,t,n),S("filter",e,t,n),[r[1],r[2]],a,o,[i[1],i[2]])]}case"Conv3D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("dataFormat",e,t,n).toUpperCase(),o=S("dilations",e,t,n);return[s.conv3d(S("x",e,t,n),S("filter",e,t,n),[r[1],r[2],r[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("kernelSize",e,t,n);return[s.avgPool(S("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPool":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("kernelSize",e,t,n);return[s.maxPool(S("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("kernelSize",e,t,n),o=S("includeBatchInIndex",e,t,n),{result:u,indexes:l}=s.maxPoolWithArgmax(S("x",e,t,n),[i[1],i[2]],[r[1],r[2]],a,o);return[u,l]}case"AvgPool3D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("kernelSize",e,t,n);return[s.avgPool3d(S("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("kernelSize",e,t,n);return[s.maxPool3d(S("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{let r=S("strides",e,t,n),a=S("pad",e,t,n),i=S("dilations",e,t,n),o=r[1],u=r[2],l=i[1],c=i[2];return[s.dilation2d(S("x",e,t,n),S("filter",e,t,n),[o,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},KU=(e,t,n,s=Jt)=>{switch(e.op){case"Fill":{let r=S("shape",e,t,n),a=S("dtype",e,t,n),i=S("value",e,t,n);return[s.fill(r,i,a)]}case"LinSpace":{let r=S("start",e,t,n),a=S("stop",e,t,n),i=S("num",e,t,n);return[s.linspace(r,a,i)]}case"Multinomial":{let r=S("logits",e,t,n),a=S("numSamples",e,t,n),i=S("seed",e,t,n);return[s.multinomial(r,a,i)]}case"OneHot":{let r=S("indices",e,t,n),a=S("depth",e,t,n),i=S("onValue",e,t,n),o=S("offValue",e,t,n);return[s.oneHot(r,a,i,o)]}case"Ones":return[s.ones(S("shape",e,t,n),S("dtype",e,t,n))];case"OnesLike":return[s.onesLike(S("x",e,t,n))];case"RandomStandardNormal":return[s.randomStandardNormal(S("shape",e,t,n),S("dtype",e,t,n),S("seed",e,t,n))];case"RandomUniform":return[s.randomUniform(S("shape",e,t,n),S("minval",e,t,n),S("maxval",e,t,n),S("dtype",e,t,n))];case"Range":{let r=S("start",e,t,n),a=S("stop",e,t,n),i=S("step",e,t,n);return[s.range(r,a,i,S("dtype",e,t,n))]}case"TruncatedNormal":{let r=S("shape",e,t,n),a=S("mean",e,t,n),i=S("stdDev",e,t,n),o=S("seed",e,t,n);return[s.truncatedNormal(r,a,i,S("dtype",e,t,n),o)]}case"Zeros":return[s.zeros(S("shape",e,t,n),S("dtype",e,t,n))];case"ZerosLike":return[s.zerosLike(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function _m(e,t,n){let s=S("boxes",e,t,n),r=S("scores",e,t,n),a=S("maxOutputSize",e,t,n),i=S("iouThreshold",e,t,n),o=S("scoreThreshold",e,t,n),u=S("softNmsSigma",e,t,n);return{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}}var XU=async(e,t,n,s,r=Jt)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=_m(e,t,n),p=await r.image.nonMaxSuppressionWithScoreAsync(a,i,o,u,l,c);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=_m(e,t,n),c=S("padToMaxOutputSize",e,t,n),p=await r.image.nonMaxSuppressionPaddedAsync(a,i,o,u,l,c);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=_m(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,i,o,u,l)]}case"Where":{let a=r.cast(S("condition",e,t,n),"bool"),i=[await r.whereAsync(a)];return a.dispose(),i}case"ListDiff":return r.setdiff1dAsync(S("x",e,t,n),S("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},YU=(e,t,n,s=Jt)=>{switch(e.op){case"LowerBound":{let r=S("sortedSequence",e,t,n),a=S("values",e,t,n);return[s.lowerBound(r,a)]}case"TopKV2":{let r=S("x",e,t,n),a=S("k",e,t,n),i=S("sorted",e,t,n),o=s.topk(r,a,i);return[o.values,o.indices]}case"UpperBound":{let r=S("sortedSequence",e,t,n),a=S("values",e,t,n);return[s.upperBound(r,a)]}case"Unique":{let r=S("x",e,t,n),a=s.unique(r);return[a.values,a.indices]}case"UniqueV2":{let r=S("x",e,t,n),a=S("axis",e,t,n),i=s.unique(r,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},ZU=(e,t,n,s=Jt)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=S("default",e,t,n);return[fn(e.name,t,n)||r];case"Placeholder":return[fn(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let c=S("x",e,t,n);return[Ys(c)]}case"IdentityN":return S("x",e,t,n).map(c=>Ys(c));case"Snapshot":let a=S("x",e,t,n);return[Ys(a)];case"Shape":return[s.tensor1d(S("x",e,t,n).shape,"int32")];case"ShapeN":return S("x",e,t,n).map(c=>s.tensor1d(c.shape));case"Size":return[s.scalar(S("x",e,t,n).size,"int32")];case"Rank":return[s.scalar(S("x",e,t,n).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":let i=S("x",e,t,n),o=S("data",e,t,n),u=S("message",e,t,n),l=S("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let c=0;c<o.length;c++)console.log(Array.prototype.slice.call(o[c].dataSync()).slice(0,l));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},QU=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Se(0),this.tensorMap=new Map,Zt(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Se(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),Y(()=>{let s=Ws(t),r=n.length,a=s.length;w.assert(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let i=0;i<r;i++){let o=n[i],u=s[i];Zt(u),this.tensorMap.set(o,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return Y(()=>{let s=[];for(let r=0;r<n.length;r++){let a=n[r],i=this.findWithDefault(a,t);s.push(i)}return Wn(s)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},JU=async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=S("keyDType",e,t,n),a=S("valueDType",e,t,n),i=new QU(r,a);return s.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),i=S("values",e,t,n);return[await s.getHashTableById(r.id).import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=S("tableHandle",e,t,n,s),a=S("keys",e,t,n),i=S("defaultValue",e,t,n);return[await s.getHashTableById(r.id).find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=S("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},eG=(e,t,n,s=Jt)=>{switch(e.op){case"ResizeBilinear":{let r=S("images",e,t,n),a=S("size",e,t,n),i=S("alignCorners",e,t,n),o=S("halfPixelCenters",e,t,n);return[s.image.resizeBilinear(r,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{let r=S("images",e,t,n),a=S("size",e,t,n),i=S("alignCorners",e,t,n),o=S("halfPixelCenters",e,t,n);return[s.image.resizeNearestNeighbor(r,[a[0],a[1]],i,o)]}case"CropAndResize":{let r=S("image",e,t,n),a=S("boxes",e,t,n),i=S("boxInd",e,t,n),o=S("cropSize",e,t,n),u=S("method",e,t,n),l=S("extrapolationValue",e,t,n);return[s.image.cropAndResize(r,a,i,o,u,l)]}case"ImageProjectiveTransformV3":{let r=S("images",e,t,n),a=S("transforms",e,t,n),i=S("outputShape",e,t,n),o=S("fillValue",e,t,n),u=S("interpolation",e,t,n),l=S("fillMode",e,t,n);return[s.image.transform(r,a,u.toLowerCase(),l.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},tG=(e,t,n,s=Jt)=>{switch(e.op){case"Equal":return[s.equal(S("a",e,t,n),S("b",e,t,n))];case"NotEqual":return[s.notEqual(S("a",e,t,n),S("b",e,t,n))];case"Greater":return[s.greater(S("a",e,t,n),S("b",e,t,n))];case"GreaterEqual":return[s.greaterEqual(S("a",e,t,n),S("b",e,t,n))];case"Less":return[s.less(S("a",e,t,n),S("b",e,t,n))];case"LessEqual":return[s.lessEqual(S("a",e,t,n),S("b",e,t,n))];case"LogicalAnd":return[s.logicalAnd(S("a",e,t,n),S("b",e,t,n))];case"LogicalNot":return[s.logicalNot(S("a",e,t,n))];case"LogicalOr":return[s.logicalOr(S("a",e,t,n),S("b",e,t,n))];case"Select":case"SelectV2":return[s.where(S("condition",e,t,n),S("a",e,t,n),S("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},nG=(e,t,n,s=Jt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(S("a",e,t,n),S("b",e,t,n),S("transposeA",e,t,n),S("transposeB",e,t,n))];case"Einsum":return[s.einsum(S("equation",e,t,n),...S("tensors",e,t,n))];case"Transpose":return[s.transpose(S("x",e,t,n),S("perm",e,t,n))];case"_FusedMatMul":let[r,a]=S("fusedOps",e,t,n),i=r==="biasadd",o=a==="prelu",u=S("numArgs",e,t,n),l=S("leakyreluAlpha",e,t,n);if(i){if(o&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[c,p]=S("args",e,t,n);return[s.fused.matMul({a:S("a",e,t,n),b:S("b",e,t,n),transposeA:S("transposeA",e,t,n),transposeB:S("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:p,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},sG=(e,t,n,s=Jt)=>{switch(e.op){case"EuclideanNorm":return[s.euclideanNorm(S("x",e,t,n),S("axis",e,t,n),S("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"FusedBatchNormV3":return[s.batchNorm(S("x",e,t,n),S("mean",e,t,n),S("variance",e,t,n),S("offset",e,t,n),S("scale",e,t,n),S("epsilon",e,t,n))];case"LRN":return[s.localResponseNormalization(S("x",e,t,n),S("radius",e,t,n),S("bias",e,t,n),S("alpha",e,t,n),S("beta",e,t,n))];case"Softmax":return[s.softmax(S("x",e,t,n))];case"LogSoftmax":return[s.logSoftmax(S("x",e,t,n))];case"SparseToDense":return[s.sparseToDense(S("sparseIndices",e,t,n),S("outputShape",e,t,n),S("sparseValues",e,t,n),S("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},rG=(e,t,n,s=Jt)=>{switch(e.op){case"Max":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.max(S("x",e,t,n),o,u)]}case"Mean":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.mean(S("x",e,t,n),o,u)]}case"Min":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.min(S("x",e,t,n),o,u)]}case"Sum":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.sum(S("x",e,t,n),o,u)]}case"All":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.all(S("x",e,t,n),o,u)]}case"Any":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.any(S("x",e,t,n),o,u)]}case"ArgMax":{let o=S("axis",e,t,n);return[s.argMax(S("x",e,t,n),o)]}case"ArgMin":{let o=S("axis",e,t,n);return[s.argMin(S("x",e,t,n),o)]}case"Prod":{let o=S("axis",e,t,n),u=S("keepDims",e,t,n);return[s.prod(S("x",e,t,n),o,u)]}case"Cumprod":{let o=S("axis",e,t,n),u=S("exclusive",e,t,n),l=S("reverse",e,t,n);return[s.cumprod(S("x",e,t,n),o,u,l)]}case"Cumsum":{let o=S("axis",e,t,n),u=S("exclusive",e,t,n),l=S("reverse",e,t,n);return[s.cumsum(S("x",e,t,n),o,u,l)]}case"Bincount":let r=S("x",e,t,n),a=S("weights",e,t,n),i=S("size",e,t,n);return[s.bincount(r,a,i)];case"DenseBincount":{let o=S("x",e,t,n),u=S("weights",e,t,n),l=S("size",e,t,n),c=S("binaryOutput",e,t,n);return[s.denseBincount(o,u,l,c)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aG=(e,t,n,s=Jt)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=S("n",e,t,n),a=S("axis",e,t,n),i=S("tensors",e,t,n);return i=i.slice(0,r),[s.concat(i,a)]}case"Gather":{let r=S("x",e,t,n),a=S("indices",e,t,n);return[s.gather(r,s.cast(a,"int32"),0)]}case"GatherV2":{let r=S("axis",e,t,n),a=S("batchDims",e,t,n),i=S("x",e,t,n),o=S("indices",e,t,n);return[s.gather(i,s.cast(o,"int32"),r,a)]}case"Reverse":{let r=S("dims",e,t,n),a=[];for(let o=0;o<r.length;o++)r[o]&&a.push(o);let i=S("x",e,t,n);return[s.reverse(i,a)]}case"ReverseV2":{let r=S("axis",e,t,n),a=S("x",e,t,n);return[s.reverse(a,r)]}case"Slice":{let r=S("begin",e,t,n),a=S("size",e,t,n);return[s.slice(S("x",e,t,n),r,a)]}case"StridedSlice":{let r=S("begin",e,t,n),a=S("end",e,t,n),i=S("strides",e,t,n),o=S("beginMask",e,t,n),u=S("endMask",e,t,n),l=S("ellipsisMask",e,t,n),c=S("newAxisMask",e,t,n),p=S("shrinkAxisMask",e,t,n),d=S("x",e,t,n);return[s.stridedSlice(d,r,a,i,o,u,l,c,p)]}case"Pack":return Y(()=>{let r=S("axis",e,t,n),a=S("tensors",e,t,n),i=a[0].shape,o=s.squeeze(a[0]).shape,u=a.map(l=>{let c=w.arraysEqual(l.shape,i);if(!c&&!w.arraysEqual(s.squeeze(l).shape,o))throw new Error("the input tensors shape does not match");return c?l:s.reshape(l,i)});return[s.stack(u,r)]});case"Unpack":{let r=S("axis",e,t,n),a=S("tensor",e,t,n);return s.unstack(a,r)}case"Tile":{let r=S("reps",e,t,n);return[s.tile(S("x",e,t,n),r)]}case"Split":case"SplitV":{let r=S("axis",e,t,n),a=S("numOrSizeSplits",e,t,n),i=S("x",e,t,n);return s.split(i,a,r)}case"ScatterNd":{let r=S("indices",e,t,n),a=S("values",e,t,n),i=S("shape",e,t,n);return[s.scatterND(r,a,i)]}case"GatherNd":{let r=S("x",e,t,n),a=S("indices",e,t,n);return[s.gatherND(r,a)]}case"SparseToDense":{let r=S("sparseIndices",e,t,n),a=S("outputShape",e,t,n),i=S("sparseValues",e,t,n),o=S("defaultValue",e,t,n);return[s.sparseToDense(r,i,a,i.dtype===o.dtype?o:s.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},iG=(e,t,n,s=Jt)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=s.sparse.sparseFillEmptyRows(S("indices",e,t,n),S("values",e,t,n),S("denseShape",e,t,n),S("defaultValue",e,t,n));return[r,a,i,o]}case"SparseReshape":{let{outputIndices:r,outputShape:a}=s.sparse.sparseReshape(S("inputIndices",e,t,n),S("inputShape",e,t,n),S("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(S("data",e,t,n),S("indices",e,t,n),S("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},oG=(e,t,n,s=Jt)=>{switch(e.op){case"FFT":return[s.fft(S("x",e,t,n))];case"IFFT":return[s.ifft(S("x",e,t,n))];case"RFFT":return[s.rfft(S("x",e,t,n))];case"IRFFT":return[s.irfft(S("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},uG=(e,t,n,s=Jt)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:a}=s.string.stringNGrams(S("data",e,t,n),S("dataSplits",e,t,n),S("separator",e,t,n),S("nGramWidths",e,t,n),S("leftPad",e,t,n),S("rightPad",e,t,n),S("padWidth",e,t,n),S("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{let{indices:r,values:a,shape:i}=s.string.stringSplit(S("input",e,t,n),S("delimiter",e,t,n),S("skipEmpty",e,t,n));return[r,a,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(S("input",e,t,n),S("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},lG=(e,t,n,s=Jt)=>{switch(e.op){case"Cast":return[s.cast(S("x",e,t,n),S("dtype",e,t,n))];case"ExpandDims":{let r=S("axis",e,t,n);return[s.expandDims(S("x",e,t,n),r)]}case"Squeeze":{let r=S("axis",e,t,n);return[s.squeeze(S("x",e,t,n),r)]}case"Reshape":return[s.reshape(S("x",e,t,n),S("shape",e,t,n))];case"MirrorPad":return[s.mirrorPad(S("x",e,t,n),S("padding",e,t,n),S("mode",e,t,n))];case"PadV2":case"Pad":return[s.pad(S("x",e,t,n),S("padding",e,t,n),S("constantValue",e,t,n))];case"SpaceToBatchND":{let r=S("blockShape",e,t,n),a=S("paddings",e,t,n);return[s.spaceToBatchND(S("x",e,t,n),r,a)]}case"BatchToSpaceND":{let r=S("blockShape",e,t,n),a=S("crops",e,t,n);return[s.batchToSpaceND(S("x",e,t,n),r,a)]}case"DepthToSpace":{let r=S("blockSize",e,t,n),a=S("dataFormat",e,t,n).toUpperCase();return[s.depthToSpace(S("x",e,t,n),r,a)]}case"BroadcastTo":return[s.broadcastTo(S("x",e,t,n),S("shape",e,t,n))];case"BroadcastArgs":return[s.broadcastArgs(S("s0",e,t,n),S("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Mw(e,t,n,s,r=Y){let a=((i,o,u)=>{switch(i.category){case"arithmetic":return r(()=>MU(i,o,u));case"basic_math":return r(()=>BU(i,o,u));case"control":return qU(i,o,u);case"convolution":return r(()=>jU(i,o,u));case"creation":return r(()=>KU(i,o,u));case"dynamic":return XU(i,o,u);case"evaluation":return r(()=>YU(i,o,u));case"image":return r(()=>eG(i,o,u));case"graph":return r(()=>ZU(i,o,u));case"logical":return r(()=>tG(i,o,u));case"matrices":return r(()=>nG(i,o,u));case"normalization":return r(()=>sG(i,o,u));case"reduction":return r(()=>rG(i,o,u));case"slice_join":return r(()=>aG(i,o,u));case"sparse":return r(()=>iG(i,o,u));case"spectral":return r(()=>oG(i,o,u));case"string":return r(()=>uG(i,o,u));case"transformation":return r(()=>lG(i,o,u));case"hash_table":return JU(i,o,u,s);case"custom":let l=oC(i.op);if(l&&l.customExecutor)return l.customExecutor(new zU(i,o,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return w.isPromise(a)?a.then(i=>[].concat(i)):[].concat(a)}var Bw=class{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Vw(e,t,n,s){let r=new Set,a=[],i=null,o=null,u=new Set,l=Object.keys(e).map(d=>Bn(d)[0]),c=[];s!=null&&(c=s.map(d=>Bn(d.name)[0]));let p=[...t];for(;p.length>0;){let d=p.pop();if((_C(d)||fG(d)||mG(d))&&i==null&&(i=d,o=i.children.map(h=>h.name).filter(h=>r.has(h))),r.add(d.name),n[d.name]==null&&l.indexOf(d.name)===-1&&c.indexOf(d.name)===-1){if(d.inputs.length===0){a.push(d.name);continue}d.inputs.forEach(h=>{u.has(h.name)||(u.add(h.name),p.push(h))})}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}function cG(e,t,n){let{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map(c=>Bn(c)[0]).map(c=>e.nodes[c]),o=e.initNodes;i.forEach(c=>{s.has(c.name)&&a.push(c)}),e.weights.forEach(c=>{s.has(c.name)&&a.push(c)}),o!=null&&o.forEach(c=>{s.has(c.name)&&a.push(c)});let u=new Set,l=[];for(;a.length>0;){let c=a.pop();u.add(c.name),t[c.name]||l.push(c),c.children.forEach(p=>{!u.has(p.name)&&s.has(p.name)&&p.inputs.every(d=>u.has(d.name))&&a.push(p)})}return l}var dG=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],pG=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],hG=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function _C(e){return dG.indexOf(e.op)>=0}function fG(e){return pG.indexOf(e.op)>=0}function mG(e){return hG.indexOf(e.op)>=0}var Ng=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Ng(e.functions[n],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){let n=e.map(r=>r.name).sort(),s=t.map(r=>r.name).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){let n=Vw(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){let i=t.map(u=>u.name),o=Object.keys(e);throw new Error(`Cannot compute the outputs [${i}] from the provided inputs [${o}]. Missing the following inputs: [${s}]`)}return cG(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let s=n.map(c=>this.graph.nodes[Bn(c)[0]]),r=t.map(c=>Bn(c)[0]),a=r.map(c=>this.graph.nodes[c]);this.resetIntermediateTensors(),a.length===0&&(a=this._outputs);let i=this.getCompilationKey(s,a),o=this.compiledMap.get(i);o==null&&(o=this.compile(e,a),this.compiledMap.set(i,o));let u={},l={};return Y(()=>{let c=new Bw(this.weightMap,u,l,this.functionExecutorMap),p={...this.weightMap};Object.keys(e).forEach(f=>{let[m,g]=Bn(f),b=[];b[g]=e[f],p[m]=b});let d=this.getFrozenTensorIds(p),h={};for(let f=0;f<o.length;f++){let m=o[f];if(!p[m.name]){let g=Mw(m,p,c,this._resourceManager);if(w.isPromise(g))throw new Error(`The execution of the op '${m.op}' returned a promise. Please use model.executeAsync() instead.`);p[m.name]=g,this.checkTensorForDisposal(m.name,m,p,c,d,r,h)}}return this.parent==null&&c.dispose(d),t.map(f=>fn(f,p,c))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){t.category==="control"||a.indexOf(e)!==-1||(n[e].forEach(o=>{o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length)}),t.inputs.forEach(o=>{if(o.category!=="control"){let u=bU(o.name,n,s);u!=null&&u.forEach(l=>{if(l&&!l.kept&&!r.has(l.id)){let c=i[l.id];if(c===1){if(!this.keepTensorForDebug)l.dispose();else{let[p,d]=Fs(t.name,s);this.intermediateTensors[p]?this.intermediateTensors[p][d]=l:(this.intermediateTensors[p]=[],this.intermediateTensors[p][d]=l)}delete i[l.id]}else c!=null&&i[l.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.intermediateTensors||(Object.keys(this.intermediateTensors).forEach(e=>this.intermediateTensors[e].forEach(t=>t.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){!this.tensorsMap||Object.keys(this.tensorsMap).forEach(e=>{this.tensorsMap[e].forEach(n=>{n&&!n.kept&&!n.isDisposed&&!this.keepIds.has(n.id)&&n.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(let e in this.intermediateTensors)this.intermediateTensors[e].forEach(t=>t.dispose()),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=K().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();let a=new Bw(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);let i=t.map(l=>fn(l,this.tensorsMap,a)),o=i.map(l=>l.id),u=Object.keys(e).map(l=>e[l].id);return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),this.parent==null&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){let s=e.reduce((r,a,i)=>(r[this.inputs[i].name]=a,r),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){let r=Object.keys(e),a=r.map(y=>this.graph.nodes[Bn(y)[0]]),i=n.map(y=>Bn(y)[0]),o=i.map(y=>this.graph.nodes[y]);o.length===0&&(o=this._outputs);let{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:p}=Vw(e,o,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map(y=>({node:y,contexts:t.currentContext})),h={...this.weightMap};Object.keys(e).forEach(y=>{let[v,x]=Bn(y),k=[];k[x]=e[y],h[v]=k});let f={},m=this.getFrozenTensorIds(h),g={};for(;d.length>0;){let y=this.processStack(a,d,t,h,g,m,i,f,u);await Promise.all(y)}c==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=o.filter(y=>!_C(y)&&!fn(y.name,h,t)).map(y=>y.name);if(b.length>0){let y="";throw c!=null&&(y=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${r}]. Consider providing the following inputs: [${l}]. ${y}`)}return h}processStack(e,t,n,s,r,a,i,o,u){let l=[];for(;t.length>0;){let c=t.pop();n.currentContext=c.contexts;let p="";if(c.node.op==="Enter"&&S("isConstant",c.node,s,n)&&([p]=Fs(c.node.name,n)),s[c.node.name]==null){let d=Mw(c.node,s,n,this._resourceManager);p||([p]=Fs(c.node.name,n));let h=n.currentContext;w.isPromise(d)?l.push(d.then(f=>(s[p]=f,n.currentContext=h,this.checkTensorForDisposal(p,c.node,s,n,a,i,o),this.processChildNodes(c.node,t,n,s,r,u),f))):(s[p]=d,this.checkTensorForDisposal(p,c.node,s,n,a,i,o),this.processChildNodes(c.node,t,n,s,r,u))}else this.processChildNodes(c.node,t,n,s,r,u)}return l}processChildNodes(e,t,n,s,r,a){e.children.forEach(i=>{let[o]=Fs(i.name,n);r[o]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!fn(u,s,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!fn(u,s,n))&&(r[o]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[s]=Bn(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){let a=r.attrParams.shape.value,i=a.length===n.shape.length&&n.shape.every((o,u)=>a[u]===-1||a[u]===o);w.assert(i,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${a}], but was [${n.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&w.assert(n.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){let t={};for(let n in e)if(this._signature!=null&&this._signature.inputs!=null&&this._signature.inputs[n]!=null){let s=this._signature.inputs[n];t[s.name]=e[n]}else t[n]=e[n];return t}checkInputs(e){let t=Object.keys(e).filter(n=>{let[s]=Bn(n);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>this._signature!=null&&this._signature.outputs!=null&&this._signature.outputs[t]!=null?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{let[n]=Bn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},gG=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},bG="?tfjs-format=file",yG="model.json",vG=class{constructor(e,t={},n=gr){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new gG}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return w.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let r=this.artifacts.userDefinedMetadata;r.signature!=null&&(n=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Ng(Ow.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let r=Ow.Instance.transformGraph(e.modelInitializer);this.initializer=new Ng(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){let n=this.execute(e,this.outputNodes);if(this.structuredOutputKeys){let s=n instanceof ut?[n]:n,r={};return s.forEach((a,i)=>r[this.structuredOutputKeys[i]]=a),r}return n}normalizeInputs(e){if(!(e instanceof ut)&&!Array.isArray(e))return e;if(e=Array.isArray(e)?e:[e],e.length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,s)=>(t[n]=e[s],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function AC(e,t={},n=gr){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=xG(e));let s=new vG(e,t,n);return await s.load(),s}function xG(e){return e.endsWith("/")||(e=e+"/"),`${e}${yG}${bG}`}var wG={};Ee(wG,{CSVDataset:()=>WC,Dataset:()=>hu,FileDataSource:()=>XC,TextLineDataset:()=>VC,URLDataSource:()=>YC,array:()=>GG,csv:()=>tH,func:()=>nH,generator:()=>sH,microphone:()=>aH,version_data:()=>iH,webcam:()=>rH,zip:()=>HG});var kG=_a(pp()),SG=_a(pp());function IG(e,t){return ep(e,t)}function ep(e,t,n=new Map,s=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse)if(ho(e)){let a=Array.isArray(e)?[]:{};s.add(e);for(let i in e){let o=e[i],u=ep(o,t,n,s);a[i]=u}return s.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,r.value),r.value}function CG(e,t=RC){return EC(e,t)}function EC(e,t,n=new Set){let s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&r.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse)if(ho(s)){let a=Array.isArray(s)?[]:{};n.add(s);for(let i in s){let o=e.map(l=>l[i]),u=EC(o,t,n);a[i]=u}return n.delete(s),a}else throw new Error(`Can't recurse into non-iterable type: ${s}`);else return r.value}function RC(e){return e===null?null:ho(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function DC(e,t){let n=new Map;ep(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(w.isPromise(a)){let i=await a;n.set(r,i)}}return ep(e,t,n)}function ho(e){let t=!1;if(K().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=Dk();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof ut)&&!(e instanceof Promise)&&!t)}function NG(e){return e==null||TG(e)||Array.isArray(e)||typeof e=="object"&&e instanceof ut||w.isTypedArray(e)}function TG(e){return e===null||typeof e!="object"&&typeof e!="function"}function $G(e){return IG(e,_G)}function _G(e){return e instanceof ut?{value:e.clone(),recurse:!1}:ho(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var FC=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},OC=class extends FC{constructor(){super(OC.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},PC=OC;PC.INITIAL_CAPACITY=32;function LC(e){return new RG(e)}function Fv(e){return new DG(e)}function AG(e,t){return new zC(e,t)}function EG(e,t=MC.FAIL){return new WG(e,t)}var qt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new BG(this,e)}filter(e){return new zG(this,e)}map(e){return new MG(this,e)}mapAsync(e){return new Ww(this,e)}serialMapAsync(e){return new Ww(this,e).serial()}flatmap(e){return new VG(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new LG(this,e,t)}columnMajorBatch(e,t=!0,n=RC){return this.rowMajorBatch(e,t).map(r=>CG(r,n))}concatenate(e,t){return new zC(LC([this,e]),t)}take(e){return e<0||e==null?this:new PG(this,e)}skip(e){return e<0||e==null?this:new OG(this,e)}prefetch(e){return new BC(this,e)}shuffle(e,t){return new UG(this,e,t)}serial(){return new FG(this)}},RG=class extends qt{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:$G(e),done:!1}}},DG=class extends qt{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},FG=class extends qt{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},OG=class extends qt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Fe(e.value)}return this.upstream.next()}},PG=class extends qt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},LG=class extends qt{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},zG=class extends qt{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Fe(e.value)}}},MG=class extends qt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ps.getTensorsInContainer(e.value),n=this.transform(e.value),s=Ps.getTensorsInContainer(n);for(let r of t)Ps.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},BG=class extends qt{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Ww=class extends qt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Ps.getTensorsInContainer(e.value),n=await this.transform(e.value),s=Ps.getTensorsInContainer(n);for(let r of t)Ps.isTensorInList(r,s)||r.dispose();return{value:n,done:!1}}},Ov=class extends qt{constructor(){super(),this.outputQueue=new PC,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},VG=class extends Ov{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Ps.getTensorsInContainer(e.value),n=this.transform(e.value),s=Ps.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let r of t)Ps.isTensorInList(r,s)||r.dispose();return!0}},zC=class extends qt{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},MC=(e=>(e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST",e))(MC||{}),WG=class extends qt{constructor(e,t=0){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function s(a){return a instanceof qt?{value:a.next().then(o=>(t++,o.done&&n++,o.value)),recurse:!1}:{value:null,recurse:!0}}let r=await DC(this.iterators,s);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0};case 2:default:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},BC=class extends qt{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new FC(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},UG=class extends BC{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=SG.alea(n||w.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},hu=class{constructor(){this.size=null}batch(e,t=!0){let n=this;w.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),Mn(async()=>(await n.iterator()).columnMajorBatch(e,t,qG),s)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,Mn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,Mn(async()=>(await t.iterator()).filter(s=>Y(()=>e(s))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return Mn(async()=>(await t.iterator()).map(n=>Y(()=>e(n))),this.size)}mapAsync(e){let t=this;return Mn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return Mn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,Mn(async()=>{let s=Fv(async()=>({value:await t.iterator(),done:!1}));return AG(s.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,Mn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let s=this,r=kG.alea(t||w.now().toString());return Mn(async()=>{let a=r.int32();return n&&(a+=r.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,Mn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};hu.MAX_BUFFER_SIZE=1e4;function Mn(e,t=null){return new class extends hu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function GG(e){return Mn(async()=>LC(e),e.length)}function HG(e){if(!ho(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return Mn(async()=>{let n=await DC(e,s=>{if(s instanceof hu)return{value:s.iterator(),recurse:!1};if(ho(s))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return EG(n,1)},t)}function qG(e){if(e===null)return null;let t=e[0];return NG(t)?{value:jG(e),recurse:!1}:{value:null,recurse:!0}}function jG(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ut?Wn(e):rs(e)}var VC=class extends hu{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(s=>(s.endsWith("\r")&&(s=s.slice(0,-1)),s))}},ud='"',Uu=Symbol("out"),Uw=Symbol("field"),ld=Symbol("quote"),Am=Symbol("quoteafterquote"),Gw=Symbol("quoteinquote"),WC=class extends hu{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new VC(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(w.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&w.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((s,r)=>(s[r]=s[r]+1||1,s),{}),n=Object.keys(t).filter(s=>t[s]>1);if(w.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let t=await(await this.base.iterator()).next();if(t.done)throw new Error("No data was found for CSV parsing.");let n=t.value;return this.parseRow(n,!1)}else return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){let a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[r],u=null;if(o==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{let l=Number(o);if(isNaN(l))i&&i.dtype==="bool"?u=this.getBoolean(o):u=o;else if(!i||!i.dtype)u=l;else switch(i.dtype){case"float32":u=l;break;case"int32":u=Math.floor(l);break;case"bool":u=this.getBoolean(o);break;default:u=l}}i&&i.isLabel?s[a]=u:n[a]=u}}return Object.keys(s).length===0?n:{xs:n,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],s=0,r=e.length,a=Uu;for(let i=0;i<r;i++)switch(a){case Uu:switch(e.charAt(i)){case ud:s=i+1,a=ld;break;case this.delimiter:if(s=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),a=Uu;break;default:a=Uw,s=i;break}break;case Uw:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i)),a=Uu,s=i+1;break;default:}break;case ld:switch(e.charAt(i)){case ud:a=Am;break;default:}break;case Am:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(s,i-1)),a=Uu,s=i+1;break;case ud:a=ld;break;default:a=Gw;break}break;case Gw:switch(e.charAt(i)){case ud:a=ld;break;default:}break;default:}if(a===Am?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},UC=class extends qt{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!K().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new UC(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let s=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let s=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(s=>{let r=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((s,r)=>n.set(s,r*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(w.sizeFromShape(t));return n.set(e,n.length-e.length),rs(n,t)}},GC=class extends qt{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=gn([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,r=(1-n)/2,a=(1-s)/2,i=r+n,o=s+a;this.cropBox=ca([a,r,o,i],[1,4])}else this.cropBox=ca([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!K().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new GC(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&w.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=Bp.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return Y(()=>{let t=Nn(de(e,"float32"),0),n;n=br.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let s=n.shape;return U(n,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(t=>t.stop());try{this.webcamVideoElement.srcObject=null}catch(t){console.log(t),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},HC=class{},qC=class extends qt{split(e){return new KG(this,e)}},KG=class extends qC{constructor(e,t){super(),this.upstream=e,this.impl=new XG(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},XG=class extends Ov{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},YG=class extends qt{decodeUTF8(){return new ZG(this)}},ZG=class extends qC{constructor(e){super(),this.upstream=e,this.impl=new QG(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},QG=class extends Ov{constructor(e){if(super(),this.upstream=e,K().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=Dk();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return K().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},jC=class extends YG{constructor(e,t={}){super(),this.file=e,this.options=t,w.assert(e instanceof Uint8Array||(K().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,n)=>{let s=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,s)));else{let r=new FileReader;r.onload=i=>{let o=r.result;if(o instanceof ArrayBuffer&&(o=new Uint8Array(o)),!(o instanceof Uint8Array))return n(new TypeError("FileReader returned unknown type."));t(o)},r.onabort=i=>n(new Error("Aborted")),r.onerror=i=>n(new Error(i.type));let a=this.file.slice(this.offset,s);r.readAsArrayBuffer(a)}this.offset=s}),done:!1}}};async function JG(e,t={},n){let s,r;typeof e=="string"?s=e:(s=e.url,r=eH(e));let a=await(n||w.fetch)(s,r);if(a.ok){let i=new Uint8Array(await a.arrayBuffer());return new jC(i,t)}else throw new Error(a.statusText)}var eH=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function KC(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var XC=class extends HC{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(KC(this.input)&&K().get("IS_NODE")){let e=hp();this.input=e.readFileSync(this.input.slice(7))}return new jC(this.input,this.options)}},YC=class extends HC{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return KC(this.url)?new XC(this.url,this.fileOptions).iterator():JG(this.url,this.fileOptions)}};function tH(e,t={}){return new WC(new YC(e),t)}function nH(e){let t=Fv(e);return Mn(async()=>t)}function sH(e){return Mn(async()=>{let t=await e();return Fv(()=>t.next())})}async function rH(e,t){return GC.create(e,t)}async function aH(e){return UC.create(e)}var iH="0.0.0";function be(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var oH=$s.whereImpl,ZC=class extends xl{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new fp(this,vs())}nextDataId(){return ZC.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,K().get("IS_NODE")&&I.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let s=this.readSync(n.real.dataId),r=this.readSync(n.imag.dataId);return I.mergeRealAndImagArrays(s,r)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>w.decodeString(s));return _e(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,t)}makeOutput(e,t,n){return vs().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){be([e],"where");let t=this.readSync(e.dataId);return oH(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},QC=ZC;QC.nextDataId=0;var Pv={};Ee(Pv,{addImpl:()=>e1,bincountImpl:()=>zv,bincountReduceImpl:()=>t1,ceilImpl:()=>n1,concatImpl:()=>Mv,equalImpl:()=>s1,expImpl:()=>a1,expm1Impl:()=>o1,floorImpl:()=>u1,gatherNdImpl:()=>l1,gatherV2Impl:()=>c1,greaterEqualImpl:()=>p1,greaterImpl:()=>d1,lessEqualImpl:()=>f1,lessImpl:()=>h1,linSpaceImpl:()=>m1,logImpl:()=>g1,maxImpl:()=>b1,maximumImpl:()=>y1,minimumImpl:()=>v1,multiplyImpl:()=>Bv,negImpl:()=>x1,notEqualImpl:()=>w1,prodImpl:()=>k1,rangeImpl:()=>Wv,rsqrtImpl:()=>S1,scatterImpl:()=>so,sigmoidImpl:()=>XH,simpleAbsImpl:()=>JC,sliceImpl:()=>np,sparseFillEmptyRowsImpl:()=>C1,sparseReshapeImpl:()=>N1,sparseSegmentReductionImpl:()=>Uv,sqrtImpl:()=>QH,squaredDifferenceImpl:()=>T1,stridedSliceImpl:()=>$1,stringNGramsImpl:()=>Gv,stringSplitImpl:()=>Hv,stringToHashBucketFastImpl:()=>qv,subImpl:()=>_1,tileImpl:()=>A1,topKImpl:()=>R1,transposeImpl:()=>Vv,uniqueImpl:()=>D1});function JC(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var uH=e=>{let{x:t}=e.inputs,n=e.backend;be(t,"abs");let s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId).values;return s=JC(r),n.makeOutput(s,t.shape,t.dtype)},lH={kernelName:vo,backendName:"cpu",kernelFunc:uH};function Dt(e){return(t,n,s,r,a)=>{let i=I.assertAndGetBroadcastShape(t,n),o=i.length,u=w.computeStrides(i),l=w.sizeFromShape(i),c=w.getTypedArrayFromDType(a,l),p=t.length,d=n.length,h=w.computeStrides(t),f=w.computeStrides(n),m=I.getBroadcastDims(t,i),g=I.getBroadcastDims(n,i);if(m.length+g.length===0)for(let b=0;b<c.length;++b)c[b]=e(s[b%s.length],r[b%r.length]);else for(let b=0;b<c.length;++b){let y=w.indexToLoc(b,o,u),v=y.slice(-p);m.forEach($=>v[$]=0);let x=w.locToIndex(v,p,h),k=y.slice(-d);g.forEach($=>k[$]=0);let C=w.locToIndex(k,d,f);c[b]=e(s[x],r[C])}return[c,i]}}function Vn(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64"),u=n.data.get(o.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}var cH={kernelName:vp,backendName:"cpu",kernelFunc:Vn};function tp(e,t,n="float32"){if(n==="complex64"){let r=tp(e,t,"float32"),a=tp(e,t,"float32");return Vn({inputs:{real:r,imag:a},backend:e})}let s=w.makeZerosTypedArray(w.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function Us(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var dH={kernelName:Ya,backendName:"cpu",kernelFunc:Us};function Ia(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var pH={kernelName:Tp,backendName:"cpu",kernelFunc:Ia};function $r(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Us({inputs:{x:r},backend:n});let i=tp(n,r.shape,r.dtype),o=$r({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Vn({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}if(r.dtype==="complex64"){let i=Ia({inputs:{input:r},backend:n}),o=$r({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=Us({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32"){let i=n.data.get(r.dataId).values,o=Int32Array.from(i);return n.makeTensorInfo(r.shape,"int32",o)}if(a==="bool"){let i=n.data.get(r.dataId).values,o=w.toTypedArray([0],r.dtype),[u,l]=Dt((c,p)=>c!==p?1:0)(r.shape,[],i,o,"bool");return n.makeTensorInfo(l,"bool",u)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var hH={kernelName:Oa,backendName:"cpu",kernelFunc:$r};function jt(e,t,n,s){return n==null?({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;be([i,o],e);let l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,p=i.dtype==="string"?I.fromUint8ToStringArray(l):l,d=i.dtype==="string"?I.fromUint8ToStringArray(c):c,h=s||i.dtype,[f,m]=t(i.shape,o.shape,p,d,h);return u.makeTensorInfo(m,h,f)}:({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;if(i.dtype==="complex64"||o.dtype==="complex64"){let l=$r({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),c=u.data.get(l.dataId),p=c.complexTensorInfos.real,d=c.complexTensorInfos.imag,h=u.data.get(p.dataId).values,f=u.data.get(d.dataId).values,m=$r({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),b=g.complexTensorInfos.real,y=g.complexTensorInfos.imag,v=u.data.get(b.dataId).values,x=u.data.get(y.dataId).values,[k,C,$]=n(i.shape,o.shape,h,f,v,x),A=u.makeTensorInfo($,"float32",k),E=u.makeTensorInfo($,"float32",C),O=Vn({inputs:{real:A,imag:E},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(A),u.disposeIntermediateTensorInfo(E),O}else{let l=u.data.get(i.dataId).values,c=u.data.get(o.dataId).values,p=s||i.dtype,[d,h]=t(i.shape,o.shape,l,c,p);return u.makeTensorInfo(h,p,d)}}}function Lv(e){return(t,n,s,r,a,i)=>{let o=I.assertAndGetBroadcastShape(t,n),u=w.sizeFromShape(o),l=o.length,c=w.computeStrides(o),p=w.getTypedArrayFromDType("float32",u),d=w.getTypedArrayFromDType("float32",u),h=I.getBroadcastDims(t,o),f=I.getBroadcastDims(n,o),m=I.mergeRealAndImagArrays(s,r),g=I.mergeRealAndImagArrays(a,i),b=t.length,y=w.computeStrides(t),v=n.length,x=w.computeStrides(n);if(h.length+f.length===0)for(let k=0;k<p.length;k++){let C=k%m.length,$=k%g.length,A=e(m[C*2],m[C*2+1],g[$*2],g[$*2+1]);p[k]=A.real,d[k]=A.imag}else for(let k=0;k<p.length;k++){let C=w.indexToLoc(k,l,c),$=C.slice(-b);h.forEach(D=>$[D]=0);let A=w.locToIndex($,b,y),E=C.slice(-v);f.forEach(D=>E[D]=0);let O=w.locToIndex(E,v,x),R=e(m[A*2],m[A*2+1],g[O*2],g[O*2+1]);p[k]=R.real,d[k]=R.imag}return[p,d,o]}}var e1=Dt((e,t)=>e+t),fH=Lv((e,t,n,s)=>({real:e+n,imag:t+s})),fo=jt(Er,e1,fH),mH={kernelName:Er,backendName:"cpu",kernelFunc:fo};function zv(e,t,n,s,r){let a=w.sizeFromShape(s),i=w.makeZerosTypedArray(r,n);for(let o=0;o<e.length;o++){let u=e[o];if(u<0)throw new Error("Input x must be non-negative!");u>=r||(a>0?i[u]+=t[o]:i[u]+=1)}return i}function t1(e,t,n,s=!1){let r=e.shape[0],a=e.shape[1],i=_e([r,n],t.dtype);for(let o=0;o<r;o++)for(let u=0;u<a;u++){let l=e.get(o,u);if(l<0)throw new Error("Input x must be non-negative!");l>=n||(s?i.set(1,o,l):t.size>0?i.set(i.get(o,l)+t.get(o,u),o,l):i.set(i.get(o,l)+1,o,l))}return i}function Br(e){return(t,n,s)=>{let r=w.getTypedArrayFromDType(n,t.length);for(let a=0;a<t.length;++a)r[a]=e(t[a],s);return r}}function rt(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:i}=s;if(be(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=a,u=o.data.get(i.dataId).values,l=w.sizeFromShape(i.shape),c=n||i.dtype,p=w.getArrayFromDType(c,l);for(let d=0;d<l;++d)p[d]=t(u[d],r);return o.makeTensorInfo(i.shape,c,p)}}function fu(e,t,n){return({inputs:s,attrs:r,backend:a})=>{let{x:i}=s;if(be(i,e),i.dtype==="string"||n==="string")throw new Error("unaryKernelFunc does not support string input/output");let o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,r);return o.makeTensorInfo(i.shape,l,c)}}var n1=Br(e=>Math.ceil(e)),gH=fu(Pa,n1),bH={kernelName:Pa,backendName:"cpu",kernelFunc:gH};function Mv(e,t,n,s){let r=w.getArrayFromDType(n,w.sizeFromShape(t));if(s&&n!=="string"){let a=0;e.forEach(i=>{let o=w.sizeFromShape(i.shape);r.set(i.vals,a),a+=o})}else{let a=0;e.forEach(i=>{let o=n==="string"?I.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let l=0;l<i.shape[0];++l){let c=l*t[1]+a;for(let p=0;p<i.shape[1];++p)r[c+p]=o[u++]}a+=i.shape[1]})}return r}var s1=Dt((e,t)=>e===t?1:0),r1=jt(Co,s1,null,"bool"),yH={kernelName:Co,backendName:"cpu",kernelFunc:r1},a1=Br(e=>Math.exp(e)),i1=fu(Ha,a1,"float32"),vH={kernelName:Ha,backendName:"cpu",kernelFunc:i1},o1=Br(e=>Math.expm1(e)),xH=fu(To,o1),wH={kernelName:To,backendName:"cpu",kernelFunc:xH},u1=Br(e=>Math.floor(e)),kH=fu(qa,u1),SH={kernelName:qa,backendName:"cpu",kernelFunc:kH};function l1(e,t,n,s,r,a,i,o,u){let l=_e([s,a],n);for(let c=0;c<s;c++){let p=[],d=0;for(let h=0;h<r;h++){let f=e[c*r+h];d+=f*i[h],p.push(f)}if(d<0||d>=u/a)throw new Error(`Invalid indices: ${p} does not index into ${o}`);for(let h=0;h<a;h++)l.values[c*a+h]=t.get(...t.indexToLoc(d*a+h))}return l}function c1(e,t,n){let s=_e(n,e.dtype);for(let r=0;r<s.size;++r){let i=s.indexToLoc(r).slice(),o=i[0],u=i[2],l=t.locToIndex([o,u]);i[2]=t.values[l];let c=e.locToIndex(i);0<=c&&c<e.values.length&&(s.values[r]=e.values[c])}return s}var d1=Dt((e,t)=>e>t?1:0),IH=jt(Eo,d1,null,"bool"),CH={kernelName:Eo,backendName:"cpu",kernelFunc:IH},p1=Dt((e,t)=>e>=t?1:0),NH=jt(Xa,p1,null,"bool"),TH={kernelName:Xa,backendName:"cpu",kernelFunc:NH},h1=Dt((e,t)=>e<t?1:0),$H=jt(Ro,h1,null,"bool"),_H={kernelName:Ro,backendName:"cpu",kernelFunc:$H},f1=Dt((e,t)=>e<=t?1:0),AH=jt(Do,f1,null,"bool"),EH={kernelName:Do,backendName:"cpu",kernelFunc:AH};function m1(e,t,n){let s=(t-e)/(n-1),r=w.makeZerosTypedArray(n,"float32");r[0]=e;for(let a=1;a<r.length;a++)r[a]=r[a-1]+s;return r}var g1=Br(e=>Math.log(e)),RH=fu(Qa,g1),DH={kernelName:Qa,backendName:"cpu",kernelFunc:RH};function b1(e,t,n,s){let r=w.getTypedArrayFromDType(s,w.sizeFromShape(n));for(let a=0;a<r.length;++a){let i=a*t,o=e[i];for(let u=0;u<t;++u){let l=e[i+u];(Number.isNaN(l)||l>o)&&(o=l)}r[a]=o}return r}var y1=Dt((e,t)=>Math.max(e,t)),FH=jt(ei,y1),OH={kernelName:ei,backendName:"cpu",kernelFunc:FH},v1=Dt((e,t)=>Math.min(e,t)),PH=jt(ri,v1),LH={kernelName:ri,backendName:"cpu",kernelFunc:PH},Bv=Dt((e,t)=>e*t),zH=Lv((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})),Sh=jt(ii,Bv,zH),MH={kernelName:ii,backendName:"cpu",kernelFunc:Sh};function x1(e,t,n){let s=w.createScalarValue(-1,n);return Bv([],t,s,e,n)}function BH(e){let{inputs:t,backend:n}=e,{x:s}=t;be(s,"neg");let r=n.data.get(s.dataId).values,[a,i]=x1(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}var VH={kernelName:Po,backendName:"cpu",kernelFunc:BH},w1=Dt((e,t)=>e!==t?1:0),WH=jt(Lo,w1,null,"bool"),UH={kernelName:Lo,backendName:"cpu",kernelFunc:WH};function Vv(e,t,n,s,r){let a=t.length,i=w.sizeFromShape(t),o=w.computeStrides(t),u=w.computeStrides(r),l=w.getTypedArrayFromDType(n,w.sizeFromShape(r));for(let c=0;c<i;++c){let p=w.indexToLoc(c,a,o),d=new Array(p.length);for(let f=0;f<d.length;f++)d[f]=p[s[f]];let h=w.locToIndex(d,a,u);l[h]=e[c]}return l}function Dn(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;be(r,"transpose");let i=r.shape.length,o=new Array(i);for(let p=0;p<o.length;p++)o[p]=r.shape[a[p]];let u=s.data.get(r.dataId).values,l=Vv(u,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}var GH={kernelName:Js,backendName:"cpu",kernelFunc:Dn};function k1(e,t,n,s){let[r,a]=I.computeOutAndReduceShapes(e,s),i=bn(t,"int32"),o=w.makeZerosTypedArray(w.sizeFromShape(r),i),u=w.sizeFromShape(a);for(let l=0;l<o.length;++l){let c=l*u,p=1;for(let d=0;d<u;++d)p*=n[c+d];o[l]=p}return{outVals:o,outShape:r,outDtype:i}}function HH(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"prod");let o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=I.getAxesPermutation(u,o),c=u,p=r,d=[];l!=null&&(p=Dn({inputs:{x:r},backend:n,attrs:{perm:l}}),d.push(p),c=I.getInnerMostAxes(c.length,o));let h=n.data.get(p.dataId).values,{outVals:f,outShape:m,outDtype:g}=k1(p.shape,p.dtype,h,c),b=m;return i&&(b=I.expandShapeToKeepDim(m,u)),d.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(b,g,f)}var qH={kernelName:ci,backendName:"cpu",kernelFunc:HH};function Wv(e,t,n,s){let r=e===t,a=e<t&&n<0,i=t<e&&n>1;if(r||a||i)return w.makeZerosTypedArray(0,s);let o=Math.abs(Math.ceil((t-e)/n)),u=w.makeZerosTypedArray(o,s);t<e&&n===1&&(n=-1),u[0]=e;for(let l=1;l<u.length;l++)u[l]=u[l-1]+n;return u}var S1=Br(e=>1/Math.sqrt(e)),jH=fu(mi,S1),KH={kernelName:mi,backendName:"cpu",kernelFunc:jH};function so(e,t,n,s,r,a,i,o,u,l){let c=[s/r,r],p=e.values,d=t.values;if(s===0)return _e(n,t.dtype);let h=_e(c,t.dtype);typeof u=="string"||typeof u=="number"?h.values.fill(u):typeof u=="boolean"&&h.values.fill(+u);for(let f=0;f<a;f++){let m=[],g=0;for(let b=0;b<i;b++){let y=p[f*i+b];m.push(y),g+=y*o[b]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let b=0;b<r;b++)l?h.values[g*r+b]+=d[f*r+b]:h.values[g*r+b]=t.rank===0?d[0]:d[f*r+b]}return h}var XH=Br(e=>1/(1+Math.exp(-e))),I1=rt(bi,e=>1/(1+Math.exp(-e))),YH={kernelName:bi,backendName:"cpu",kernelFunc:I1};function np(e,t,n,s,r){let a=It.isSliceContinous(s,t,n),i=w.sizeFromShape(n),o=w.computeStrides(s);if(a){let p=It.computeFlatOffset(t,o);return r==="string"?e.slice(p,p+i):e.subarray(p,p+i)}let u=r==="string"?I.fromUint8ToStringArray(e):e,l=_e(s,r,u),c=_e(n,r);for(let p=0;p<c.size;++p){let d=c.indexToLoc(p),h=d.map((f,m)=>f+t[m]);c.set(l.get(...h),...d)}return r==="string"?I.fromStringArrayToUint8(c.values):c.values}function Ca(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;be(r,"slice");let[o,u]=It.parseSliceParams(r,a,i);It.assertParamsValid(r,o,u);let l=n.data.get(r.dataId).values,c=np(l,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,c)}var ZH={kernelName:Ko,backendName:"cpu",kernelFunc:Ca};function C1(e,t,n,s,r,a,i){let o=t[0],u=a[0],l=new Array(u),c=new Array(o),p=t[1];if(u===0){if(o!==0)throw new Error(I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=w.getArrayFromDType(n,0),b=w.getArrayFromDType(r,0);return[g,[0,p],b,l,c]}let d=!0,h=0,f=new Array(u).fill(0);for(let g=0;g<o;++g){let b=e[g*p];if(b<0)throw new Error(I.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,b));if(b>=u)throw new Error(I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,b,u));++f[b],d=d&&b>=h,h=b}let m=!0;for(let g=0;g<u;++g){let b=f[g]===0;l[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&d){let g=e,b=s;for(let y=0;y<o;++y)c[y]=y;return[g,[o,p],b,l,c]}else{let g=f[u-1],b=w.getArrayFromDType(n,g*p),y=w.getArrayFromDType(r,g),v=new Array(u).fill(0);for(let x=0;x<o;++x){let k=e[x*p],C=v[k],$=(k===0?0:f[k-1])+C;v[k]++;for(let A=0;A<p;++A)b[$*p+A]=e[x*p+A];y[$]=s[x],c[x]=$}for(let x=0;x<u;++x)if(v[x]===0){let C=x===0?0:f[x-1];b[C*p+0]=x;for(let $=1;$<p;++$)b[C*p+$]=0;y[C]=i}return[b,[g,p],y,l,c]}}function N1(e,t,n,s,r){let a=w.sizeFromShape(s),i=t[0],o=r.length,u=[],l=1,c=-1;for(let g=0;g<o;++g){let b=r[g];if(b===-1){if(c!==-1)throw new Error(I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,g));c=g,u.push(1)}else{if(b<0)throw new Error(I.getSparseReshapeNegativeOutputDimErrorMessage(g,b));l*=b,u.push(b)}}if(c!==-1){if(l<=0)throw new Error(I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let g=Math.trunc(a/l);if(l*g!==a)throw new Error(I.getSparseReshapeInputOutputMultipleErrorMessage(s,u));u[c]=g}if(w.sizeFromShape(u)!==a)throw new Error(I.getSparseReshapeInputOutputMismatchErrorMessage(s,u));let d=s.length,h=[];if(d>0){h[d-1]=1;for(let g=d-2;g>=0;--g)h[g]=h[g+1]*s[g+1]}let f=[];if(o>0){f[o-1]=1;for(let g=o-2;g>=0;--g)f[g]=f[g+1]*u[g+1]}let m=w.getArrayFromDType(n,i*o);for(let g=0;g<i;++g){let b=0;for(let y=0;y<d;++y)b+=e[g*d+y]*h[y];for(let y=0;y<o;++y)m[g*o+y]=Math.trunc(b/f[y]),b%=f[y]}return[m,[i,o],u]}function Uv(e,t,n,s,r,a=!1,i=0){let o=s.length,u=[t[0],e.length/t[0]],l=u[1],p=o>0?r[o-1]+1:0;if(p<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=p;let h=d.reduce((v,x)=>v*x,1),f=w.getArrayFromDType(n,h);if(o===0)return p>0&&f.fill(i),[f,d];if(p<=0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,b=0,y=r[m];for(;;){let v=0;if(g<o){if(v=r[g],y===v){++g;continue}if(y>=v)throw new Error(I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=p)throw new Error(I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,p));y>b&&f.fill(i,b*l,y*l);for(let x=m;x<g;++x){let k=s[x];if(k<0||k>=u[0])throw new Error(I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,s[x],u[0]));for(let C=0;C<l;C++)f[y*l+C]+=e[k*l+C]}if(a)for(let x=0;x<l;x++)f[y*l+x]/=g-m;if(m=g,++g,b=y+1,y=v,g>o)break}return b<p&&f.fill(i,b*l,p*l),[f,d]}var QH=Br(e=>Math.sqrt(e)),JH=rt(yi,e=>Math.sqrt(e)),eq={kernelName:yi,backendName:"cpu",kernelFunc:JH},T1=Dt((e,t)=>{let n=e-t;return n*n}),tq=jt(wi,T1),nq={kernelName:wi,backendName:"cpu",kernelFunc:tq};function $1(e,t,n,s){let r=_e(e,t.dtype);for(let a=0;a<r.size;a++){let i=r.indexToLoc(a),o=new Array(i.length);for(let u=0;u<o.length;u++)o[u]=i[u]*n[u]+s[u];r.set(t.get(...o),...i)}return r}var sq=class{constructor(e,t,n,s,r,a){this.separator=w.encodeString(e),this.nGramWidths=t,this.leftPad=w.encodeString(n),this.rightPad=w.encodeString(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){let o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(r-(i+1))),c=a-(u+l),p=t+(u>0?0:i-o),d=0;d+=u*this.leftPad.length;for(let b=0;b<c;++b)d+=e[p+b].length;d+=l*this.rightPad.length,d+=(u+l+c-1)*this.separator.length,n[s+i]=new Uint8Array(d);let f=n[s+i],m=0,g=b=>b.forEach(y=>f[m++]=y);for(let b=0;b<u;++b)g(this.leftPad),g(this.separator);for(let b=0;b<c-1;++b)g(e[p+b]),g(this.separator);if(c>0){g(e[p+c-1]);for(let b=0;b<l;++b)g(this.separator),g(this.rightPad)}else{for(let b=0;b<l-1;++b)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,s=t.length;if(s>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let u=1;u<s;++u){let l=t[u]>=o;if(l=l&&t[u]<=n,!l)throw new Error(`Invalid split value ${t[u]}, must be in [${o}, ${n}]`);o=t[u]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let r=s-1,a=w.getArrayFromDType("int32",s);if(n===0||s===0){let o=new Array(n);for(let u=0;u<=r;++u)a[u]=0;return[o,a]}a[0]=0;for(let o=1;o<=r;++o){let u=t[o]-t[o-1],l=0;this.nGramWidths.forEach(c=>{l+=this.getNumNGrams(u,c)}),this.preserveShort&&u>0&&l===0&&(l=1),a[o]=a[o-1]+l}let i=new Array(a[r]);for(let o=0;o<r;++o){let u=t[o],l=a[o];if(this.nGramWidths.forEach(c=>{let p=t[o+1]-t[o],d=this.getNumNGrams(p,c);this.createNGrams(e,u,i,l,d,c),l+=d}),this.preserveShort&&l===a[o]){let c=t[o+1]-t[o];if(c===0)continue;let p=c+2*this.padWidth,d=1;this.createNGrams(e,u,i,l,d,p)}}return[i,a]}};function Gv(e,t,n,s,r,a,i,o){return new sq(n,s,r,a,i,o).compute(e,t)}function rq(e,t,n,s){if(!e.length)return;if(t.length===0){for(let a=0;a<e.length;++a)s.push(e.subarray(a,a+1));return}if(t.length===1){let a=t[0],i=e.indexOf(a);for(;i!==-1;){let o=e.subarray(0,i);(!n||o.length!==0)&&s.push(o),e=e.subarray(i+1),i=e.indexOf(a)}(!n||e.length!==0)&&s.push(e);return}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||t.indexOf(e[a])!==-1){let i=e.subarray(r,a);(!n||i.length!==0)&&s.push(i),r=a+1}}function Hv(e,t,n){let s=e.length,r=[],a=0,i=0,o=new Array(s);for(let d=0;d<s;++d){let h=r.length;rq(e[d],t,n,r);let f=r.length-h;o[d]=f,a+=f,i=Math.max(i,f)}let u=w.getArrayFromDType("int32",a*2),l=new Array(a),c=[s,i],p=0;for(let d=0;d<s;++d)for(let h=0;h<o[d];++h)u[p*2]=d,u[p*2+1]=h,l[p]=r[p],++p;return[u,l,c]}function qv(e,t){let n=w.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=w.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}var _1=Dt((e,t)=>e-t),aq=Lv((e,t,n,s)=>({real:e-n,imag:t-s})),jv=jt(ki,_1,aq),iq={kernelName:ki,backendName:"cpu",kernelFunc:jv};function A1(e,t){let n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];let s=_e(n,e.dtype);for(let r=0;r<s.values.length;++r){let a=s.indexToLoc(r),i=new Array(e.rank);for(let u=0;u<i.length;u++)i[u]=a[u]%e.shape[u];let o=e.locToIndex(i);s.values[r]=e.values[o]}return s}var Ku=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function E1(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){let o=s-n+1,u=t-n+1,l=Math.log(o),c=.5*Math.exp(2*l/3),p=.5*Math.sqrt(l*c*(o-c)/o)*Math.sign(u-o/2),d=Math.max(n,Math.floor(t-u*c/o+p)),h=Math.min(s,Math.floor(t+(o-u)*c/o+p));E1(e,t,d,h)}let r=e[t],a=n,i=s;for(w.swap(e,n,t),Ku(e[s],r)>0&&w.swap(e,n,s);a<i;){for(w.swap(e,a,i),a++,i--;Ku(e[a],r)<0;)a=a+1;for(;Ku(e[i],r)>0;)i=i-1}Ku(e[n],r)===0?w.swap(e,n,i):(i=i+1,w.swap(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function R1(e,t,n,s,r){let a=t[t.length-1],[i,o]=[e.length/a,a],u=w.getTypedArrayFromDType(n,i*s),l=w.getTypedArrayFromDType("int32",i*s);for(let p=0;p<i;p++){let d=p*o,h=e.subarray(d,d+o),f=new Array(h.length);h.forEach((y,v)=>f[v]={value:y,index:v}),s<f.length&&(E1(f,s),f=f.slice(0,s)),r&&f.sort(Ku);let m=p*s,g=u.subarray(m,m+s),b=l.subarray(m,m+s);for(let y=0;y<s;y++)g[y]=f[y].value,b[y]=f[y].index}let c=t.slice();return c[c.length-1]=s,[_e(c,n,u),_e(c,"int32",l)]}function D1(e,t,n,s){let r=w.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let f=0;f<r;f++)a[0]*=n[f];a[1]=n[r];for(let f=r+1;f<n.length;f++)a[2]*=n[f];let i={},o=new Int32Array(n[r]),u=new Ht(a,s,e),l=[],c=a[0]===1&&a[2]===1;for(let f=0;f<n[r];f++){let m;if(c)m=e[f].toString();else{let g=[];for(let b=0;b<a[0];b++)for(let y=0;y<a[2];y++)g.push(u.get(b,f,y));m=g.join(",")}if(i[m]!==void 0)o[f]=i[m];else{let g=Object.keys(i).length;i[m]=g,o[f]=g,l.push(f)}}let p=a.slice();p[1]=Object.keys(i).length;let d=new Ht(p,s);l.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let b=0;b<a[2];b++)d.set(u.get(g,f,b),g,m,b)});let h=n.slice();return h[r]=p[1],{outputValues:d.values,outputShape:h,indices:o}}iu("cpu",()=>new QC,1);var F1=rt(Ga,e=>e>=0?e:Math.exp(e)-1),oq={kernelName:Ga,backendName:"cpu",kernelFunc:F1};function O1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;be([r],"leakyRelu");let i=w.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,u=w.getTypedArrayFromDType("float32",i);for(let l=0;l<o.length;l++)u[l]=o[l]<0?a*o[l]:o[l];return n.makeTensorInfo(r.shape,"float32",u)}var uq={kernelName:Za,backendName:"cpu",kernelFunc:O1},lq=Dt((e,t)=>e<0?t*e:e);function P1(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t;be([s,r],"prelu");let a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,u]=lq(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}var cq={kernelName:li,backendName:"cpu",kernelFunc:P1},L1=rt(di,e=>Math.max(0,e)),dq={kernelName:di,backendName:"cpu",kernelFunc:L1},z1=rt(fi,e=>Math.min(Math.max(0,e),6)),pq={kernelName:fi,backendName:"cpu",kernelFunc:z1};function sp(e,t,n,s,r){if(n==="linear")return Us({inputs:{x:t},backend:e});if(n==="relu")return L1({inputs:{x:t},backend:e});if(n==="elu")return F1({inputs:{x:t},backend:e});if(n==="relu6")return z1({inputs:{x:t},backend:e});if(n==="prelu")return P1({inputs:{x:t,alpha:s},backend:e});if(n==="leakyrelu")return O1({inputs:{x:t},backend:e,attrs:{alpha:r}});if(n==="sigmoid")return I1({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ft(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=w.sizeFromShape(r.shape),o=w.inferFromImplicitShape(a,i),u=w.sizeFromShape(o);w.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(r.dataId);let l=n.data.get(r.dataId);if(l.complexTensorInfos!=null){let c=l.complexTensorInfos.real,p=l.complexTensorInfos.imag;c.shape=o,p.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var hq={kernelName:Uo,backendName:"cpu",kernelFunc:ft};function M1(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;be([r,a],"matMul");let u=r.shape.length,l=a.shape.length,c=i?r.shape[u-2]:r.shape[u-1],p=o?a.shape[l-1]:a.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],h=o?a.shape[l-2]:a.shape[l-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),v=ou.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);w.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,c,d]:[g,d,c],k=o?[b,h,p]:[b,p,h],C=ft({inputs:{x:r},backend:n,attrs:{shape:x}}),$=ft({inputs:{x:a},backend:n,attrs:{shape:k}}),A=i?C.shape[1]:C.shape[2],E=i?C.shape[2]:C.shape[1],O=o?$.shape[1]:$.shape[2],R=Math.max(g,b),D=n.data.get(C.dataId).values,T=n.data.get($.dataId).values,L=w.computeStrides(C.shape),W=w.computeStrides($.shape),[q,j,X]=i?[L[0],1,L[1]]:[L[0],L[1],1],[Q,ne,J]=o?[1,W[1],W[0]]:[W[1],1,W[0]],se=E*O,te=_e([R,E,O],C.dtype),oe=te.values,re=n.blockSize;for(let le=0;le<R;le++)for(let ge=0;ge<E;ge+=re)for(let we=0;we<O;we+=re)for(let Ie=0;Ie<A;Ie+=re){let De=Math.min(ge+re,E),Le=Math.min(we+re,O),Ye=Math.min(Ie+re,A);for(let tt=ge;tt<De;tt++)for(let Ze=we;Ze<Le;Ze++){let nt=0;for(let Ce=Ie;Ce<Ye;Ce++){let ct=Math.min(le,g-1)*q,ot=Math.min(le,b-1)*J,an=D[ct+tt*j+Ce*X],$t=T[Ce*Q+Ze*ne+ot];nt+=an*$t}oe[le*se+(tt*O+Ze)]+=nt}}return n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo($),n.makeTensorInfo(v,te.dtype,te.values)}var fq={kernelName:Fa,backendName:"cpu",kernelFunc:M1};function mq(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=s,d,h,f,m=[];d=M1({inputs:{a:r,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(h=fo({inputs:{a:d,b:i},backend:n}),m.push(d),d=h),c&&(f=sp(n,d,c,o,p),m.push(d),d=f);for(let b of m)n.disposeIntermediateTensorInfo(b);return d}var gq={kernelName:ma,backendName:"cpu",kernelFunc:mq},bq=rt(wl,e=>Math.acos(e)),yq={kernelName:wl,backendName:"cpu",kernelFunc:bq},vq=rt(kl,e=>Math.acosh(e)),xq={kernelName:kl,backendName:"cpu",kernelFunc:vq};function wq(e){let{inputs:t,backend:n}=e,s=t;be(t,"addN");let r=s.map(o=>n.data.get(o.dataId).values),a=_e(s[0].shape,s[0].dtype),i=a.values;for(let o=0;o<s.length;o++){let u=r[o];for(let l=0;l<i.length;l++)i[l]+=u[l]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}var kq={kernelName:Ea,backendName:"cpu",kernelFunc:wq};function Sq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"all");let o=w.parseAxisParam(a,r.shape),u=o,l=I.getAxesPermutation(u,r.shape.length),c=r;l!=null&&(c=Dn({inputs:{x:r},backend:n,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,r.shape.length)),I.assertAxesAreInnerMostDims("all",u,c.shape.length);let[p,d]=I.computeOutAndReduceShapes(c.shape,u),h=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];v=v&&k}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(i){let b=I.expandShapeToKeepDim(p,o),y=ft({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var Iq={kernelName:Sl,backendName:"cpu",kernelFunc:Sq};function Cq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"any");let o=w.parseAxisParam(a,r.shape),u=o,l=I.getAxesPermutation(u,r.shape.length),c=r;l!=null&&(c=Dn({inputs:{x:r},backend:n,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,r.shape.length)),I.assertAxesAreInnerMostDims("any",u,c.shape.length);let[p,d]=I.computeOutAndReduceShapes(c.shape,u),h=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];v=v||k}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(i){let b=I.expandShapeToKeepDim(p,o),y=ft({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var Nq={kernelName:Il,backendName:"cpu",kernelFunc:Cq};function Tq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;be(r,"argMax");let i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=Dn({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[c,p]=I.computeOutAndReduceShapes(u.shape,i),d=w.sizeFromShape(c),h=w.makeZerosTypedArray(d,"int32"),f=w.sizeFromShape(p),m=n.data.get(u.dataId).values;for(let g=0;g<h.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let k=m[b+x];k>y&&(y=k,v=x)}h[g]=v}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var $q={kernelName:Ra,backendName:"cpu",kernelFunc:Tq};function _q(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;be(r,"argMin");let i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=Dn({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[c,p]=I.computeOutAndReduceShapes(u.shape,i),d=w.sizeFromShape(c),h=w.makeZerosTypedArray(d,"int32"),f=w.sizeFromShape(p),m=n.data.get(u.dataId).values;for(let g=0;g<h.length;++g){let b=g*f,y=m[b],v=0;for(let x=0;x<f;++x){let k=m[b+x];k<y&&(y=k,v=x)}h[g]=v}return l.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(c,"int32",h)}var Aq={kernelName:Cl,backendName:"cpu",kernelFunc:_q},Eq=rt(Nl,e=>Math.asin(e)),Rq={kernelName:Nl,backendName:"cpu",kernelFunc:Eq},Dq=rt(Tl,e=>Math.asinh(e)),Fq={kernelName:Tl,backendName:"cpu",kernelFunc:Dq},Oq=rt($l,e=>Math.atan(e)),Pq={kernelName:$l,backendName:"cpu",kernelFunc:Oq},Lq=Dt((e,t)=>Math.atan2(e,t)),zq=jt(Al,Lq),Mq={kernelName:Al,backendName:"cpu",kernelFunc:zq},Bq=rt(_l,e=>Math.atanh(e)),Vq={kernelName:_l,backendName:"cpu",kernelFunc:Bq};function Kv(e,t,n,s,r,a){let i=r.strideHeight,o=r.strideWidth,u=r.dilationHeight,l=r.dilationWidth,c=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,h=r.padInfo.left,f=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=_e(r.outShape,n),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],y=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let x=0;x<r.batchSize;++x){let k=x*b,C=x*s[0];for(let $=0;$<r.inChannels;++$)for(let A=0;A<r.outHeight;++A){let E=A*i-d,O=Math.max(0,E),R=Math.min(r.inHeight,c+E),D=k+A*y;for(let T=0;T<r.outWidth;++T){let L=T*o-h,W=Math.max(0,L),q=Math.min(r.inWidth,p+L),j=f,X=0,Q=0;for(let J=O;J<R;J+=u){let se=C+J*s[1];for(let te=W;te<q;te+=l){let oe=se+te*s[2],re=e[oe+$];a==="max"&&re>j?j=re:a==="avg"&&(X+=re,Q++)}if(isNaN(j))break}let ne=D+T*v+$;g[ne]=a==="avg"?X/Q:j}}}return m}function B1(e,t,n,s,r=!1,a=!1){let i=_e(s.outShape,"int32"),o=s.strideHeight,u=s.strideWidth,l=s.dilationHeight,c=s.dilationWidth,p=s.effectiveFilterHeight,d=s.effectiveFilterWidth,h=s.padInfo.top,f=s.padInfo.left,m=_e(t,n,e);for(let g=0;g<s.batchSize;++g)for(let b=0;b<s.inChannels;++b)for(let y=0;y<s.outHeight;++y){let v=y*o-h,x=v;for(;x<0;)x+=l;let k=Math.min(s.inHeight,p+v);for(let C=0;C<s.outWidth;++C){let $=C*u-f,A=$;for(;A<0;)A+=c;let E=Math.min(s.inWidth,d+$),O=Number.NEGATIVE_INFINITY,R=-1;for(let D=x;D<k;D+=l){let T=D-v;for(let L=A;L<E;L+=c){let W=L-$,q=m.get(g,D,L,b);q>O&&(O=q,r?R=a?((g*s.inHeight+D)*s.inWidth+L)*s.inChannels+b:(D*s.inWidth+L)*s.inChannels+b:R=T*d+W)}}i.set(R,g,y,C,b)}}return i}function V1(e,t,n,s,r,a){let i=r.strideDepth,o=r.strideHeight,u=r.strideWidth,l=r.dilationDepth,c=r.dilationHeight,p=r.dilationWidth,d=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,y=a==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=_e(r.outShape,n),x=v.values,k=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],C=r.outShape[2]*r.outShape[3]*r.outShape[4],$=r.outShape[3]*r.outShape[4],A=r.outShape[4];for(let E=0;E<r.batchSize;++E){let O=E*k,R=E*s[0];for(let D=0;D<r.inChannels;++D)for(let T=0;T<r.outDepth;++T){let L=T*i-m,W=L;for(;W<0;)W+=l;let q=Math.min(r.inDepth,d+L),j=O+T*C;for(let X=0;X<r.outHeight;++X){let Q=X*o-g,ne=Q;for(;ne<0;)ne+=c;let J=Math.min(r.inHeight,h+Q),se=j+X*$;for(let te=0;te<r.outWidth;++te){let oe=te*u-b,re=oe;for(;re<0;)re+=p;let le=Math.min(r.inWidth,f+oe),ge=se+te*A,we=y,Ie=0,De=0;for(let Ye=W;Ye<q;Ye+=l){let tt=R+Ye*s[1];for(let Ze=ne;Ze<J;Ze+=c){let nt=tt+Ze*s[2];for(let Ce=re;Ce<le;Ce+=p){let ct=nt+Ce*s[3],ot=e[ct+D];if(a==="max"&&ot>we?we=ot:a==="avg"&&(Ie+=ot,De++),isNaN(we))break}if(isNaN(we))break}if(isNaN(we))break}let Le=ge+D;x[Le]=a==="avg"?Ie/De:we}}}}return v}function Wq(e,t){let n=_e(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let b=0;b<t.outDepth;++b){let y=b*s-d,v=y;for(;v<0;)v+=i;let x=Math.min(t.inDepth,l+y);for(let k=0;k<t.outHeight;++k){let C=k*r-h,$=C;for(;$<0;)$+=o;let A=Math.min(t.inHeight,c+C);for(let E=0;E<t.outWidth;++E){let O=E*a-f,R=O;for(;R<0;)R+=u;let D=Math.min(t.inWidth,p+O),T=Number.NEGATIVE_INFINITY,L=-1;for(let W=v;W<x;W+=i){let q=W-y;for(let j=$;j<A;j+=o){let X=j-C;for(let Q=R;Q<D;Q+=u){let ne=Q-O,J=e.get(m,W,j,Q,g);J>=T&&(T=J,L=q*c*p+X*c+ne)}}}n.set(L,m,b,k,E,g)}}}return n}function Uq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;be(r,"avgPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(r.shape,a,i,l,o,u),p;if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))p=Us({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),f=Kv(d,r.shape,r.dtype,h,c,"avg");p=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return p}var Gq={kernelName:Da,backendName:"cpu",kernelFunc:Uq};function Hq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s;be(r,"avgPool3d");let c=I.computePool3DInfo(r.shape,a,i,1,o,u,l),p=n.data.get(r.dataId).values,d=V1(p,r.shape,r.dtype,w.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}var qq={kernelName:yp,backendName:"cpu",kernelFunc:Hq};function jq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;be([r,a],"avgPool3DGrad");let c=I.computePool3DInfo(a.shape,i,o,1,u,l),p=c.strideDepth,d=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,v=c.dilationWidth,x=c.effectiveFilterDepth,k=c.effectiveFilterHeight,C=c.effectiveFilterWidth,$=x-1-c.padInfo.front,A=C-1-c.padInfo.left,E=k-1-c.padInfo.top,O=_e(a.shape,"float32"),R=1/(f*m*g),D=n.bufferSync(r);for(let T=0;T<c.batchSize;++T)for(let L=0;L<c.inChannels;++L)for(let W=0;W<c.inDepth;++W)for(let q=0;q<c.inHeight;++q)for(let j=0;j<c.inWidth;++j){let X=W-$,Q=q-E,ne=j-A,J=0;for(let se=0;se<x;se+=b){let te=(X+se)/p;if(!(te<0||te>=c.outDepth||Math.floor(te)!==te))for(let oe=0;oe<k;oe+=y){let re=(Q+oe)/d;if(!(re<0||re>=c.outHeight||Math.floor(re)!==re))for(let le=0;le<C;le+=v){let ge=(ne+le)/h;if(ge<0||ge>=c.outWidth||Math.floor(ge)!==ge)continue;J+=D.get(T,te,re,ge,L)}}}O.set(J*R,T,W,q,j,L)}return n.makeTensorInfo(O.shape,O.dtype,O.values)}var Kq={kernelName:Xg,backendName:"cpu",kernelFunc:jq};function Xq(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;be([r,a],"avgPoolGrad");let{filterSize:o,strides:u,pad:l}=s,c=I.computePool2DInfo(i.shape,o,u,1,l),p=c.strideHeight,d=c.strideWidth,h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,v=y-1-c.padInfo.left,x=b-1-c.padInfo.top,k=_e(i.shape,"float32"),C=1/(h*f),$=n.data.get(r.dataId).values,A=_e(r.shape,"float32",$);for(let E=0;E<c.batchSize;++E)for(let O=0;O<c.inChannels;++O)for(let R=0;R<c.inHeight;++R)for(let D=0;D<c.inWidth;++D){let T=R-x,L=D-v,W=0;for(let q=0;q<b;q+=m){let j=(T+q)/p;if(!(j<0||j>=c.outHeight||Math.floor(j)!==j))for(let X=0;X<y;X+=g){let Q=(L+X)/d;if(Q<0||Q>=c.outWidth||Math.floor(Q)!==Q)continue;W+=A.get(E,j,Q,O)}}k.set(W*C,E,R,D,O)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}var Yq={kernelName:Kg,backendName:"cpu",kernelFunc:Xq};function Zq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:u}=t;w.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),be([r,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=s;l==null&&(l=.001);let c=n.data.get(r.dataId).values,p=n.data.get(o.dataId).values,d=n.data.get(u.dataId).values,h=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,b=h.length,y=d.length,v=p.length,x=0,k=0,C=0,$=0;for(let A=0;A<c.length;++A)m[A]=f[x++]+(c[A]-p[k++])*h[C++]/Math.sqrt(d[$++]+l),x>=g&&(x=0),k>=v&&(k=0),C>=b&&(C=0),$>=y&&($=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var Qq={kernelName:Ka,backendName:"cpu",kernelFunc:Zq};function Jq(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;be([r],"batchToSpaceND");let o=a.reduce((b,y)=>b*y),u=I.getReshaped(r.shape,a,o),l=I.getPermuted(u.length,a.length),c=I.getReshapedPermuted(r.shape,a,o),p=I.getSliceBeginCoords(i,a.length),d=I.getSliceSize(c,i,a.length),h=ft({inputs:{x:r},backend:n,attrs:{shape:u}}),f=Dn({inputs:{x:h},backend:n,attrs:{perm:l}}),m=ft({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Ca({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var e6={kernelName:xo,backendName:"cpu",kernelFunc:Jq};function t6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=zv(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}var n6={kernelName:Yg,backendName:"cpu",kernelFunc:t6};function s6(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=I.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var r6={kernelName:Zg,backendName:"cpu",kernelFunc:s6},a6=rt(Rr,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),i6={kernelName:Rr,backendName:"cpu",kernelFunc:a6},o6=e=>{let{x:t}=e.inputs,n=e.backend,s=new Float32Array(w.sizeFromShape(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let l=0;l<o.length;l++){let c=o[l],p=u[l];s[l]=Math.hypot(c,p)}return n.makeOutput(s,t.shape,"float32")},u6={kernelName:xp,backendName:"cpu",kernelFunc:o6};function mo(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}var l6={kernelName:Ip,backendName:"cpu",kernelFunc:mo};function go(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=I.computeOutShape(t.map(m=>m.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(m=>w.sizeFromShape(m.shape)>0);if(o.length===1)return Us({inputs:{x:o[0]},backend:n});let u=o.map(m=>m.shape);if(I.assertParamsConsistent(u,a),o[0].dtype==="complex64"){let m=o.map(x=>Ia({inputs:{input:x},backend:n})),g=o.map(x=>mo({inputs:{input:x},backend:n})),b=go({inputs:m,backend:n,attrs:{axis:a}}),y=go({inputs:g,backend:n,attrs:{axis:a}}),v=Vn({inputs:{real:b,imag:y},backend:n});return m.forEach(x=>n.disposeIntermediateTensorInfo(x)),g.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),v}let l=o.map(m=>{let g=w.sizeFromShape(m.shape.slice(a));return ft({inputs:{x:m},backend:n,attrs:{shape:[-1,g]}})}),c=l.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));i=I.computeOutShape(l.map(m=>m.shape),1);let p=l[0].shape[0]===1,d=Mv(c,i,t[0].dtype,p),h=I.computeOutShape(o.map(m=>m.shape),a),f=n.makeTensorInfo(h,t[0].dtype,d);return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var c6={kernelName:wo,backendName:"cpu",kernelFunc:go};function W1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s;be([r,a],"conv2d");let p=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,p),h=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,v=d.dataFormat==="channelsLast",x=new Ht(d.outShape,r.dtype),k=w.computeStrides(r.shape),C=w.computeStrides(a.shape),$=k[0],A=v?k[1]:k[2],E=v?k[2]:1,O=v?1:k[1],R=x.strides[0],D=v?x.strides[1]:x.strides[2],T=v?x.strides[2]:1,L=v?1:x.strides[1],W=n.data.get(r.dataId).values,q=n.data.get(a.dataId).values,j=x.values;for(let X=0;X<d.batchSize;++X){let Q=X*$,ne=X*R;for(let J=0;J<d.outHeight;++J){let se=ne+J*D,te=J*d.strideHeight-y;for(let oe=0;oe<h;++oe){let re=te+oe*m;if(re<0||re>=d.inHeight)continue;let le=oe*C[0],ge=Q+re*A;for(let we=0;we<d.outWidth;++we){let Ie=se+we*T,De=we*d.strideWidth-b;for(let Le=0;Le<f;++Le){let Ye=De+Le*g;if(Ye<0||Ye>=d.inWidth)continue;let tt=le+Le*C[1],Ze=ge+Ye*E,nt=tt;for(let Ce=0;Ce<d.inChannels;++Ce){let ct=W[Ze+Ce*O];for(let ot=0;ot<d.outChannels;++ot)j[Ie+ot*L]+=ct*q[nt+ot];nt+=d.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,j)}var d6={kernelName:La,backendName:"cpu",kernelFunc:W1};function p6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=s;be([r,a],"conv2dBackpropFilter");let p=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(r.shape,c,i,1,o,l,!1,p),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=d,b=d.dataFormat==="channelsLast",y=new Ht(d.filterShape,"float32"),v=d.padInfo.left,x=d.padInfo.top,k=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,$=new Ht(r.shape,r.dtype,k),A=new Ht(a.shape,a.dtype,C);for(let E=0;E<m;++E){let O=Math.max(0,Math.ceil((x-E)/h)),R=Math.min(d.outHeight,(d.inHeight+x-E)/h);for(let D=0;D<g;++D){let T=Math.max(0,Math.ceil((v-D)/f)),L=Math.min(d.outWidth,(d.inWidth+v-D)/f);for(let W=0;W<d.inChannels;++W)for(let q=0;q<d.outChannels;++q){let j=0;for(let X=0;X<d.batchSize;++X)for(let Q=O;Q<R;++Q){let ne=E+Q*h-x;for(let J=T;J<L;++J){let se=D+J*f-v;b?j+=$.get(X,ne,se,W)*A.get(X,Q,J,q):j+=$.get(X,W,ne,se)*A.get(X,q,Q,J)}}y.set(j,E,D,W,q)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var h6={kernelName:Qg,backendName:"cpu",kernelFunc:p6};function f6(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s;be([r,a],"conv2dBackpropInput");let p=w.computeStrides(a.shape),d=w.computeStrides(r.shape),h=I.convertConv2DDataFormat(l),f=I.computeConv2DInfo(i,a.shape,o,1,u,c,!1,h),m=new Ht(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,y=n.data.get(a.dataId).values,[v,x,k]=p,{batchSize:C,filterHeight:$,filterWidth:A,inChannels:E,inHeight:O,inWidth:R,outChannels:D,outHeight:T,outWidth:L,strideHeight:W,strideWidth:q}=f;h=f.dataFormat;let j=$-1-f.padInfo.top,X=A-1-f.padInfo.left,Q=h==="channelsLast",ne=m.strides[0],J=Q?m.strides[1]:m.strides[2],se=Q?m.strides[2]:1,te=Q?1:m.strides[1],oe=d[0],re=Q?d[1]:d[2],le=Q?d[2]:1,ge=Q?1:d[1];for(let we=0;we<C;++we)for(let Ie=0;Ie<E;++Ie)for(let De=0;De<O;++De){let Le=De-j,Ye=Math.max(0,Math.ceil(Le/W)),tt=Math.min(T,($+Le)/W);for(let Ze=0;Ze<R;++Ze){let nt=Ze-X,Ce=Math.max(0,Math.ceil(nt/q)),ct=Math.min(L,(A+nt)/q),ot=0;for(let $t=Ye;$t<tt;++$t){let On=$t*W-Le;for(let Ft=Ce;Ft<ct;++Ft){let on=Ft*q-nt,Pn=oe*we+re*$t+le*Ft,Ln=v*($-1-On)+x*(A-1-on)+k*Ie;for(let sn=0;sn<D;++sn){let qn=b[Pn+ge*sn],un=y[Ln+sn];ot+=qn*un}}}let an=ne*we+J*De+se*Ze+te*Ie;g[an]=ot}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var m6={kernelName:za,backendName:"cpu",kernelFunc:f6};function g6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s;be([r,a],"conv3d");let l=I.computeConv3DInfo(r.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:p,filterWidth:d,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=l,b=g.front,y=g.left,v=g.top,x=new Ht(l.outShape,r.dtype),k=n.data.get(r.dataId).values,C=n.data.get(a.dataId).values,$=x.values,A=w.computeStrides(r.shape),E=w.computeStrides(a.shape);for(let O=0;O<l.batchSize;++O){let R=O*A[0],D=O*x.strides[0];for(let T=0;T<l.outDepth;++T){let L=D+T*x.strides[1],W=T*l.strideDepth-b;for(let q=0;q<c;++q){let j=W+q*h;if(j<0||j>=l.inDepth)continue;let X=q*E[0],Q=R+j*A[1];for(let ne=0;ne<l.outHeight;++ne){let J=L+ne*x.strides[2],se=ne*l.strideHeight-v;for(let te=0;te<p;++te){let oe=se+te*f;if(oe<0||oe>=l.inHeight)continue;let re=X+te*E[1],le=Q+oe*A[2];for(let ge=0;ge<l.outWidth;++ge){let we=J+ge*l.outChannels,Ie=ge*l.strideWidth-y;for(let De=0;De<d;++De){let Le=Ie+De*m;if(Le<0||Le>=l.inWidth)continue;let Ye=re+De*E[2],tt=le+Le*l.inChannels,Ze=Ye;for(let nt=0;nt<l.inChannels;++nt){let Ce=k[tt+nt];for(let ct=0;ct<l.outChannels;++ct)$[we+ct]+=Ce*C[Ze+ct];Ze+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var b6={kernelName:wp,backendName:"cpu",kernelFunc:g6};function y6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s;be([r,a],"conv3dBackpropFilterV2");let l=w.computeStrides(r.shape),c=w.computeStrides(a.shape),p=I.computeConv3DInfo(r.shape,u,i,1,o),d=p.strideDepth,h=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,b=p.filterWidth,y=new Ht(p.filterShape,"float32"),v=y.values,[x,k,C,$]=y.strides,A=n.data.get(a.dataId).values,[E,O,R,D]=c,T=n.data.get(r.dataId).values,[L,W,q,j]=l,X=p.padInfo.front,Q=p.padInfo.left,ne=p.padInfo.top;for(let J=0;J<m;++J){let se=Math.max(0,Math.ceil((X-J)/d)),te=Math.min(p.outDepth,(p.inDepth+X-J)/d),oe=J*x;for(let re=0;re<g;++re){let le=Math.max(0,Math.ceil((ne-re)/h)),ge=Math.min(p.outHeight,(p.inHeight+ne-re)/h),we=re*k+oe;for(let Ie=0;Ie<b;++Ie){let De=Math.max(0,Math.ceil((Q-Ie)/f)),Le=Math.min(p.outWidth,(p.inWidth+Q-Ie)/f),Ye=Ie*C+we;for(let tt=0;tt<p.inChannels;++tt){let Ze=tt*$+Ye;for(let nt=0;nt<p.outChannels;++nt){let Ce=0;for(let ct=0;ct<p.batchSize;++ct){let ot=ct*L,an=ct*E;for(let $t=se;$t<te;++$t){let Ft=(J+$t*d-X)*W+ot,on=$t*O+an;for(let Pn=le;Pn<ge;++Pn){let sn=(re+Pn*h-ne)*q+Ft,qn=Pn*R+on;for(let un=De;un<Le;++un){let qs=(Ie+un*f-Q)*j+sn,Oi=un*D+qn;Ce+=T[qs+tt]*A[Oi+nt]}}}}v[Ze+nt]=Ce}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var v6={kernelName:Jg,backendName:"cpu",kernelFunc:y6};function x6(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s;be([r],"conv3dBackpropInputV2");let l=w.computeStrides(r.shape),c=w.computeStrides(a.shape),p=I.computeConv3DInfo(u,a.shape,o,1,i),d=new Ht(p.inShape,"float32"),h=d.values,[f,m,g,b]=d.strides,y=n.data.get(r.dataId).values,[v,x,k,C]=l,$=n.data.get(a.dataId).values,[A,E,O,R]=c,{batchSize:D,filterDepth:T,filterHeight:L,filterWidth:W,inChannels:q,inDepth:j,inHeight:X,inWidth:Q,outChannels:ne,outDepth:J,outHeight:se,outWidth:te,strideDepth:oe,strideHeight:re,strideWidth:le}=p,ge=T-1-p.padInfo.front,we=L-1-p.padInfo.top,Ie=W-1-p.padInfo.left;for(let De=0;De<D;++De)for(let Le=0;Le<q;++Le)for(let Ye=0;Ye<j;++Ye){let tt=Ye-ge,Ze=Math.max(0,Math.ceil(tt/oe)),nt=Math.min(J,(T+tt)/oe);for(let Ce=0;Ce<X;++Ce){let ct=Ce-we,ot=Math.max(0,Math.ceil(ct/re)),an=Math.min(se,(L+ct)/re);for(let $t=0;$t<Q;++$t){let On=$t-Ie,Ft=Math.max(0,Math.ceil(On/le)),on=Math.min(te,(W+On)/le),Pn=0;for(let Ln=Ze;Ln<nt;++Ln){let sn=Ln*oe-tt;for(let qn=ot;qn<an;++qn){let un=qn*re-ct;for(let Hs=Ft;Hs<on;++Hs){let qs=Hs*le-On,Oi=v*De+x*Ln+k*qn+C*Hs,lr=A*(T-1-sn)+E*(L-1-un)+O*(W-1-qs)+R*Le;for(let js=0;js<ne;++js){let $u=y[Oi+js],Pi=$[lr+js];Pn+=$u*Pi}}}}h[f*De+m*Ye+g*Ce+b*$t+Le]=Pn}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var w6={kernelName:eb,backendName:"cpu",kernelFunc:x6},k6=rt(Ma,e=>Math.cos(e)),S6={kernelName:Ma,backendName:"cpu",kernelFunc:k6},I6=rt(Ba,e=>Math.cosh(e)),C6={kernelName:Ba,backendName:"cpu",kernelFunc:I6};function N6(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,[c,p,d,h]=r.shape,f=a.shape[0],[m,g]=o,b=_e([f,m,g,h],"float32"),y=n.data.get(a.dataId).values,v=n.data.get(i.dataId).values,x=n.data.get(r.dataId).values,k=w.computeStrides(r.shape),C=w.computeStrides(b.shape);for(let $=0;$<f;$++){let A=$*4,E=y[A],O=y[A+1],R=y[A+2],D=y[A+3],T=v[$];if(T>=c)continue;let L=m>1?(R-E)*(p-1)/(m-1):0,W=g>1?(D-O)*(d-1)/(g-1):0;for(let q=0;q<m;q++){let j=m>1?E*(p-1)+q*L:.5*(E+R)*(p-1);if(j<0||j>p-1){for(let X=0;X<g;X++)for(let Q=0;Q<h;Q++){let ne=Q+X*C[2]+q*C[1]+$*C[0];b.values[ne]=l}continue}if(u==="bilinear"){let X=Math.floor(j),Q=Math.ceil(j),ne=j-X;for(let J=0;J<g;J++){let se=g>1?O*(d-1)+J*W:.5*(O+D)*(d-1);if(se<0||se>d-1){for(let le=0;le<h;le++){let ge=le+J*C[2]+q*C[1]+$*C[0];b.values[ge]=l}continue}let te=Math.floor(se),oe=Math.ceil(se),re=se-te;for(let le=0;le<h;le++){let ge=le+te*k[2]+X*k[1]+T*k[0],we=x[ge];ge=le+oe*k[2]+X*k[1]+T*k[0];let Ie=x[ge];ge=le+te*k[2]+Q*k[1]+T*k[0];let De=x[ge];ge=le+oe*k[2]+Q*k[1]+T*k[0];let Le=x[ge],Ye=we+(Ie-we)*re,tt=De+(Le-De)*re;ge=le+J*C[2]+q*C[1]+$*C[0],b.values[ge]=Ye+(tt-Ye)*ne}}}else for(let X=0;X<g;++X){let Q=g>1?O*(d-1)+X*W:.5*(O+D)*(d-1);if(Q<0||Q>d-1){for(let se=0;se<h;se++){let te=se+X*C[2]+q*C[1]+$*C[0];b.values[te]=l}continue}let ne=Math.round(Q),J=Math.round(j);for(let se=0;se<h;se++){let te=se+ne*k[2]+J*k[1]+T*k[0],oe=se+X*C[2]+q*C[1]+$*C[0];b.values[oe]=x[te]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var T6={kernelName:So,backendName:"cpu",kernelFunc:N6};function $6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;be(r,"cumprod");let u=I.getAxesPermutation([a],r.shape.length),l=r;u!=null&&(l=Dn({inputs:{x:r},backend:n,attrs:{perm:u}}));let c=I.getInnerMostAxes(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);let p=bn(l.dtype,"int32"),d=w.makeOnesTypedArray(w.sizeFromShape(l.shape),p),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(b,y)=>b+f-y-1:(b,y)=>b+y;for(let b=0;b<h.length;b+=f)for(let y=0;y<f;y++){let v=m(b,y);if(y===0)d[v]=i?1:h[v];else{let x=m(b,y-1);d[v]=i?h[x]*d[x]:h[v]*d[x]}}let g=n.makeTensorInfo(l.shape,p,d);if(u!=null){let b=I.getUndoAxesPermutation(u),y=Dn({inputs:{x:g},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),y}return g}var _6={kernelName:ko,backendName:"cpu",kernelFunc:$6};function A6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;be(r,"cumsum");let u=I.getAxesPermutation([a],r.shape.length),l=r;u!=null&&(l=Dn({inputs:{x:r},backend:n,attrs:{perm:u}}));let c=I.getInnerMostAxes(1,r.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);let p=bn(l.dtype,"int32"),d=w.makeZerosTypedArray(w.sizeFromShape(l.shape),p),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(b,y)=>b+f-y-1:(b,y)=>b+y;for(let b=0;b<h.length;b+=f)for(let y=0;y<f;y++){let v=m(b,y);if(y===0)d[v]=i?0:h[v];else{let x=m(b,y-1);d[v]=i?h[x]+d[x]:h[v]+d[x]}}let g=n.makeTensorInfo(l.shape,p,d);if(u!=null){let b=I.getUndoAxesPermutation(u),y=Dn({inputs:{x:g},backend:n,attrs:{perm:b}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),y}return g}var E6={kernelName:Va,backendName:"cpu",kernelFunc:A6};function R6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(r.shape.length===1){let u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=zv(u,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,c)}else if(r.shape.length===2){let u=n.bufferSync(r),l=n.bufferSync(a),c=t1(u,l,i,o);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var D6={kernelName:tb,backendName:"cpu",kernelFunc:R6};function F6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;w.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=r.shape[0],u=r.shape[1],l=r.shape[2],c=r.shape[3],p=u*a,d=l*a,h=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*p*d*h),g=0;for(let b=0;b<o;++b)for(let y=0;y<p;++y){let v=Math.floor(y/a),x=y%a;for(let k=0;k<d;++k){let C=Math.floor(k/a),$=k%a,A=(x*a+$)*h;for(let E=0;E<h;++E){let R=E+A+c*(C+l*(v+u*b));m[g++]=f[R]}}}return n.makeTensorInfo([o,p,d,h],r.dtype,m)}var O6={kernelName:Io,backendName:"cpu",kernelFunc:F6};function U1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s;be([r,a],"depthwiseConv2DNative");let c=w.computeStrides(r.shape),p=w.computeStrides(a.shape),d=u;d==null&&(d=[1,1]),w.assert(I.eitherStridesOrDilationsAreOne(i,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`);let h=I.computeConv2DInfo(r.shape,a.shape,i,d,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:y}=h,v=y.left,x=y.top,k=h.outChannels/h.inChannels,C=new Ht(h.outShape,r.dtype),$=n.data.get(r.dataId).values,A=n.data.get(a.dataId).values,E=C.values;for(let O=0;O<h.batchSize;++O){let R=O*c[0],D=O*C.strides[0];for(let T=0;T<h.outHeight;++T){let L=D+T*C.strides[1],W=T*h.strideHeight-x;for(let q=0;q<f;++q){let j=W+q*g;if(j<0||j>=h.inHeight)continue;let X=q*p[0],Q=R+j*c[1];for(let ne=0;ne<h.outWidth;++ne){let J=L+ne*C.strides[2],se=ne*h.strideWidth-v;for(let te=0;te<m;++te){let oe=se+te*b;if(oe<0||oe>=h.inWidth)continue;let re=X+te*p[1],le=Q+oe*h.inChannels,ge=J,we=re;for(let Ie=0;Ie<h.inChannels;++Ie){let De=$[le+Ie];for(let Le=0;Le<k;++Le)E[ge+Le]+=De*A[we+Le];ge+=k,we+=k}}}}}}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var P6={kernelName:Wa,backendName:"cpu",kernelFunc:U1};function L6(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=s;be([r,a],"depthwiseConv2dNativeBackpropFilter");let p=I.computeConv2DInfo(r.shape,c,i,o,u,l,!0),{strideHeight:d,strideWidth:h,filterHeight:f,filterWidth:m}=p,g=new Ht(p.filterShape,"float32"),b=p.padInfo.left,y=p.padInfo.top,v=p.outChannels/p.inChannels,x=n.data.get(r.dataId).values,k=new Ht(r.shape,r.dtype,x),C=n.data.get(a.dataId).values,$=new Ht(a.shape,a.dtype,C);for(let A=0;A<f;++A){let E=Math.max(0,Math.ceil((y-A)/d)),O=Math.min(p.outHeight,(p.inHeight+y-A)/d);for(let R=0;R<m;++R){let D=Math.max(0,Math.ceil((b-R)/h)),T=Math.min(p.outWidth,(p.inWidth+b-R)/h);for(let L=0;L<p.outChannels;++L){let W=Math.trunc(L/v),q=L%v,j=0;for(let X=0;X<p.batchSize;++X)for(let Q=E;Q<O;++Q){let ne=A+Q*d-y;for(let J=D;J<T;++J){let se=R+J*h-b;j+=k.get(X,ne,se,W)*$.get(X,Q,J,L)}}g.set(j,A,R,W,q)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var z6={kernelName:nb,backendName:"cpu",kernelFunc:L6};function M6(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=s;be([r,a],"depthwiseConv2DNativeBackpropInput");let p=w.computeStrides(r.shape),d=w.computeStrides(a.shape),h=I.computeConv2DInfo(c,a.shape,i,o,u,l,!0),f=new Ht(h.inShape,"float32"),m=f.values,[g,b,y]=f.strides,v=n.data.get(r.dataId).values,[x,k,C]=p,$=n.data.get(a.dataId).values,[A,E,O]=d,{batchSize:R,filterHeight:D,filterWidth:T,inChannels:L,inHeight:W,inWidth:q,outChannels:j,outHeight:X,outWidth:Q,strideHeight:ne,strideWidth:J}=h,se=D-1-h.padInfo.top,te=T-1-h.padInfo.left,oe=j/L;for(let re=0;re<R;++re)for(let le=0;le<L;++le)for(let ge=0;ge<W;++ge){let we=ge-se,Ie=Math.max(0,Math.ceil(we/ne)),De=Math.min(X,(D+we)/ne);for(let Le=0;Le<q;++Le){let Ye=Le-te,tt=Math.max(0,Math.ceil(Ye/J)),Ze=Math.min(Q,(T+Ye)/J),nt=0;for(let Ce=Ie;Ce<De;++Ce){let ct=Ce*ne-we;for(let ot=tt;ot<Ze;++ot){let an=ot*J-Ye,$t=x*re+k*Ce+C*ot,On=A*(D-1-ct)+E*(T-1-an)+O*le;for(let Ft=0;Ft<oe;++Ft){let on=le*oe+Ft,Pn=v[$t+on],Ln=$[On+Ft];nt+=Pn*Ln}}}m[g*re+b*ge+y*Le+le]=nt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var B6={kernelName:sb,backendName:"cpu",kernelFunc:M6};function V6(e){let{inputs:t,backend:n}=e,{x:s}=t,r=w.sizeFromShape(s.shape),a=n.data.get(s.dataId).values,i=_e([r,r],s.dtype),o=i.values;for(let l=0;l<a.length;l++)o[l*r+l]=a[l];let u=[...s.shape,...s.shape];return n.makeTensorInfo(u,i.dtype,i.values)}var W6={kernelName:rb,backendName:"cpu",kernelFunc:V6},U6={kernelName:kp,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(s.dataId).values,c=s.shape.length,p=u.data.get(r.dataId).values,d=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:y,padInfo:v,strideHeight:x,strideWidth:k,filterHeight:C,filterWidth:$,dilationHeight:A,dilationWidth:E,outShape:O}=I.computeDilation2DInfo(s.shape,r.shape,a,i,"NHWC",o),R=w.sizeFromShape(O),D=O.length,T=w.getArrayFromDType(s.dtype,R);for(let W=0;W<h;++W)for(let q=0;q<b;++q){let j=q*x-v.top;for(let X=0;X<y;++X){let Q=X*k-v.left;for(let ne=0;ne<g;++ne){let J=Number.MIN_SAFE_INTEGER;for(let te=0;te<C;++te){let oe=j+te*A;if(oe>=0&&oe<f)for(let re=0;re<$;++re){let le=Q+re*E;if(le>=0&&le<m){let ge=w.locToIndex([W,oe,le,ne],c,w.computeStrides(s.shape)),we=w.locToIndex([te,re,ne],d,w.computeStrides(r.shape)),Ie=l[ge]+p[we];Ie>J&&(J=Ie)}}}let se=w.locToIndex([W,q,X,ne],D,w.computeStrides(O));T[se]=J}}}return{dataId:u.write(w.toTypedArray(T,s.dtype),O,s.dtype),shape:O,dtype:s.dtype}}},G6={kernelName:Bm,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=w.toNestedArray(s.shape,l.data.get(s.dataId).values),p=w.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:C,dilationHeight:$,dilationWidth:A,outShape:E}=I.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);w.assert(a.rank===E.length,()=>`Error in ${Bm}, dy must have the same rank as output ${E.length}, but got ${a.rank}`);let O=w.toNestedArray(E,l.data.get(a.dataId).values),R=w.makeZerosNestedTypedArray(r.shape,r.dtype);for(let T=0;T<d;++T)for(let L=0;L<g;++L){let W=L*v-y.top;for(let q=0;q<b;++q){let j=q*x-y.left;for(let X=0;X<m;++X){let Q=Number.MIN_SAFE_INTEGER,ne=0,J=0;for(let se=0;se<k;++se){let te=W+se*$;if(te>=0&&te<h)for(let oe=0;oe<C;++oe){let re=j+oe*A;if(re>=0&&re<f){let le=c[T][te][re][X]+p[se][oe][X];le>Q&&(Q=le,ne=se,J=oe)}}}R[ne][J][X]+=O[T][L][q][X]}}}return{dataId:l.write(w.toTypedArray(R,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},H6={kernelName:Mm,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=w.toNestedArray(s.shape,l.data.get(s.dataId).values),p=w.toNestedArray(r.shape,l.data.get(r.dataId).values),{batchSize:d,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:y,strideHeight:v,strideWidth:x,filterHeight:k,filterWidth:C,dilationHeight:$,dilationWidth:A,outShape:E}=I.computeDilation2DInfo(s.shape,r.shape,i,o,"NHWC",u);w.assert(a.rank===E.length,()=>`Error in ${Mm}, dy must have the same rank as output ${E.length}, but got ${a.rank}`);let O=w.toNestedArray(E,l.data.get(a.dataId).values),R=w.makeZerosNestedTypedArray(s.shape,s.dtype);for(let T=0;T<d;++T)for(let L=0;L<g;++L){let W=L*v-y.top;for(let q=0;q<b;++q){let j=q*x-y.left;for(let X=0;X<m;++X){let Q=Number.MIN_SAFE_INTEGER,ne=W<0?0:W,J=j<0?0:j;for(let se=0;se<k;++se){let te=W+se*$;if(te>=0&&te<h)for(let oe=0;oe<C;++oe){let re=j+oe*A;if(re>=0&&re<f){let le=c[T][te][re][X]+p[se][oe][X];le>Q&&(Q=le,ne=te,J=re)}}}R[T][ne][J][X]+=O[T][L][q][X]}}}return{dataId:l.write(w.toTypedArray(R,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};function dc(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"sum");let o;r.dtype==="bool"?o=$r({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):o=Us({inputs:{x:r},backend:n});let u=o.shape.length,l=w.parseAxisParam(a,o.shape),c=I.getAxesPermutation(l,u),p=l,d=o;c!=null&&(d=Dn({inputs:{x:o},backend:n,attrs:{perm:c}}),p=I.getInnerMostAxes(p.length,u)),I.assertAxesAreInnerMostDims("sum",p,d.shape.length);let[h,f]=I.computeOutAndReduceShapes(d.shape,p),m=I.upcastType(d.dtype,"int32"),g=tp(n,h,m),b=w.sizeFromShape(f),y=n.data.get(g.dataId).values,v=n.data.get(d.dataId).values;for(let x=0;x<y.length;++x){let k=x*b,C=0;for(let $=0;$<b;++$)C+=v[k+$];y[x]=C}if(i){let x=I.expandShapeToKeepDim(g.shape,l),k=g;g=ft({inputs:{x:g},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(k)}return n.disposeIntermediateTensorInfo(o),c!=null&&n.disposeIntermediateTensorInfo(d),g}var q6={kernelName:vi,backendName:"cpu",kernelFunc:dc};function j6(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=I.decodeEinsumEquation(r,a.length);I.checkEinsumDimSizes(i.length,u,a);let{path:l,steps:c}=I.getEinsumComputePath(o,u),p=c.length,d=null,h=i.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:b,expandDims:y}=I.getEinsumPermutation(h,u[g]),v;I.isIdentityPermutation(b)?v=a[g]:(v=Dn({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=ft({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),d===null?d=v:(d=Sh({inputs:{a:v,b:d},backend:n}),f.push(d))}m<p-1&&(l[m]>=0&&(d=dc({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var K6={kernelName:Sp,backendName:"cpu",kernelFunc:j6};function X6(e){let{inputs:t,backend:n}=e,{dy:s,y:r}=t;be([s,r],"eluGrad");let a=new Float32Array(w.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let u=0;u<i.length;++u){let l=i[u];l>=1?a[u]=o[u]:a[u]=o[u]*(l+1)}return n.makeTensorInfo(r.shape,"float32",a)}var Y6={kernelName:ab,backendName:"cpu",kernelFunc:X6},Z6=I.ERF_P,Q6=I.ERF_A1,J6=I.ERF_A2,ej=I.ERF_A3,tj=I.ERF_A4,nj=I.ERF_A5,sj=rt(El,e=>{let t=Math.sign(e),n=Math.abs(e),s=1/(1+Z6*n);return t*(1-((((nj*s+tj)*s+ej)*s+J6)*s+Q6)*s*Math.exp(-n*n))}),rj={kernelName:El,backendName:"cpu",kernelFunc:sj};function rp(e){let{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice(),u=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),ft({inputs:{x:r},backend:n,attrs:{shape:o}})}var aj={kernelName:No,backendName:"cpu",kernelFunc:rp},ij=Dt((e,t)=>e/t),Xv=jt(Ua,ij),Tg={kernelName:Ua,backendName:"cpu",kernelFunc:Xv};function G1(e,t,n){let s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[r,a],c=w.sizeFromShape(l),p=w.getTypedArrayFromDType("float32",c),d=w.getTypedArrayFromDType("float32",c);for(let g=0;g<r;g++){let b=Ca({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,a]}}),y=Ca({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,a]}}),v=Vn({inputs:{real:b,imag:y},backend:n}),{real:x,imag:k}=oj(v,t,n),C=I.mergeRealAndImagArrays(x,k);for(let $=0;$<a;$++){let A=I.getComplexWithIndex(C,$);p[g*a+$]=A.real,d[g*a+$]=A.imag}n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(v)}let h=n.makeTensorInfo(l,"float32",p),f=n.makeTensorInfo(l,"float32",d),m=Vn({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function oj(e,t,n){let s=w.sizeFromShape(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(uj(s)){let o=$g(a,i,s,t,n),u=[e.shape[0],e.shape[1]];if(t){let l=n.makeTensorInfo(u,"float32",o.real),c=n.makeTensorInfo(u,"float32",o.imag),p=n.makeTensorInfo([],"float32",w.createScalarValue(s,"float32")),d=Us({inputs:{x:p},backend:n}),h=Tg.kernelFunc({inputs:{a:l,b:p},backend:n}),f=Tg.kernelFunc({inputs:{a:c,b:d},backend:n}),m=n.data.get(h.dataId).values,g=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return o}else{let o=I.mergeRealAndImagArrays(a,i),u=lj(o,s,t);return I.splitRealAndImagArrays(u)}}function uj(e){return(e&e-1)===0}function $g(e,t,n,s,r){if(n===1)return{real:e,imag:t};let a=I.mergeRealAndImagArrays(e,t),i=n/2,o=I.complexWithEvenIndex(a),u=o.real,l=o.imag,c=[u.length],p=r.makeTensorInfo(c,"float32",u),d=r.makeTensorInfo(c,"float32",l),h=Vn({inputs:{real:p,imag:d},backend:r}),f=I.complexWithOddIndex(a),m=f.real,g=f.imag,b=[m.length],y=r.makeTensorInfo(b,"float32",m),v=r.makeTensorInfo(b,"float32",g),x=Vn({inputs:{real:y,imag:v},backend:r}),k=$g(u,l,i,s,r),C=k.real,$=k.imag,A=[C.length],E=r.makeTensorInfo(A,"float32",C),O=r.makeTensorInfo(A,"float32",$),R=Vn({inputs:{real:E,imag:O},backend:r}),D=$g(m,g,i,s,r),T=D.real,L=D.imag,W=[T.length],q=r.makeTensorInfo(W,"float32",T),j=r.makeTensorInfo(W,"float32",L),X=Vn({inputs:{real:q,imag:j},backend:r}),Q=I.exponents(n,s),ne=[Q.real.length],J=r.makeTensorInfo(ne,"float32",Q.real),se=r.makeTensorInfo(ne,"float32",Q.imag),te=Vn({inputs:{real:J,imag:se},backend:r}),oe=Sh({inputs:{a:te,b:X},backend:r}),re=fo({inputs:{a:R,b:oe},backend:r}),le=jv({inputs:{a:R,b:oe},backend:r}),ge=Ia({inputs:{input:re},backend:r}),we=Ia({inputs:{input:le},backend:r}),Ie=mo({inputs:{input:re},backend:r}),De=mo({inputs:{input:le},backend:r}),Le=go({inputs:[ge,we],backend:r,attrs:{axis:0}}),Ye=go({inputs:[Ie,De],backend:r,attrs:{axis:0}}),tt=r.data.get(Le.dataId).values,Ze=r.data.get(Ye.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(R),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(se),r.disposeIntermediateTensorInfo(te),r.disposeIntermediateTensorInfo(oe),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(le),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(De),r.disposeIntermediateTensorInfo(Le),r.disposeIntermediateTensorInfo(Ye),{real:tt,imag:Ze}}function lj(e,t,n){let s=new Float32Array(t*2);for(let r=0;r<t;r++){let a=0,i=0;for(let o=0;o<t;o++){let u=I.exponent(r*o,t,n),l=I.getComplexWithIndex(e,o);a+=l.real*u.real-l.imag*u.imag,i+=l.real*u.imag+l.imag*u.real}n&&(a/=t,i/=t),I.assignToTypedArray(s,a,i,r)}return s}function cj(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=r/a,o=ft({inputs:{x:s},backend:n,attrs:{shape:[i,a]}}),u=G1(o,!1,n),l=ft({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}var dj={kernelName:ib,backendName:"cpu",kernelFunc:cj};function Yv(e){let{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||w.inferDtype(r),o=w.getArrayFromDType(i,w.sizeFromShape(s));return hj(o,r,i),t.makeTensorInfo(s,i,o)}var pj={kernelName:Rl,backendName:"cpu",kernelFunc:Yv};function hj(e,t,n){e.fill(t)}var fj={kernelName:$o,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,r=n,a=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[i,o,u,l]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<i;d++){let h=d*u*o*l;for(let f=0;f<o;f++){let m=f*(u*l);for(let g=0;g<u;g++){let b=g*l;for(let y=0;y<l;y++){let v=Math.round(u-g-1),x=h+m+b+y,k=c[x];if(v>=0&&v<u){let C=v*l,$=h+m+C+y;k=c[$]}a[x]=k}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},mj=Dt((e,t)=>Math.floor(e/t)),gj=jt(ja,mj,null,"int32"),bj={kernelName:ja,backendName:"cpu",kernelFunc:gj};function yj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=W1({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d}});if(i){let g=m;if(c==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let b=ft({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=fo({inputs:{a:m,b},backend:n}),n.disposeIntermediateTensorInfo(b)}else m=fo({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(g)}if(h){let g=m;if(c==="NCHW"&&h==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let b=ft({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=sp(n,m,h,b,f),n.disposeIntermediateTensorInfo(b)}else m=sp(n,m,h,o,f);n.disposeIntermediateTensorInfo(g)}return m}var vj={kernelName:ga,backendName:"cpu",kernelFunc:yj};function xj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=U1({inputs:{x:r,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d}});if(i){let g=m;m=fo({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(h){let g=m;m=sp(n,m,h,o,f),n.disposeIntermediateTensorInfo(g)}return m}var wj={kernelName:ba,backendName:"cpu",kernelFunc:xj};function kj(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=w.sizeFromShape(s.shape),i=r.shape,o=i[i.length-1],[u,l,c,p]=I.prepareAndValidate(s,r);if(l===0)return n.makeTensorInfo(u,s.dtype,[]);let d=n.data.get(r.dataId).values,h=n.bufferSync(s),f=l1(d,h,s.dtype,l,o,c,p,s.shape,a);return n.makeTensorInfo(u,s.dtype,f.values)}var Sj={kernelName:Ao,backendName:"cpu",kernelFunc:kj};function Ij(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;be([r,a],"gatherV2");let u=w.parseAxisParam(i,r.shape)[0],l=n.data.get(a.dataId).values,c=r.shape[u];for(let x=0;x<l.length;++x){let k=l[x];w.assert(k<=c-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${c-1}]`)}let p=o;o==null&&(p=0);let d=w.sizeFromShape(a.shape),h=I.segment_util.collectGatherOpShapeInfo(r,a,u,p),f=ft({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=ft({inputs:{x:a},backend:n,attrs:{shape:[h.batchSize,d/h.batchSize]}}),g=[h.batchSize,h.outerSize,d/h.batchSize,h.sliceSize],b=n.bufferSync(m),y=n.bufferSync(f),v=c1(y,b,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,v.dtype,v.values)}var Cj={kernelName:_o,backendName:"cpu",kernelFunc:Ij};function Nj(e){let{inputs:t,backend:n}=e,{input:s}=t,r=w.sizeFromShape(s.shape),a=s.shape[s.shape.length-1],i=r/a,o=ft({inputs:{x:s},backend:n,attrs:{shape:[i,a]}}),u=G1(o,!0,n),l=ft({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}var Tj={kernelName:ob,backendName:"cpu",kernelFunc:Nj},$j=rt(Dl,e=>Number.isFinite(e)?1:0,"bool"),_j={kernelName:Dl,backendName:"cpu",kernelFunc:$j},Aj=rt(Fl,e=>Math.abs(e)===1/0?1:0,"bool"),Ej={kernelName:Fl,backendName:"cpu",kernelFunc:Aj},Rj=rt(Ol,e=>Number.isNaN(e)?1:0,"bool"),Dj={kernelName:Ol,backendName:"cpu",kernelFunc:Rj};function Fj(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=m1(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}var Oj={kernelName:ub,backendName:"cpu",kernelFunc:Fj},Pj=rt(Pl,e=>Math.log1p(e)),Lj={kernelName:Pl,backendName:"cpu",kernelFunc:Pj},zj=Dt((e,t)=>e&&t),Mj=jt(Fo,zj,null,"bool"),Bj={kernelName:Fo,backendName:"cpu",kernelFunc:Mj},Vj=rt(Oo,e=>e?0:1,"bool"),Wj={kernelName:Oo,backendName:"cpu",kernelFunc:Vj},Uj=Dt((e,t)=>e||t),Gj=jt(Ll,Uj,null,"bool"),Hj={kernelName:Ll,backendName:"cpu",kernelFunc:Gj};function qj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s;be(r,"LRN");let l=r.shape[3],c=l-1,p=n.data.get(r.dataId).values,d=w.sizeFromShape(r.shape),h=new Float32Array(d);function f(m){let g=m%l,b=m-g+Math.max(0,g-a),y=m-g+Math.min(g+a,c),v=0;for(;b<=y;b++){let x=p[b];v+=x*x}return v}for(let m=0;m<d;m++){let g=f(m),b=p[m]*Math.pow(i+o*g,-u);h[m]=b}return n.makeTensorInfo(r.shape,r.dtype,h)}var jj={kernelName:Cp,backendName:"cpu",kernelFunc:qj};function Kj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s;be(i,"LRNGrad");let p=w.sizeFromShape(i.shape),d=i.shape[3],h=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(p),b=p;for(let y=0;y<b;y++){let v=y%d,x=y-v+Math.max(0,v-o),k=y-v+Math.min(d,v+o+1),C=0;for(let $=x;$<k;$++)C+=Math.pow(f[$],2);C=l*C+u;for(let $=x;$<k;$++){let A=-2*l*c*f[$]*m[y]/C;y===$&&(A+=Math.pow(C,-c)),A*=h[y],g[$]+=A}}return n.makeTensorInfo(i.shape,r.dtype,g)}var Xj={kernelName:lb,backendName:"cpu",kernelFunc:Kj};function H1(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n,u=r.shape,l=u.length,c=w.parseAxisParam(a,u),p=c,d=I.getAxesPermutation(p,l),h=o.data.get(r.dataId).values;if(d!=null){let x=new Array(l);for(let k=0;k<x.length;k++)x[k]=u[d[k]];h=Vv(h,u,r.dtype,d,x),p=I.getInnerMostAxes(p.length,l),u=x}be(r,"max"),I.assertAxesAreInnerMostDims("max",p,l);let[f,m]=I.computeOutAndReduceShapes(u,p),g=w.sizeFromShape(m),b=b1(h,g,f,r.dtype),y=o.write(b,f,r.dtype),v=f;return i&&(v=I.expandShapeToKeepDim(f,c)),{dataId:y,shape:v,dtype:r.dtype}}var Yj={kernelName:Ja,backendName:"cpu",kernelFunc:H1};function Zj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;be(r,"maxPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(r.shape,a,i,l,o,u),p;if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))p=Us({inputs:{x:r},backend:n});else{let d=n.data.get(r.dataId).values,h=w.computeStrides(r.shape),f=Kv(d,r.shape,r.dtype,h,c,"max");p=n.makeTensorInfo(c.outShape,r.dtype,f.values)}return p}var Qj={kernelName:ti,backendName:"cpu",kernelFunc:Zj};function Jj(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s;be(r,"maxPool3d");let c=I.computePool3DInfo(r.shape,a,i,1,o,u,l),p=n.data.get(r.dataId).values,d=V1(p,r.shape,r.dtype,w.computeStrides(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}var e5={kernelName:Np,backendName:"cpu",kernelFunc:Jj};function t5(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;be([r,a],"maxPool3DGrad");let c=I.computePool3DInfo(a.shape,i,o,1,u,l),p=n.bufferSync(a),d=Wq(p,c),h=c.strideDepth,f=c.strideHeight,m=c.strideWidth,g=c.dilationDepth,b=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,x=c.effectiveFilterHeight,k=c.effectiveFilterWidth,C=v-1-c.padInfo.front,$=k-1-c.padInfo.left,A=x-1-c.padInfo.top,E=_e(a.shape,"float32"),O=n.bufferSync(r);for(let R=0;R<c.batchSize;++R)for(let D=0;D<c.inChannels;++D)for(let T=0;T<c.inDepth;++T)for(let L=0;L<c.inHeight;++L)for(let W=0;W<c.inWidth;++W){let q=T-C,j=L-A,X=W-$,Q=0;for(let ne=0;ne<v;ne+=g){let J=(q+ne)/h;if(!(J<0||J>=c.outDepth||Math.floor(J)!==J))for(let se=0;se<x;se+=b){let te=(j+se)/f;if(!(te<0||te>=c.outHeight||Math.floor(te)!==te))for(let oe=0;oe<k;oe+=y){let re=(X+oe)/m;if(re<0||re>=c.outWidth||Math.floor(re)!==re)continue;let le=v*x*k-1-d.get(R,J,te,re,D),ge=ne*x*k+se*k+oe,we=le===ge?1:0;if(we===0)continue;Q+=O.get(R,J,te,re,D)*we}}}E.set(Q,R,T,L,W,D)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}var n5={kernelName:db,backendName:"cpu",kernelFunc:t5};function s5(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;be([a,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=s,d=I.computePool2DInfo(o.shape,u,l,1,c,p),h=n.data.get(o.dataId).values,f=_e(d.outShape,o.dtype,B1(h,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,v=d.effectiveFilterHeight,x=d.effectiveFilterWidth,k=x-1-d.padInfo.left,C=v-1-d.padInfo.top,$=_e(o.shape,"float32"),A=n.data.get(r.dataId).values,E=_e(r.shape,"float32",A);for(let O=0;O<d.batchSize;++O)for(let R=0;R<d.inChannels;++R)for(let D=0;D<d.inHeight;++D)for(let T=0;T<d.inWidth;++T){let L=D-C,W=T-k,q=0;for(let j=0;j<v;j+=b){let X=(L+j)/m;if(!(X<0||X>=d.outHeight||Math.floor(X)!==X))for(let Q=0;Q<x;Q+=y){let ne=(W+Q)/g;if(ne<0||ne>=d.outWidth||Math.floor(ne)!==ne)continue;let J=v*x-1-f.get(O,X,ne,R),se=j*x+Q,te=J===se?1:0;if(te===0)continue;q+=E.get(O,X,ne,R)*te}}$.set(q,O,D,T,R)}return n.makeTensorInfo($.shape,$.dtype,$.values)}var r5={kernelName:cb,backendName:"cpu",kernelFunc:s5};function a5(e,t,n,s,r){let a=w.computeStrides(t),i=Kv(e,t,n,a,r,"max"),o=B1(e,t,n,r,!0,s);return[i.values,o.values]}var i5={kernelName:pb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;be(s,"MaxPoolWithArgmax");let l=u.data.get(s.dataId).values,c=I.computePool2DInfo(s.shape,r,a,[1,1],i),[p,d]=a5(l,s.shape,s.dtype,o,c),h=u.write(p,c.outShape,s.dtype),f=u.write(d,c.outShape,s.dtype);return[{dataId:h,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};function o5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=w.parseAxisParam(a,r.shape),l=I.computeOutAndReduceShapes(r.shape,o)[1],c=w.sizeFromShape(l),p=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));p.push(d);let h=$r({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});p.push(h);let f=Xv({inputs:{a:h,b:d},backend:n});p.push(f);let m=dc({inputs:{x:f},backend:n,attrs:{axis:a,keepDims:i}});return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),m}var u5={kernelName:ni,backendName:"cpu",kernelFunc:o5};function l5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;be(r,"min");let o=w.parseAxisParam(a,r.shape),u=o,l=I.getAxesPermutation(u,r.shape.length),c=r;l!=null&&(c=Dn({inputs:{x:r},backend:n,attrs:{perm:l}}),u=I.getInnerMostAxes(u.length,r.shape.length)),I.assertAxesAreInnerMostDims("min",u,c.shape.length);let[p,d]=I.computeOutAndReduceShapes(c.shape,u),h=w.sizeFromShape(d),f=w.makeZerosTypedArray(w.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){let y=b*h,v=m[y];for(let x=0;x<h;++x){let k=m[y+x];(Number.isNaN(k)||k<v)&&(v=k)}f[b]=v}l!=null&&n.disposeIntermediateTensorInfo(c);let g=n.makeTensorInfo(p,c.dtype,f);if(i){let b=I.expandShapeToKeepDim(p,o),y=ft({inputs:{x:g},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(g),y}return g}var c5={kernelName:si,backendName:"cpu",kernelFunc:l5};function d5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;be(r,"mirrorPad");let o=a.map((v,x)=>v[0]+r.shape[x]+v[1]),u=a.map(v=>v[0]),l=a.map((v,x)=>v[0]+r.shape[x]),c=i==="reflect"?0:1,p=n.data.get(r.dataId).values,d=r.shape.length,h=w.computeStrides(r.shape),f=w.sizeFromShape(o),m=o.length,g=w.computeStrides(o),b=w.getTypedArrayFromDType(r.dtype,f);for(let v=0;v<f;v++){let x=w.indexToLoc(v,m,g);for(let C=0;C<m;C++)x[C]<u[C]?x[C]=u[C]*2-x[C]-c:x[C]>=l[C]&&(x[C]=(l[C]-1)*2-x[C]+c);x=x.map((C,$)=>C-u[$]);let k=w.locToIndex(x,d,h);b[v]=p[k]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}var p5={kernelName:ai,backendName:"cpu",kernelFunc:d5},h5=Dt((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),f5=jt(zl,h5),m5={kernelName:zl,backendName:"cpu",kernelFunc:f5},g5=_a(pp());function q1(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length,o=a;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let u=w.parseAxisParam([o],r.shape),l=H1({inputs:{x:r},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=I.expandShapeToKeepDim(l.shape,u),p=ft({inputs:{x:l},backend:n,attrs:{shape:c}}),d=jv({inputs:{a:r,b:p},backend:n}),h=i1({inputs:{x:d},backend:n}),f=dc({inputs:{x:h},backend:n,attrs:{axis:u,keepDims:!1}}),m=ft({inputs:{x:f},backend:n,attrs:{shape:c}}),g=Xv({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var b5={kernelName:xi,backendName:"cpu",kernelFunc:q1};function y5(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;be(r,"multinomial");let u=o?r:q1({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],p=n.data.get(u.dataId).values,d=[l,a],h=w.makeZerosTypedArray(w.sizeFromShape(d),"int32");for(let f=0;f<l;++f){let m=f*c,g=new Float32Array(c-1);g[0]=p[m];for(let v=1;v<g.length;++v)g[v]=g[v-1]+p[m+v];let b=g5.alea(i.toString()),y=f*a;for(let v=0;v<a;++v){let x=b();h[y+v]=g.length;for(let k=0;k<g.length;k++)if(x<g[k]){h[y+v]=k;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(d,"int32",h)}var v5={kernelName:hb,backendName:"cpu",kernelFunc:y5},x5=$s.nonMaxSuppressionV3Impl;function w5(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s;be(r,"NonMaxSuppression");let l=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:p}=x5(l,c,i,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var k5={kernelName:zo,backendName:"cpu",kernelFunc:w5},S5=$s.nonMaxSuppressionV4Impl;function I5(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s;be(r,"NonMaxSuppressionPadded");let c=n.data.get(r.dataId).values,p=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:h}=S5(c,p,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var C5={kernelName:Ml,backendName:"cpu",kernelFunc:I5},N5=$s.nonMaxSuppressionV5Impl;function T5(e){let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s;be(r,"NonMaxSuppressionWithScore");let c=n.data.get(r.dataId).values,p=n.data.get(a.dataId).values,d=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=N5(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var $5={kernelName:Mo,backendName:"cpu",kernelFunc:T5};function _5(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;be(r,"oneHot");let u=w.sizeFromShape(r.shape),l=new Float32Array(u*a);l.fill(o);let c=n.data.get(r.dataId).values;for(let p=0;p<u;++p)c[p]>=0&&c[p]<a&&(l[p*a+c[p]]=i);return n.makeTensorInfo([...r.shape,a],"int32",l)}var A5={kernelName:Vo,backendName:"cpu",kernelFunc:_5};function ap(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Ia({inputs:{input:s},backend:n}),a=ap({inputs:{x:r},backend:n}),i=mo({inputs:{input:s},backend:n}),o=ap({inputs:{x:i},backend:n}),u=Vn({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return Yv({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}var E5={kernelName:su,backendName:"cpu",kernelFunc:ap};function j1(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){let r=Ia({inputs:{input:s},backend:n}),a=j1({inputs:{x:r},backend:n}),i=mo({inputs:{input:s},backend:n}),o=ap({inputs:{x:i},backend:n}),u=Vn({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return Yv({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}var R5={kernelName:Bo,backendName:"cpu",kernelFunc:j1};function K1(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return rp({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let p=rp({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),l=go({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}var D5={kernelName:Wo,backendName:"cpu",kernelFunc:K1};function F5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;be(r,"pad");let o=a.map((y,v)=>y[0]+r.shape[v]+y[1]),u=a.map(y=>y[0]),l=n.data.get(r.dataId).values,c=w.sizeFromShape(r.shape),p=r.shape.length,d=w.computeStrides(r.shape),h=w.sizeFromShape(o),f=o.length,m=w.computeStrides(o),g=w.getTypedArrayFromDType(r.dtype,h);i!==0&&g.fill(i);for(let y=0;y<c;y++){let x=w.indexToLoc(y,p,d).map((C,$)=>C+u[$]),k=w.locToIndex(x,f,m);g[k]=l[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}var X1={kernelName:oi,backendName:"cpu",kernelFunc:F5},O5=Dt((e,t)=>Math.pow(e,t)),P5=jt(ui,O5),L5={kernelName:ui,backendName:"cpu",kernelFunc:P5};function z5(e){let{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=Wv(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}var M5={kernelName:Bl,backendName:"cpu",kernelFunc:z5},B5=rt(Vl,e=>1/e),V5={kernelName:Vl,backendName:"cpu",kernelFunc:B5};function W5(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;be(r,"resizeBilinear");let u=w.computeStrides(r.shape),[l,c]=o,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(w.sizeFromShape([p,l,c,f])),b=[a&&l>1?d-1:d,a&&c>1?h-1:h],y=[a&&l>1?l-1:l,a&&c>1?c-1:c],v=0,x=b[0]/y[0],k=b[1]/y[1];for(let C=0;C<p;C++)for(let $=0;$<l;$++){let A;i?A=x*($+.5)-.5:A=x*$;let E=Math.max(0,Math.floor(A)),O=A-E,R=Math.min(d-1,Math.ceil(A)),D=C*u[0]+E*u[1],T=C*u[0]+R*u[1];for(let L=0;L<c;L++){let W;i?W=k*(L+.5)-.5:W=k*L;let q=Math.max(0,Math.floor(W)),j=W-q,X=Math.min(h-1,Math.ceil(W)),Q=D+q*u[2],ne=T+q*u[2],J=D+X*u[2],se=T+X*u[2];for(let te=0;te<f;te++){let oe=m[Q+te],re=m[ne+te],le=m[J+te],ge=m[se+te],we=oe+(le-oe)*j,Ie=re+(ge-re)*j,De=we+(Ie-we)*O;g[v++]=De}}}return n.makeTensorInfo([p,l,c,f],"float32",g)}var U5={kernelName:hi,backendName:"cpu",kernelFunc:W5};function G5(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;be([a,r],"resizeBilinearGrad");let o=w.computeStrides(r.shape),[u,l,c,p]=r.shape,[,d,h]=a.shape,f=new Float32Array(u*l*c*p),m=[i&&d>1?l-1:l,i&&h>1?c-1:c],g=[i&&d>1?d-1:d,i&&h>1?h-1:h],b=m[0]/g[0],y=m[1]/g[1],v=n.data.get(a.dataId).values,x=0;for(let k=0;k<u;k++){let C=k*o[0];for(let $=0;$<d;$++){let A=$*b,E=Math.floor(A),O=Math.min(Math.ceil(A),l-1),R=C+E*o[1],D=C+O*o[1],T=A-E,L=1-T;for(let W=0;W<h;W++){let q=W*y,j=Math.floor(q),X=Math.min(Math.ceil(q),c-1),Q=q-j,ne=1-Q,J=R+j*o[2],se=R+X*o[2],te=D+j*o[2],oe=D+X*o[2],re=L*ne,le=L*Q,ge=T*ne,we=T*Q;for(let Ie=0;Ie<p;Ie++){let De=v[x++];f[J+Ie]+=De*re,f[se+Ie]+=De*le,f[te+Ie]+=De*ge,f[oe+Ie]+=De*we}}}}return n.makeTensorInfo([u,c,l,p],"float32",f)}var H5={kernelName:mb,backendName:"cpu",kernelFunc:G5};function q5(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;be(r,"resizeNearestNeighbor");let u=w.computeStrides(r.shape),[l,c]=o,[p,d,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(p*l*c*f),b=[a&&l>1?d-1:d,a&&c>1?h-1:h],y=[a&&l>1?l-1:l,a&&c>1?c-1:c],v=b[0]/y[0],x=b[1]/y[1],k=0;for(let C=0;C<p;C++){let $=C*u[0];for(let A=0;A<l;A++){let E=i?v*(A+.5):v*A,O=Math.min(d-1,a?Math.round(E):Math.floor(E));i&&(O=Math.max(0,O));let R=$+O*u[1];for(let D=0;D<c;D++){let T=i?x*(D+.5):x*D,L=Math.min(h-1,a?Math.round(T):Math.floor(T));i&&(L=Math.max(0,L));let W=R+L*u[2];for(let q=0;q<f;q++){let j=m[W+q];g[k++]=j}}}}return n.makeTensorInfo([p,l,c,f],r.dtype,g)}var j5={kernelName:pi,backendName:"cpu",kernelFunc:q5};function K5(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;be([a,r],"resizeNearestNeighborGrad");let o=w.computeStrides(r.shape),u=w.computeStrides(a.shape),[l,c,p,d]=r.shape,[,h,f]=a.shape,m=new Float32Array(l*c*p*d),g=n.data.get(a.dataId).values,b=[i&&h>1?c-1:c,i&&f>1?p-1:p],y=[i&&h>1?h-1:h,i&&f>1?f-1:f],v=b[0]/y[0],x=b[1]/y[1],k=1/v,C=1/x,$=Math.ceil(k)*2+2,A=Math.ceil(C)*2+2;for(let E=0;E<l;E++){let O=E*o[0];for(let R=0;R<c;R++){let D=O+R*o[1],T=Math.floor(R*k),L=Math.floor(T-$/2);for(let W=0;W<p;W++){let q=D+W*o[2],j=Math.floor(W*C),X=Math.floor(j-A/2);for(let Q=0;Q<d;Q++){let ne=0;for(let J=0;J<$;J++){let se=J+L;if(se<0||se>=h)continue;let te=O+se*u[1],oe=se*v,re=Math.min(c-1,i?Math.round(oe):Math.floor(oe));if(R===re)for(let le=0;le<A;le++){let ge=le+X;if(ge<0||ge>=f)continue;let we=te+ge*u[2],Ie=ge*x,De=Math.min(p-1,i?Math.round(Ie):Math.floor(Ie));W===De&&(ne+=g[we+Q])}}m[q+Q]=ne}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var X5={kernelName:fb,backendName:"cpu",kernelFunc:K5};function Y5(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;be(r,"reverse");let i=r.shape.length,o=w.parseAxisParam(a,r.shape);if(i===0)return Us({inputs:{x:r},backend:n});let u=new Ht(r.shape,r.dtype),l=n.bufferSync(r);for(let c=0;c<u.size;c++){let p=u.indexToLoc(c),d=p.slice();o.forEach(h=>d[h]=r.shape[h]-1-d[h]),u.set(l.get(...d),...p)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}var Z5={kernelName:Go,backendName:"cpu",kernelFunc:Y5},Q5={kernelName:ru,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=w.getTypedArrayFromDType(s.dtype,w.sizeFromShape(s.shape)),[l,c,p,d]=s.shape,[h,f]=I.getImageCenter(i,c,p),m=255,g=Math.sin(r),b=Math.cos(r),y=o.data.get(s.dataId).values;for(let x=0;x<l;x++){let k=x*p*c*d;for(let C=0;C<c;C++){let $=C*(p*d);for(let A=0;A<p;A++){let E=A*d;for(let O=0;O<d;O++){let R=[l,C,A,O],D=R[2],T=R[1],L=(D-h)*b-(T-f)*g,W=(D-h)*g+(T-f)*b;L=Math.round(L+h),W=Math.round(W+f);let q=a;if(typeof a!="number"&&(O===3?q=m:q=a[O]),L>=0&&L<p&&W>=0&&W<c){let X=W*(p*d),Q=L*d,ne=k+X+Q+O;q=y[ne]}let j=k+$+E+O;u[j]=q}}}}return{dataId:o.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},J5=rt(Ho,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),eK={kernelName:Ho,backendName:"cpu",kernelFunc:J5};function tK(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=I.calculateShapes(a,r,i),d=!0,h=n.bufferSync(r),f=n.bufferSync(a),m=so(h,f,i,p,l,u,o,c,0,d);return n.makeTensorInfo(i,m.dtype,m.values)}var nK={kernelName:qo,backendName:"cpu",kernelFunc:tK};function sK(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function rK(e,t){let n=0,s=e.length,r=0;for(;n<s;)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}function aK(e,t,n,s,r,a){let i=w.getArrayFromDType("int32",n*r);for(let o=0;o<n;++o){let u=e.slice(o*s,(o+1)*s),l=o*r;for(let c=0;c<r;++c)i[l+c]=a==="left"?sK(u,t[c+l]):rK(u,t[c+l])}return i}function iK(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=aK(o,u,r.shape[0],r.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",l)}var oK={kernelName:gb,backendName:"cpu",kernelFunc:iK};function uK(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;be([s,r,a],"select");let i=s.shape.length,o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=bn(r.dtype,a.dtype),p=w.makeZerosTypedArray(w.sizeFromShape(r.shape),c),d=0,h=i===0||i>1||r.shape.length===1?1:w.sizeFromShape(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<h;m++)o[f]===1?p[d++]=u[f]:p[d++]=l[f];return n.makeTensorInfo(r.shape,c,p)}var lK={kernelName:jo,backendName:"cpu",kernelFunc:uK},cK=I.SELU_SCALEALPHA,dK=I.SELU_SCALE,pK=rt(Wl,e=>e>=0?dK*e:cK*(Math.exp(e)-1)),hK={kernelName:Wl,backendName:"cpu",kernelFunc:pK},fK=rt(Ul,e=>e<0?-1:e>0?1:0),mK={kernelName:Ul,backendName:"cpu",kernelFunc:fK},gK=rt(gi,e=>Math.sin(e)),bK={kernelName:gi,backendName:"cpu",kernelFunc:gK},yK=rt(Xo,e=>Math.sinh(e)),vK={kernelName:Xo,backendName:"cpu",kernelFunc:yK},xK=11920928955078125e-23,Hw=Math.log(xK)+2,wK=rt(Gl,e=>{let t=e>-Hw,n=e<Hw,s=Math.exp(e),r;return n?r=s:t?r=e:r=Math.log(1+s),r}),kK={kernelName:Gl,backendName:"cpu",kernelFunc:wK};function SK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;be([r],"spaceToBatchND");let o=w.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let C=1+a.length;C<r.shape.length;++C)u.push([0,0]);let l=X1.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(l.shape,a,o,!1),p=I.getPermuted(c.length,a.length,!1),d=I.getReshapedPermuted(l.shape,a,o,!1),m=ft({inputs:{x:l},backend:n,attrs:{shape:c}}),y=Dn({inputs:{x:m},backend:n,attrs:{perm:p}}),k=ft({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),k}var IK={kernelName:Yo,backendName:"cpu",kernelFunc:SK};function CK(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(s.dataId).values,u=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[p,d,h,f,m]=C1(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var NK={kernelName:$p,backendName:"cpu",kernelFunc:CK};function TK(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,p]=N1(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}var $K={kernelName:Hl,backendName:"cpu",kernelFunc:TK};function _K(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=Uv(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}var AK={kernelName:_p,backendName:"cpu",kernelFunc:_K};function EK(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,[l,c]=Uv(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}var RK={kernelName:Ap,backendName:"cpu",kernelFunc:EK};function DK(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=I.calculateShapes(a,r,o),h=!1,f=n.bufferSync(r),m;switch(a.dtype){case"bool":{let g=n.bufferSync(a),b=Boolean(n.data.get(i.dataId).values[0]);m=so(f,g,o,d,c,l,u,p,b,h);break}case"float32":{let g=n.bufferSync(a),b=n.data.get(i.dataId).values[0];m=so(f,g,o,d,c,l,u,p,b,h);break}case"int32":{let g=n.bufferSync(a),b=n.data.get(i.dataId).values[0];m=so(f,g,o,d,c,l,u,p,b,h);break}case"string":{let g=n.bufferSync(a),b=w.decodeString(n.data.get(i.dataId).values[0]);m=so(f,g,o,d,c,l,u,p,b,h);break}default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}var FK={kernelName:Ep,backendName:"cpu",kernelFunc:DK};function OK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=I.prepareSplitSize(r,a,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map(p=>{let d=[...c];d[o]=p;let h=Ca({inputs:{x:r},backend:n,attrs:{begin:l,size:d}});return l[o]+=p,h})}var PK={kernelName:Zo,backendName:"cpu",kernelFunc:OK},LK={kernelName:ql,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t;be(n,"square");let r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let o=0;o<r.length;++o){let u=r[o];a[o]=u*u}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},zK=rt(Ii,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),MK={kernelName:Ii,backendName:"cpu",kernelFunc:zK};function BK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s;be(r,"stridedSlice");let{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=It.sliceInfo(r.shape,a,i,o,u,l,c,p,d),k;if(m)k=ft({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=It.computeOutShape(y,v,x),$=Ca({inputs:{x:r},backend:n,attrs:{begin:y,size:C}});k=ft({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo($)}else{let C=n.bufferSync(r),$=$1(h,C,x,y);k=n.makeTensorInfo(f,$.dtype,$.values)}return k}var VK={kernelName:Qo,backendName:"cpu",kernelFunc:BK};function WK(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:p}=t,d=n.data.get(c.dataId).values,h=n.data.get(p.dataId).values,[f,m]=Gv(d,h,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var UK={kernelName:jl,backendName:"cpu",kernelFunc:WK};function GK(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,p]=Hv(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var HK={kernelName:Rp,backendName:"cpu",kernelFunc:GK};function qK(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(a.dataId).values,o=qv(i,r);return n.makeTensorInfo(a.shape,"int32",o)}var jK={kernelName:Dp,backendName:"cpu",kernelFunc:qK},KK=rt(Jo,e=>Math.tan(e)),XK={kernelName:Jo,backendName:"cpu",kernelFunc:KK},YK=rt(Si,e=>Math.tanh(e)),ZK={kernelName:Si,backendName:"cpu",kernelFunc:YK};function QK(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;be(r,"tile");let i=A1(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var JK={kernelName:Dr,backendName:"cpu",kernelFunc:QK};function eX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;be(r,"topk");let o=n.data.get(r.dataId).values,[u,l]=R1(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}var tX={kernelName:eu,backendName:"cpu",kernelFunc:eX};function nX(e){let{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,p,d,h]=r.shape,[f,m]=l!=null?l:[p,d],g=[c,f,m,h],b=w.computeStrides(r.shape),y=b[0],v=b[1],x=b[2],k=w.getTypedArrayFromDType(r.dtype,w.sizeFromShape(g));k.fill(u);let C=s.data.get(r.dataId).values,$=s.data.get(a.dataId).values;for(let E=0;E<c;++E){let O=a.shape[0]===1?$:$.subarray(E*8,E*8+8);for(let R=0;R<f;++R)for(let D=0;D<m;++D)for(let T=0;T<h;++T){let L,W=O[6]*D+O[7]*R+1;if(W===0)continue;let q=(O[0]*D+O[1]*R+O[2])/W,j=(O[3]*D+O[4]*R+O[5])/W,X=qw(q,d,o),Q=qw(j,p,o);switch(i){case"nearest":L=uX(C,p,d,y,v,x,E,Q,X,T,u);break;case"bilinear":L=lX(C,p,d,y,v,x,E,Q,X,T,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let ne=E*y+R*v+D*x+T;k[ne]=L}return s.makeTensorInfo(g,r.dtype,k)}return{dataId:s.write(k,g,r.dtype),shape:r.shape,dtype:r.dtype}}var sX={kernelName:tu,backendName:"cpu",kernelFunc:nX};function qw(e,t,n){switch(n){case"reflect":return rX(e,t);case"wrap":return aX(e,t);case"nearest":return oX(e,t);case"constant":default:return iX(e,t)}}function rX(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=2*t;n<s&&(n=s*Math.trunc(-n/s)+n),n=n<-t?n+s:-n-1}else if(n>t-1)if(t<=1)n=0;else{let s=2*t;n-=s*Math.trunc(n/s),n>=t&&(n=s-n-1)}return w.clamp(0,n,t-1)}function aX(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let s=t-1;n+=t*(Math.trunc(-n/s)+1)}else if(n>t-1)if(t<=1)n=0;else{let s=t-1;n-=t*Math.trunc(n/s)}return w.clamp(0,n,t-1)}function iX(e,t){return e}function oX(e,t){return w.clamp(0,e,t-1)}function Xu(e,t,n,s,r,a,i,o,u,l,c){let p=i*s+o*r+u*a+l;return 0<=o&&o<t&&0<=u&&u<n?e[p]:c}function uX(e,t,n,s,r,a,i,o,u,l,c){let p=Math.round(o),d=Math.round(u);return Xu(e,t,n,s,r,a,i,p,d,l,c)}function lX(e,t,n,s,r,a,i,o,u,l,c){let p=Math.floor(o),d=Math.floor(u),h=p+1,f=d+1,m=(f-u)*Xu(e,t,n,s,r,a,i,p,d,l,c)+(u-d)*Xu(e,t,n,s,r,a,i,p,f,l,c),g=(f-u)*Xu(e,t,n,s,r,a,i,h,d,l,c)+(u-d)*Xu(e,t,n,s,r,a,i,h,f,l,c);return(h-o)*m+(o-p)*g}function cX(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;be(a,"unique");let i=s.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=D1(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}var dX={kernelName:bb,backendName:"cpu",kernelFunc:cX};function pX(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r.shape.length,o=r.shape[a],u=new Array(i-1),l=0;for(let h=0;h<i;h++)h!==a&&(u[l++]=r.shape[h]);let c=new Array(i).fill(0),p=r.shape.slice();p[a]=1;let d=new Array(o);for(let h=0;h<d.length;h++){c[a]=h;let f=Ca({inputs:{x:r},backend:n,attrs:{begin:c,size:p}});d[h]=ft({inputs:{x:f},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(f)}return d}var hX={kernelName:nu,backendName:"cpu",kernelFunc:pX};function fX(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;be(r,"unsortedSegmentSum");let o=r.shape.length,u=a.shape.length,l=[],c=[],p=o-u,d=a;for(let f=0;f<p;++f){let m=rp({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=m,c.push(m)}for(let f=0;f<i;++f){let m=w.createScalarValue(f,"int32"),g=n.makeTensorInfo([],"int32",m),b=r1({inputs:{a:g,b:d},backend:n}),y=$r({inputs:{x:b},backend:n,attrs:{dtype:"float32"}}),v=Sh({inputs:{a:y,b:r},backend:n}),x=dc({inputs:{x:v},backend:n,attrs:{axis:0,keepDims:!1}});l.push(x),c.push(g),c.push(b),c.push(y),c.push(v),c.push(x)}let h=K1({inputs:l,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var mX={kernelName:Fp,backendName:"cpu",kernelFunc:fX},gX=[gq,lH,yq,xq,mH,kq,Iq,Nq,$q,Aq,Rq,Fq,Pq,Mq,Vq,Gq,qq,Kq,Yq,fq,Qq,e6,n6,r6,hH,bH,i6,cH,u6,c6,d6,h6,m6,b6,v6,w6,S6,C6,T6,_6,E6,D6,O6,P6,z6,B6,W6,U6,G6,H6,K6,oq,Y6,yH,rj,vH,aj,wH,dj,pj,fj,SH,bj,vj,wj,Sj,Cj,CH,TH,dH,Tj,l6,_j,Ej,Dj,uq,_H,EH,Oj,DH,Lj,Bj,Wj,Hj,jj,Xj,Yj,OH,Qj,e5,n5,r5,i5,u5,c5,LH,p5,m5,v5,MH,VH,k5,C5,$5,UH,A5,R5,D5,X1,L5,cq,qH,M5,pH,Tg,V5,dq,pq,hq,U5,H5,j5,X5,Z5,Q5,eK,KH,nK,oK,lK,hK,YH,mK,bK,vK,ZH,b5,kK,IK,NK,$K,AK,RK,FK,PK,eq,LK,nq,MK,VK,UK,HK,jK,iq,q6,XK,ZK,JK,tX,sX,GH,dX,hX,mX,E5];for(let e of gX)au(e);var bX={};Ee(bX,{assertNotComplex:()=>gu,bindCanvasToFramebuffer:()=>$X,bindColorTextureToFramebuffer:()=>kd,bindTextureToProgramUniformSampler:()=>c2,bindTextureUnit:()=>o2,bindVertexBufferToProgramAttribute:()=>_g,callAndCheck:()=>fe,canBeRepresented:()=>Y1,createFragmentShader:()=>J1,createFramebuffer:()=>i2,createProgram:()=>e2,createStaticIndexBuffer:()=>s2,createStaticVertexBuffer:()=>n2,createTexture:()=>r2,createVertexShader:()=>Q1,getBatchDim:()=>Na,getExtensionOrThrow:()=>Yu,getFramebufferErrorMessage:()=>d2,getMaxTexturesInShader:()=>m2,getNumChannels:()=>NX,getProgramUniformLocation:()=>l2,getProgramUniformLocationOrThrow:()=>u2,getRowsCols:()=>Ta,getShapeAs3D:()=>Sd,getTextureShapeFromLogicalShape:()=>h2,getWebGLDisjointQueryTimerVersion:()=>g2,getWebGLErrorMessage:()=>Z1,getWebGLMaxTextureSize:()=>f2,hasExtension:()=>Xn,isCapableOfRenderingToFloatTexture:()=>b2,isDownloadFloatTextureEnabled:()=>y2,isReshapeFree:()=>bl,isWebGLFenceEnabled:()=>v2,isWebGLVersionEnabled:()=>Eg,linkProgram:()=>t2,logShaderSourceAndInfoLog:()=>Jv,resetMaxTextureSize:()=>_X,resetMaxTexturesInShader:()=>AX,unbindColorTextureFromFramebuffer:()=>Ag,unbindTextureUnit:()=>TX,validateFramebuffer:()=>Zu,validateProgram:()=>wd,validateTextureSize:()=>a2});var aa={},Em={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Zv(e,t){aa[e]=t}function Ts(e,t){if(!(e in aa)||t!=null){let s=vX(e,t);if(s!==null)aa[e]=s;else return console.log("Could not get context for WebGL version",e),null}let n=aa[e];return n==null||n.isContextLost()?(delete aa[e],Ts(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),aa[e])}function yX(e){if(typeof OffscreenCanvas!="undefined"&&e===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function vX(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?yX(e):t;return n.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete aa[e]},!1),e===1?n.getContext("webgl",Em)||n.getContext("experimental-webgl",Em):n.getContext("webgl2",Em)}function pc(e,t){return[t,e]}function xX(e,t){return e*t}function cd(e){let t=w.sizeFromShape(e),n=Math.ceil(t/4);return w.sizeToSquarishShape(n)}function mu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function wX(e,t){let[n,s]=mu(e,t);return n*s*4}function Qv(e,t){let n=e,s,r,a,i,o,u,l,c,p,d;return K().getNumber("WEBGL_VERSION")===2?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,p=n.HALF_FLOAT,d=n.FLOAT,u=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,p=t!=null?t.HALF_FLOAT_OES:null,d=e.FLOAT,u=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:p,textureTypeFloat:d}}function fe(e,t){let n=t();return K().getBool("DEBUG")&&kX(e),n}function kX(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+Z1(e,t))}var SX=596e-10,IX=65504;function Y1(e){return!!(K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||SX<Math.abs(e)&&Math.abs(e)<IX)}function Z1(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Yu(e,t){return ir(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function Q1(e,t){let n=ir(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(fe(e,()=>e.shaderSource(n,t)),fe(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function J1(e,t){let n=ir(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(fe(e,()=>e.shaderSource(n,t)),fe(e,()=>e.compileShader(n)),K().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw Jv(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var CX=/ERROR: [0-9]+:([0-9]+):/g;function Jv(e,t){let n=CX.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let s=+n[1],r=e.split(`
`),a=r.length.toString().length+2,i=r.map((p,d)=>w.rightPad((d+1).toString(),a)+p),o=0;for(let p=0;p<i.length;p++)o=Math.max(i[p].length,o);let u=i.slice(0,s-1),l=i.slice(s-1,s),c=i.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${w.rightPad(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function e2(e){return ir(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function t2(e,t){if(fe(e,()=>e.linkProgram(t)),!K().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function wd(e,t){if(fe(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function n2(e,t){let n=ir(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),fe(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function s2(e,t){let n=ir(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),fe(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function NX(){return K().getNumber("WEBGL_VERSION")===2?1:4}function r2(e){return ir(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function a2(e,t){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let s=`[${e}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(e>n||t>n){let s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function i2(e){return ir(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function _g(e,t,n,s,r,a,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,s)),fe(e,()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i)),fe(e,()=>e.enableVertexAttribArray(o)),!0)}function o2(e,t,n){p2(e,n),fe(e,()=>e.activeTexture(e.TEXTURE0+n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function TX(e,t){p2(e,t),fe(e,()=>e.activeTexture(e.TEXTURE0+t)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function u2(e,t,n){return ir(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function l2(e,t,n){return e.getUniformLocation(t,n)}function c2(e,t,n,s){fe(e,()=>o2(e,t,s)),fe(e,()=>e.uniform1i(n,s))}function $X(e){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),fe(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function kd(e,t,n){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Ag(e,t){fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),fe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Zu(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+d2(e,t))}function d2(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ir(e,t,n){let s=fe(e,()=>t());if(s==null)throw new Error(n);return s}function p2(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){let r=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Na(e,t=2){return w.sizeFromShape(e.slice(0,e.length-t))}function Ta(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Sd(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Na(e),...Ta(e)]),t}function h2(e,t=!1){let n=K().getNumber("WEBGL_MAX_TEXTURE_SIZE");t&&(n=n*2,e=e.map((r,a)=>a>=e.length-2?w.nearestLargerEven(e[a]):e[a]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=w.squeezeShape(e).newShape);let s=w.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(e.length===2&&e[0]<=n&&e[1]<=n)return e;if(e.length===3&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(e.length===3&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){let r=Na(e),a=2,i=2;return e.length&&([a,i]=Ta(e)),s=r*(a/2)*(i/2),w.sizeToSquarishShape(s).map(o=>o*2)}return w.sizeToSquarishShape(s)}function dd(e){return e%2===0}function bl(e,t){if(e=e.slice(-2),t=t.slice(-2),w.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s||dd(n)&&dd(s)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&dd(e[0])&&dd(t[0])}var Id,Cd;function f2(e){if(Id==null){let t=Ts(e);Id=t.getParameter(t.MAX_TEXTURE_SIZE)}return Id}function _X(){Id=null}function AX(){Cd=null}function m2(e){if(Cd==null){let t=Ts(e);Cd=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Cd)}function g2(e){if(e===0)return 0;let t,n=Ts(e);return Xn(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:Xn(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function Xn(e,t){return e.getExtension(t)!=null}function Eg(e){try{if(Ts(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function b2(e){if(e===0)return!1;let t=Ts(e);if(e===1){if(!Xn(t,"OES_texture_float"))return!1}else if(!Xn(t,"EXT_color_buffer_float"))return!1;return Rg(t)}function y2(e){if(e===0)return!1;let t=Ts(e);if(e===1){if(!Xn(t,"OES_texture_float")||!Xn(t,"WEBGL_color_buffer_float"))return!1}else{if(Xn(t,"EXT_color_buffer_float"))return Rg(t);let s="EXT_color_buffer_half_float";if(Xn(t,s)){let r=t.getExtension(s);return EX(t,r)}return!1}return Rg(t)}function Rg(e){let t=Qv(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),i}function EX(e,t){let n=Qv(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,a,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(i),o}function v2(e){return e!==2?!1:Ts(e).fenceSync!=null}function gu(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&w.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var Ne=K();Ne.registerFlag("HAS_WEBGL",()=>Ne.getNumber("WEBGL_VERSION")>0);Ne.registerFlag("WEBGL_VERSION",()=>Eg(2)?2:Eg(1)?1:0);Ne.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ne.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ne.get("WEBGL_VERSION")===2);Ne.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ne.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ne.registerFlag("WEBGL_PACK",()=>Ne.getBool("HAS_WEBGL"));Ne.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_CLIP",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_PACK_REDUCE",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_CONV_IM2COL",()=>Ne.getBool("WEBGL_PACK"));Ne.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>f2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>m2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=Ne.getNumber("WEBGL_VERSION");return e===0?0:g2(e)});Ne.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ne.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Lp.isMobile());Ne.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>b2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ne.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ne.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ne.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>y2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_FENCE_API_ENABLED",()=>v2(Ne.getNumber("WEBGL_VERSION")));Ne.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ne.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ne.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});Ne.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Lp.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});Ne.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ne.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ne.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ne.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ne.registerFlag("WEBGL_EXP_CONV",()=>!1);function wn(){let e,t,n,s,r,a,i,o,u,l;return K().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o=`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `,u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function _i(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let i=`int ${e[a]} = ${n} / ${r}`,o=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r}`:`index -= ${e[a]} * ${r}`;return`${i}; ${o};`}).join("")}function Ih(e,t,n="index"){let s=w.computeStrides(t);return s.map((r,a)=>{let i=`int ${e[a]} = ${n} / outShapeStrides[${a}]`,o=a===s.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`;return`${i}; ${o};`}).join("")}function RX(e,t){let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}function DX(e,t,n="index"){let s=e.map((a,i)=>i),r=RX(s,t);return r.map((a,i)=>{let o=`int ${e[i]} = ${n} / ${r[i]}`,u=i===r.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${r[i]}`:`index -= ${e[i]} * ${r[i]}`;return`${o}; ${u};`}).join("")}function ex(e){let t=w.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function tx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var x2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:w2}=I;function FX(e,t,n){let s=[];if(e.forEach(h=>{let f=w.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?s.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${h.name};`),s.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=nx(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${h.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${h.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{s.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let r=s.join(`
`),a=e.map(h=>OX(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=wn(),u=zX(o),l,c,p=VX(o);return t.isPacked?(l=PX(t.logicalShape,i,n.enableShapeUniforms),c=BX(o)):(l=LX(t.logicalShape,i,n.enableShapeUniforms),c=MX(o)),n.packedInputs&&(p+=HX),[p,u,c,r,l,a,n.userCode].join(`
`)}function bu(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return s8(e,t);case 1:return a8(e,t);case 2:return o8(e,t);case 3:return l8(e,t);case 4:return d8(e,t);case 5:return p8(e);case 6:return h8(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function k2(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return n8(e);case 1:return r8(e,t);case 2:return i8(e,t);case 3:return u8(e,t);default:return c8(e,t)}}function OX(e,t,n=!1,s){let r="";n?r+=k2(e,s):r+=bu(e,s);let a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(n?r+=f8(e,t):r+=m8(e,t)),r}function PX(e,t,n){switch(e.length){case 0:return S2();case 1:return qX(e,t,n);case 2:return e8(e,t,n);case 3:return KX(e,t,n);default:return YX(e,t,n)}}function LX(e,t,n){switch(e.length){case 0:return S2();case 1:return jX(e,t,n);case 2:return t8(e,t,n);case 3:return XX(e,t,n);case 4:return ZX(e,t,n);case 5:return QX(e,t);case 6:return JX(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function zX(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function MX(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function BX(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function VX(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${WX}
    ${UX}
    ${GX}
  `}var WX=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,UX=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,GX=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,HX=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function S2(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function qX(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function jX(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function KX(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function XX(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Ih(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let s=_i(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function YX(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2),i=a,o="",u="b, r, c";for(let l=2;l<e.length-1;l++)i*=e[e.length-l-1],o=`
      int b${l} = index / ${i};
      index -= b${l} * ${i};
    `+o,u=`b${l}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${o}

      int b = index / ${a};
      index -= b * ${a};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${e.length}(${u});
    }
  `}function ZX(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Ih(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let s=_i(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function QX(e,t){let n=_i(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function JX(e,t){let n=_i(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function e8(e,t,n){let s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(w.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;let r=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function t8(e,t,n){return w.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function Ai(e){return`offset${e}`}function n8(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=wn();return`
    vec4 ${n}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function s8(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;let[r,a]=e.shapeInfo.texShape;if(r===1&&a===1)return`
      float ${s}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=Ai(n);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,u]=e.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${o}, ${u}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function r8(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=wn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${a.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${a.texture2D}(${n}, uv);
    }
  `}function a8(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${yu(e)}
      }
    `;let r=e.shapeInfo.texShape,a=r[0],i=r[1];if(i===1&&a===1)return`
      float ${s}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=Ai(n);return i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);
        return sampleTexture(${n}, uv);
      }
    `:a===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function i8(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=wn();if(a!=null&&w.arraysEqual(n,a))return t?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;let l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function o8(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(a!=null&&w.arraysEqual(n,a)){if(t)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;let d=a[0],h=a[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}let{newShape:i,keptDims:o}=w.squeezeShape(n),u=i;if(u.length<n.length){let d=vu(e,u),h=["row","col"];return`
      ${bu(d,t)}
      float ${r}(int row, int col) {
        return ${r}(${xu(h,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${yu(e)}
      }
    `;let l=a[0],c=a[1],p=Ai(s);return c===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${s}, uv);
    }
  `:l===1?t?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${p};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${s}, uv);
  }
`}function u8(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(n[0]===1){let d=n.slice(1),h=[1,2],f=vu(e,d),m=["b","row","col"];return`
        ${k2(f,t)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${xu(m,h)});
        }
      `}let o=wn();if(t)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `;let u=i[0],l=i[1],c=Math.ceil(n[2]/2),p=c*Math.ceil(n[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${p}, ${c}, b, row, col);
      return ${o.texture2D}(${s}, uv);
    }
  `}function l8(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=w.squeezeShape(n),l=o;if(l.length<n.length){let m=vu(e,l),g=["row","col","depth"];return`
        ${bu(m,t)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${xu(g,u)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${a}, ${i}, 1)));
        ${yu(e)}
      }
    `;let c=e.shapeInfo.texShape,p=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===a&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===i&&h==null)return t?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;let f=Ai(s);return t?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * ${a} + col * ${i} + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${a} + col * ${i} + depth + ${f};
        vec2 uv = uvFromFlat(${p}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function c8(e,t){let n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=wn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);
    }
  `;let a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],p=Math.ceil(a[i-1]/2),d=p*Math.ceil(a[i-2]/2),h="int b, int row, int col",f=`b * ${d} + (row / 2) * ${p} + (col / 2)`;for(let m=2;m<i-1;m++)h=`int b${m}, `+h,d*=a[i-m-1],f=`b${m} * ${d} + `+f;return`
    vec4 ${s}(${h}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});
      return ${r.texture2D}(${n}, uv);
    }
  `}function d8(e,t){let n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=w.squeezeShape(n);if(u.length<n.length){let y=vu(e,u),v=["row","col","depth","depth2"];return`
      ${bu(y,t)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${xu(v,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${a}, 1)));
        ${yu(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(h===o&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(h===a&&c==null)return t?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;let b=Ai(s);return t?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${a} + depth2;
      vec2 uv = uvFromFlat(${d}, ${h}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}function p8(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=w.squeezeShape(t);if(u.length<t.length){let m=vu(e,u),g=["row","col","depth","depth2","depth3"];return`
      ${bu(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${xu(g,l)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${a}, ${r})) +
          depth3;
        ${yu(e)}
      }
    `;let c=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],h=p[1];if(h===o&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===r&&c==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${d}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=Ai(n);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${a} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${d}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function h8(e){let t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=w.squeezeShape(t);if(r.length<t.length){let g=vu(e,r),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${bu(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${xu(b,a)});
      }
    `}let i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${l}, ${u}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${yu(e)}
      }
    `;let p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],f=d[1];if(f===c&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===i&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=Ai(n);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${l} + depth * ${u} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function yu(e){let t=e.name,n=w.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function f8(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=w2(e.shapeInfo.logicalShape,t.logicalShape),u=at(i),l=i-a,c,p=["x","y","z","w","u","v"];a===0?c="":i<2&&o.length>=1?c="coords = 0;":c=o.map(y=>`coords.${p[y+l]} = 0;`).join(`
`);let d="";i<2&&a>0?d="coords":d=e.shapeInfo.logicalShape.map((y,v)=>`coords.${p[v+l]}`).join(", ");let h="return outputValue;",m=w.sizeFromShape(e.shapeInfo.logicalShape)===1,b=w.sizeFromShape(t.logicalShape)===1;if(a===1&&!m&&!b)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)i===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(o.length){let y=a-2,v=a-1;o.indexOf(y)>-1&&o.indexOf(v)>-1?h="return vec4(outputValue.x);":o.indexOf(y)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(v)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${s}(${d});
      ${h}
    }
  `}function m8(e,t){let n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&e.shapeInfo.flatOffset==null&&w.arraysEqual(i,a))return`
      float ${r}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let l=at(u),c=w2(e.shapeInfo.logicalShape,t.logicalShape),p=u-o,d,h=["x","y","z","w","u","v"];o===0?d="":u<2&&c.length>=1?d="coords = 0;":d=c.map(m=>`coords.${h[m+p]} = 0;`).join(`
`);let f="";return u<2&&o>0?f="coords":f=e.shapeInfo.logicalShape.map((m,g)=>`coords.${h[g+p]}`).join(", "),`
    float ${r}() {
      ${l} coords = getOutputCoords();
      ${d}
      return get${s}(${f});
    }
  `}function at(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function nx(e,t,n){let{newShape:s,keptDims:r}=w.squeezeShape(t),a=t.length,i=e&&a===3&&t[0]===1,o=i?t.slice(1):s,u=!e&&a>1&&!w.arraysEqual(t,n)&&s.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:r}}function vu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function xu(e,t){return t.map(n=>e[n]).join(", ")}function g8(e,t,n,s){let r=n.map((c,p)=>{let d={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(d.flatOffset=c.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:d}}),a=r.map(c=>c.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=FX(r,i,t),u=J1(e.gl,o),l=e.createProgram(u);return K().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:{program:t,fragmentShader:u,source:o,webGLProgram:l,inShapeInfos:a,outShapeInfo:i,...I2(e,t,l)}}function I2(e,t,n){let s={},r={},a={},i=[],o,u,l,c=null,p=null;p=e.getUniformLocation(n,"NAN",!1),K().getNumber("WEBGL_VERSION")===1&&(c=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let h=0;h<t.variableNames.length;h++){let f=t.variableNames[h];s[f]=e.getUniformLocation(n,f,d),s[`offset${f}`]=e.getUniformLocation(n,`offset${f}`,d),t.enableShapeUniforms&&(r[`${f}Shape`]=e.getUniformLocation(n,`${f}Shape`,d),a[`${f}TexShape`]=e.getUniformLocation(n,`${f}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),l=e.getUniformLocation(n,"outShapeStrides",d),u=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach((h,f)=>{i[f]=e.getUniformLocation(n,h.name,d)}),{uniformLocations:s,customUniformLocations:i,infLoc:c,nanLoc:p,inShapesLocations:r,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}}function jw(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,s)=>{let r=n.logicalShape,a=t[s],i=a.shape;if(!w.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(n.isUniform&&a.isUniform)return;let o=n.texShape,u=a.isUniform?null:a.texData.texShape;if(!w.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}function b8(e,t,n,s,r){t.program.enableShapeUniforms||(jw(t.inShapeInfos,n),jw([t.outShapeInfo],[s]));let a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),K().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((u,l)=>{let c=t.program.variableNames[l],p=t.uniformLocations[c],d=t.uniformLocations[`offset${c}`],h=t.inShapesLocations[`${c}Shape`],f=t.inTexShapesLocations[`${c}TexShape`];if(h){let{uniformShape:m}=nx(t.program.packedInputs,u.shape,u.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break;default:break}}if(f&&e.gl.uniform2i(f,u.texData.texShape[0],u.texData.texShape[1]),p!=null){if(u.isUniform){if(w.sizeFromShape(u.shape)<2)e.gl.uniform1f(p,u.uniformValues[0]);else{let m=u.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(p,m)}return}u.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,u.texData.slice.flatOffset),e.setInputMatrixTexture(u.texData.texture.texture,p,l)}});let o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){let u=w.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach((u,l)=>{let c=t.customUniformLocations[l],p=r[l];if(u.type==="float")e.gl.uniform1fv(c,p);else if(u.type==="vec2")e.gl.uniform2fv(c,p);else if(u.type==="vec3")e.gl.uniform3fv(c,p);else if(u.type==="vec4")e.gl.uniform4fv(c,p);else if(u.type==="int")e.gl.uniform1iv(c,p);else if(u.type==="ivec2")e.gl.uniform2iv(c,p);else if(u.type==="ivec3")e.gl.uniform3iv(c,p);else if(u.type==="ivec4")e.gl.uniform4iv(c,p);else throw Error(`uniform type ${u.type} is not supported yet.`)}),e.executeProgram()}function y8(e,t,n){let s="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:l,uniformShape:c,keptDims:p}=nx(e.packedInputs,i.shape,u),d="",h="",f="";if(c.length===1&&e.packedInputs){let k=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];d=`${k[0]>1}_${k[1]>1}`}else if(c.length===2&&!e.packedInputs)h=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!e.packedInputs){let k=w.computeStrides(c);f=`${k[0]===u[1]}_${k[k.length-1]===u[1]}`}let m=i.shape.length,g=c.length===2&&w.arraysEqual(i.shape,u),b=w.sizeFromShape(i.shape)===1,y=I.getBroadcastDims(i.shape,n.shape),v=!e.packedInputs&&m===n.shape.length&&w.arraysEqual(u,n.texData.texShape),x=e.packedInputs||c.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${m}_${v}_${l?p:""}_${c.length}_${b}_${y}_${g}_${d}_${h}_${f}_${x}_${o}`}else{let u=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${u}_${o}`}});let r=e.userCode,a=e.constructor.name;return a+="_"+s+"_"+r+`${K().getNumber("WEBGL_VERSION")}`,a}function kn(e){return K().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var v8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=wn();this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ih(["r","c","d"],e):_i(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},x8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=wn();this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Ih(["r","c","d"],e):_i(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},w8=class{constructor(e){this.variableNames=["A"],this.outTexUsage=3;let t=wn();this.outputShape=e,this.userCode=`
      ${x2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},k8=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=3;let t=wn();this.outputShape=e,this.userCode=`
      ${x2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},S8=class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=wn();this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`
      ${this.enableShapeUniforms?tx():ex(e)}

      void main() {
        ivec3 coords = getOutputCoords();

        int flatIndex = getFlatIndex(coords);
        int offset = imod(flatIndex, 4);

        flatIndex = idiv(flatIndex, 4, 1.);

        int r = flatIndex / texShape[1];
        int c = imod(flatIndex, texShape[1]);
        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
        vec4 values = ${n.texture2D}(A, uv);

        float result;

        if(offset == 0) {
          result = values[0];
        } else if(offset == 1) {
          result = values[1];
        } else if(offset == 2) {
          result = values[2];
        } else {
          result = values[3];
        }

        ${n.output} = vec4(${s}, 0., 0., 0.);
      }
    `}},I8=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=wn();this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){let o=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?tx():ex(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${n.output} = ${r};
        }
    `}},C8={};Ee(C8,{bindVertexProgramAttributeStreams:()=>D2,createBufferFromOutputTexture:()=>P2,createFloat16MatrixTexture:()=>_2,createFloat16PackedMatrixTexture:()=>R2,createFloat32MatrixTexture:()=>$2,createIndexBuffer:()=>T2,createPackedMatrixTexture:()=>E2,createUnsignedBytesMatrixTexture:()=>A2,createVertexBuffer:()=>N2,createVertexShader:()=>C2,downloadByteEncodedFloatMatrixFromOutputTexture:()=>z2,downloadFloat32MatrixFromBuffer:()=>L2,downloadMatrixFromPackedOutputTexture:()=>B2,downloadPackedMatrixFromBuffer:()=>M2,getInternalFormatForFloat16MatrixTexture:()=>rx,getInternalFormatForFloat16PackedMatrixTexture:()=>ox,getInternalFormatForFloat32MatrixTexture:()=>sx,getInternalFormatForPackedMatrixTexture:()=>ix,getInternalFormatForUnsignedBytesMatrixTexture:()=>ax,uploadDenseMatrixToTexture:()=>F2,uploadPixelDataToTexture:()=>O2});function C2(e){let t=wn(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Q1(e,n)}function N2(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return n2(e,t)}function T2(e){let t=new Uint16Array([0,1,2,2,1,3]);return s2(e,t)}function hc(e,t,n,s,r,a){a2(t,n);let i=r2(e),o=e.TEXTURE_2D;return fe(e,()=>e.bindTexture(o,i)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),fe(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),K().getNumber("WEBGL_VERSION")===1?fe(e,()=>e.texImage2D(o,0,s,t,n,0,r,a,null)):fe(e,()=>e.texStorage2D(o,1,s,t,n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function sx(e){return e.internalFormatFloat}function $2(e,t,n,s){let[r,a]=pc(t,n);return hc(e,r,a,sx(s),s.textureFormatFloat,e.FLOAT)}function rx(e){return e.internalFormatHalfFloat}function _2(e,t,n,s){let[r,a]=pc(t,n);return hc(e,r,a,rx(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function ax(e){return e.downloadTextureFormat}function A2(e,t,n,s){let[r,a]=pc(t,n);return hc(e,r,a,ax(s),e.RGBA,e.UNSIGNED_BYTE)}function ix(e){return e.internalFormatPackedFloat}function E2(e,t,n,s){let[r,a]=mu(t,n);return hc(e,r,a,ix(s),e.RGBA,e.FLOAT)}function ox(e){return e.internalFormatPackedHalfFloat}function R2(e,t,n,s){let[r,a]=mu(t,n);return hc(e,r,a,ox(s),e.RGBA,s.textureTypeHalfFloat)}function D2(e,t,n){return fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),_g(e,t,"clipSpacePos",n,3,20,0)&&_g(e,t,"uv",n,2,20,12)}function F2(e,t,n,s,r,a){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,u;r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(r),K().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,s,0,e.RGBA,o,i)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function O2(e,t,n){fe(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?K().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):K().getNumber("WEBGL_VERSION")===2?fe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):fe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),fe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function P2(e,t,n,s){let r=e.createBuffer();fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));let o=4*4*t*n;return fe(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ)),fe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),fe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}function L2(e,t,n){let s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function z2(e,t,n,s){let[r,a]=pc(t,n),i=4,o=new Uint8Array(xX(t*n,i));return fe(e,()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function M2(e,t,n,s,r,a,i,o){let u=e,l=new Float32Array(wX(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function B2(e,t,n){let s=new Float32Array(t*n*4);return fe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s)),s}var nl=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];let t=K().getNumber("WEBGL_VERSION");e!=null?(this.gl=e,Zv(t,e)):this.gl=Ts(t);let n="WEBGL_color_buffer_float",s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),K().getNumber("WEBGL_VERSION")===1){let r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Yu(this.gl,r),Xn(this.gl,a))this.textureHalfFloatExtension=Yu(this.gl,a);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Xn(this.gl,s))this.colorBufferHalfFloatExtension=Yu(this.gl,s);else if(K().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Xn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(Xn(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=N2(this.gl),this.indexBuffer=T2(this.gl),this.framebuffer=i2(this.gl),this.textureConfig=Qv(this.gl,this.textureHalfFloatExtension)}get debug(){return K().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;fe(e,()=>e.finish()),fe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),fe(e,()=>e.deleteFramebuffer(this.framebuffer)),fe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),fe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),fe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),$2(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),_2(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),A2(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),O2(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),F2(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),R2(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),E2(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ag(this.gl,this.framebuffer),this.outputTexture=null),fe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>z2(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return M2(this.gl,e,t,n,s,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return L2(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let s=P2(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(K().getBool("WEBGL_FENCE_API_ENABLED")){let s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let a=s.clientWaitSync(r,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=r}else K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>B2(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=C2(t));let n=e2(t);return fe(t,()=>t.attachShader(n,this.vertexShader)),fe(t,()=>t.attachShader(n,e)),t2(t,n),this.debug&&wd(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=D2(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&fe(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&wd(this.gl,this.program),fe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?u2(this.gl,e,t):l2(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),fe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),c2(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[s,r]=mu(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&wd(this.gl,this.program),Zu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;this.debug&&this.debugValidate(),fe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Yu(this.gl,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.createQuery();return n.beginQuery(s.TIME_ELAPSED_EXT,r),r}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await w.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,s=this.getQueryTimerExtensionWebGL2(),r=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),s=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=N8(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),!(this.itemsToPoll.length>1)&&w.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),kd(this.gl,e,this.framebuffer),this.debug&&Zu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(kd(this.gl,this.outputTexture,this.framebuffer),this.debug&&Zu(this.gl)):Ag(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let s=this.gl;kd(s,e,this.framebuffer),this.debug&&Zu(s),this.outputTexture=e,fe(s,()=>s.viewport(0,0,t,n)),fe(s,()=>s.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),fe(this.gl,()=>this.gl.scissor(e,t,n,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function N8(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:T8,bincountImpl:V2,bincountReduceImpl:$8,ceilImpl:_8,concatImpl:A8,equalImpl:E8,expImpl:R8,expm1Impl:D8,floorImpl:F8,gatherNdImpl:O8,gatherV2Impl:P8,greaterImpl:L8,greaterEqualImpl:z8,lessImpl:M8,lessEqualImpl:B8,linSpaceImpl:V8,logImpl:W8,maxImpl:U8,maximumImpl:G8,minimumImpl:H8,multiplyImpl:q8,negImpl:j8,notEqualImpl:K8,prodImpl:X8,rangeImpl:Y8,rsqrtImpl:Z8,scatterImpl:Q8,sigmoidImpl:J8,simpleAbsImpl:W2,sliceImpl:eY,sparseFillEmptyRowsImpl:tY,sparseReshapeImpl:nY,sparseSegmentReductionImpl:U2,sqrtImpl:sY,stridedSliceImpl:rY,stringNGramsImpl:aY,stringSplitImpl:iY,stringToHashBucketFastImpl:oY,subImpl:uY,tileImpl:lY,topKImpl:cY,transposeImpl:ux,uniqueImpl:dY}=Pv;function G2(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function mn(e,t){return t===1?[e]:G2(e,t)}function pY(e,t){if(e===1)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}var hY=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=kn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=mn("rc",this.rank),n=at(this.rank),s=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${n===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},H2=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length);let n="";for(let s=0;s<4;s++){let r="thisRC = rc;";s%2===1&&(r+="thisRC.z += 1;"),s>1&&(r+="thisRC.y += 1;"),n+=`
        ${r}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${fY(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?tx():ex(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function fY(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?DX(["r","c","d"],"inputShape"):_i(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var mY=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let s=Xw(t,n),r=Yw(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let a=Kw(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();let o=this.freeTextures[r].shift();return this.usedTextures[r].push(o),o}let i;return s===3?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===4?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===1?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===0?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===2&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(this.freeTextures==null)return;let r=Xw(n,s),a=Yw(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);let i=Kw(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=K().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function gY(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Kw(e,t,n,s,r){let a=bY(t,s),i;if(r){let[u,l]=mu(e[0],e[1]);i=u*l}else{let[u,l]=pc(e[0],e[1]);i=u*l}let o=gY(n,a);return i*o}function bY(e,t){switch(e){case 3:return ix(t);case 4:return ox(t);case 1:return sx(t);case 0:return rx(t);case 2:return ax(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function yY(e){return K().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?3:1:e?4:0}function Xw(e,t){if(e===1)return 3;if(e===0||e==null)return yY(t);if(e===3||e===2)return 2;throw new Error(`Unknown logical texture type ${e}`)}function Yw(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Qs=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},ds="if (isnan(x)) return x;",vY="return x;",Zw="return abs(x);",xY="return (x >= 0.0) ? x : (exp(x) - 1.0);",wY=ds+`
  return (x < 0.0) ? 0.0 : x;
`,kY=ds+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Zi="return x;",SY="return 1.0 / (1.0 + exp(-1.0 * x));",IY="return x;",CY=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,NY=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,TY=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,$Y="return 1.0 / (1.0 + exp(-1.0 * x));",ua=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},_Y=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length);let t=e.length,n=mn("rc",t),s=at(t),r=pY(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},AY=$s.whereImpl,EY=1e-7,RY=1e-4,pd={};function DY(e){return e in pd||(pd[e]={}),pd[e]}var FY=K().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),OY=600;function PY(){return K().global.screen==null?1024:K().global.screen.height*K().global.screen.width*window.devicePixelRatio*OY/1024/1024}var q2=class extends xl{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!K().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof nl)t=e;else{let n=Ts(K().getNumber("WEBGL_VERSION"),e);t=new nl(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Ts(K().getNumber("WEBGL_VERSION"));t=new nl(n),this.binaryCache=DY(K().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new mY(this.gpgpu),this.numMBBeforeWarning=PY(),this.texData=new fp(this,vs())}nextDataId(){return q2.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((K().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||K().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:1,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(K().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:1,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(a!=null){let p;o?p=new ua(i,Zi):p=new Qs(i,Zi);let d=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:s}],s),h=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),h}if(n!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return n;let u=this.activeTimers!=null,l;u&&(l=w.now());let c;if(s==="complex64"){let p=this.readSync(r.real.dataId),d=this.readSync(r.imag.dataId);c=I.mergeRealAndImagArrays(p,d)}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=w.now()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){let h=this.pendingRead.get(e);return new Promise(f=>h.push(f))}let t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(r!=null){let h;o?h=new ua(s,Zi):h=new Qs(s,Zi);let f=this.runWebGLProgram(h,[{dataId:e,shape:s,dtype:a}],a),m=this.read(f.dataId);return this.disposeIntermediateTensorInfo(f),m}if(n!=null)return this.convertAndCacheOnCPU(e);if(K().getBool("DEBUG")&&!K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&K().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,l;if(a!=="complex64"&&K().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let h=this.texData.get(l.dataId);u=this.gpgpu.createBufferFromTexture(h.texture.texture,...cd(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let c;if(a==="complex64"){let h=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),f=h[0],m=h[1];c=I.mergeRealAndImagArrays(f,m)}else if(u==null)c=this.getValuesFromTexture(e);else{let h=w.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(u,h)}if(l!=null&&this.disposeIntermediateTensorInfo(l),u!=null){let h=this.gpgpu.gl;fe(h,()=>h.deleteBuffer(u))}let p=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach(h=>h(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&vs().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){let n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:u}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let d;o?d=new ua(r,Zi):d=new Qs(r,Zi);let h=this.runWebGLProgram(d,[{dataId:e,shape:r,dtype:i}],i),f=this.readToGPU(h,t);return this.disposeIntermediateTensorInfo(h),f}if(u==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let l=this.decode(e,t.customTexShape),c=vs().makeTensorFromTensorInfo(l),p=this.texData.get(l.dataId);return{tensorRef:c,...p.texture}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>w.decodeString(s));return _e(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!Y1(n))throw K().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=w.sizeFromShape(t);if(K().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let p=this.decode(e),d=this.texData.get(p.dataId),h=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...cd(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(p),h}let a=K().getBool("WEBGL_PACK")&&s===!0,i=a?Sd(t):t,o=a?new k8(i):new w8(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),a=w.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(r);i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:w.now(),endMs:null}}endTimer(e){return K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=w.now(),e)}async getQueryTime(e){if(K().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));let l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=FY){return K().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&w.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){I.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return AY(e.shape,t)}packedUnaryOp(e,t,n){let s=new ua(e.shape,t),r=this.compileAndRun(s,[e],n);return vs().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let s=W2(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(K().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Zw,e.dtype);let t=new Qs(e.shape,Zw),n=this.compileAndRun(t,[e]);return vs().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if(t==="string"&&n!=null&&n.length>0&&w.isString(n[0])){let r=n.map(a=>w.encodeString(a));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return vs().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new _Y(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new hY(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Na(e.shape),...Ta(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[Na(t),...Ta(t)],a=new H2(r,n),i=!0,o=[n],u=this.runWebGLProgram(a,[s],e.dtype,o,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;if(t!=null){let p=w.sizeFromShape(r),d=t[0]*t[1]*4;w.assert(p<=d,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Sd(r),o;s?o=new x8(i):o=new v8(i);let u=!0,l=[t!=null?t:cd(i)],c=this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,u,t);return{dtype:a,shape:r,dataId:c.dataId}}runWebGLProgram(e,t,n,s,r=!1,a){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===0){let g=a!=null?a:cd(e.outputShape);o.texShape=g.map(b=>b*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),w.sizeFromShape(i.shape)===0)return o.values=w.getTypedArrayFromDType(i.dtype,0),i;let u=[],l=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(g.dataId);if(b.texture==null){if(!e.packedInputs&&w.sizeFromShape(g.shape)<=K().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:b.values};e.packedInputs&&(b.isPacked=!0,b.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!b.isPacked!=!!e.packedInputs)g=b.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),b=this.texData.get(g.dataId);else if(b.isPacked&&!bl(b.shape,g.shape)){let y=g,v=g.shape;g.shape=b.shape,g=this.packedReshape(g,v),u.push(g),b=this.texData.get(g.dataId),y.shape=v}return{shape:g.shape,texData:b,isUniform:!1}});this.uploadToGPU(i.dataId);let c={shape:i.shape,texData:o,isUniform:!1},p=y8(e,l,c),d=this.getAndSaveBinary(p,()=>g8(this.gpgpu,e,l,c)),h=this.activeTimers!=null,f;h&&(f=this.startTimer()),K().get("ENGINE_COMPILE_ONLY")||b8(this.gpgpu,d,l,c,s),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),h&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));let m=K().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let g=w.now();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!K().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&r===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(K().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Y(()=>{if(!K().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=K().getBool("DEBUG");K().set("DEBUG",!1);let t=this.abs(Se(1e-8)).dataSync()[0];if(K().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?EY:RY}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(a!=null)return;let u=this.activeTimers!=null,l;u&&(l=w.now());let c=t.texShape;if(c==null&&(c=h2(n,o),t.texShape=c),r!=null){let p=Sd(n),d,h=c[1],f=c[0],m=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(o||!m)&&([h,f]=mu(c[0],c[1])),o?d=new I8(p,m):d=new S8(p,m);let g=m?[f,h]:c,b=this.makeTensorInfo(g,s),y=this.texData.get(b.dataId);m?y.usage=2:y.usage=1,y.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),h,f,r);let v=[[f,h]],x=!0,k=this.runWebGLProgram(d,[b],s,v,x),C=this.texData.get(k.dataId);t.texShape=C.texShape,t.isPacked=C.isPacked,t.usage=C.usage,K().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(t.texture=C.texture,t.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(b),u&&(this.uploadWaitMs+=w.now()-l)}else{let p=this.acquireTexture(c,i,s,o);t.texture=p}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),t!=null&&(n.values=LY(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*w.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(r){throw r}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await GS(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(Jv(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}=I2(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}},Ch=q2;Ch.nextDataId=0;function LY(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let s=0;s<n.length;++s)n[s]=Math.round(e[s]);return n}else throw new Error(`Unknown dtype ${t}`)}Lp.isBrowser()&&iu("webgl",()=>new Ch,2);var j2=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,bo=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=kn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Nh=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`,fc=class{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=I.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=kn(r);let a="";if(s)if(r===0||w.sizeFromShape(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${at(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let o=mn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${o[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${o[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${o[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${o[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}};function Un(e){let{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}var zY={kernelName:Ya,backendName:"webgl",kernelFunc:Un};function Vr(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=Un({inputs:{x:s},backend:n}),u=Un({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}var MY={kernelName:vp,backendName:"webgl",kernelFunc:Vr},K2="return (a < 0.) ? b * a : a;",X2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function BY(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",w.createScalarValue(a,"float32")),o=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fc(X2,r.shape,i.shape):new bo(K2,r.shape,i.shape),u=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),u}var VY={kernelName:Za,backendName:"webgl",kernelFunc:BY},Y2="return (a < 0.) ? b * a : a;",Z2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function WY(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fc(Z2,s.shape,r.shape):new bo(Y2,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}var UY={kernelName:li,backendName:"webgl",kernelFunc:WY},wu="if (isnan(x)) return x;",GY=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,HY=`
  result.r = isNaN.r > 0. ? NAN : result.r;
  result.g = isNaN.g > 0. ? NAN : result.g;
  result.b = isNaN.b > 0. ? NAN : result.b;
  result.a = isNaN.a > 0. ? NAN : result.a;
`;function Xe({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{let{x:i}=r,o=a,u=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let p=o.texData.get(i.dataId),d=n(p.values,u);return o.makeTensorInfo(i.shape,u,d)}let l=K().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,c;return l?c=new ua(i.shape,t):c=new Qs(i.shape,e),o.runWebGLProgram(c,[i],u)}}function en({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{let{a:u,b:l}=i,c=o;if(s&&u.dtype==="complex64"){let f=c.texData.get(u.dataId),m=c.texData.get(l.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(v=>{let[x,k]=v,C={dataId:x.dataId,dtype:x.dtype,shape:u.shape},$={dataId:k.dataId,dtype:k.dtype,shape:l.shape},A=new bo(e,u.shape,l.shape);return c.runWebGLProgram(A,[C,$],bn(x.dtype,k.dtype))}),y=Vr({inputs:{real:g,imag:b},backend:c});return c.disposeIntermediateTensorInfo(g),c.disposeIntermediateTensorInfo(b),y}let p=a||bn(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([u,l]))&&r!=null){let f=c.texData.get(u.dataId).values,m=c.texData.get(l.dataId).values,g=u.dtype==="string"?I.fromUint8ToStringArray(f):f,b=u.dtype==="string"?I.fromUint8ToStringArray(m):m,[y,v]=r(u.shape,l.shape,g,b,p),x=c.makeTensorInfo(v,p),k=c.texData.get(x.dataId);return k.values=y,x}let d=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,h;return d?h=new fc(t,u.shape,l.shape,n):h=new bo(e,u.shape,l.shape),c.runWebGLProgram(h,[u,l],p)}}function yl(e,t=!1){if(e==="linear")return t?IY:vY;if(e==="relu")return t?NY:wY;if(e==="elu")return t?CY:xY;if(e==="relu6")return t?TY:kY;if(e==="prelu")return t?Z2:Y2;if(e==="leakyrelu")return t?X2:K2;if(e==="sigmoid")return t?$Y:SY;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var Q2=class{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=kn(this.outputShape.length);let l=s?e[1]:e[2],c=Math.ceil(l/2),p=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",h=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(o?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:m=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",v="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(v=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${c}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${c}; i++) {
          int batchA = ${y};
          int batchB = ${v};
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${d});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${h[0]} * ${f[0]});
          result += (${h[1]} * ${f[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${b}

        ${g}

        setOutput(result);
      }
    `}},Qw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Jw=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},ek="return a * b;";function lx(e){let{inputs:t,backend:n}=e,{a:s,b:r}=t,a=I.upcastType(s.dtype,r.dtype);if(s.dtype==="complex64"){let o=n.texData.get(s.dataId),u=n.texData.get(r.dataId),l=new Jw(Qw.REAL,s.shape,r.shape),c=new Jw(Qw.IMAG,s.shape,r.shape),p=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:s.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:r.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:r.shape}],d=n.runWebGLProgram(l,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),f=Vr({inputs:{real:d,imag:h},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([s,r])){let o=n.texData.get(s.dataId),u=n.texData.get(r.dataId),[l,c]=q8(s.shape,r.shape,o.values,u.values,a),p=n.makeTensorInfo(c,a),d=n.texData.get(p.dataId);return d.values=l,p}let i;return K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new fc(ek,s.shape,r.shape):i=new bo(ek,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}var qY={kernelName:ii,backendName:"webgl",kernelFunc:lx};function jY(e,t,n){let s=[Na(e.shape),...Ta(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[Na(t),...Ta(t)],i=new H2(a,s),o=!0,u=[s],l=n.runWebGLProgram(i,[r],e.dtype,u,o);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function pe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=w.sizeFromShape(r.shape),u=w.inferFromImplicitShape(a,o),l=w.sizeFromShape(u);w.assert(o===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let c=i.texData.get(r.dataId);return c.isPacked&&!bl(r.shape,u)&&!(c.texture!==null&&bl(c.shape,u))?jY(r,u,i):(i.incRef(r.dataId),{dataId:r.dataId,shape:u,dtype:r.dtype})}var KY={kernelName:Uo,backendName:"webgl",kernelFunc:pe},tk=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i=Math.floor(n/4)*4,o=n%4,u="sumValue += dot(values, ones);";if(t!=null){let c=1/t;u=`sumValue += dot(values * ${w.isInt(c)?c.toPrecision(2):c}, ones);`}let l="";r%n>0&&(l=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}},XY=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let l=Math.floor(n/4)*4,c=n%4,p=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,d="vec4";t==="all"?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,d="bvec4"):t==="any"&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,d="bvec4");let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${l};
        if (${c===1}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===2}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${c===3}) {
          ${d} values = ${d}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${u});
      }
    `}};function YY(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],s=I.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function Ei(e,t,n,s){let r=YY(e.shape),a=e;for(let i=0;i<r.length;i++){let{inSize:o,windowSize:u,outSize:l}=r[i],c,p;n==="mean"?c=i===0?new tk({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new tk({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):c=new XY({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),p=a,a=s.runWebGLProgram(c,[a],t),p.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(p)}return a}var ZY=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let s=at(this.rank),r=QY(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}};function QY(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}var JY=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let s=at(this.rank),r=G2("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=r[l];let i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${o}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${o}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function Th(e,t,n){let s=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JY(e.shape,t):new ZY(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function e9(e,t,n,s){let r=t,a=e.shape.length,i=w.parseAxisParam(r,e.shape),o=i,u=I.getAxesPermutation(o,a),l=u!=null,c=e;l&&(c=Th(e,u,s),o=I.getInnerMostAxes(o.length,a)),I.assertAxesAreInnerMostDims("sum",o,a);let[p,d]=I.computeOutAndReduceShapes(c.shape,o),h=p;n&&(h=I.expandShapeToKeepDim(p,i));let f=w.sizeFromShape(d),g=w.sizeFromShape(e.shape)/f,b=pe({inputs:{x:c},attrs:{shape:[g,f]},backend:s}),y=Pp(e.dtype),v=Ei(b,y,"sum",s),x=pe({inputs:{x:v},attrs:{shape:h},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(v),l&&s.disposeIntermediateTensorInfo(c),x}function $h(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return e9(r,a,i,n)}var t9={kernelName:vi,backendName:"webgl",kernelFunc:$h};function vn(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let c=0;c<u.length;c++)u[c]=r.shape[a[c]];let l;if(i.shouldExecuteOnCPU([r])){let p=i.texData.get(r.dataId).values,d=ux(p,r.shape,r.dtype,a,u);l=i.makeTensorInfo(u,r.dtype);let h=i.texData.get(l.dataId);h.values=d}else l=Th(r,a,i);return l}var n9={kernelName:Js,backendName:"webgl",kernelFunc:vn},J2=1e3;function ip({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let l=e.shape.length,c=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],d=s?t.shape[c-1]:t.shape[c-2],h=n?e.shape[l-1]:e.shape[l-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),x=ou.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[b,p,h]:[b,h,p],C=s?[y,f,d]:[y,d,f],$=pe({inputs:{x:e},backend:r,attrs:{shape:k}}),A=pe({inputs:{x:t},backend:r,attrs:{shape:C}}),E=[$,A],O=Math.max(b,y),R=n?$.shape[1]:$.shape[2],D=a!=null,T=i!=null,L=u==="leakyrelu",W=u!=null?yl(u,!0):null,q=D||T||L||W!=null,j;if((h===1||f===1)&&R>J2&&q===!1){let Q=$,ne=A;n&&(Q=vn({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),E.push(Q)),s&&(ne=vn({inputs:{x:A},backend:r,attrs:{perm:[0,2,1]}}),E.push(ne));let J=f!==1,se=f===1,te=Q;J&&(te=pe({inputs:{x:Q},backend:r,attrs:{shape:[O,R,1]}}),E.push(te));let oe=f===1?2:1,re=ne;se&&(re=pe({inputs:{x:ne},backend:r,attrs:{shape:[O,1,R]}}),E.push(re));let le=lx({inputs:{a:te,b:re},backend:r});j=$h({inputs:{x:le},backend:r,attrs:{axis:oe,keepDims:!0}}),E.push(le)}else{let Q=bn(e.dtype,t.dtype),ne=new Q2(k,C,[O,h,f],n,s,D,W,T,L),J=[$,A];if(a!=null&&J.push(a),T&&J.push(i),L){let se=r.makeTensorInfo([],"float32",w.createScalarValue(o,"float32"));J.push(se),E.push(se)}j=r.runWebGLProgram(ne,J,Q)}let X=pe({inputs:{x:j},backend:r,attrs:{shape:x}});E.push(j);for(let Q of E)r.disposeIntermediateTensorInfo(Q);return X}function s9(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=s;return ip({a:r,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:c})}var r9={kernelName:ma,backendName:"webgl",kernelFunc:s9},nk="return abs(x);";function a9(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){let a=n.texData.get(s.dataId),i=W2(a.values);return n.makeTensorInfo(s.shape,s.dtype,i)}let r;return K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new ua(s.shape,nk):r=new Qs(s.shape,nk),n.runWebGLProgram(r,[s],s.dtype)}var i9={kernelName:vo,backendName:"webgl",kernelFunc:a9},o9=ds+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,u9=Xe({opSnippet:o9}),l9={kernelName:wl,backendName:"webgl",kernelFunc:u9},c9=ds+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,d9=Xe({opSnippet:c9}),p9={kernelName:kl,backendName:"webgl",kernelFunc:d9},sk="return a + b;",h9=en({opSnippet:sk,packedOpSnippet:sk,supportsComplex:!0,cpuKernelImpl:T8}),f9={kernelName:Er,backendName:"webgl",kernelFunc:h9},m9=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`float v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}},g9=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);let n=[];this.variableNames.forEach(r=>{n.push(`vec4 v${r} = get${r}AtOutCoords();`)});let s=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}};function Nd(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Un({inputs:{x:s[0]},backend:n});if(s.length>K().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let u=Math.floor(s.length/2),l=Nd({inputs:s.slice(0,u),backend:n}),c=Nd({inputs:s.slice(u),backend:n});return Nd({inputs:[l,c],backend:n})}let r=s.map(u=>u.dtype).reduce((u,l)=>bn(u,l)),a=s.map(u=>u.shape),o=K().getBool("WEBGL_PACK")?new g9(s[0].shape,a):new m9(s[0].shape,a);return n.runWebGLProgram(o,s,r)}var b9={kernelName:Ea,backendName:"webgl",kernelFunc:Nd};function y9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=I.getAxesPermutation(l,o),p=r;c!=null&&(p=vn({inputs:{x:r},backend:n,attrs:{perm:c}}),l=I.getInnerMostAxes(l.length,o)),I.assertAxesAreInnerMostDims("all",l,o);let[d,h]=I.computeOutAndReduceShapes(p.shape,l),f=w.sizeFromShape(h),m=pe({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=Ei(m,m.dtype,"all",n),b;if(i){let y=I.expandShapeToKeepDim(d,u);b=pe({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=pe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),b}var v9={kernelName:Sl,backendName:"webgl",kernelFunc:y9};function x9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=I.getAxesPermutation(l,o),p=r;c!=null&&(p=vn({inputs:{x:r},backend:n,attrs:{perm:c}}),l=I.getInnerMostAxes(l.length,o)),I.assertAxesAreInnerMostDims("any",l,o);let[d,h]=I.computeOutAndReduceShapes(p.shape,l),f=w.sizeFromShape(h),m=pe({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=Ei(m,m.dtype,"any",n),b;if(i){let y=I.expandShapeToKeepDim(d,u);b=pe({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=pe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),b}var w9={kernelName:Il,backendName:"webgl",kernelFunc:x9},k9=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},S9=class{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,w.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,u=at(o),l=mn("coords",o),c,p;if(a===1){p=o+1;let $=at(p);c=`
        ${$} sourceLocR = ${$}(${l.join()}, 0);
        ++${l[o-1]};
        ${$} sourceLocG = ${$}(${l.join()}, 0);
        ++${l[o-2]};
        ${$} sourceLocA = ${$}(${l.join()}, 0);
        --${l[o-1]};
        ${$} sourceLocB = ${$}(${l.join()}, 0);
        --${l[o-2]};`}else p=o,c=`
        ${u} sourceLocR = coords;
        ++${l[o-1]};
        ${u} sourceLocG = coords;
        ++${l[o-2]};
        ${u} sourceLocA = coords;
        --${l[o-1]};
        ${u} sourceLocB = coords;
        --${l[o-2]};`;let d=["x","y","z","w","u","v"].slice(0,p),h="."+d[p-1],f=d.map($=>"int "+$),m=mn("sourceLocR",p-1).concat("inIdx.r"),g=mn("sourceLocG",p-1).concat("inIdx.g"),b=mn("sourceLocB",p-1).concat("inIdx.b"),y=mn("sourceLocA",p-1).concat("inIdx.a"),v=n==="max"?"greaterThan":"lessThan",x=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${b.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,C=s?"":`
      float getBestIndicesAChannel(${f.join()}) {
        return getChannel(getBestIndicesA(${d.join()}),
                                          vec2(${d.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${f.join()}) {
        return getChannel(getA(${d.join()}),
                               vec2(${d.slice(-2).join()}));
      }
      ${C}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};
        ${c}
        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},
          sourceLocB${h}, sourceLocA${h}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${x}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function eN(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];s!=null&&(r=s.shape[0],a=s.shape[1]);let i=I.computeOptimalWindowSize(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},u=new k9(o,n,s==null),l=[t];s!=null&&l.push(s);let c=e.runWebGLProgram(u,l,"int32");if(c.shape[1]===1)return c;let p=eN(e,t,n,c);return e.disposeIntermediateTensorInfo(c),p}function tN(e,t,n,s=null){let r=s!=null?s.shape:t.shape,a=r[r.length-1],i=I.computeOptimalWindowSize(a),o=new S9(r,i,n,s==null),u=s==null?[t]:[t,s],l=e.runWebGLProgram(o,u,"int32");if(l.shape.length===t.shape.length){let c=tN(e,t,n,l);return e.disposeIntermediateTensorInfo(l),c}return l}function nN(e,t,n,s){let r=[n];if(I.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!K().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let a=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,u=t;o&&(u=e.unpackTensor(t),a.push(u));let[l,c]=I.computeOutAndReduceShapes(u.shape,r),p=w.sizeFromShape(c),d=pe({inputs:{x:u},backend:e,attrs:{shape:[-1,p]}});a.push(d);let h=eN(e,d,s);a.push(h);let f=pe({inputs:{x:h},backend:e,attrs:{shape:l}});return a.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}return tN(e,t,s)}function I9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=vn({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let c=nN(n,u,i[0],"max");return l.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var C9={kernelName:Ra,backendName:"webgl",kernelFunc:I9};function N9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=vn({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let c=nN(n,u,i[0],"min");return l.forEach(p=>n.disposeIntermediateTensorInfo(p)),c}var T9={kernelName:Cl,backendName:"webgl",kernelFunc:N9},$9=ds+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,_9=Xe({opSnippet:$9}),A9={kernelName:Nl,backendName:"webgl",kernelFunc:_9},E9=ds+"return log(x + sqrt(x * x + 1.0));",R9=Xe({opSnippet:E9}),D9={kernelName:Tl,backendName:"webgl",kernelFunc:R9},F9=ds+`
  return atan(x);
`,O9=Xe({opSnippet:F9}),P9={kernelName:$l,backendName:"webgl",kernelFunc:O9},L9=GY+`
  return atan(a, b);
`,z9=`
  vec4 result = atan(a, b);
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+HY+`
  return result;
`,M9=en({opSnippet:L9,packedOpSnippet:z9}),B9={kernelName:Al,backendName:"webgl",kernelFunc:M9},V9=ds+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,W9=Xe({opSnippet:V9}),U9={kernelName:_l,backendName:"webgl",kernelFunc:W9},vl=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;let f=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,b="0.0";if(f||(b="-1.0 / 1e-20"),n){let $=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${d}, ${h});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${c};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${$} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?r?m:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let y="max",v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(v="avgValue / count");let x=Math.floor(a/4)*4,k=a%4,C=`
      if (${f}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${d}, ${h});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${c};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${x}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${C}
          }

          int xC = xCCorner + ${x};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${C}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${C}
          }
        }
        setOutput(${v});
      }
    `}},cx=class{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;let y=t==="avg",v="0.0";if(y||(v="-1.0 / 1e-20"),n){let E=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${u});
        const ivec3 pads = ivec3(${m}, ${g}, ${b});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${d};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${h};
                wR += ${c}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${f};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${E} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +
                      wR * ${f} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let x="max",k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");let C=Math.floor(a/4)*4,$=a%4,A=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${x}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${u});
      const ivec3 pads = ivec3(${m}, ${g}, ${b});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h};
            wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${C}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${A}
            }

            int xC = xCCorner + ${C};
            if (${$===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${$===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${A}
            } else if (${$===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${A}
            }
          }
          setOutput(${k});
        }
      }
    `}};function G9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;gu(r,"avgPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(r.shape,a,i,l,o,u);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return Un({inputs:{x:r},backend:n});let p=new vl(c,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var H9={kernelName:Da,backendName:"webgl",kernelFunc:G9};function q9(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=s,c=[1,1,1],p=I.computePool3DInfo(r.shape,a,i,c,o,u,l),d=new cx(p,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}var j9={kernelName:yp,backendName:"webgl",kernelFunc:q9},K9=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${c});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},X9=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function Y9(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s,p=[1,1,1],d=I.computePool3DInfo(i.shape,o,u,p,l,c),h=new X9(d);return n.runWebGLProgram(h,[r],i.dtype)}var Z9={kernelName:Xg,backendName:"webgl",kernelFunc:Y9};function Q9(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;gu([r,a],"avgPoolGrad");let{filterSize:o,strides:u,pad:l}=s,c=I.computePool2DInfo(i.shape,o,u,1,l),p=new K9(c);return n.runWebGLProgram(p,[r],i.dtype)}var J9={kernelName:Kg,backendName:"webgl",kernelFunc:Q9};function eZ(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return ip({a:r,b:a,transposeA:i,transposeB:o,backend:n})}var tZ={kernelName:Fa,backendName:"webgl",kernelFunc:eZ},nZ=class{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let i="0.0";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";r!=null&&(I.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},sZ=class{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";r!=null&&(I.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}},rZ=({inputs:e,backend:t,attrs:n})=>{let{x:s,mean:r,variance:a,offset:i,scale:o}=e;w.assert(r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),w.assert(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),w.assert(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);let l=[s,r,a],c=null;i!=null&&(c=i.shape,l.push(i));let p=null;o!=null&&(p=o.shape,l.push(o));let d=K().getBool("WEBGL_PACK_NORMALIZATION")?new sZ(s.shape,r.shape,a.shape,c,p,u):new nZ(s.shape,r.shape,a.shape,c,p,u);return t.runWebGLProgram(d,l,l[0].dtype)},aZ={kernelName:Ka,backendName:"webgl",kernelFunc:rZ},iZ=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=at(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=oZ(this.rank),s,r=e.map((a,i)=>`sourceLoc.${Dg[i]} = start[${i}] + coords.${Dg[i]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${n}));
      }
    `}},Dg=["x","y","z","w","u","v"];function oZ(e){if(e===1)return"sourceLoc";if(e<=6)return Dg.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var uZ=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=at(this.rank),n=mn("coords",this.rank),s=mn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`
      result.x = ${a};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,c)=>`start[${c}]`).join()});`:e.map((l,c)=>`${s[c]} = ${n[c]} + start[${c}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function lZ(e,t,n,s){let r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=It.computeFlatOffset(t,w.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),a}function ku(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,u]=It.parseSliceParams(r,a,i);if(It.assertParamsValid(r,o,u),w.sizeFromShape(u)===0)return n.makeTensorInfo(u,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.texData.get(r.dataId),d=eY(p.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,d)}let{isPacked:l}=n.texData.get(r.dataId),c=It.isSliceContinous(r.shape,o,u);if(l||!c){let p=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uZ(u):new iZ(u),d=[o];return n.runWebGLProgram(p,[r],r.dtype,d)}return n.uploadToGPU(r.dataId),lZ(r,o,u,n)}var cZ={kernelName:Ko,backendName:"webgl",kernelFunc:ku},dZ=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=a.reduce((y,v)=>y*v),u=I.getReshaped(r.shape,a,o),l=I.getPermuted(u.length,a.length),c=I.getReshapedPermuted(r.shape,a,o),p=I.getSliceBeginCoords(i,a.length),d=I.getSliceSize(c,i,a.length),h=[],f=pe({inputs:{x:r},backend:n,attrs:{shape:u}}),m=vn({inputs:{x:f},backend:n,attrs:{perm:l}}),g=pe({inputs:{x:m},backend:n,attrs:{shape:c}}),b=ku({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach(y=>n.disposeIntermediateTensorInfo(y)),b},pZ={kernelName:xo,backendName:"webgl",kernelFunc:dZ};function hZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=V2(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}var fZ={kernelName:Yg,backendName:"webgl",kernelFunc:hZ};function mZ(e){let{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=I.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var gZ={kernelName:Zg,backendName:"webgl",kernelFunc:mZ},bZ="return float(a != b);",sN=en({opSnippet:bZ,cpuKernelImpl:K8,dtype:"bool"}),yZ={kernelName:Lo,backendName:"webgl",kernelFunc:sN};function mc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Un({inputs:{x:r.complexTensorInfos.real},backend:n})}var vZ={kernelName:Tp,backendName:"webgl",kernelFunc:mc},xZ="return float(int(x));";function wZ(e,t){let n=new Qs(e.shape,xZ),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function Fg(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Un({inputs:{x:r},backend:n});let i=Et(r.shape),o=Fg({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Vr({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),u}if(r.dtype==="complex64"){let i=mc({inputs:{input:r},backend:n}),o=Fg({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(i),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=Un({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32")return wZ(r,n);if(a==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),u=sN({inputs:{a:r,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var kZ={kernelName:Oa,backendName:"webgl",kernelFunc:Fg},rk="return ceil(x);",SZ=Xe({opSnippet:rk,packedOpSnippet:rk,cpuKernelImpl:_8}),IZ={kernelName:Pa,backendName:"webgl",kernelFunc:SZ},CZ=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},NZ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function TZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o;K().getBool("WEBGL_PACK_CLIP")?o=new NZ(r.shape):o=new CZ(r.shape);let u=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,u)}var $Z={kernelName:Rr,backendName:"webgl",kernelFunc:TZ},_Z=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function ak(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function AZ(e){let{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new _Z(s.shape),i=[ak(s,r.complexTensorInfos.real),ak(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}var EZ={kernelName:xp,backendName:"webgl",kernelFunc:AZ},RZ=class{constructor(e){this.outputShape=[],this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((a,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){let i=t[a-1];n.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}let s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},DZ=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=I.computeOutShape(e,t);let n=this.outputShape,s=n.length,r=at(s),a=mn("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((f,m)=>`T${m}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];let u=i[t],l=i.slice(-2),c=i.join(),p=`if (${u} < ${o[0]}) {
        return getChannel(
            getT0(${c}), vec2(${l.join()}));
        }`;for(let f=1;f<o.length;f++){let m=o[f-1];p+=`
        if (${u} < ${o[f]}  && ${u} >= ${o[f-1]}) {
          return getChannel(
            getT${f}(${hd(i,u,m)}),
            vec2(${hd(l,u,m)}));
        }`}let d=o.length,h=o[o.length-1];p+=`
        return getChannel(
          getT${d}(${hd(i,u,h)}),
          vec2(${hd(l,u,h)}));`,this.userCode=`
      float getValue(${i.map(f=>"int "+f)}) {
        ${p}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${n[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${n[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${n[s-2]} &&
            ${a[s-1]} < ${n[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}};function hd(e,t,n){let s=e.indexOf(t);return e.map((a,i)=>i===s?`${a} - ${n}`:a).join()}function _h(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return Un({inputs:{x:r.complexTensorInfos.imag},backend:n})}var FZ={kernelName:Ip,backendName:"webgl",kernelFunc:_h};function Qu(e,t,n){let s=e[0].dtype;if(s==="complex64"){let p=e.map(g=>mc({inputs:{input:g},backend:n})),d=e.map(g=>_h({inputs:{input:g},backend:n})),h=Qu(p,t,n),f=Qu(d,t,n),m=Vr({inputs:{real:h,imag:f},backend:n});return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),d.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let p=e.map(y=>{let v=w.sizeFromShape(y.shape.slice(t));return pe({inputs:{x:y},backend:n,attrs:{shape:[-1,v]}})}),d=p.map(y=>({vals:n.readSync(y.dataId),shape:y.shape})),h=I.computeOutShape(p.map(y=>y.shape),1),f=p[0].shape[0]===1,m=A8(d,h,s,f),g=I.computeOutShape(e.map(y=>y.shape),t),b=n.makeTensorInfo(g,s,m);return p.forEach(y=>n.disposeIntermediateTensorInfo(y)),b}let a=K().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>a){let p=[];for(let h=0;h<e.length;h+=a){let f=e.slice(h,h+a);p.push(Qu(f,t,n))}let d=Qu(p,t,n);for(let h of p)n.disposeIntermediateTensorInfo(h);return d}if(K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){let p=new DZ(e.map(d=>d.shape),t);return n.runWebGLProgram(p,e,s)}let{tensors2D:i,outShape:o}=OZ(e,t,n),u=new RZ(i.map(p=>p.shape)),l=n.runWebGLProgram(u,i,s);i.forEach(p=>n.disposeIntermediateTensorInfo(p));let c=pe({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function OZ(e,t,n){let s=I.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>pe({inputs:{x:a},attrs:{shape:[-1,w.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:s}}function rN(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=I.computeOutShape(t.map(l=>l.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(l=>w.sizeFromShape(l.shape)>0);if(o.length===1)return Un({inputs:{x:o[0]},backend:n});let u=o.map(l=>l.shape);return I.assertParamsConsistent(u,a),Qu(o,a,n)}var PZ={kernelName:wo,backendName:"webgl",kernelFunc:rN},aN=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,b=m?2:3,y=m?3:1,v="",x="";n&&(s?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:v=`
          float activation(float x) {
            ${n}
          }
        `,x="result = activation(result);");let k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${o}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${b}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${d}; wC++) {
            int xC = xCCorner + wC * ${c};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${h}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${f===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${h}) *
                    getW(wR, wC, ${h}, d2);
              } else {
                dotProd +=
                    getX(batch, ${h}, xR, xC) *
                    getW(wR, wC, ${h}, d2);
              }

            } else if (${f===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${f===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${h}, d2),
                getW(wR, wC, ${h} + 1, d2),
                getW(wR, wC, ${h} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${h}),
                  getX(batch, xR, xC, ${h} + 1),
                  getX(batch, xR, xC, ${h} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${h}, xR, xC),
                  getX(batch, ${h} + 1, xR, xC),
                  getX(batch, ${h} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${x}
        setOutput(result);
      }
    `}},LZ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,d=e.filterWidth,h=Math.floor(e.inChannels/4)*4,f=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${c}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${h}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${f===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${h}) *
                  getW(wF, wR, wC, ${h}, d2);
              } else if (${f===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${f===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${h}),
                  getX(batch, xF, xR, xC, ${h} + 1),
                  getX(batch, xF, xR, xC, ${h} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${h}, d2),
                  getW(wF, wR, wC, ${h} + 1, d2),
                  getW(wF, wR, wC, ${h} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},iN=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kn(this.outputShape.length);let a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,c=l,p=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<l;m++)p+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;p+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<l;m++)p+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;p+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(c+1)/2;m++){let g=m*2;if(p+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<l&&(a%2===1?(p+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?p+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:p+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):p+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<l)){let b=a%2===0?w.nearestLargerEven(o):o;o%2===0&&a%2===1||o%2!==0&&a%2!==1?(p+=`
                   xCOffset = xC + imod(pads[1], 2) + ${b};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?p+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:p+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):b===1?p+=`
                     xC${g+1} = xTexelC${g};
                     `:p+=`
                     xCOffset = xC + ${b};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<l&&(a%2===1?(p+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<l&&(p+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(p+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<l&&(p+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<l&&(p+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<l&&(p+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}p+=`
     }
   `,p+=`
     }
   `,p+=`
     }
   `;let d="",h="";n&&(s?d=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:r?d=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:d=`vec4 activation(vec4 x) {
           ${n}
         }`,h="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${d}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${p}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${f}
         ${h}
         setOutput(result);
       }
     `}},zZ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=kn(this.outputShape.length);let{dataFormat:n}=t,s=wn(),r=n==="channelsLast",a=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,u="";for(let l=0;l<=1;l++)for(let c=0;c<=1;c++)u+=`
          blockIndex = rc.z + ${c};
          pos = rc.y + ${l};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+c}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+c}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${s.output} = result;
      }
    `}};function op(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function oN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=e.shape,l=s.texData.get(e.dataId),c=n.inChannels,p=u[0]*u[1]*u[2],d=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1,g,b=[];if(a!=null){let x=op(a.shape,h);x!=null&&(a=pe({inputs:{x:a},backend:s,attrs:{shape:x}}),b.push(a))}if(r!=null){let x=op(r.shape,h);x!=null&&(r=pe({inputs:{x:r},backend:s,attrs:{shape:x}}),b.push(r))}if(!((p===1||d===1)&&c>J2)&&l.isPacked&&h&&l.texture!=null&&u[2]%2!==0&&w.arraysEqual(l.shape.slice(-3),u.slice(-3))){let x=u[0]*u[1]*(u[2]+1),k={dataId:e.dataId,shape:[1,x,n.inChannels],dtype:e.dtype},C=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,w.assert(bl(l.shape,k.shape),()=>`packed reshape ${l.shape} to ${k.shape} isn't free`);let $=pe({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push($);let A=ip({a:k,b:$,backend:s,transposeA:f,transposeB:m,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),E=s.texData.get(A.dataId);w.assert(E.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=C,E.shape=n.outShape,g=Un({inputs:{x:A},backend:s}),g.shape=n.outShape,b.push(A)}else{let x=n.outHeight*n.outWidth,k=pe({inputs:{x:e},backend:s,attrs:{shape:h?[n.batchSize,x,n.inChannels]:[n.batchSize,n.inChannels,x]}}),C=pe({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),$=ip({a:h?k:C,b:h?C:k,transposeA:!h,transposeB:m,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});g=pe({inputs:{x:$},backend:s,attrs:{shape:n.outShape}}),b.push(k),b.push(C),b.push($)}for(let x of b)s.disposeIntermediateTensorInfo(x);return g}function uN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:u,filterHeight:l,inChannels:c,outWidth:p,outHeight:d,dataFormat:h}=n,f=h==="channelsLast",m=u*l*c,g=d*p,b=[n.batchSize,m,g],y=!0,v=!1,x=[];if(a!=null){let X=op(a.shape,f);X!=null&&(a=pe({inputs:{x:a},backend:s,attrs:{shape:X}}),x.push(a))}if(r!=null){let X=op(r.shape,f);X!=null&&(r=pe({inputs:{x:r},backend:s,attrs:{shape:X}}),x.push(r))}let k=pe({inputs:{x:t},backend:s,attrs:{shape:[1,m,w.sizeFromShape(t.shape)/m]}});x.push(k);let C=new zZ(b,n),$=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],A=s.runWebGLProgram(C,[e],"float32",$),E=pe({inputs:{x:A},backend:s,attrs:{shape:b}});x.push(A),x.push(E);let O=r!=null,R=a!=null,D=o==="leakyrelu",T=o?yl(o,!0):null,L=new Q2(f?E.shape:k.shape,f?k.shape:E.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],y,v,O,T,R,D),W=f?[E,k]:[k,E];if(r&&W.push(r),R&&W.push(a),D){let X=s.makeTensorInfo([],"float32",w.createScalarValue(i,"float32"));W.push(X),x.push(X)}let q=s.runWebGLProgram(L,W,"float32"),j=pe({inputs:{x:q},backend:s,attrs:{shape:n.outShape}});x.push(q);for(let X of x)s.disposeIntermediateTensorInfo(X);return j}function MZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s,p=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,p),h;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))h=oN({x:r,filter:a,convInfo:d,backend:n});else if(d.strideWidth<=2&&p==="channelsLast"&&K().getBool("WEBGL_EXP_CONV")){let m=new iN(d),g=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];h=n.runWebGLProgram(m,[r,a],"float32",g)}else if(K().getBool("WEBGL_CONV_IM2COL"))h=uN({x:r,filter:a,convInfo:d,backend:n});else{let m=new aN(d);h=n.runWebGLProgram(m,[r,a],"float32")}let f=pe({inputs:{x:h},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(h),f}var BZ={kernelName:La,backendName:"webgl",kernelFunc:MZ},VZ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},WZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${c}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},UZ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},GZ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function HZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=s,p=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(r.shape,c,i,1,o,l,!1,p),h=new VZ(d);return n.runWebGLProgram(h,[r,a],"float32")}var qZ={kernelName:Qg,backendName:"webgl",kernelFunc:HZ};function jZ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,p=I.convertConv2DDataFormat(l),d=I.computeConv2DInfo(i,a.shape,o,1,u,c,!1,p),h=new WZ(d);return n.runWebGLProgram(h,[r,a],"float32")}var KZ={kernelName:za,backendName:"webgl",kernelFunc:jZ};function XZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,l=I.computeConv3DInfo(r.shape,a.shape,i,u,o),c=new LZ(l);return n.runWebGLProgram(c,[r,a],"float32")}var YZ={kernelName:wp,backendName:"webgl",kernelFunc:XZ};function ZZ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:u}=s,l=I.computeConv3DInfo(r.shape,u,i,1,o),c=new UZ(l);return n.runWebGLProgram(c,[r,a],"float32")}var QZ={kernelName:Jg,backendName:"webgl",kernelFunc:ZZ};function JZ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:u}=s,l=I.computeConv3DInfo(u,a.shape,o,1,i),c=new GZ(l);return n.runWebGLProgram(c,[r,a],"float32")}var eQ={kernelName:eb,backendName:"webgl",kernelFunc:JZ},tQ=wu+`
  return cos(x);
`,nQ=Xe({opSnippet:tQ}),sQ={kernelName:Ma,backendName:"webgl",kernelFunc:nQ},rQ=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,aQ=Xe({opSnippet:rQ}),iQ={kernelName:Ba,backendName:"webgl",kernelFunc:aQ},oQ=class{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[a,i,o,u]=e,[l]=t,[c,p]=n;this.outputShape=[l,c,p,u];let d=s==="bilinear"?1:0,[h,f]=[`${i-1}.0`,`${o-1}.0`],[m,g,b]=c>1?[`${(i-1)/(c-1)}`,"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[y,v,x]=p>1?[`${(o-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${v};

        float in_y = ${b};
        if( in_y < 0.0 || in_y > ${h} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${x};
        if( in_x < 0.0 || in_x > ${f} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${d} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},uQ=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,c=new oQ(r.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[r,a,i],"float32")},lQ={kernelName:So,backendName:"webgl",kernelFunc:uQ},ik=class{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,a=this.op==="*"?"1.0":"0.0",i=n?a:`getX(${ok(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],u="",l="";n?(u=s?`end != ${o-1}`:"end != 0",l=s?"end + 1":"end - 1"):(u=s?`end + pow2 < ${o}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${at(r)} coords = getOutputCoords();
        int end = ${uk(r,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${uk(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${ok(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function ok(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function uk(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function lN(e,t,n,s,r,a){let i=t.shape.length,o=I.getAxesPermutation([s],i),u=t;o!=null&&(u=vn({inputs:{x:t},backend:n,attrs:{perm:o}}));let l=I.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=u.shape[l],p=Un({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let h=new ik(e,u.shape,!1,a),f=[[d]],m=p;p=n.runWebGLProgram(h,[p],p.dtype,f),n.disposeIntermediateTensorInfo(m)}if(r){let d=new ik(e,u.shape,r,a),h=p;p=n.runWebGLProgram(d,[p],p.dtype),n.disposeIntermediateTensorInfo(h)}if(o!=null){let d=I.getUndoAxesPermutation(o),h=vn({inputs:{x:p},backend:n,attrs:{perm:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(u),h}return p}function cQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return lN("*",r,n,a,i,o)}var dQ={kernelName:ko,backendName:"webgl",kernelFunc:cQ};function pQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return lN("+",r,n,a,i,o)}var hQ={kernelName:Va,backendName:"webgl",kernelFunc:pQ};function fQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(r.shape.length===1){let u=n.readSync(r.dataId),l=n.readSync(a.dataId),c=V2(u,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,c)}else if(r.shape.length===2){let u=n.bufferSync(r),l=n.bufferSync(a),c=$8(u,l,i,o);return n.makeTensorInfo(c.shape,a.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var mQ={kernelName:tb,backendName:"webgl",kernelFunc:fQ},gQ=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function bQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],p=u*a,d=l*a,h=c/(a*a),f=i==="NHWC"?[o,p,d,h]:[o,h,p,d],m=new gQ(f,a,i);return n.runWebGLProgram(m,[r],r.dtype)}var yQ={kernelName:Io,backendName:"webgl",kernelFunc:bQ},cN=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kn(this.outputShape.length);let a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,u="",l="";n&&(s?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,l="result = activation(result);");let c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${c}
        ${l}
        setOutput(result);
      }
    `}},dN=class{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=kn(this.outputShape.length);let a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,p=c,d=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<c;g++)d+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;d+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let g=0;g<c;g++)d+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;d+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(p+1)/2;g++){let b=g*2;if(d+=`
          xC = xCCorner + ${b*u};
          `,o===1){if(b<c&&(i%2===1?(d+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }
              `,u===1&&b>0?d+=`
                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                `:d+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                  } else {
                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                  }
                  `):d+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xC${b} = xTexelC${b};
                `,b+1<c)){let y=i%2===0?w.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(d+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${b+1}.zw = vec2(0.0);
                    }
                    xTexelC${b+1}Ready = 1;
                  }
                  `,u>1?d+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                    } else {
                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                    }
                    `:d+=`
                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                    `):y===1?d+=`
                    xC${b+1} = xTexelC${b};
                    `:d+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${b+1}.zw = vec2(0.0);
                      }
                      xTexelC${b+1}Ready = 1;
                    }

                    xC${b+1} = xTexelC${b+1};
                    `}}else b<c&&(i%2===1?(d+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.0);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
              `,b+1<c&&(d+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                `)):(d+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                  xTexelC${b} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${b}.zw = vec2(0.0);
                  }
                  xTexelC${b}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${b+1}.zw = vec2(0.);
                  }
                  xTexelC${b+1}Ready = 1;
                }

                xC${b} = vec4(
                  xTexelC${b}.xy, xTexelC${b+1}.xy);
              `,b+1<c&&(d+=`
                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                `)));b<c&&(d+=`
            wTexel = getW(r, ${b}, d1, q);
            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);
          `,b+1<c&&(d+=`
              wTexel = getW(r, ${b+1}, d1, q);
              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);
            `))}d+=`
    }
  `,d+=`
      }
    `;let h="",f="";n&&(s?h=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:r?h=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:h=`vec4 activation(vec4 x) {
          ${n}
        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${d}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${f}
        setOutput(result);
      }
    `}};function vQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=s,c=u;c==null&&(c=[1,1]),w.assert(I.eitherStridesOrDilationsAreOne(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);let p=I.computeConv2DInfo(r.shape,a.shape,i,c,o,l,!0),d;K().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?d=new dN(p):d=new cN(p);let h=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return n.runWebGLProgram(d,[r,a],"float32",h)}var xQ={kernelName:Wa,backendName:"webgl",kernelFunc:vQ},wQ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},kQ=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function SQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=s,p=I.computeConv2DInfo(r.shape,c,i,o,u,l,!0),d=new wQ(p);return n.runWebGLProgram(d,[r,a],"float32")}var IQ={kernelName:nb,backendName:"webgl",kernelFunc:SQ};function CQ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=s,p=I.computeConv2DInfo(c,a.shape,i,o,u,l,!0),d=new kQ(p);return n.runWebGLProgram(d,[r,a],"float32")}var NQ={kernelName:sb,backendName:"webgl",kernelFunc:CQ},TQ=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function $Q(e){let{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=w.sizeFromShape(s.shape),i=pe({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new TQ(a),u=n.runWebGLProgram(o,[i],i.dtype),l=pe({inputs:{x:u},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}var _Q={kernelName:rb,backendName:"webgl",kernelFunc:$Q},AQ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:p}=s;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${c}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function EQ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:u}=s,l=I.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u),c,p=new AQ(l);c=n.runWebGLProgram(p,[r,a],"float32");let d=pe({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),d}var RQ={kernelName:kp,backendName:"webgl",kernelFunc:EQ};function DQ(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=I.decodeEinsumEquation(r,a.length);I.checkEinsumDimSizes(i.length,u,a);let{path:l,steps:c}=I.getEinsumComputePath(o,u),p=c.length,d=null,h=i.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:b,expandDims:y}=I.getEinsumPermutation(h,u[g]),v;I.isIdentityPermutation(b)?v=a[g]:(v=vn({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=pe({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),d===null?d=v:(d=lx({inputs:{a:v,b:d},backend:n}),f.push(d))}m<p-1&&(l[m]>=0&&(d=$h({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeIntermediateTensorInfo(m);return d}var FQ={kernelName:Sp,backendName:"webgl",kernelFunc:DQ},OQ="return (x >= 0.0) ? x : (exp(x) - 1.0);",PQ=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,LQ=Xe({opSnippet:OQ,packedOpSnippet:PQ}),zQ={kernelName:Ga,backendName:"webgl",kernelFunc:LQ},MQ="return (b >= 1.0) ? a : a * (b + 1.0);",BQ=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,VQ=e=>{let{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=K().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fc(BQ,s.shape,r.shape):new bo(MQ,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)},WQ={kernelName:ab,backendName:"webgl",kernelFunc:VQ},UQ=`
  return vec4(equal(a, b));
`,GQ="return float(a == b);",HQ=en({opSnippet:GQ,packedOpSnippet:UQ,dtype:"bool",cpuKernelImpl:E8}),qQ={kernelName:Co,backendName:"webgl",kernelFunc:HQ},jQ=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${I.ERF_P};
  float a1 = ${I.ERF_A1};
  float a2 = ${I.ERF_A2};
  float a3 = ${I.ERF_A3};
  float a4 = ${I.ERF_A4};
  float a5 = ${I.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,KQ=Xe({opSnippet:jQ}),XQ={kernelName:El,backendName:"webgl",kernelFunc:KQ},YQ=wu+`
  return exp(x);
`,ZQ=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,pN=Xe({opSnippet:YQ,packedOpSnippet:ZQ,cpuKernelImpl:R8,dtype:"float32"}),QQ={kernelName:Ha,backendName:"webgl",kernelFunc:pN};function Og(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice(),u=r;return r<0&&(w.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),o.splice(u,0,1),pe({inputs:{x:a},backend:s,attrs:{shape:o}})}var JQ={kernelName:No,backendName:"webgl",kernelFunc:Og},lk="return exp(x) - 1.0;",e7=Xe({opSnippet:lk,packedOpSnippet:lk,cpuKernelImpl:D8}),t7={kernelName:To,backendName:"webgl",kernelFunc:e7},ck=class{constructor(e,t,n){this.variableNames=["real","imag"];let s=t[1];this.outputShape=t;let r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function hN(e,t,n){let s=n.texData.get(e.dataId),r=w.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],i=r/a,o=pe({inputs:{x:e},backend:n,attrs:{shape:[i,a]}}),u=o.shape,l=new ck("real",u,t),c=new ck("imag",u,t),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],d=n.runWebGLProgram(l,p,"float32"),h=n.runWebGLProgram(c,p,"float32"),f=Vr({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);let m=pe({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}function n7(e){let{inputs:t,backend:n}=e,{input:s}=t;return hN(s,!1,n)}var s7={kernelName:ib,backendName:"webgl",kernelFunc:n7},r7=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function gc(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let i=w.getArrayFromDType(a,w.sizeFromShape(s));return i.fill(r),t.makeTensorInfo(s,a,i)}else{let i=new r7(s,r),o=[[r]];return t.runWebGLProgram(i,[],a,o)}}var a7={kernelName:Rl,backendName:"webgl",kernelFunc:gc},i7=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},o7={kernelName:$o,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new i7(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},dk="return floor(x);",u7=Xe({opSnippet:dk,packedOpSnippet:dk,cpuKernelImpl:F8}),l7={kernelName:qa,backendName:"webgl",kernelFunc:u7},c7=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,d7=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,p7=en({opSnippet:c7,packedOpSnippet:d7,dtype:"int32"}),h7={kernelName:ja,backendName:"webgl",kernelFunc:p7},f7=class{constructor(e){this.variableNames=["A"];let t=wn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},m7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=wn(),[n,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},g7={kernelName:Rd,backendName:"webgl",kernelFunc:b7},Qi,Rm=K().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function b7(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s,i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,[u,l]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[l,u],p=[l,u,a];if(o||i){let m=K().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Qi==null||m!==Rm)&&(Rm=m,Qi=document.createElement("canvas").getContext("2d",{willReadFrequently:Rm})),Qi.canvas.width=u,Qi.canvas.height=l,Qi.drawImage(r,0,0,u,l),r=Qi.canvas}let d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=2,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);let h=K().getBool("WEBGL_PACK")?new m7(p):new f7(p),f=n.runWebGLProgram(h,[d],"int32");return n.disposeData(d.dataId),f}function y7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=I.convertConv2DDataFormat(c),g=I.computeConv2DInfo(r.shape,a.shape,u,p,l,d,!1,m),b,y=[],v=i!=null,x=o!=null,k=h==="leakyrelu",C=()=>{let A=[r,a],E=(O,R)=>{if(R==="NCHW"&&O.shape.length===1&&O.shape[0]!==1){let D=pe({inputs:{x:O},backend:n,attrs:{shape:[O.shape[0],1,1]}});return y.push(D),D}return O};if(v&&A.push(E(i,c)),x&&A.push(E(o,c)),k){let O=n.makeTensorInfo([],"float32",w.createScalarValue(f,"float32"));A.push(O),y.push(O)}return A};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=oN({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&K().getBool("WEBGL_EXP_CONV")){let A=h?yl(h,!0):null,E=new iN(g,v,A,x,k),O=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],R=C();b=n.runWebGLProgram(E,R,"float32",O)}else if(K().getBool("WEBGL_CONV_IM2COL"))b=uN({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else{let A=h?yl(h,!1):null,E=new aN(g,v,A,x,k),O=C();b=n.runWebGLProgram(E,O,"float32")}let $=pe({inputs:{x:b},backend:n,attrs:{shape:g.outShape}});return y.push(b),y.forEach(A=>n.disposeIntermediateTensorInfo(A)),$}var v7={kernelName:ga,backendName:"webgl",kernelFunc:y7};function x7(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=s,f=[],m=c;m==null&&(m=[1,1]),w.assert(I.eitherStridesOrDilationsAreOne(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);let g=I.computeConv2DInfo(r.shape,a.shape,u,m,l,p,!0),b=K().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,y=d?yl(d,b):null,v=[r,a],x=i!=null,k=o!=null,C=d==="leakyrelu";if(x&&v.push(i),k&&v.push(o),C){let O=n.makeTensorInfo([],"float32",w.createScalarValue(h,"float32"));v.push(O),f.push(O)}let $;b?$=new dN(g,x,y,k,C):$=new cN(g,x,y,k,C);let A=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],E=n.runWebGLProgram($,v,"float32",A);return f.forEach(O=>n.disposeIntermediateTensorInfo(O)),E}var w7={kernelName:ba,backendName:"webgl",kernelFunc:x7},k7=class{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;let r=at(t.length),a=at(n.length),i=this.sliceDim>1?"strides[j]":"strides",o=at(s.length),u=s.length>1?"paramsShape[j]":"paramsShape";this.userCode=`
        ${r} strides = ${r}(${this.strides});
        ${o} paramsShape = ${o}(${this.paramsShape});
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;
          for (int j = 0; j < ${this.sliceDim}; j++) {
            int index = round(getIndices(coords[0], j));
            out_of_bounds = out_of_bounds || index < 0;
            out_of_bounds = out_of_bounds || index >= ${u};
            flattenIndex += index * ${i};
          }
          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function S7(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=w.sizeFromShape(s.shape),[u,l,c,p]=I.prepareAndValidate(s,r),d=pe({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),h=pe({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let b=n.readSync(r.dataId),y=n.bufferSync(s),v=O8(b,y,s.dtype,l,i,c,p,s.shape,o);return n.makeTensorInfo(u,s.dtype,v.values)}let f=new k7(i,p,[l,c],s.shape),m=n.runWebGLProgram(f,[h,d],h.dtype),g=pe({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}var I7={kernelName:Ao,backendName:"webgl",kernelFunc:S7},C7=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=at(this.rank),s=N7(e,2);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}};function N7(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)r===2?s.push("index"):s.push(`${n[r]}`);return s.join()}function fN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0];if(K().get("DEBUG")){let y=n.readSync(a.dataId),v=r.shape[u];for(let x=0;x<y.length;++x){let k=y[x];w.assert(k<=v-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${v-1}]`)}}let l=I.segment_util.collectGatherOpShapeInfo(r,a,u,o),c=w.sizeFromShape(a.shape),p=[],d=pe({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),h=pe({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});p.push(d),p.push(h);let f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let y=n.bufferSync(h),v=n.bufferSync(d),x=P8(v,y,f);return p.forEach(k=>n.disposeIntermediateTensorInfo(k)),n.makeTensorInfo(l.outputShape,x.dtype,x.values)}let m=new C7(d.shape,f),g=n.runWebGLProgram(m,[d,h],d.dtype);p.push(g);let b=pe({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach(y=>n.disposeIntermediateTensorInfo(y)),b}var T7={kernelName:_o,backendName:"webgl",kernelFunc:fN},$7="return float(a > b);",_7=`
  return vec4(greaterThan(a, b));
`,A7=en({opSnippet:$7,packedOpSnippet:_7,cpuKernelImpl:L8,dtype:"bool"}),E7={kernelName:Eo,backendName:"webgl",kernelFunc:A7},R7="return float(a >= b);",D7=`
  return vec4(greaterThanEqual(a, b));
`,F7=en({opSnippet:R7,packedOpSnippet:D7,dtype:"bool",cpuKernelImpl:z8}),O7={kernelName:Xa,backendName:"webgl",kernelFunc:F7};function P7(e){let{inputs:t,backend:n}=e,{input:s}=t;return hN(s,!0,n)}var L7={kernelName:ob,backendName:"webgl",kernelFunc:P7},z7="return float(!isnan(x) && !isinf(x));",M7=Xe({opSnippet:z7,dtype:"bool"}),B7={kernelName:Dl,backendName:"webgl",kernelFunc:M7},V7="return float(isinf(x));",W7=Xe({opSnippet:V7,dtype:"bool"}),U7={kernelName:Fl,backendName:"webgl",kernelFunc:W7},G7="return float(isnan(x));",H7=Xe({opSnippet:G7,dtype:"bool"}),q7={kernelName:Ol,backendName:"webgl",kernelFunc:H7},j7="return float(a < b);",K7=`
  return vec4(lessThan(a, b));
`,X7=en({opSnippet:j7,packedOpSnippet:K7,cpuKernelImpl:M8,dtype:"bool"}),Y7={kernelName:Ro,backendName:"webgl",kernelFunc:X7},Z7="return float(a <= b);",Q7=`
  return vec4(lessThanEqual(a, b));
`,J7=en({opSnippet:Z7,packedOpSnippet:Q7,cpuKernelImpl:B8,dtype:"bool"}),eJ={kernelName:Do,backendName:"webgl",kernelFunc:J7};function tJ(e){let{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=V8(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}var nJ={kernelName:ub,backendName:"webgl",kernelFunc:tJ},sJ=wu+`
  return x < 0.0 ? 0./0. : log(x);
`,rJ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,aJ=Xe({opSnippet:sJ,packedOpSnippet:rJ,cpuKernelImpl:W8}),iJ={kernelName:Qa,backendName:"webgl",kernelFunc:aJ},oJ=wu+`
  return log(1.0 + x);
`,uJ=Xe({opSnippet:oJ}),lJ={kernelName:Pl,backendName:"webgl",kernelFunc:uJ},cJ="return float(a >= 1.0 && b >= 1.0);",dJ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,pJ=en({opSnippet:cJ,packedOpSnippet:dJ,dtype:"bool"}),hJ={kernelName:Fo,backendName:"webgl",kernelFunc:pJ},fJ="return float(!(x >= 1.0));",mJ=Xe({opSnippet:fJ}),gJ={kernelName:Oo,backendName:"webgl",kernelFunc:mJ},bJ="return float(a >= 1.0 || b >= 1.0);",yJ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,vJ=en({opSnippet:bJ,packedOpSnippet:yJ,dtype:"bool"}),xJ={kernelName:Ll,backendName:"webgl",kernelFunc:vJ},wJ=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];let a=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${n}) + float(${s}) * sum`;r===.5?o=`inversesqrt(${u})`:r===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},kJ=class{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let a=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${n}) + float(${s}) * sum`;r===.5?o=`inversesqrt(${u})`:r===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},SJ=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=s,l=K().getBool("WEBGL_PACK_NORMALIZATION")?new kJ(r.shape,a,i,o,u):new wJ(r.shape,a,i,o,u);return n.runWebGLProgram(l,[r],r.dtype)},IJ={kernelName:Cp,backendName:"webgl",kernelFunc:SJ},CJ=class{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},NJ=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=s,p=new CJ(r.shape,o,u,l,c);return n.runWebGLProgram(p,[r,a,i],r.dtype)},TJ={kernelName:lb,backendName:"webgl",kernelFunc:NJ};function $J(e,t,n,s){let r=w.sizeFromShape(t),i=w.sizeFromShape(e.shape)/r,o=pe({inputs:{x:e},attrs:{shape:[i,r]},backend:s}),u=Ei(o,e.dtype,"max",s),l=pe({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(u),l}function mN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=I.getAxesPermutation(l,o),p=c!=null,d=n.shouldExecuteOnCPU([r]),h=r;if(p){if(d){let v=n.texData.get(h.dataId).values,x=new Array(o);for(let $=0;$<x.length;$++)x[$]=r.shape[c[$]];let k=ux(v,r.shape,r.dtype,c,x);h=n.makeTensorInfo(x,r.dtype);let C=n.texData.get(h.dataId);C.values=k}else h=Th(r,c,n);l=I.getInnerMostAxes(l.length,o)}I.assertAxesAreInnerMostDims("max",l,o);let[f,m]=I.computeOutAndReduceShapes(h.shape,l),g=f;i&&(g=I.expandShapeToKeepDim(f,u));let b;if(d){let v=n.texData.get(h.dataId).values,x=U8(v,w.sizeFromShape(m),g,r.dtype);b=n.makeTensorInfo(g,r.dtype);let k=n.texData.get(b.dataId);k.values=x}else b=$J(h,m,g,n);return p&&n.disposeIntermediateTensorInfo(h),b}var _J={kernelName:Ja,backendName:"webgl",kernelFunc:mN},AJ=j2+`
  return max(a, b);
`,EJ=`
  vec4 result = vec4(max(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Nh+`
  return result;
`,RJ=en({opSnippet:AJ,packedOpSnippet:EJ,cpuKernelImpl:G8}),DJ={kernelName:ei,backendName:"webgl",kernelFunc:RJ};function FJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t;gu(r,"maxPool");let{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1;w.assert(I.eitherStridesOrDilationsAreOne(i,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let c=I.computePool2DInfo(r.shape,a,i,l,o,u);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return Un({inputs:{x:r},backend:n});let p=new vl(c,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var OJ={kernelName:ti,backendName:"webgl",kernelFunc:FJ};function PJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=s,c=[1,1,1],p=I.computePool3DInfo(r.shape,a,i,c,o,l,u),d=new cx(p,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}var LJ={kernelName:Np,backendName:"webgl",kernelFunc:PJ},zJ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,u=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},MJ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,p=u-1-e.padInfo.top,d=l-1-e.padInfo.left,h=o*u*l-1;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${p}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${h} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function BJ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=s,p=[1,1,1],d=I.computePool3DInfo(i.shape,o,u,p,l,c),h=new cx(d,"max",!0),f=n.runWebGLProgram(h,[i],i.dtype),m=new MJ(d),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}var VJ={kernelName:db,backendName:"webgl",kernelFunc:BJ};function WJ(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;gu([a,i],"maxPoolGrad");let{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=s,d=I.computePool2DInfo(o.shape,u,l,1,c,p),h=!0,f=new vl(d,"max",h),m=n.runWebGLProgram(f,[o],o.dtype),g=new zJ(d),b=n.runWebGLProgram(g,[r,m],o.dtype);return n.disposeIntermediateTensorInfo(m),b}var UJ={kernelName:cb,backendName:"webgl",kernelFunc:WJ};function GJ(e,t,n,s){let r=new vl(n,"max",!1),a=s.runWebGLProgram(r,[e],"float32");r=new vl(n,"max",!0,!0,t);let i=s.runWebGLProgram(r,[e],"float32");return[a,i]}var HJ={kernelName:pb,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;w.assert(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);let l=[1,1];w.assert(I.eitherStridesOrDilationsAreOne(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);let c=I.computePool2DInfo(s.shape,r,a,l,i),[p,d]=GJ(s,o,c,u);return[p,d]}};function qJ(e,t,n,s){let r=w.sizeFromShape(t),i=w.sizeFromShape(e.shape)/r,o=pe({inputs:{x:e},attrs:{shape:[i,r]},backend:s}),u=Ei(o,"float32","mean",s),l=pe({inputs:{x:u},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(u),l}var jJ={kernelName:ni,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,u=w.parseAxisParam(a,s.shape),l=u,c=I.getAxesPermutation(l,o),p=c!=null,d=i.shouldExecuteOnCPU([s]),h=[],f=s;if(p){if(d){let x=i.texData.get(f.dataId).values,k=new Array(o);for(let A=0;A<k.length;A++)k[A]=s.shape[c[A]];let C=ux(x,s.shape,s.dtype,c,k);f=i.makeTensorInfo(k,s.dtype);let $=i.texData.get(f.dataId);$.values=C}else f=Th(s,c,i);h.push(f),l=I.getInnerMostAxes(l.length,o)}I.assertAxesAreInnerMostDims("sum",l,o);let[m,g]=I.computeOutAndReduceShapes(f.shape,l),b=m;r&&(b=I.expandShapeToKeepDim(m,u));let y=qJ(f,g,b,i);for(let v of h)i.disposeIntermediateTensorInfo(v);return y}};function KJ(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=w.parseAxisParam(a,r.shape),l=u,c=I.getAxesPermutation(l,o),p=r;c!=null&&(p=vn({inputs:{x:r},backend:n,attrs:{perm:c}}),l=I.getInnerMostAxes(l.length,r.shape.length)),I.assertAxesAreInnerMostDims("min",l,o);let[d,h]=I.computeOutAndReduceShapes(p.shape,l),f=w.sizeFromShape(h),m=pe({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}}),g=Ei(m,m.dtype,"min",n),b;if(i){let y=I.expandShapeToKeepDim(d,u);b=pe({inputs:{x:g},backend:n,attrs:{shape:y}})}else b=pe({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),c!=null&&n.disposeIntermediateTensorInfo(p),b}var XJ={kernelName:si,backendName:"webgl",kernelFunc:KJ},YJ=j2+`
  return min(a, b);
`,ZJ=`
  vec4 result = vec4(min(a, b));
  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));
  `+Nh+`
  return result;
`,QJ=en({opSnippet:YJ,packedOpSnippet:ZJ,cpuKernelImpl:H8}),JJ={kernelName:ri,backendName:"webgl",kernelFunc:QJ},eee=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((l,c)=>l[0]+e[c]+l[1]);let s=e.length,r=at(s),a=t.map(l=>l[0]).join(","),i=t.map((l,c)=>l[0]+e[c]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u=n==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},tee=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((h,f)=>h[0]+e[f]+h[1]);let s=e.length,r=at(s),a=t.map(h=>h[0]).join(","),i=t.map((h,f)=>h[0]+e[f]).join(","),o=mn("rc",s),u=mn("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${u.slice(-2).join()})`,p=n==="reflect"?0:1,d="";if(s===1){let h=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${c});
        ${o[s-1]} += 1;
        if(${l}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${c});
        }
      `}else{let h=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;d=`
        ${r} rc = outputLoc;
        ${h}
        result[0] = getChannel(getX(${u.join()}), ${c});
        ${o[s-1]} += 1;
        if(${l}) {
          ${h}
          result[1] = getChannel(getX(${u.join()}), ${c});
        }
        rc = outputLoc;
        ${o[s-2]} += 1;
        if(${o[s-2]} < ${this.outputShape[s-2]}) {
          ${h}
          result[2] = getChannel(getX(${u.join()}), ${c});
          ${o[s-1]} += 1;
          if(${l}) {
            ${h}
            result[3] = getChannel(getX(${u.join()}), ${c});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${d}
        setOutput(result);
      }
    `}},nee=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{paddings:r,mode:a}=n,i=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tee(s.shape,r,a):new eee(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)},see={kernelName:ai,backendName:"webgl",kernelFunc:nee},ree=`if (b == 0.0) return NAN;
  return mod(a, b);`,aee=`
  vec4 result = mod(a, b);
  vec4 isNaN = vec4(equal(b, vec4(0.0)));
  `+Nh+`
  return result;
`,iee=en({opSnippet:ree,packedOpSnippet:aee}),oee={kernelName:zl,backendName:"webgl",kernelFunc:iee},uee=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},lee=`
if (a == b) {
  return 1.0;
};
return a / b;`,cee=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,gN=en({opSnippet:lee,packedOpSnippet:cee,checkOutOfBounds:!0}),dee={kernelName:Ua,backendName:"webgl",kernelFunc:gN},pk="return a - b;",bN=en({opSnippet:pk,packedOpSnippet:pk,supportsComplex:!0,cpuKernelImpl:uY}),pee={kernelName:ki,backendName:"webgl",kernelFunc:bN};function yN(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=w.parseAxisParam([a],r.shape),o=mN({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=I.expandShapeToKeepDim(o.shape,i),l=pe({inputs:{x:o},backend:n,attrs:{shape:u}}),c=bN({inputs:{a:r,b:l},backend:n}),p=pN({inputs:{x:c},backend:n}),d=$h({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),h=pe({inputs:{x:d},backend:n,attrs:{shape:u}}),f=gN({inputs:{a:p,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),f}var hee={kernelName:xi,backendName:"webgl",kernelFunc:yN};function fee(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,u=o?r:yN({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=u.shape[0],c=u.shape[1],p=new uee(l,c,a),d=[[i]],h=n.runWebGLProgram(p,[u],"int32",d);return o||n.disposeIntermediateTensorInfo(u),h}var mee={kernelName:hb,backendName:"webgl",kernelFunc:fee},gee=ds+`
  return -x;
`,bee=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function yee(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.texData.get(s.dataId),[i,o]=j8(a.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}let r;return K().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new ua(s.shape,bee):r=new Qs(s.shape,gee),n.runWebGLProgram(r,[s],s.dtype)}var vee={kernelName:Po,backendName:"webgl",kernelFunc:yee},xee=$s.nonMaxSuppressionV3Impl;function wee(e){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s,l=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=xee(l,c,i,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var kee={kernelName:zo,backendName:"webgl",kernelFunc:wee},See=$s.nonMaxSuppressionV4Impl;function Iee(e){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),{selectedIndices:d,validOutputs:h}=See(c,p,i,o,u,l);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}var Cee={kernelName:Ml,backendName:"webgl",kernelFunc:Iee},Nee=$s.nonMaxSuppressionV5Impl;function Tee(e){I.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),d=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=Nee(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var $ee={kernelName:Mo,backendName:"webgl",kernelFunc:Tee},_ee=class{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${n}),
                      float(index == coords.y)));
      }
    `}},Aee=e=>{let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,u=w.sizeFromShape(r.shape),l=new _ee(u,a,i,o),c=pe({inputs:{x:r},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(l,[c],r.dtype);n.disposeIntermediateTensorInfo(c);let d=[...r.shape,a],h=pe({inputs:{x:p},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(p),h},Eee={kernelName:Vo,backendName:"webgl",kernelFunc:Aee};function up(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=mc({inputs:{input:s},backend:n}),a=up({inputs:{x:r},backend:n}),i=_h({inputs:{input:s},backend:n}),o=up({inputs:{x:i},backend:n}),u=Vr({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return gc({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Ree={kernelName:su,backendName:"webgl",kernelFunc:up};function vN(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=mc({inputs:{input:s},backend:n}),a=vN({inputs:{x:r},backend:n}),i=_h({inputs:{input:s},backend:n}),o=up({inputs:{x:i},backend:n}),u=Vr({inputs:{real:a,imag:o},backend:n});return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return gc({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Dee={kernelName:Bo,backendName:"webgl",kernelFunc:vN};function Fee(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Og({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let p=Og({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),l=rN({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}var Oee={kernelName:Wo,backendName:"webgl",kernelFunc:Fee},Pee=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,l)=>u[0]+e[l]+u[1]);let s=e.length,r=at(s),a=t.map(u=>u[0]).join(","),i=t.map((u,l)=>u[0]+e[l]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},Lee=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);let s=e.length,r=at(s),a=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),o=mn("rc",s),u=mn("source",s),l=`${o[s-1]} < ${this.outputShape[s-1]}`,c=s===1?"source":`vec2(${u.slice(-2).join()})`,p=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;
       if(${l}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${o[s-2]} += 1;
       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${o[s-1]} += 1;
         if(${l}) {`],d=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",h="";for(let f=0,m=s===1?2:4;f<m;f++)h+=`
        ${p[f]}
        if (${d}) {
          result[${f}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${f}] = getChannel(getX(${u.join()}), ${c});
        }
      `;h+=s===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},xN=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(w.sizeFromShape(r.shape)===0){let l=a.map((c,p)=>c[0]+r.shape[p]+c[1]);return gc({backend:n,attrs:{shape:l,value:i,dtype:r.dtype}})}let o=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Lee(r.shape,a,i):new Pee(r.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[r],r.dtype,u)},zee={kernelName:oi,backendName:"webgl",kernelFunc:xN},Mee=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Bee=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));
  `+Nh+`
  return result;
`,Vee=en({opSnippet:Mee,packedOpSnippet:Bee}),Wee={kernelName:ui,backendName:"webgl",kernelFunc:Vee};function Uee(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,u=[],l=w.parseAxisParam(a,r.shape),c=l,p=I.getAxesPermutation(c,o),d=r;p!=null&&(d=vn({inputs:{x:r},backend:n,attrs:{perm:p}}),c=I.getInnerMostAxes(c.length,o),u.push(d)),I.assertAxesAreInnerMostDims("prod",c,o);let h;if(n.shouldExecuteOnCPU([d])){let f=n.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:b}=X8(d.shape,d.dtype,f,c);h=n.makeTensorInfo(g,b,m)}else{let[f,m]=I.computeOutAndReduceShapes(d.shape,c),g=w.sizeFromShape(m),b=pe({inputs:{x:d},backend:n,attrs:{shape:[-1,g]}}),y=Pp(r.dtype),v=Ei(b,y,"prod",n);h=pe({inputs:{x:v},backend:n,attrs:{shape:f}}),u.push(b),u.push(v)}if(i){u.push(h);let f=I.expandShapeToKeepDim(h.shape,l);h=pe({inputs:{x:h},backend:n,attrs:{shape:f}})}return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}var Gee={kernelName:ci,backendName:"webgl",kernelFunc:Uee},wN=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=Y8(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},Hee={kernelName:Bl,backendName:"webgl",kernelFunc:wN},qee="return 1.0 / x;",jee=Xe({opSnippet:qee}),Kee={kernelName:Vl,backendName:"webgl",kernelFunc:jee},Xee=ds+`
  return (x < 0.0) ? 0.0 : x;
`,Yee=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Zee=Xe({opSnippet:Xee,packedOpSnippet:Yee}),Qee={kernelName:di,backendName:"webgl",kernelFunc:Zee},Jee=ds+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ete=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,tte=Xe({opSnippet:Jee,packedOpSnippet:ete}),nte={kernelName:fi,backendName:"webgl",kernelFunc:tte},ste=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p;r?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/c[0]},
          ${l[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},rte=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p;r?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/c[0]},
          ${l[1]/c[1]},
          ${l[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function ate(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new rte(r.shape,u,l,a,i):new ste(r.shape,u,l,a,i);return n.runWebGLProgram(c,[r],"float32")}var ite={kernelName:hi,backendName:"webgl",kernelFunc:ate},ote=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],p=1/l,d=1/c,h=Math.ceil(p)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function ute(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new ote(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}var lte={kernelName:mb,backendName:"webgl",kernelFunc:ute},cte=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p=s?"0.5":"0.0",d;r?d="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/c[0]},
          ${l[1]/c[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},dte=class{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[a,i,o,u]=e;this.outputShape=[a,t,n,u];let l=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],p=s?"0.5":"0.0",d;r?d="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/c[0]},
          ${l[1]/c[1]},
          ${l[1]/c[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function pte(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=K().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new dte(r.shape,u,l,a,i):new cte(r.shape,u,l,a,i);return n.runWebGLProgram(c,[r],r.dtype)}var hte={kernelName:pi,backendName:"webgl",kernelFunc:pte},fte=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],p=1/l,d=1/c,h=Math.ceil(p)*2+2,f=Math.ceil(d)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${c});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${d});

        const int winHeight = int(${h});
        const int winWidth = int(${f});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function mte(e){let{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new fte(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}var gte={kernelName:fb,backendName:"webgl",kernelFunc:mte},bte=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let s=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,o)=>s(o)).join(","),a=at(n);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}},yte=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let s=mn("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=at(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(s.slice())};
          if(${r}){
            result.g = ${u(s.slice())};
          }
          if(${a}) {
            result.b = ${l(s.slice())};
            if(${r}) {
              result.a = ${c(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(h){return p(h)}function u(h){return h[n-1]="("+h[n-1]+" + 1)",p(h)}function l(h){return h[n-2]="("+h[n-2]+" + 1)",p(h)}function c(h){return h[n-1]="("+h[n-1]+" + 1)",h[n-2]="("+h[n-2]+" + 1)",p(h)}function p(h){let f=e.map((b,y)=>d(y,h)),m=f.join(","),g=f.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function d(h,f){return t.indexOf(h)!==-1&&e[h]!==1?`${e[h]} - ${f[h]} - 1`:`${f[h]}`}}};function vte(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=w.parseAxisParam(a,r.shape);if(i===0)return Un({inputs:{x:r},backend:n});let u=K().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yte(r.shape,o):new bte(r.shape,o);return n.runWebGLProgram(u,[r],r.dtype)}var xte={kernelName:Go,backendName:"webgl",kernelFunc:vte},wte=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],s=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},kte={kernelName:ru,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new wte(s.shape,a),[l,c]=I.getImageCenter(i,s.shape[1],s.shape[2]),p=[[l,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(u,[s],s.dtype,p)}},Ste=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Ite=Xe({opSnippet:Ste}),Cte={kernelName:Ho,backendName:"webgl",kernelFunc:Ite},Nte="return inversesqrt(x);",Tte=Xe({opSnippet:Nte,cpuKernelImpl:Z8}),$te={kernelName:mi,backendName:"webgl",kernelFunc:Tte},kN=class{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;let o=at(r.length),u=at(a.length),l="";n===1?l="i":n===2&&(l="i, j");let c=`getIndices(${l})`,p="";s===1?p="i":s===2&&(p="i, coords[1]");let d=`getUpdates(${p})`,h=t>1?"strides[j]":"strides";this.userCode=`
        ${o} strides = ${o}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${c});
              flattenedIndex += index * ${h};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${d};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}};function _te(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=I.calculateShapes(a,r,i),d=[p/l,l];if(p===0)return n.makeTensorInfo(i,r.dtype);let h=pe({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=pe({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new kN(u,o,h.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(g,[f,h,m],f.dtype),y=pe({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}var Ate={kernelName:qo,backendName:"webgl",kernelFunc:_te},Ete=class{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=K().getNumber("WEBGL_VERSION")===2?r:a,o=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Rte(e){let{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:a}=t,{side:i}=s,o=new Ete(r.shape[0],r.shape[1],a.shape[1],i),u=[[r.shape[1]]];return n.runWebGLProgram(o,[r,a],"int32",u)}var Dte={kernelName:gb,backendName:"webgl",kernelFunc:Rte},Fte=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let s,r;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)r="resRC",s="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],u=[];for(let l=0;l<t.length;l++)u.push(`${i[l]}`),l<e&&o.push(`${i[l]}`);s=o.join(),r=u.join()}let a=at(n);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}};function Ote(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new Fte(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],bn(r.dtype,a.dtype))}var Pte={kernelName:jo,backendName:"webgl",kernelFunc:Ote},Lte=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${I.SELU_SCALEALPHA};
  float scale = ${I.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,zte=Xe({opSnippet:Lte}),Mte={kernelName:Wl,backendName:"webgl",kernelFunc:zte},Bte=wu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,Vte=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Wte=Xe({opSnippet:Bte,packedOpSnippet:Vte,cpuKernelImpl:J8}),Ute={kernelName:bi,backendName:"webgl",kernelFunc:Wte},Gte=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Hte=Xe({opSnippet:Gte}),qte={kernelName:Ul,backendName:"webgl",kernelFunc:Hte},jte=wu+`
  return sin(x);
`,Kte=Xe({opSnippet:jte}),Xte={kernelName:gi,backendName:"webgl",kernelFunc:Kte},Yte=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Zte=Xe({opSnippet:Yte}),Qte={kernelName:Xo,backendName:"webgl",kernelFunc:Zte},Jte=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,ene=Xe({opSnippet:Jte}),tne={kernelName:Gl,backendName:"webgl",kernelFunc:ene},nne=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=a.reduce((b,y)=>b*y),u=[[0,0]];u.push(...i);for(let b=1+a.length;b<r.shape.length;++b)u.push([0,0]);let l=[],c=xN({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(c.shape,a,o,!1),d=I.getPermuted(p.length,a.length,!1),h=I.getReshapedPermuted(c.shape,a,o,!1),f=pe({inputs:{x:c},backend:n,attrs:{shape:p}}),m=vn({inputs:{x:f},backend:n,attrs:{perm:d}}),g=pe({inputs:{x:m},backend:n,attrs:{shape:h}});return l.push(c),l.push(f),l.push(m),l.forEach(b=>n.disposeIntermediateTensorInfo(b)),g},sne={kernelName:Yo,backendName:"webgl",kernelFunc:nne};function rne(e){let{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(a.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${a.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(s.dataId),u=n.readSync(r.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[p,d,h,f,m]=tY(o,s.shape,s.dtype,u,r.dtype,l,c);return[n.makeTensorInfo(d,s.dtype,p),n.makeTensorInfo([d[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}var ane={kernelName:$p,backendName:"webgl",kernelFunc:rne};function ine(e){let{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,p]=nY(o,s.shape,s.dtype,i,u);return[n.makeTensorInfo(c,s.dtype,l),n.makeTensorInfo([p.length],a.dtype,new Int32Array(p))]}var one={kernelName:Hl,backendName:"webgl",kernelFunc:ine};function une(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${a.shape}`);let i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=U2(i,s.shape,s.dtype,o,u,!0);return n.makeTensorInfo(c,s.dtype,l)}var lne={kernelName:_p,backendName:"webgl",kernelFunc:une};function cne(e){let{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(a.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${a.shape}`);let i=n.readSync(s.dataId),o=n.readSync(r.dataId),u=n.readSync(a.dataId),[l,c]=U2(i,s.shape,s.dtype,o,u);return n.makeTensorInfo(c,s.dtype,l)}var dne={kernelName:Ap,backendName:"webgl",kernelFunc:cne};function pne(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=I.calculateShapes(a,r,o),h=!1;if(a.dtype==="string"){let b=n.bufferSync(r),y=n.bufferSync(a),v=w.decodeString(n.readSync(i.dataId)[0]),x=Q8(b,y,o,d,c,l,u,p,v,h);return n.makeTensorInfo(o,x.dtype,x.values)}let f=new kN(l,u,r.shape.length,a.shape.length,p,[d,1],h),m=n.runWebGLProgram(f,[a,r,i],a.dtype),g=pe({inputs:{x:m},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(m),g}var hne={kernelName:Ep,backendName:"webgl",kernelFunc:pne};function fne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=I.prepareSplitSize(r,a,o),l=r.shape.length,c=new Array(l).fill(0),p=r.shape.slice();return u.map(d=>{let h=[...p];h[o]=d;let f=ku({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[o]+=d,f})}var mne={kernelName:Zo,backendName:"webgl",kernelFunc:fne},hk="return sqrt(x);",gne=Xe({opSnippet:hk,packedOpSnippet:hk,cpuKernelImpl:sY}),bne={kernelName:yi,backendName:"webgl",kernelFunc:gne},yne="return x * x;",vne=Xe({opSnippet:yne}),xne={kernelName:ql,backendName:"webgl",kernelFunc:vne},fk="return (a - b) * (a - b);",wne=en({opSnippet:fk,packedOpSnippet:fk}),kne={kernelName:wi,backendName:"webgl",kernelFunc:wne};function Sne({inputs:e,attrs:t,backend:n}){let{x:s}=e,r=ds+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,a=new Qs(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}var Ine={kernelName:Ii,backendName:"webgl",kernelFunc:Sne},Cne=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let s=n.length,r=at(n.length),a=at(n.length),i="";if(s===1)i="coords * strides + begin";else{let o=0;i=n.map((u,l)=>(o++,n.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${o-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Nne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=It.sliceInfo(r.shape,a,i,o,u,l,c,p,d),k;if(m)k=pe({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let $=It.computeOutShape(y,v,x),A=ku({inputs:{x:r},backend:n,attrs:{begin:y,size:$}});k=pe({inputs:{x:A},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(A)}else if(n.shouldExecuteOnCPU([r])){let A=n.readSync(r.dataId),E=_e(r.shape,r.dtype,A),O=rY(h,E,x,y);k=n.makeTensorInfo(f,r.dtype,O.values)}else{let A=new Cne(y,x,h);k=n.runWebGLProgram(A,[r],r.dtype)}let C=pe({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),C}var Tne={kernelName:Qo,backendName:"webgl",kernelFunc:Nne};function $ne(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=aY(d,h,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var _ne={kernelName:jl,backendName:"webgl",kernelFunc:$ne};function Ane(e){let{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(a.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,p]=iY(o,u,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",l),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}var Ene={kernelName:Rp,backendName:"webgl",kernelFunc:Ane};function Rne(e){let{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(a.dataId),o=oY(i,r);return n.makeTensorInfo(a.shape,"int32",o)}var Dne={kernelName:Dp,backendName:"webgl",kernelFunc:Rne},Fne="return tan(x);",One=Xe({opSnippet:Fne}),Pne={kernelName:Jo,backendName:"webgl",kernelFunc:One},Lne=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,zne=Xe({opSnippet:Lne}),Mne={kernelName:Si,backendName:"webgl",kernelFunc:zne},Bne=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let s=at(this.rank),r=Vne(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}};function Vne(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}function SN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(r.dtype==="string"||r.shape.length>5){let u=n.readSync(r.dataId),l=r.dtype==="string"?u.map(d=>w.decodeString(d)):u,c=_e(r.shape,r.dtype,l),p=lY(c,a);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new Bne(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}var Wne={kernelName:Dr,backendName:"webgl",kernelFunc:SN},Une=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},Gne=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function Jr(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function mk(e){let t=1;for(;t<e;)t*=2;return t}function Hne(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=K().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=K().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>u){let O=n.readSync(r.dataId),[R,D]=cY(O,l,r.dtype,a,i);return[n.makeTensorInfo(R.shape,R.dtype,R.values),n.makeTensorInfo(D.shape,D.dtype,D.values)]}if(a===0)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(c===1)return[r,gc({attrs:{shape:l,dtype:"int32",value:0},backend:n})];let p=n.texData.get(r.dataId),d=p!==null&&p.isPacked,h=d?n.unpackTensor(r):r,m=w.sizeFromShape(l)/c,g=pe({inputs:{x:h},attrs:{shape:[m,c]},backend:n});d&&Jr(n,h);let b=mk(a),y=mk(c),v=null,x=()=>v===null?[g,g]:[g,v],k=(O,R,D)=>{let T=x(),L=new Une(D),q=[[c],[v===null?1:0],[Number.NEGATIVE_INFINITY],[O],[R]],j=v;v=n.runWebGLProgram(L,T,"int32",q),Jr(n,j)};for(let O=1;O<b;O*=2){let R=O*2;for(let D=O;D>=1;D/=2)k(R,D,[m,y])}for(let O=y;O>b;O/=2){let R=x(),D=new Gne([m,O/2]),L=[[c],[v===null?1:0],[b]],W=v;v=n.runWebGLProgram(D,R,"int32",L),Jr(n,W);let q=b/2,j=q*2;for(let X=q;X>=1;X/=2)k(j,X,v.shape)}let C=v;v=ku({inputs:{x:v},backend:n,attrs:{begin:0,size:[m,a]}}),Jr(n,C);let $=fN({inputs:{x:g,indices:v},backend:n,attrs:{axis:1,batchDims:1}});Jr(n,g);let A=l.slice(0,-1);A.push(a),C=v,v=pe({inputs:{x:v},attrs:{shape:A},backend:n}),Jr(n,C);let E=$;return $=pe({inputs:{x:$},attrs:{shape:A},backend:n}),Jr(n,E),[$,v]}var qne={kernelName:eu,backendName:"webgl",kernelFunc:Hne},jne=class{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;let i=n==="nearest"?1:2,o;switch(s){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function Kne(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,p,d,h]=r.shape,[f,m]=l!=null?l:[p,d],g=[c,f,m,h],b=new jne(p,d,i,o,u,g);return n.runWebGLProgram(b,[r,a],"float32")}var Xne={kernelName:tu,backendName:"webgl",kernelFunc:Kne};function Yne(e){let{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;gu(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=s.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=dY(i,r,a.shape,a.dtype);return[s.makeTensorInfo(u,a.dtype,o),s.makeTensorInfo([l.length],"int32",l)]}var Zne={kernelName:bb,backendName:"webgl",kernelFunc:Yne};function Qne(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r,o=i.shape.length,u=r.shape[a],l=new Array(o-1),c=0;for(let m=0;m<o;m++)m!==a&&(l[c++]=i.shape[m]);let p=[],d=new Array(o).fill(0),h=i.shape.slice();h[a]=1;let f=new Array(u);for(let m=0;m<f.length;m++){d[a]=m;let g=ku({inputs:{x:i},backend:n,attrs:{begin:d,size:h}}),b=pe({inputs:{x:g},backend:n,attrs:{shape:l}});f[m]=b,p.push(g)}return p.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}var Jne={kernelName:nu,backendName:"webgl",kernelFunc:Qne},ese=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];let o="0.0",u="sumValue",l=Math.floor(n/4)*4,c=n%4,p=`
        sumValue += dot(values, segFilter);
    `,d="";r%n>0&&(d=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let h="";r%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${h}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${l};
        if (${c===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${u});
      }
    `}};function tse(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,u=[],l=0,c=I.getAxesPermutation([l],o),p=r;c!=null&&(p=vn({inputs:{x:r},backend:n,attrs:{perm:c}}),u.push(p),l=I.getInnerMostAxes(1,o)[0]);let d=I.segment_util.computeOutShape(p.shape,l,i),h=w.sizeFromShape([p.shape[l]]),f=pe({inputs:{x:p},backend:n,attrs:{shape:[-1,h]}});u.push(f);let m=Pp(r.dtype),g=(x,k,C,$,A)=>{let E=x.shape[0],O=x.shape[1],R=I.segment_util.segOpComputeOptimalWindowSize(O,A),D={windowSize:R,inSize:O,batchSize:E,numSegments:A},T=new ese(D,k),L=n.compileAndRun(T,[x,C],$);if(u.push(L),L.shape[1]===A)return L;let W=wN({backend:n,attrs:{start:0,stop:A,step:1,dtype:"float32"}}),q=SN({inputs:{x:W},backend:n,attrs:{reps:[O/R]}});return u.push(W),u.push(q),g(L,k,q,$,A)},b=g(f,"unsortedSegmentSum",a,m,i),y=pe({inputs:{x:b},backend:n,attrs:{shape:d}}),v=y;if(c!=null){u.push(y);let x=I.getUndoAxesPermutation(c);v=vn({inputs:{x:v},backend:n,attrs:{perm:x}})}return u.forEach(x=>n.disposeIntermediateTensorInfo(x)),v}var nse={kernelName:Fp,backendName:"webgl",kernelFunc:tse},sse=[r9,i9,l9,p9,f9,b9,v9,w9,C9,T9,A9,D9,P9,B9,U9,H9,j9,Z9,J9,tZ,aZ,pZ,fZ,gZ,kZ,IZ,$Z,MY,EZ,PZ,BZ,qZ,KZ,YZ,QZ,eQ,sQ,iQ,lQ,dQ,hQ,mQ,yQ,xQ,IQ,NQ,_Q,RQ,FQ,zQ,WQ,qQ,XQ,QQ,JQ,t7,s7,a7,o7,l7,h7,g7,v7,w7,I7,T7,E7,O7,zY,L7,FZ,B7,U7,q7,VY,Y7,eJ,nJ,iJ,lJ,hJ,gJ,xJ,IJ,TJ,_J,DJ,OJ,LJ,VJ,UJ,HJ,jJ,XJ,JJ,see,oee,mee,qY,vee,kee,Cee,$ee,yZ,Eee,Dee,Oee,zee,Wee,UY,Gee,Hee,vZ,dee,Kee,Qee,nte,KY,ite,lte,hte,gte,xte,kte,Cte,$te,Ate,Dte,Pte,Mte,Ute,qte,Xte,Qte,cZ,hee,tne,sne,ane,one,lne,dne,hne,mne,bne,xne,kne,Ine,Tne,_ne,Ene,Dne,pee,t9,Pne,Mne,Wne,qne,Xne,n9,Zne,Jne,nse,Ree];for(let e of sse)au(e);var or=K();or.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);or.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);or.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",()=>4);or.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);or.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!1);or.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);or.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);or.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);or.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!1);var rse="return a + b;",ase="return areal * breal - aimag * bimag;",ise="return areal * bimag + aimag * breal;",ose="return a / b;",use="return a * b;",lse="return (a - b) * (a - b);",cse="return a - b;",dse="return f32(a == b);",pse="return vec4<f32>(a == b);",hse="return f32(a > b);",fse="return vec4<f32>(a > b);",mse="return f32(a >= b);",gse="return vec4<f32>(a >= b);",bse="return f32(a < b);",yse="return vec4<f32>(a < b);",vse="return f32(a <= b);",xse="return vec4<f32>(a <= b);",wse="return f32(f32(a) >= 1.0 && f32(b) >= 1.0);",kse=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,Sse=`
  if (isnan(a)) { return a; }
  if (isnan(b)) { return b; }
  `,IN=`
  if (isNaN.r) {
    resultTemp.r = uniforms.NAN;
  }
  if (isNaN.g) {
    resultTemp.g = uniforms.NAN;
  }
  if (isNaN.b) {
    resultTemp.b = uniforms.NAN;
  }
  if (isNaN.a) {
    resultTemp.a = uniforms.NAN;
  }
  `,Ise=`
  let s = sign(a) * sign(b);
  let ia = i32(round(a));
  let ib = i32(round(b));
  return f32(idiv(ia, ib, s));
  `,Cse=`
  let ia = vec4<i32>(round(a));
  let ib = vec4<i32>(round(b));
  let cond = ib != vec4<i32>(0);
  var resultTemp = vec4<i32>(0);
  let s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    resultTemp[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    resultTemp[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    resultTemp[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    resultTemp[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4<f32>(resultTemp);
  `,Nse=`
  if (isnan(a) || isnan(b)) {
    return 1.0;
  }
  return f32(a != b);
`,Tse=`
  var result = vec4<f32>(a != b);
  var isANaN = isnanVec4(a);
  var isBNaN = isnanVec4(b);
  if (isANaN.r || isBNaN.r) {
    result.r = 1.0;
  }
  if (isANaN.g || isBNaN.g) {
    result.g = 1.0;
  }
  if (isANaN.b || isBNaN.b) {
    result.b = 1.0;
  }
  if (isANaN.a || isBNaN.a) {
    result.a = 1.0;
  }

  return result;
`,$se=`
  if(a < 0.0 && floor(b) < b) {
    return uniforms.NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  if (round(abs(b) % 2.0) != 1.0) {
    return pow(abs(a), b);
  }
  return sign(a) * pow(abs(a), b);
  `,_se=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;
  ${IN}
  return resultTemp;
  `,Ase="if (a < 0.0) { return b * a; }  return a;",Ese=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
  `;function gk(e,t){let n=t?IN:Sse;return t?`
    var resultTemp = vec4<f32>(${e}(a, b));
    let isNaN = isnanVec4(a) | isnanVec4(b);
    `+n+`
    return resultTemp;
  `:n+`
    return ${e}(a, b);
  `}function lp(e,t){switch(e){case 0:return use;case 1:return rse;case 2:return cse;case 3:return ose;case 4:return t?pse:dse;case 5:return t?fse:hse;case 6:return t?gse:mse;case 7:return t?yse:bse;case 8:return t?xse:vse;case 9:return t?kse:wse;case 10:return t?Tse:Nse;case 11:return lse;case 12:return t?Cse:Ise;case 14:return t?Ese:Ase;case 15:return gk("max",t);case 16:return gk("min",t);case 13:return t?_se:$se;case 17:return ase;case 18:return ise;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var Rse="return abs(a);",Dse="return ceil(a);",Fse="return cos(a);",Ose=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,Pse="return exp(a) - 1.0;",Lse="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",zse=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Mse="return exp(a);",Bse="return floor(a);",Vse="return a;",Wse=`if (a < 0.0) { return 1.0/0.0; }
  return log(a);`,Use="return f32(!(a >= 1.0));",Gse="return -a;",Hse="if (a < 0.0) { return uniforms.alpha * a; } return a;",qse=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,jse="return select(a, 0.0, a < 0.0);",Kse="return clamp(a, 0.0, 6.0);",Xse="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Yse=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Zse="return 1.0/sqrt(a);",Qse="return 1.0 / (1.0 + exp(-1.0 * a));",Jse="return sin(a);",ere=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,tre="return sqrt(a);",nre="return a * a;",sre=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,rre="return f32(i32((a)));";function ta(e,t){switch(e){case 0:return Rse;case 2:return Fse;case 3:return Ose;case 1:return Dse;case 4:return t?zse:Lse;case 5:return Mse;case 6:return Pse;case 7:return Bse;case 8:return Vse;case 9:return Wse;case 10:return Use;case 11:return Gse;case 14:return t?qse:Hse;case 12:return t?Yse:jse;case 13:return t?Xse:Kse;case 15:return Zse;case 18:return Qse;case 16:return Jse;case 17:return ere;case 19:return tre;case 20:return nre;case 21:return sre;case 22:return rre;default:throw new Error(`BinaryType ${e} is not implemented!`)}}var At=e=>{switch(e){case 1:return"f32";case 2:return"vec2<f32>";case 3:return"vec3<f32>";case 4:return"vec4<f32>";default:throw new Error(`${e}-component is not supported.`)}};function ur(e,t=!1,n=!1,s=3){if(e===null)return"";let r="";if(e==="linear")r=ta(8);else if(e==="relu")r=ta(12,n);else if(e==="elu")r=ta(4,n);else if(e==="relu6")r=ta(13,n);else if(e==="prelu")r=lp(14,n);else if(e==="sigmoid")r=ta(18,n);else if(e==="leakyrelu")r=ta(14,n);else throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`);let i=At(n?4:1),o="";return t?o=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:o=`
      fn activation(a : ${i}, coords : vec${s}<i32>) -> ${i} {
        ${r}
      }`,o}function Su(e,t){return`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      ${t?"value = activation(value, coords);":""}
      `}function are(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");let n=e.length,s=e.map(a=>`${t}[${a}]`),r=new Array(n-1);r[n-2]=s[n-1];for(let a=n-3;a>=0;--a)r[a]=`(${r[a+1]} * ${s[a+1]})`;return r}var ire=(e,t,n,s)=>{let r={dtype:s.dtype,shape:s.shape},a=ore(n,r,t),i=e.createShaderModule({code:a,label:t.constructor.name});return e.createComputePipeline({compute:{module:i,entryPoint:"main"},label:t.constructor.name,layout:"auto"})};function Qt(e){if(e<=1)return"i32";if(e===2)return"vec2<i32>";if(e===3)return"vec3<i32>";if(e===4)return"vec4<i32>";if(e===5)return"vec5";if(e===6)return"vec6";throw Error(`GPU for rank ${e} is not yet supported`)}function wr(e){if(e===0)return"x";if(e===1)return"y";if(e===2)return"z";if(e===3)return"w";if(e===4)return"u";if(e===5)return"v";throw Error(`Index ${e} is not yet supported`)}function Ge(){return`
    ${Iu()}
      let index = getGlobalIndex();
`}function Iu(){return`
  ${Ah()}
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;
`}function Ah(){return`
  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
`}function ore(e,t,n){let s=[];if(s.push(`
      const workGroupSizeX = ${n.workGroupSize[0]}u;
      const workGroupSizeY = ${n.workGroupSize[1]}u;
      const workGroupSizeZ = ${n.workGroupSize[2]}u;

      var<private> localId: vec3<u32>;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${CN(n)?"  return i32(globalId.x);":`  let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +
                   localId.y * workGroupSizeX + localId.x;
               let workGroupID = (globalId - localId)/vec3<u32>(
                   workGroupSizeX, workGroupSizeY, workGroupSizeZ);

               return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +
                   workGroupID.y * numWorkgroups.x + workGroupID.x) *
                   (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +
                   localInvocationIndex);
        `}
      }
    `),n.isFromPixels)return s.push(`
        struct Uniform {
          size            : i32,
          numChannels     : i32,
          outShapeStrides : vec2<i32>,
        };

        @group(0) @binding(0) var<storage, read_write> result: array<${sl(t.dtype,n.isVec4)}>;
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `),[bk,s.join(`
`),yk(t.shape),n.getUserCode()].join(`
`);let r=!1,a=!1,i="struct Uniforms { NAN : f32, ";n.variableNames.forEach((f,m)=>{let g=Qt(e[m].shape.length);(g==="vec5"||g==="vec6")&&(a=!0),(r||a)&&(i+="@align(16) "),r=a,i+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${g}, `});let o=Qt(t.shape.length);a=o==="vec5"||o==="vec6",(r||a)&&(i+="@align(16) "),r=a,i+=`outShape : ${o}, `;let u=t.shape.length-1,l=Qt(u);a=l==="vec5"||l==="vec6",(r||a)&&(i+="@align(16) "),r=a,i+=`
         outShapeStrides: ${l}, `,n.size&&(r&&(i+="@align(16) "),r=!1,i+="size : i32, "),n.uniforms&&(r&&(i+="@align(16) "),i+=n.uniforms),i+="};",s.push(i),n.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${sl(t.dtype,n.isVec4)}>;
    `),n.variableNames.forEach((f,m)=>{s.push(`
      @group(0) @binding(${1+m}) var<storage, read> ${f}: array<${n.variableTypes?n.variableTypes[m]:sl(e[m].dtype,n.isVec4)}>;
        `)}),i!==""&&s.push(`
      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);let c=pre(t.shape,n.dispatchLayout),p=[bk,s.join(`
`),yk(t.shape),c,hre(t.shape.length)];n.atomic||p.push(fre(t.shape,t.dtype,n.isVec4));let d=e.map((f,m)=>dre(f,t.shape,n.variableTypes?n.variableTypes[m]==="vec4<f32>":n.isVec4,n.dispatchLayout.x.length===t.shape.length)).join(`
`);return p.push(d),p.push(n.getUserCode()),p.join(`
`)}function ure(e,t,n,s){let r=e.shaderKey;if(e.isFromPixels)return r;let a=n.map(c=>c.dtype).concat(s.dtype),i=n.map(c=>I.getBroadcastDims(c.shape,s.shape)),o=n.map(c=>w.arraysEqual(c.shape,s.shape)).join("_"),u=i.map(c=>c.join("_")).join(";"),l=CN(e)?"flatDispatch":"";return r+="_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map(c=>c.length).join(",")+a.join(",")+e.variableNames.join(",")+u+o+l,r}var bk=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  fn idiv(a: i32, b: i32, sign: f32) -> i32 {
    var res: i32 = a / b;
    let modulo: i32 = a % b;
    if (sign < 0. && modulo != 0) {
      res = res - 1;
    }
    return res;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    return vec4<bool>(isnan(val[0]), isnan(val[1]), isnan(val[2]), isnan(val[3]));
  }
`;function yk(e){let t=e.length;if(t<=1)return"fn getCoordsFromIndex(index : i32) -> i32 { return index; }";let n=w.computeStrides(e),s=Qt(t),r=[];for(let i=0;i<t;i++)r.push(`d${i}`);if(n.length===1)return`    fn getCoordsFromIndex(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;
      return vec2<i32>(d0, d1);
    }`;let a;return a="var index2 = index;"+n.map((i,o)=>{let u=`let ${r[o]} = index2 / uniforms.outShapeStrides.${wr(o)}`,l=o===n.length-1?`let ${r[o+1]} = index2 - ${r[o]} * uniforms.outShapeStrides.${wr(o)}`:`index2 = index2 - ${r[o]} * uniforms.outShapeStrides.${wr(o)}`;return`${u}; ${l};`}).join(""),`
    fn getCoordsFromIndex(index : i32) -> ${s} {
      ${a}
      return ${s}(${r.join(",")});
    }
  `}function lre(e,t){let n=e.name,s=e.shape.length,r=Qt(s),a="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=i.map(c=>`${c} : i32`).join(", ");if(s<1)return t?`
        fn ${a}() -> vec4<f32> {
          return vec4<f32>(${n}[0]);
        }
      `:`
      fn ${a}() ->f32 {
        return f32(${n}[0]);
      }
    `;let u=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`,l=`${s}D`;return s===0&&(l="1D"),t?`
      fn ${a}(${o}) -> vec4<f32> {
        return vec4<f32>(${n}[getIndexFromCoords${l}(${r}(${i.join(",")}),
          ${u}) / 4]);
      }
      `:`
    fn ${a}(${o}) -> f32 {
      return f32(${n}[getIndexFromCoords${l}(${r}(${i.join(",")}),
        ${u})]);
    }
   `}function cre(e,t,n,s){let r=e.name,a=r.charAt(0).toUpperCase()+r.slice(1),i="get"+a+"ByOutput",o=e.shape.length,u=t.length,l=Qt(u);if(w.arraysEqual(e.shape,t)&&s)return n?`
      fn ${i}Index(globalIndex : i32) -> vec4<f32> {
        return vec4<f32>(${r}[globalIndex]);
      }

      fn ${i}Coords(coords : ${l}) -> vec4<f32> {
        return vec4<f32>(${r}[${u>1?"getOutputIndexFromCoords(coords)":"coords"} / 4]);
      }
      `:`
    fn ${i}Index(globalIndex : i32) -> f32 {
      return f32(${r}[globalIndex]);
    }

    fn ${i}Coords(coords : ${l}) -> f32 {
      return f32(${r}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}]);
    }
    `;let c=I.getBroadcastDims(e.shape,t),p=u-o,d="";if(o===0)return n?`
    fn ${i}Index(globalIndex : i32) -> vec4<f32> {
      return get${a}();
    }

    fn ${i}Coords(coords : ${l}) -> vec4<f32> {
      return get${a}();
    }
  `:`
    fn ${i}Index(globalIndex : i32) -> f32{
      return get${a}();
    }

    fn ${i}Coords(coords : ${l}) -> f32{
      return get${a}();
    }
  `;u<2&&c.length>=1?d="coords = 0;":d=c.map(g=>`coords.${wr(g+p)} = 0;`).join(`
`);let h="";if(u<2&&o>0)h="coords";else if(u>1){let g=Qt(o),b=e.shape.map((y,v)=>`coords.${wr(v+p)}`).join(", ");h=`${g}(${b})`}else h="coords";let f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;return n?`
    fn ${i}Index(globalIndex : i32) -> vec4<f32> {
      var coords = getCoordsFromIndex(globalIndex);
      ${d}
      return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
    }

    fn ${i}Coords(coordsIn : ${l}) -> vec4<f32> {
      var coords = coordsIn;
      ${d}
      return ${r}[getIndexFromCoords${m}(${h}, ${f}) / 4];
    }
  `:`
  fn ${i}Index(globalIndex : i32) -> f32 {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
  }

  fn ${i}Coords(coordsIn : ${l}) -> f32 {
    var coords = coordsIn;
    ${d}
    return f32(${r}[getIndexFromCoords${m}(${h}, ${f})]);
  }
`}function dre(e,t,n,s){let r=lre(e,n);return e.shape.length<=t.length&&(r+=cre(e,t,n,s)),r}function pre(e,t){let{x:n,y:s=[],z:r=[]}=t,a=e.length;if(n.length===a)return`fn getOutputCoords() -> ${Qt(a)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let i="",o=[n,s,r],u=0;for(let d=0;d<o.length;d++){let h=o[d];if(h.length!==0)if(u+=h.length,h.length===1)i+=`let d${h[0]} = i32(globalId[${d}]);`;else{let f=are(h,"uniforms.outShape");i+=`var index${d} = i32(globalId[${d}]);`;for(let m=0;m<f.length;m++)i+=`let d${h[m]} = index${d} / ${f[m]};`,m===f.length-1?i+=`let d${h[m+1]} = index${d} - d${h[m]} * ${f[m]};`:i+=`index${d} = index${d} - d${h[m]} * ${f[m]};`}}let l=[];for(let d=0;d<u;d++)l.push(`d${d}`);let c=Qt(u),p=`fn getOutputCoords() -> ${c} {
  ${i}
`;return l.length===0?p+=`return ${c}(0); }`:p+=`return ${c}(${l.join(",")}); }`,p}function hre(e){let t="";switch(e){case 0:case 1:t+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:t+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:t+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:t+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:t+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:t+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:w.assert(!1,()=>`Unsupported ${e}D shape`);break}return t}function CN(e){return e.dispatch[1]===1&&e.dispatch[2]===1}function sl(e,t){return e==="float32"?t?"vec4<f32>":"f32":e==="int32"||e==="bool"?t?"vec4<i32>":"i32":e}function fre(e,t,n){let s=e.length,r=sl(t,n),a;if(n?a=`fn setOutputAtIndex(flatIndex : i32, value : vec4<f32>) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : vec4<i32>) {
      result[flatIndex] = ${r}(value);
    }`:a=`fn setOutputAtIndex(flatIndex : i32, value : f32) {
      result[flatIndex] = ${r}(value);
    }
    fn setOutputAtIndexI32(flatIndex : i32, value : i32) {
      result[flatIndex] = ${r}(value);
    }`,s>=2){let i=["d0","d1","d2","d3","d4","d5"].slice(0,s),o=Qt(s);n?a+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<f32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex / 4, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : vec4<i32>) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex / 4, value);
      }
    `:a+=`
      fn setOutputAtCoords(${i.map(u=>`${u} : i32`).join(", ")}, value : f32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndex(flatIndex, value);
      }
      fn setOutputAtCoordsI32(${i.map(u=>`${u} : i32`).join(", ")}, value : i32) {
        let flatIndex = getOutputIndexFromCoords(${o}(${i.join(", ")}));
        setOutputAtIndexI32(flatIndex, value);
      }
    `}return a}var NN={};Ee(NN,{ArrayBufferToTypedArray:()=>_N,GPUBytesPerElement:()=>$N,MatMulProgramType:()=>AN,computeDispatch:()=>Ae,computeWorkGroupSizeForConv2d:()=>dx,computeWorkGroupSizeForMatMul:()=>TN,computeWorkPerThreadForConv2d:()=>px,flatDispatchLayout:()=>We,isWebGPUSupported:()=>hx,tilesFitEvenlyIntoShape:()=>mre});var ha=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function mre(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every((n,s)=>n%e[s]===0)}function Ae(e,t,n=[1,1,1],s=[1,1,1]){let[r,a,i]=[Math.ceil(ha(e.x.map(o=>t[o]))/(n[0]*s[0])),e.y?Math.ceil(ha(e.y.map(o=>t[o]))/(n[1]*s[1])):1,e.z?Math.ceil(ha(e.z.map(o=>t[o]))/(n[2]*s[2])):1];return[r,a,i]}function dx(e,t,n=!1){if(n)return[8,8,1];let s=ha(e.x.map(a=>t[a])),r=ha(e.y.map(a=>t[a]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function TN(e,t,n){return e===1?[32,1,1]:n===1?[1,32,1]:[8,8,1]}function px(e,t,n=!1){if(n)return[4,4,1];let s=ha(e.x.map(a=>t[a])),r=ha(e.y.map(a=>t[a]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function We(e){return{x:e.map((t,n)=>n)}}function $N(e){if(e==="float32"||e==="int32"||e==="bool"||e==="string")return 4;if(e==="complex64")return 8;throw new Error(`Unknown dtype ${e}`)}function _N(e,t){if(t==="float32")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function hx(){return(typeof window!="undefined"||typeof WorkerGlobalScope!="undefined")&&!!navigator.gpu}var AN=(e=>(e[e.MatMulPackedVec4Program=0]="MatMulPackedVec4Program",e[e.MatMulReduceProgram=1]="MatMulReduceProgram",e[e.MatMulSplitKProgram=2]="MatMulSplitKProgram",e[e.MatMulSmallOutputSizeProgram=3]="MatMulSmallOutputSizeProgram",e[e.MatMulPackedProgram=4]="MatMulPackedProgram",e[e.MatMulMax=5]="MatMulMax",e))(AN||{});function EN(e,t,n,s,r=!1,a=!1,i=!1,o=1){w.assert(n&&o===1||!n,()=>`transposeA ${n} is not compatible with component size ${o}`);let u=`
      let batch = ${e?"0":"batchIn"};
      let batchASize = uniforms.aShape[1] * uniforms.aShape[2];
      ${n?`value = A[(batch * batchASize + col * uniforms.aShape[2] + row) / ${o}];`:`value = A[(batch * batchASize + row * uniforms.aShape[2] + col) / ${o}];`}

    `,l;return s===!1?l=`value = B[(batch * batchBSize + row * uniforms.bShape[2] + col) / ${o}];`:l=`value = B[(batch * batchBSize + col * uniforms.bShape[2] + row) / ${o}];`,`
  fn mm_readA(batchIn: i32, row: i32, colIn: i32) -> ${At(o)} {
    var value = ${At(o)}(0.0);
    let col = colIn * ${o};
    ${r&&i?u:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${u}
    }
    `}
    return value;
  }

  fn mm_readB(batchIn: i32, row: i32, colIn: i32) -> ${At(o)} {
    let col = colIn * ${o};
    let batch = ${t?"0":"batchIn"};
    let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];
    var value = ${At(o)}(0.0);
    ${l}
    return value;
  }
  `}function Eh(e,t,n,s,r,a,i=!1,o=!1,u=!1,l=1){return`
  ${EN(n,s,r,a,i,o,u,l)}
  fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${At(l)}) {
    let col = colIn * ${l};
    ${i&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Su(e,t)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}var gre=e=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          t * TileInner + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRowStart + inputRow,
          t * TileInner + inputCol);
        `,bre=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function fx(e,t,n=!1,s=32){let r=e[1]*t[1],a=e[0]*t[0],i=n?r:s,o=n?s:r;w.assert(o%t[1]===0&&i%t[0]===0&&s%t[1]===0,()=>`tileAHight ${o} must be divisible by workGroupSize[1]${t[1]}, tileAWidth ${i} must be divisible by workGroupSize[0]${t[0]}, tileInner ${s} must be divisible by workGroupSize[1]${t[1]}`);let u=o/t[1],l=i/t[0],c=s/t[1];return`
    var<workgroup> mm_Asub : array<array<f32, ${i}>, ${o}>;
    var<workgroup> mm_Bsub : array<array<f32, ${a}>, ${s}>;
    const RowPerThread = ${e[1]};
    const ColPerThread = ${e[0]};
    const TileInner = ${s};

    @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
    fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
            @builtin(global_invocation_id) GlobalId : vec3<u32>,
            @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
            @builtin(workgroup_id) workgroupId: vec3<u32>) {
      localId = LocalId;
      globalId = GlobalId;
      numWorkgroups = NumWorkgroups;

      let tileRow = i32(localId.y) * RowPerThread;
      let tileCol = i32(localId.x) * ColPerThread;

      let globalRow = i32(globalId.y) * RowPerThread;
      let globalCol = i32(globalId.x) * ColPerThread;
      let batch = i32(globalId.z);
      let globalRowStart = i32(workgroupId.y) * ${r};

      let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

      var acc : array<array<f32, ColPerThread>, RowPerThread>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          acc[innerRow][innerCol] = 0.0;
        }
      }

      let tileRowA = i32(localId.y) * ${u};
      let tileColA = i32(localId.x) * ${l};
      let tileRowB = i32(localId.y) * ${c};
      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${u}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${l}; innerCol = innerCol + 1) {
            let inputRow = tileRowA + innerRow;
            let inputCol = tileColA + innerCol;
            ${gre(n)}
          }
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${c}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch,
              t * TileInner + inputRow,
              globalCol + innerCol);
          }
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ColPerThread>;
        for (var k = 0; k < TileInner; k = k + 1) {
          for (var inner = 0; inner < ColPerThread; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            ${bre(n)}
            for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        workgroupBarrier();
      }

      for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        for (var innerCol = 0; innerCol < ColPerThread; innerCol = innerCol + 1) {
          mm_write(batch, globalRow + innerRow, globalCol + innerCol,
              acc[innerRow][innerCol]);
        }
      }
    }
  `}var yre=e=>e?`
      mm_readA(batch, colA, globalRow),
      mm_readA(batch, colA + 1, globalRow),
      mm_readA(batch, colA + 2, globalRow),
      mm_readA(batch, colA + 3, globalRow)
  `:`
      mm_readA(batch, globalRow, colA),
      mm_readA(batch, globalRow, colA + 1),
      mm_readA(batch, globalRow, colA + 2),
      mm_readA(batch, globalRow, colA + 3)
  `;function vre(e,t=!1){return w.assert(e[1]===1&&e[2]===1,()=>`A linear work group size is required. But got ${e}.`),`
    const TileSize = ${e[0]*4};
    var<workgroup> mm_Asub : array<vec4<f32>, ${e[0]}>;

    ${Iu()}
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;
      let batch = i32(globalId.z);
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        let colA = t * TileSize + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${yre(t)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileSize / 4; k = k + 1) {
          let rowB = t * TileSize + k * 4;
          let BCached = vec4<f32>(mm_readB(batch, rowB, globalCol),
                              mm_readB(batch, rowB + 1, globalCol),
                              mm_readB(batch, rowB + 2, globalCol),
                              mm_readB(batch, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}var xre=class{constructor(e,t,n,s,r,a=!1,i=!1,o=null,u=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};let c=a?e[1]:e[2];this.workGroupSize=TN(t[1],c,t[2]),(t[1]===1||t[2]===1)&&(n=1),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),w.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));let p=o!=null,d=l!=null;p&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.transposeA=a,this.transposeB=i,this.addBias=p,this.activation=u,this.hasPreluActivationWeights=d,this.batchAEqualOne=s,this.batchBEqualOne=r,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],c),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${i}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.outputShape[1]>1}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getShapeFit(e,t,n){let s=this.workGroupSize[1]*this.workPerThread,r=this.workGroupSize[0]*this.workPerThread;this.tileInner=32,this.outputShape[1]===1&&(this.tileInner=this.workGroupSize[0]*4);let a=e%s===0,i=t%r===0,o=n%this.tileInner===0;return[a,i,o]}getUserCode(){return`
      ${ur(this.activation,this.hasPreluActivationWeights)}
      ${Eh(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner)}
      ${this.outputShape[1]>1?fx([this.workPerThread,this.workPerThread,1],this.workGroupSize,this.transposeA,this.tileInner):vre(this.workGroupSize,this.transposeA)}
    `}},wre=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          t * TileInner + inputRow,
          globalRowStart / ${t} + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          t * TileInner / ${t} + inputCol);
        `,kre=(e,t)=>e?`
        let ACached0 = mm_Asub[k * InnerElementSize][localRow];
        let ACached1 = mm_Asub[k * InnerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * InnerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * InnerElementSize + 3][localRow];"}
        for (var i = 0; i < RowPerThread; i = i + 1) {
          acc[i] = BCached[0] * ACached0[i] + acc[i];
          acc[i] = BCached[1] * ACached1[i] + acc[i];
          acc[i] = BCached[2] * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached[3] * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < RowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached[0] * ACached.x + acc[i];
          acc[i] = BCached[1] * ACached.y + acc[i];
          acc[i] = BCached[2] * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached[3] * ACached.w + acc[i];"}
        }`;function mx(e,t,n,s,r=4,a=!1){let i=a?t:s,o=a?s:t,u=a?e[1]:r;return w.assert((a&&t===n||s%4===0||s%3===0)&&e[0]===4&&(r===3||r===4),()=>`tileInner ${s} must be divisible by 4|3. ColPerThread ${e[0]} must be 4.
           innerElementSize ${r} must be 3|4.`),`
  var<workgroup> mm_Asub : array<array<vec${u}<f32>, ${i/u}>, ${o}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${n/e[0]}>, ${s}>;

  const RowPerThread = ${e[1]};
  const ColPerThread = ${e[0]};
  const InnerElementSize = ${r};
  const TileInner = ${s};

  @compute @workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)
  fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
          @builtin(global_invocation_id) GlobalId : vec3<u32>,
          @builtin(num_workgroups) NumWorkgroups: vec3<u32>,
          @builtin(workgroup_id) workgroupId: vec3<u32>) {
    localId = LocalId;
    globalId = GlobalId;
    numWorkgroups = NumWorkgroups;

    let localRow = i32(localId.y);
    let tileRow = ${t===1?"0":"localRow * RowPerThread"};
    let tileCol = i32(localId.x);

    let globalRow = ${t===1?"0":"i32(globalId.y) * RowPerThread"};
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let globalRowStart = i32(workgroupId.y) * ${t};

    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;

    var acc: array<vec4<f32>, RowPerThread>;
    var BCached : array<vec4<f32>, 4>;

    // Loop over shared dimension.
    let RowPerThreadB = TileInner / i32(workGroupSizeY);
    let tileRowB = localRow * RowPerThreadB;
    for (var t = 0; t < numTiles; t = t + 1) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${wre(a,u)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batch, t * TileInner + inputRow, globalCol);
        }

        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < TileInner / InnerElementSize; k = k + 1) {
            BCached[0] = mm_Bsub[k * InnerElementSize][tileCol];
            BCached[1] = mm_Bsub[k * InnerElementSize + 1][tileCol];
            BCached[2] = mm_Bsub[k * InnerElementSize + 2][tileCol];
            ${r===3?"":"BCached[3] = mm_Bsub[k * InnerElementSize + 3][tileCol];"}

            ${kre(a,r)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}var Sre=class{constructor(e,t,n,s,r=!1,a=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.isVec4=!0,this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]},t[1]===1&&!r?this.elementsPerThread=[4,1,1]:this.elementsPerThread=[4,4,1],this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread);let u=a!=null,l=o!=null;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.tileAOuter=t[1]===1&&!r?1:this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=this.tileBOuter,this.aShape=e,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=n,this.batchBEqualOne=s,this.transposeA=r;let c=r?e[1]:e[2];this.fitAOuter=t[1]%this.tileAOuter===0,this.fitBOuter=t[2]%this.tileBOuter===0,this.fitInner=c%this.tileInner===0,this.shaderKey=`matMulPackedVec4_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.elementsPerThread}_${this.batchAEqualOne}_${this.batchBEqualOne}_${this.transposeA}`}getUserCode(){return`
      ${ur(this.activation,this.hasPreluActivationWeights,!0)}
      ${Eh(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,!1,!1,this.fitAOuter,this.fitBOuter,this.fitInner,4)}
      ${mx(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,4,this.transposeA)}
    `}};function Ire(){return`
    var<workgroup> sumValues : array<f32, workGroupSizeX>;
    ${Iu()}
      let coords = getOutputCoords();
      let batch = coords[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {
        let dataA = mm_readA(batch, row, k);
        let dataB = mm_readB(batch, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}var Cre=class{constructor(e,t,n,s=!1,r=!1,a=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize);let u=a!=null,l=o!=null;u&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=t,this.batchBEqualOne=n,this.shaderKey=`matMulReduce_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${ur(this.activation,this.hasPreluActivationWeights)}
      ${Eh(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${Ire()}
    `}};function Nre(e){let t=e[1],n=e[0],s=t>n?t:n;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${t}>;
  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${Iu()}
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batch, globalRow, globalColA);
    var regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batch, globalRow, globalColA);
      regB0 = mm_readB(batch, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batch, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}var Tre=class{constructor(e,t,n,s=!1,r=!1,a=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[16,8,1],this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(n[1]/this.workGroupSize[1]),n[0]];let u=a!=null;u&&this.variableNames.push("bias");let l=o!=null;l&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=r,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=l,this.batchAEqualOne=e[0]===1,this.batchBEqualOne=t[0]===1,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${s}_${r}_${this.batchAEqualOne}_${this.batchBEqualOne}`}getUserCode(){return`
      ${ur(this.activation,this.hasPreluActivationWeights)}
      ${Eh(this.addBias,this.activation,this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      ${Nre(this.workGroupSize)}
    `}},$re=class{constructor(e,t,n,s,r=!1,a=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workGroupSize=[8,8,1],this.atomic=!0,this.tileInner=32,w.assert(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]},this.elementsPerThread=[4,4,this.tileInner],this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1),this.dispatch=Ae(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workGroupSize,this.elementsPerThread),this.transposeA=r,this.transposeB=a,this.batchAEqualOne=n,this.batchBEqualOne=s,this.shaderKey=`matMulSplitK_${r}_${a}_${n}_${s}_${this.elementsPerThread}`}getUserCode(){let e=`
     var oldValue = atomicLoad(&(result[flatIndex]));
     var exchanged = false;
     for (; !exchanged;) {
       let newValueF32 = bitcast<f32>(oldValue) + value;
       let newValue = bitcast<i32>(newValueF32);
       let res = atomicCompareExchangeWeak(&(result[flatIndex]), oldValue, newValue);
       oldValue = res.old_value;
       exchanged = res.exchanged;
     }
     `;return`
      ${EN(this.batchAEqualOne,this.batchBEqualOne,this.transposeA,this.transposeB)}
      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          var value = valueIn;
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          ${e}
        }
      }

      ${this.makeMatMulSplitKSource()}
    `}makeMatMulSplitKSource(){let e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=this.elementsPerThread[1],s=this.elementsPerThread[0],r=this.tileInner/this.workGroupSize[0],a=this.tileInner/this.workGroupSize[1];return w.assert(this.tileInner%this.workGroupSize[0]===0&&this.tileInner%this.workGroupSize[1]===0,()=>`tileInner ${this.tileInner} must be divisible by workGroupSize[0]${this.workGroupSize[0]} and workGroupSize[1]${this.workGroupSize[1]}`),`
      var<workgroup> mm_Asub : array<array<f32, ${this.tileInner}>, ${e}>;
      var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${this.tileInner}>;
      ${Iu()}
        let tileRow = i32(localId.y) * ${n};
        let tileCol = i32(localId.x) * ${s};

        let globalRow = i32(globalId.y) * ${n};
        let globalCol = i32(globalId.x) * ${s};
        let batch = 0;
        let kStart = i32(globalId.z) * ${this.tileInner};

        // Load one tile of A into local memory.
        let tileColA = i32(localId.x) * ${r};
        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${r}; innerCol = innerCol + 1) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileColA + innerCol;
            mm_Asub[inputRow][inputCol] = mm_readA(${this.batchAEqualOne?0:"batch"},
                globalRow + innerRow,
                kStart + inputCol);
          }
        }
        // Load one tile of B into local memory.
        let tileRowB = i32(localId.y) * ${a};
        for (var innerRow = 0; innerRow < ${a}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol + innerCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(${this.batchBEqualOne?0:"batch"},
                kStart + inputRow,
                globalCol + innerCol);
          }
        }

        workgroupBarrier();

        var acc : array<array<f32, ${s}>, ${n}>;
        // Loop over shared dimension. Compute acc values for a single thread.
        for (var k = 0; k < ${this.tileInner}; k = k + 1) {
          var BCached : array<f32, ${s}>;
          for (var inner = 0; inner < ${s}; inner = inner + 1) {
            BCached[inner] = mm_Bsub[k][tileCol + inner];
          }

          for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
            let ACached = mm_Asub[tileRow + innerRow][k];
            for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
            }
          }
        }

        for (var innerRow = 0; innerRow < ${n}; innerRow = innerRow + 1) {
          for (var innerCol = 0; innerCol < ${s}; innerCol = innerCol + 1) {
            mm_write(batch, globalRow + innerRow, globalCol + innerCol, acc[innerRow][innerCol]);
          }
        }
      }
    `}},_re=class{constructor(e,t=null,n=null,s=null){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=s!=null,this.activation=n,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${n}`}getUserCode(){return`
    ${ur(this.activation,this.hasPreluActivationWeights)}
    ${Ge()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Su(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}},Are=class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${Ge()}
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}};function Ri(e){let{backend:t,attrs:n}=e,{shape:s,value:r}=n,{dtype:a}=n;if(a=a||w.inferDtype(r),a==="string"){let i=w.getArrayFromDType(a,w.sizeFromShape(s));return i.fill(r),t.makeTensorInfo(s,a,i)}else{let i=new Are(s),o=[{type:"float32",data:[r]}];return t.runWebGPUProgram(i,[],a,o)}}var Ere={kernelName:Rl,backendName:"webgpu",kernelFunc:Ri};function Re(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),i=w.inferFromImplicitShape(r,a),o=w.sizeFromShape(i);return w.assert(a===o,()=>`The new shape (${i}) has ${o} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}var Rre={kernelName:Uo,backendName:"webgpu",kernelFunc:Re};function gx({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let l=e.shape.length,c=t.shape.length,p=n?e.shape[l-2]:e.shape[l-1],d=s?t.shape[c-1]:t.shape[c-2],h=n?e.shape[l-1]:e.shape[l-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=w.sizeFromShape(m),y=w.sizeFromShape(g),x=ou.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);w.assert(p===d,()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`);let k=n?[b,p,h]:[b,h,p],C=s?[y,f,d]:[y,d,f],$=Re({inputs:{x:e},backend:r,attrs:{shape:k}}),A=Re({inputs:{x:t},backend:r,attrs:{shape:C}}),E=[$,A],O=Math.max(b,y),R=b===1,D=y===1,T=(p%4===0&&!n||h%4===0&&n)&&f%4===0&&!s,L=[$,A],W=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[p]}],q,j,X=[O,h,f],Q=K().get("WEBGPU_MATMUL_PROGRAM_TYPE");switch(Q<0&&(h*f<=128?Q=1:O===1&&h<=128&&f<=48&&d>=2e3?Q=2:h<=16&&(f<=512||d>=2*f)||f<=16&&(h<=512||p>=2*h)?Q=3:T?Q=0:Q=4),Q){case 0:q=new Sre(k,X,R,D,n,a,u,i);break;case 1:q=new Cre(X,R,D,n,s,a,u,i);break;case 2:{if(j=Ri({backend:r,attrs:{shape:X,value:0,dtype:e.dtype}}),q=new $re(X,d,R,D,n,s),a||u){j=r.runWebGPUProgram(q,L,e.dtype,W,j);let J=new _re(j.shape,a,u,i),se=null,te=[j];a&&te.push(a),i&&te.push(i),u==="leakyrelu"&&(se=[{type:"float32",data:[o]}],J.uniforms+=" alpha : f32,");let oe=r.runWebGPUProgram(J,te,j.dtype,se);E.push(j);let re=Re({inputs:{x:oe},backend:r,attrs:{shape:x}});E.push(oe);for(let le of E)r.disposeData(le.dataId);return re}break}case 3:q=new Tre(k,C,X,n,s,a,u,i);break;case 4:q=new xre(k,X,K().get("WEBGPU_MATMUL_WORK_PER_THREAD"),R,D,n,s,a,u,i);break;default:throw new Error(`Unsupported MatMulProgramType ${Q}.`)}a&&L.push(a),i&&L.push(i),u==="leakyrelu"&&(W.push({type:"float32",data:[o]}),q.uniforms+=" alpha : f32,"),j=r.runWebGPUProgram(q,L,e.dtype,W,j);let ne=Re({inputs:{x:j},backend:r,attrs:{shape:x}});E.push(j);for(let J of E)r.disposeData(J.dataId);return ne}function Dre(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=s;return gx({a:r,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:c})}var Fre={kernelName:ma,backendName:"webgpu",kernelFunc:Dre},vk=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${lp(this.op,!1)}
      }

      ${Ge()}
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}},Pg=class{constructor(e,t,n){this.size=!0,this.variableNames=["A","B"],this.outputShape=I.assertAndGetBroadcastShape(t,n),this.dispatchLayout=We(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length===1&&n.length>1&&t[0]<1024,this.useSharedMemoryWithB=n.length===1&&t.length>1&&n[0]<1024,this.useSharedMemoryWithA||this.useSharedMemoryWithB?(this.isVec4=!1,this.lastDimensionSize=this.useSharedMemoryWithB?n[0]:t[0],this.shaderKey=`binary_${this.type}_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`,this.type="shared",this.workGroupSize=[256,1,1],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4):(w.arraysEqual(t,n)&&w.sizeFromShape(t)%4===0?(this.isVec4=!0,this.type="vec4",this.workPerThread=4):(this.isVec4=!1,this.type="plain",this.workPerThread=1),this.shaderKey=`binary_${this.type}_${e}`,this.workGroupSize=[128,1,1]),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1])}getUserCode(){let e;if(this.type==="shared"){let t=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",n=this.useSharedMemoryWithB?`let a = getAByOutputCoords(coords);
          let b = sharedBuf[${t}];`:`let a = sharedBuf[${t}];
          let b = getBByOutputCoords(coords);`;e=`
        fn binaryOperation(a : f32, b : f32) -> f32 {
          ${lp(this.op,this.isVec4)}
        }
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${Ge()}

          // Fill in the shared memory buffer. Here we need a loop to make sure
          // that all data in A|B are uploaded when |sharedMemorySize| is larger
          // than work group size.
          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
            let flatIndex = index * ${this.workPerThread} + i;
            if(flatIndex < uniforms.size) {
              let coords = getCoordsFromIndex(flatIndex);

              ${n}
              setOutputAtIndex(flatIndex, binaryOperation(a, b));
            }
          }
        }
        `}else{let t=this.type==="vec4"?"vec4<f32>":"f32",n=lp(this.op,this.isVec4);e=`
       fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
         ${n}
       }
       ${Ge()}
         if (index < uniforms.size) {
           let a = getAByOutputIndex(index);
           let b = getBByOutputIndex(index);
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `}return e}};function Gn(e){let{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var Ore={kernelName:Ya,backendName:"webgpu",kernelFunc:Gn};function Cu(e){let{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.tensorMap.get(a.dataId),o=Gn({inputs:{x:s},backend:n}),u=Gn({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:u},a}var Pre={kernelName:vp,backendName:"webgpu",kernelFunc:Cu},bc=class{constructor(e,t){this.variableNames=["A"],this.size=!0;let n=128;this.workGroupSize=[n,1,1],this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${ta(this.op,!1)}
      }
      ${Ge()}
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}};function tn({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:s,backend:r})=>{let{x:a}=s,i=r,o=n||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){let l=i.tensorMap.get(a.dataId),c=t(l.values,o);return i.makeTensorInfo(a.shape,o,c)}let u=new bc(a.shape,e);return i.runWebGPUProgram(u,[a],o)}}function Sn({opType:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:s}){return({inputs:r,backend:a})=>{let{a:i,b:o}=r,u=a;if(n&&i.dtype==="complex64"){let p=u.tensorMap.get(i.dataId),d=u.tensorMap.get(o.dataId),h,f;if(e!==0)[h,f]=[[p.complexTensorInfos.real,d.complexTensorInfos.real],[p.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(g=>{let[b,y]=g,v={dataId:b.dataId,dtype:b.dtype,shape:i.shape},x={dataId:y.dataId,dtype:y.dtype,shape:o.shape},k=new Pg(e,i.shape,o.shape);return u.runWebGPUProgram(k,[v,x],bn(b.dtype,y.dtype))});else{let g=new vk(17,i.shape,o.shape),b=new vk(18,i.shape,o.shape),y=[{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:o.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:o.shape}];h=u.runWebGPUProgram(g,y,"float32"),f=u.runWebGPUProgram(b,y,"float32")}let m=Cu({inputs:{real:h,imag:f},backend:u});return u.disposeData(h.dataId),u.disposeData(f.dataId),m}let l=s||bn(i.dtype,o.dtype);if((i.dtype==="string"||o.dtype==="string"||u.shouldExecuteOnCPU([i,o]))&&t!=null){let p=u.tensorMap.get(i.dataId).values,d=u.tensorMap.get(o.dataId).values,h=i.dtype==="string"?I.fromUint8ToStringArray(p):p,f=i.dtype==="string"?I.fromUint8ToStringArray(d):d,[m,g]=t(i.shape,o.shape,h,f,l);return u.makeTensorInfo(g,l,m)}let c=new Pg(e,i.shape,o.shape);return u.runWebGPUProgram(c,[i,o],l)}}var{addImpl:Lre,ceilImpl:zre,concatImpl:Mre,equalImpl:Bre,expImpl:Vre,expm1Impl:Wre,floorImpl:Ure,gatherNdImpl:Gre,gatherV2Impl:Hre,greaterEqualImpl:qre,greaterImpl:jre,lessEqualImpl:Kre,lessImpl:Xre,logImpl:Yre,maxImpl:Zre,maximumImpl:Qre,minimumImpl:Jre,multiplyImpl:eae,negImpl:tae,notEqualImpl:nae,prodImpl:sae,rangeImpl:rae,rsqrtImpl:aae,scatterImpl:iae,simpleAbsImpl:oae,sliceImpl:uae,stridedSliceImpl:lae,stringNGramsImpl:cae,subImpl:dae,tileImpl:pae,topKImpl:hae,transposeImpl:fae,uniqueImpl:tfe}=Pv,mae=tn({opType:0,cpuKernelImpl:oae}),gae={kernelName:vo,backendName:"webgpu",kernelFunc:mae},bae=Sn({opType:1,cpuKernelImpl:Lre,supportsComplex:!0}),yae={kernelName:Er,backendName:"webgpu",kernelFunc:bae},vae=class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){let e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});let t=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${Ge()}
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}};function xae(e){let{inputs:t,backend:n}=e,s=t;if(s.length===1)return Gn({inputs:{x:s[0]},backend:n});let r=s.map(o=>o.dtype).reduce((o,u)=>bn(o,u)),a=s.map(o=>o.shape),i=new vae(a);return n.runWebGPUProgram(i,s,r)}var wae={kernelName:Ea,backendName:"webgpu",kernelFunc:xae},RN=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;let s=[t];I.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),s,e.length),this.op=n==="min"?"<":">";let[r]=I.computeOutAndReduceShapes(e,s);this.outputShape=r.length===0?[1]:r,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){let e=`
      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;
      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
    `,t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${wr(this.inputShape.length-1)}`,n=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let a=0;a<this.outputShape.length;a++)r+=`outputCoords.${wr(a)},`;return r};return`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${e}

      ${Ge()}
        let outputIndex = index / i32(workGroupSizeX);
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + i32(workGroupSizeX)) {
          let candidate = getX(${n()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), workGroupSizeX);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `}},kae=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`
      const TILE_DIM = ${this.workGroupSize[0]};
      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;
      ${Ah()}
      fn main(@builtin(local_invocation_id) localId : vec3<u32>,
              @builtin(workgroup_id) workgroupId : vec3<u32>) {
        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);
        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = A[y * width + x];
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);
        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}},Sae=class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){let e=Qt(this.outputShape.length),t=Iae(this.newDim);return`
      ${Ge()}

        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let resRC = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}};function Iae(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=new Array(t);for(let s=0;s<e.length;s++)n[e[s]]=`resRC.${wr(s)}`;return n.join()}function sr(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,u=new Array(o);for(let c=0;c<u.length;c++)u[c]=r.shape[a[c]];if(n.shouldExecuteOnCPU([r])){let p=i.tensorMap.get(r.dataId).values,d=fae(p,r.shape,r.dtype,a,u);return n.makeTensorInfo(u,r.dtype,d)}if(r.shape.length===2&&w.arraysEqual(a,[1,0])){let c=new kae(r.shape,a);return i.runWebGPUProgram(c,[r],r.dtype)}let l=new Sae(r.shape,a);return i.runWebGPUProgram(l,[r],r.dtype)}var Cae={kernelName:Js,backendName:"webgpu",kernelFunc:sr};function Nae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=sr({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let c=new RN(u.shape,i[0],"max"),p=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=n.runWebGPUProgram(c,[u],"int32",p);return l.forEach(h=>n.disposeData(h.dataId)),d}var Tae={kernelName:Ra,backendName:"webgpu",kernelFunc:Nae};function $ae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s,i=w.parseAxisParam(a,r.shape),o=I.getAxesPermutation(i,r.shape.length),u=r,l=[];o!=null&&(u=sr({inputs:{x:r},backend:n,attrs:{perm:o}}),l.push(u),i=I.getInnerMostAxes(i.length,u.shape.length)),I.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let c=new RN(u.shape,i[0],"min"),p=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=n.runWebGPUProgram(c,[u],"int32",p);return l.forEach(h=>n.disposeData(h.dataId)),d}var _ae={kernelName:Cl,backendName:"webgpu",kernelFunc:$ae},DN=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>, pad : vec2<i32>, dilation : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";this.poolType==="avg"&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";return this.poolType==="avg"&&(t="resultValue / count"),`
      ${Ge()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};
          var count = 0.0;

          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, coords[3]);
              ${e}
            }
          }

          setOutputAtIndex(index, ${t});
        }
      }
    `}},FN=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>,",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${Ge()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.stride;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}};function Aae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1,c=I.computePool2DInfo(r.shape,a,i,l,o,u);if(c.filterWidth===1&&c.filterHeight===1&&w.arraysEqual(c.inShape,c.outShape))return Gn({inputs:{x:r},backend:n});let p,d=[{type:"int32",data:[c.strideHeight,c.strideWidth]}];return c.filterHeight===1&&c.filterWidth===1?p=new FN(c):(p=new DN(c,"avg"),d.push({type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]})),n.runWebGPUProgram(p,[r],r.dtype,d)}var Eae={kernelName:Da,backendName:"webgpu",kernelFunc:Aae};function Rae(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return gx({a:r,b:a,transposeA:i,transposeB:o,backend:n})}var Dae={kernelName:Fa,backendName:"webgpu",kernelFunc:Rae},Fae=class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Qt(e.length)}, `,this.shaderKey="slice"}getUserCode(){let e=Qt(this.rank),t=Oae(this.rank),n;return this.start.length===1?n=this.outputShape.map((r,a)=>"sourceLoc = uniforms.start + coords;"):n=this.outputShape.map((r,a)=>`sourceLoc.${Lg[a]} = uniforms.start[${a}] + coords.${Lg[a]};`),`
      ${Ge()}
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${n.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}},Lg=["x","y","z","w","u","v"];function Oae(e){if(e===1)return"sourceLoc";if(e<=6)return Lg.slice(0,e).map(t=>`sourceLoc.${t}`).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}function Nu(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,u]=It.parseSliceParams(r,a,i);if(It.assertParamsValid(r,o,u),n.shouldExecuteOnCPU([r])||r.dtype==="string"){let p=n.tensorMap.get(r.dataId),d=uae(p.values,o,u,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,d)}if(w.sizeFromShape(u)===0)return n.makeTensorInfo(u,r.dtype,[]);let l=new Fae(o,u),c=[{type:"int32",data:o}];return n.runWebGPUProgram(l,[r],r.dtype,c)}var Pae={kernelName:Ko,backendName:"webgpu",kernelFunc:Nu},Lae=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;w.assert(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");let o=a.reduce((y,v)=>y*v),u=I.getReshaped(r.shape,a,o),l=I.getPermuted(u.length,a.length),c=I.getReshapedPermuted(r.shape,a,o),p=I.getSliceBeginCoords(i,a.length),d=I.getSliceSize(c,i,a.length),h=[],f=Re({inputs:{x:r},backend:n,attrs:{shape:u}}),m=sr({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Re({inputs:{x:m},backend:n,attrs:{shape:c}}),b=Nu({inputs:{x:g},backend:n,attrs:{begin:p,size:d}});return h.push(f),h.push(m),h.push(g),h.forEach(y=>n.disposeData(y.dataId)),b},zae={kernelName:xo,backendName:"webgpu",kernelFunc:Lae},ON=Sn({opType:10,dtype:"bool",cpuKernelImpl:nae}),Mae={kernelName:Lo,backendName:"webgpu",kernelFunc:ON};function yc(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Gn({inputs:{x:r.complexTensorInfos.real},backend:n})}var Bae={kernelName:Tp,backendName:"webgpu",kernelFunc:yc};function Vae(e,t){let n=new bc(e.shape,22),s=t.runWebGPUProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function zg(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if(a==="complex64"){if(r.dtype==="complex64")return Gn({inputs:{x:r},backend:n});let i=Et(r.shape),o=zg({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),u=Cu({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeData(o.dataId),u}if(r.dtype==="complex64"){let i=yc({inputs:{input:r},backend:n}),o=zg({inputs:{x:i},backend:n,attrs:{dtype:a}});return n.disposeData(i.dataId),o}if(!w.hasEncodingLoss(r.dtype,a)){let i=Gn({inputs:{x:r},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:a}}if(a==="int32")return Vae(r,n);if(a==="bool"){let i=n.makeTensorInfo([],"bool",w.getTypedArrayFromDType("bool",1)),u=ON({inputs:{a:r,b:i},backend:n});return n.disposeData(i.dataId),u}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}var Wae={kernelName:Oa,backendName:"webgpu",kernelFunc:zg},Uae=tn({opType:1,cpuKernelImpl:zre}),Gae={kernelName:Pa,backendName:"webgpu",kernelFunc:Uae},Hae=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${Ge()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue : vec4<f32>;
          for (var i = 0; i < 4; i = i + 1) {
            if (isnan(value[i])) {
              clampedValue[i] = value[i];
            } else {
              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);
            }
          }

          setOutputAtIndex(index, clampedValue);
        }
      }
    `}},qae=class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${Ge()}
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}};function jae(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o,u=[{type:"float32",data:[a]},{type:"float32",data:[i]}];return w.sizeFromShape(r.shape)%4===0?o=new Hae(r.shape):o=new qae(r.shape),n.runWebGPUProgram(o,[r],r.dtype,u)}var Kae={kernelName:Rr,backendName:"webgpu",kernelFunc:jae},Xae=class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=I.computeOutShape(e,1),this.variableNames=e.map((t,n)=>`T${n}`),this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){let e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let r=1;r<this.offsetLength;r++)e.push(`else if (yC < uniforms.offset${[r]}){ setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${r-1})); }`);let n=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${n}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${Ge()}
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}};function Rh(e){let{inputs:t,backend:n}=e,{input:s}=t,r=n.tensorMap.get(s.dataId);return Gn({inputs:{x:r.complexTensorInfos.imag},backend:n})}var Yae={kernelName:Ip,backendName:"webgpu",kernelFunc:Rh};function Ju(e,t,n){let s=e[0].dtype;if(s==="complex64"){let f=e.map(v=>yc({inputs:{input:v},backend:n})),m=e.map(v=>Rh({inputs:{input:v},backend:n})),g=Ju(f,t,n),b=Ju(m,t,n),y=Cu({inputs:{real:g,imag:b},backend:n});return f.forEach(v=>n.disposeData(v.dataId)),m.forEach(v=>n.disposeData(v.dataId)),n.disposeData(g.dataId),n.disposeData(b.dataId),y}let r=n.shouldExecuteOnCPU(e);if(s==="string"&&(r=!0),r){let f=e.map(k=>{let C=w.sizeFromShape(k.shape.slice(t));return Re({inputs:{x:k},backend:n,attrs:{shape:[-1,C]}})}),m=f.map(k=>({vals:n.readSync(k.dataId),shape:k.shape})),g=I.computeOutShape(f.map(k=>k.shape),1),b=f[0].shape[0]===1,y=Mre(m,g,s,b),v=I.computeOutShape(e.map(k=>k.shape),t),x=n.makeTensorInfo(v,s,y);return f.forEach(k=>n.disposeData(k.dataId)),x}let a=n.device.limits.maxStorageBuffersPerShaderStage-1;if(e.length>a){let f=[];for(let g=0;g<e.length;g+=a){let b=e.slice(g,g+a);f.push(Ju(b,t,n))}let m=Ju(f,t,n);for(let g of f)n.disposeData(g.dataId);return m}let{tensors2D:i,outShape:o}=Zae(e,t,n),u=i.map(f=>f.shape),l=new Xae(u),c=[],p=new Array(u.length-1);if(p.length>0){p[0]=u[0][1],c.push({type:"int32",data:[p[0]]});for(let f=1;f<p.length;f++)p[f]=p[f-1]+u[f][1],c.push({type:"int32",data:[p[f]]})}let d=n.runWebGPUProgram(l,i,i[0].dtype,c);i.forEach(f=>n.disposeData(f.dataId));let h=Re({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeData(d.dataId),h}function Zae(e,t,n){let s=I.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>Re({inputs:{x:a},backend:n,attrs:{shape:[w.sizeFromShape(a.shape.slice(0,t)),w.sizeFromShape(a.shape.slice(t))]}})),outShape:s}}function PN(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=w.parseAxisParam(r,t[0].shape)[0],i=I.computeOutShape(t.map(l=>l.shape),a);if(w.sizeFromShape(i)===0)return n.makeTensorInfo(i,t[0].dtype,[]);let o=t.filter(l=>w.sizeFromShape(l.shape)>0);if(o.length===1)return Gn({inputs:{x:o[0]},backend:n});let u=o.map(l=>l.shape);return I.assertParamsConsistent(u,a),Ju(o,a,n)}var Qae={kernelName:wo,backendName:"webgpu",kernelFunc:PN};function Jae(e,t,n,s,r=!1,a=null,i=!1,o=4,u=4,l=4){let c=E=>{switch(E){case 1:return"resData = x[xIndex];";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${E} is not supported.`)}},p=E=>{switch(E){case 1:return"return W[row * uniforms.wShape[3] + colIn];";case 4:return"return W[row * uniforms.wShape[3] / 4 + colIn];";default:throw new Error(`innerElementSize ${E} is not supported.`)}},d=e?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,h=e?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=e?"uniforms.xShape[1]":"uniforms.xShape[2]",m=e?"uniforms.xShape[2]":"uniforms.xShape[3]",g=e?"row":"col",b=e?"col":"row",y=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${g} / outWidth;
      let outCol = ${g} % outWidth;

      let WRow = ${b} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${b} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
      let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
      let xCh = ${b} % inChannels;
      var resData = ${At(o)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(o)}
      }
      return resData;`,v=e?t&&s?`
      let col = colIn * ${o};
      ${y}`:`
      let col = colIn * ${o};
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${y}
      }
      return ${At(o)}(0.0);`:s&&n?`
      let col = colIn * ${o};
      ${y}`:`
      let col = colIn * ${o};
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${y}
      }
      return ${At(o)}(0.0);`,x=`${p(u)}`,k=At(l),C=At(e?o:u),$=At(e?u:o);return`
      ${ur(a,i,l===4,4)}
      fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${C} {
        ${e?v:x}
      }

      fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${$} {
        ${e?x:v}
      }

      fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${k}) {
        let col = colIn * ${l};
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${e?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${h}
        ${Su(r,a)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}var eie=class{constructor(e,t,n,s,r=!1,a=null,i=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>, dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workGroupSize=dx(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=px(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableTypes=["f32","vec4<f32>"]):(this.innerElementSize=4,this.variableTypes=["vec4<f32>","vec4<f32>"]),r&&(this.variableNames.push("bias"),this.variableTypes.push("vec4<f32>")),i&&(this.variableNames.push("preluActivationWeights"),this.variableTypes.push("vec4<f32>"))):(this.innerElementSize=this.elementsPerThread[0],r&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.addBias=r,this.activation=a,this.hasPreluActivationWeights=i,this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=n%this.tileBOuter===0,this.fitInner=s%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}`}getUserCode(){let e=this.isVec4?mx(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize,!this.isChannelsLast):fx(this.elementsPerThread,this.workGroupSize,!this.isChannelsLast,this.tileInner),t=this.isVec4?[this.isChannelsLast?this.innerElementSize:4,4,4]:[1,1,1];return`
    ${Jae(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}};function xk(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function tie({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=n.dataFormat==="channelsLast",l=!u,c=!1,p=u&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",d=[],h,f;if(p){let b=n.inHeight*n.inWidth*n.inChannels;h=Re({inputs:{x:e},backend:s,attrs:{shape:[1,n.batchSize,b]}}),f=Re({inputs:{x:t},backend:s,attrs:{shape:[1,b,n.outChannels]}})}else h=Re({inputs:{x:e},backend:s,attrs:{shape:u?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),f=Re({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(d.push(h),d.push(f),a!=null){let b=xk(a.shape,u);b!=null&&(a=Re({inputs:{x:a},backend:s,attrs:{shape:b}}),d.push(a))}if(r!=null){let b=xk(r.shape,u);b!=null&&(r=Re({inputs:{x:r},backend:s,attrs:{shape:b}}),d.push(r))}let m=gx({a:u?h:f,b:u?f:h,transposeA:l,transposeB:c,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),g=Re({inputs:{x:m},backend:s,attrs:{shape:n.outShape}});d.push(m);for(let b of d)s.disposeData(b.dataId);return g}function LN({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){let u=r!=null,l=a!=null,c=n.dataFormat==="channelsLast";if(c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID"||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID"))return tie({x:e,filter:t,convInfo:n,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});let d=c?n.outHeight*n.outWidth:n.outChannels,h=c?n.outChannels:n.outHeight*n.outWidth,f=n.filterHeight*n.filterWidth*n.inChannels,m=[n.padInfo.top,n.padInfo.left],g=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...m]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]},{type:"int32",data:[d]},{type:"int32",data:[h]},{type:"int32",data:[f]}],b=new eie(n,d,h,f,u,o,l),y=[],v=[e,t];u&&(!c&&r.shape.length===1&&(r=Re({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),y.push(r)),v.push(r)),l&&(!c&&a.shape.length===1&&(a=Re({inputs:{x:a},backend:s,attrs:{shape:[a.shape[0],1,1]}}),y.push(a)),v.push(a)),o==="leakyrelu"&&(g.push({type:"float32",data:[i]}),b.uniforms+=" alpha : f32,");let x=s.runWebGPUProgram(b,v,e.dtype,g);for(let k of y)s.disposeData(k.dataId);return x}function nie(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=n,p=I.convertConv2DDataFormat(u),d=I.computeConv2DInfo(r.shape,a.shape,i,l,o,c,!1,p);return LN({x:r,filter:a,convInfo:d,backend:s})}var sie={kernelName:La,backendName:"webgpu",kernelFunc:nie};function rie(e=4){let t=a=>{switch(a){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${a} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${At(e)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${At(e)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${e}];`}
      }
      return ${At(e)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${At(e)} {
    let col = colIn * ${e};
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${At(e)} {
    let col = colIn * ${e};
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${t(e)}
    }
    return ${At(e)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${At(e)}) {
    let col = colIn * ${e};
    if (row < uniforms.dimAOuter && (col + ${e-1}) < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${e}] = value;
    }
  }`}var aie=class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=dx(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=px(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.isVec4?(this.innerElementSize=4,this.variableTypes=["vec4<f32>","f32"]):this.innerElementSize=this.elementsPerThread[0],this.tileAOuter=this.workGroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workGroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workGroupSize[0]*this.innerElementSize,this.workGroupSize[1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}_${this.innerElementSize}`}getUserCode(){let e=this.isVec4?mx(this.elementsPerThread,this.tileAOuter,this.tileBOuter,this.tileInner,this.innerElementSize):fx(this.elementsPerThread,this.workGroupSize);return`
    ${rie(this.isVec4?4:1)}
    ${e}
    `}},iie=class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, stride : vec2<i32>, outBackprop : vec4<i32>,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,n=this.isChannelsLast?3:1;return`
    ${Ge()} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${n}];

        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = dyR;

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = dyC;

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              if (${this.isChannelsLast}) {
                let xValue = getDy(batch, idyR, idyC, d2);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              } else {
                let xValue = getDy(batch, d2, idyR, idyC);
                let wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd = dotProd + xValue * wValue;
              }

            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}};function oie(e){let{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,p=I.convertConv2DDataFormat(l),d=I.computeConv2DInfo(i,a.shape,o,1,u,c,!1,p),h=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}],f;if(K().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new iie(d);else{f=new aie(d);let m=d.inShape[1]*d.inShape[2],g=d.inShape[3],b=d.filterHeight*d.filterWidth*d.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[g]},{type:"uint32",data:[b]})}return n.runWebGPUProgram(f,[r,a],"float32",h)}var uie={kernelName:za,backendName:"webgpu",kernelFunc:oie},lie=tn({opType:2}),cie={kernelName:Ma,backendName:"webgpu",kernelFunc:lie},die=tn({opType:3}),pie={kernelName:Ba,backendName:"webgpu",kernelFunc:die},hie=class{constructor(e,t,n,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workGroupSize=[64,1,1],this.size=!0;let[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){let[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,s,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
      ${Ge()}
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${n});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${i};
        let in_y = ${r};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${o};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}},fie=e=>{let{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=s,c=new hie(r.shape[3],a.shape,o,u),p=[{type:"float32",data:[l]}];return n.runWebGPUProgram(c,[r,a,i],"float32",p)},mie={kernelName:So,backendName:"webgpu",kernelFunc:fie},wk=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0;let r=128;this.workGroupSize=[r,1,1],this.outputShape=t,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.exclusive=n,this.reverse=s,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){let e=this.outputShape.length,t=this.op==="*"?"1.0":"0.0",n=this.exclusive?t:`getX(${kk(e,"coords",this.op)})`,s=this.outputShape[this.outputShape.length-1],r="",a="";return this.exclusive?(r=this.reverse?`end != ${s-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(r=this.reverse?`end + pow2 < ${s}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${Ge()}
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${Sk(e,"coords",this.op)};
         var val = ${n};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${r}) {
           let idx = ${a};
           ${Sk(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${kk(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}};function kk(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Sk(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function zN(e,t,n,s,r,a){let i=t.shape.length,o=I.getAxesPermutation([s],i),u=t;o!=null&&(u=sr({inputs:{x:t},backend:n,attrs:{perm:o}}));let l=I.getInnerMostAxes(1,i)[0];if(l!==i-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);let c=u.shape[l],p=Gn({inputs:{x:u},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){let h=new wk(e,u.shape,!1,a),f=p,m=[{type:"float32",data:[d]}];p=n.runWebGPUProgram(h,[p],p.dtype,m),n.disposeData(f.dataId)}if(r){let d=new wk(e,u.shape,r,a),h=p,f=[{type:"float32",data:[0]}];p=n.runWebGPUProgram(d,[p],p.dtype,f),n.disposeData(h.dataId)}if(o!=null){let d=I.getUndoAxesPermutation(o),h=sr({inputs:{x:p},backend:n,attrs:{perm:d}});return n.disposeData(p.dataId),n.disposeData(u.dataId),h}return p}function gie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return zN("*",r,n,a,i,o)}var bie={kernelName:ko,backendName:"webgpu",kernelFunc:gie};function yie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;return zN("+",r,n,a,i,o)}var vie={kernelName:Va,backendName:"webgpu",kernelFunc:yie},xie=class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${Ge()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function wie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],p=u*a,d=l*a,h=c/(a*a),f=i==="NHWC"?[o,p,d,h]:[o,h,p,d],m=[{type:"int32",data:[a]}],g=new xie(f,i);return n.runWebGPUProgram(g,[r],r.dtype,m)}var kie={kernelName:Io,backendName:"webgpu",kernelFunc:wie},Sie=class{constructor(e,t,n,s=!1,r=null,a=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=s,this.activation=r,this.hasPreluActivation=a,this.filterHeight=t,this.filterWidth=n,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){let e=this.filterWidth*this.filterHeight,t=this.workGroupSize[0]*this.workGroupSize[1]*this.workGroupSize[2],n=this.workGroupSize[1]+this.filterHeight-1,s=this.workGroupSize[0]+this.filterWidth-1;return`
      ${ur(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${s}>, ${n}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${Ah()}
      fn main(@builtin(local_invocation_id) LocalId : vec3<u32>,
              @builtin(global_invocation_id) GlobalId : vec3<u32>,
              @builtin(local_invocation_index) LocalIndex: u32,
              @builtin(num_workgroups) NumWorkgroups: vec3<u32>) {
        localId = LocalId;
        globalId = GlobalId;
        let localIndex = i32(LocalIndex);
        numWorkgroups = NumWorkgroups;
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pad;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${n}; inputRow = inputRow + ${this.workGroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${s}; inputCol = inputCol + ${this.workGroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = localIndex;
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Su(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}},MN=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>, inDims : vec2<i32>,",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[4,4,1]),w.assert(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwiseVec4_${n}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}`}getUserCode(){let e=4+this.convInfo.filterWidth-1;return`
      ${ur(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, row, col, channel);
        }
        return value;
      }
      ${Ah()}
      fn main(@builtin(global_invocation_id) globalId: vec3<u32>) {
        let batch = i32(globalId.z) / uniforms.outShape[1];
        let r = i32(globalId.z) % uniforms.outShape[1];
        let c = i32(globalId.y) * 4;
        let d1 = i32(globalId.x) * 4;
        let xRCCorner = vec2<i32>(r, c) - uniforms.pad;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, 4>;
        dotProd[0] = vec4<f32>(0.0);
        dotProd[1] = vec4<f32>(0.0);
        dotProd[2] = vec4<f32>(0.0);
        dotProd[3] = vec4<f32>(0.0);

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          for (var i = 0; i < ${e}; i++)
          {
            xVals[i] = readX(batch, xR, xCCorner + i, d1);
          }
          for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
            let wValue = getW(wR, wC, d1, 0);
            dotProd[0] = dotProd[0] + xVals[0 + wC] * wValue;
            dotProd[1] = dotProd[1] + xVals[1 + wC] * wValue;
            dotProd[2] = dotProd[2] + xVals[2 + wC] * wValue;
            dotProd[3] = dotProd[3] + xVals[3 + wC] * wValue;
          }
        }

        for (var i = 0; i < 4; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Su(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}},BN=class{constructor(e,t=!1,n=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pad : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, stride : vec2<i32>, dilation : vec2<i32>,`,this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){let e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${ur(this.activation,this.hasPreluActivation,!1,4)}

      ${Iu()}
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.stride - uniforms.pad;
        let d2 = coords[${this.isChannelsLast?3:1}];
        let channelMul = uniforms.wShape[3];
        let d1 = d2 / channelMul;
        let q = d2 % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;
        let inputRowEnd = inputRowStart + uniforms.filterHeight *
            uniforms.dilation[0];
        let inputColEnd = inputColStart + uniforms.filterWidth *
            uniforms.dilation[1];

        // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
        // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
        // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
        // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
        var value = 0.0;

        // Extract if checking out of for loop for performance.
        if (inputRowStart >= 0 && inputColStart >= 0 &&
          inputRowEnd < uniforms.inDims[0] &&
              inputColEnd < uniforms.inDims[1]) {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          } else {
            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
              let xR = inputRowStart + wR * uniforms.dilation[0];

              if (xR < 0 || xR >= uniforms.inDims[0]) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                let xC = inputColStart + wC * uniforms.dilation[1];

                if (xC < 0 || xC >= uniforms.inDims[1]) {
                  continue;
                }

                let xVal = ${e};
                let wVal = getW(wR, wC, d1, q);
                value = value + xVal * wVal;
              }
            }
          }
          ${Su(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}};function Iie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=s,p=I.convertConv2DDataFormat(u),d=l;d==null&&(d=[1,1]);let h=I.computeConv2DInfo(r.shape,a.shape,i,d,o,c,!0,p),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],m=h.dataFormat==="channelsLast",g;return!m&&h.inHeight>16&&h.inWidth>16&&h.strideHeight===1&&h.strideWidth===1&&h.dilationWidth===1&&h.dilationHeight===1&&h.inChannels===h.outChannels?g=new Sie(h.outShape,h.filterHeight,h.filterWidth):m&&h.inHeight>4&&h.inWidth>4&&h.strideHeight===1&&h.strideWidth===1&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?g=new MN(h):(g=new BN(h),f.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),n.runWebGPUProgram(g,[r,a],r.dtype,f)}var Cie={kernelName:Wa,backendName:"webgpu",kernelFunc:Iie},VN=Sn({opType:0,cpuKernelImpl:eae,supportsComplex:!0}),Nie={kernelName:ii,backendName:"webgpu",kernelFunc:VN},Tie=class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];let[n]=I.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=n.length===0?[1]:n,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"&&(e=" bestValue = bestValue * candidate; ",t="1.0");let n=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${Ge()}
         let outputIndex = index / i32(workGroupSizeX);
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + i32(workGroupSizeX)) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), workGroupSizeX);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${n}
        }
       }
     `}};function vc(e,t,n,s,r){let a=e.shape.length,i=[],o=w.parseAxisParam(t,e.shape),u=o,l=I.getAxesPermutation(u,a),c=e;l!=null&&(c=sr({inputs:{x:e},attrs:{perm:l},backend:r}),u=I.getInnerMostAxes(u.length,a),i.push(c)),I.assertAxesAreInnerMostDims(s,u,a);let[p,d]=I.computeOutAndReduceShapes(c.shape,u),h=p;n&&(h=I.expandShapeToKeepDim(p,o));let f;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([c])){let m=r.tensorMap.get(c.dataId).values;switch(s){case"max":let g=Zre(m,w.sizeFromShape(d),h,e.dtype);f=r.makeTensorInfo(h,e.dtype,g);break;case"prod":let{outVals:b,outShape:y,outDtype:v}=sae(c.shape,c.dtype,m,u);f=r.makeTensorInfo(y,v,b);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{let m=w.sizeFromShape(d),b=w.sizeFromShape(c.shape)/m,y={windowSize:m,inSize:m,batchSize:b,outSize:1},v=s==="mean"?"float32":Pp(e.dtype),x=[{type:"int32",data:[m]}],k=new Tie(y,s),C=r.runWebGPUProgram(k,[c],v,x);i.push(C),f=Re({inputs:{x:C},attrs:{shape:h},backend:r})}return i.forEach(m=>r.disposeData(m.dataId)),f}function bx(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return vc(r,a,i,"sum",n)}var $ie={kernelName:vi,backendName:"webgpu",kernelFunc:bx};function _ie(e){let{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:u}=I.decodeEinsumEquation(r,a.length);I.checkEinsumDimSizes(i.length,u,a);let{path:l,steps:c}=I.getEinsumComputePath(o,u),p=c.length,d=null,h=i.length,f=[];for(let m=0;m<p;++m){for(let g of c[m]){let{permutationIndices:b,expandDims:y}=I.getEinsumPermutation(h,u[g]),v;I.isIdentityPermutation(b)?v=a[g]:(v=sr({inputs:{x:a[g]},backend:n,attrs:{perm:b}}),f.push(v));let x=v.shape.slice();for(let k=0;k<y.length;++k)x.splice(y[k],0,1);w.arraysEqual(v.shape,x)||(v=Re({inputs:{x:v},backend:n,attrs:{shape:x}}),f.push(v)),d===null?d=v:(d=VN({inputs:{a:v,b:d},backend:n}),f.push(d))}m<p-1&&(l[m]>=0&&(d=bx({inputs:{x:d},backend:n,attrs:{axis:l[m]-(i.length-h),keepDims:!1}}),f.push(d)),h--)}for(let m of f)m!==d&&n.disposeData(m.dataId);return d}var Aie={kernelName:Sp,backendName:"webgpu",kernelFunc:_ie},Eie=tn({opType:4}),Rie={kernelName:Ga,backendName:"webgpu",kernelFunc:Eie},Die=Sn({opType:4,dtype:"bool",cpuKernelImpl:Bre}),Fie={kernelName:Co,backendName:"webgpu",kernelFunc:Die},WN=tn({opType:5,cpuKernelImpl:Vre,dtype:"float32"}),Oie={kernelName:Ha,backendName:"webgpu",kernelFunc:WN};function Mg(e){let{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice(),u=r;return r<0&&(w.assert(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),o.splice(u,0,1),Re({inputs:{x:a},backend:s,attrs:{shape:o}})}var Pie={kernelName:No,backendName:"webgpu",kernelFunc:Mg},Lie=tn({opType:6,cpuKernelImpl:Wre}),zie={kernelName:To,backendName:"webgpu",kernelFunc:Lie},Mie=class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${Ge()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}},Bie={kernelName:$o,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,s=t,r=new Mie(n.shape);return s.runWebGPUProgram(r,[n],n.dtype)}},Vie=tn({opType:7,cpuKernelImpl:Ure}),Wie={kernelName:qa,backendName:"webgpu",kernelFunc:Vie},Uie=Sn({opType:12,dtype:"int32"}),Gie={kernelName:ja,backendName:"webgpu",kernelFunc:Uie},Hie=class{constructor(e,t,n=!1){this.isFromPixels=!0,this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[t,1,1]),this.importVideo=n,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){let e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${Ge()}
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}},qie={kernelName:Rd,backendName:"webgpu",kernelFunc:jie},Ji,Dm=K().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU"),fd=new Map;function jie(e){let{inputs:t,backend:n,attrs:s}=e,{pixels:r}=t,{numChannels:a}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let i=typeof HTMLVideoElement!="undefined"&&r instanceof HTMLVideoElement,o=typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement,u=typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&r instanceof OffscreenCanvas,l=typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap,[c,p]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[p,c,a],h=K().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&i,f=i||o;if(l||u||f){let y;if(h){let O=r;if(!fd.has(O)||fd.get(O).expired){let R={source:O};fd.set(O,n.device.importExternalTexture(R))}y={width:c,height:p,format:null,usage:null,texture:fd.get(O)}}else{if(f){let T=K().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ji==null||T!==Dm)&&(Dm=T,Ji=document.createElement("canvas").getContext("2d",{willReadFrequently:Dm})),Ji.canvas.width=c,Ji.canvas.height=p,Ji.drawImage(r,0,0,c,p),r=Ji.canvas}let O=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,R="rgba8unorm",D=n.textureManager.acquireTexture(d[1],d[0],R,O);n.queue.copyExternalImageToTexture({source:r},{texture:D},[d[1],d[0]]),y={width:c,height:p,format:R,usage:O,texture:D}}let v=w.sizeFromShape(d),x=w.computeStrides(d),k=new Hie(d,a,h),C=[{type:"uint32",data:[v]},{type:"uint32",data:[a]},{type:"uint32",data:[...x]}],$=n.makeTensorInfo([p,c],"int32"),A=n.tensorMap.get($.dataId);A.resourceInfo=y;let E=n.runWebGPUProgram(k,[$],"int32",C);return n.disposeData($.dataId),E}let m=r.data,g=m;if(a!=null&&a!==4){g=new Uint8Array(r.width*r.height*a);let y=m.length,v=0;for(let x=0;x<y;x++)x%4<a&&(g[v++]=m[x])}let b=n.makeTensorInfo(d,"int32",new Int32Array(g));return n.uploadToGPU(b.dataId),b}var Kie=class{constructor(e,t,n,s,r){this.uniforms="varianceEpsilon : f32,",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],I.assertAndGetBroadcastShape(e,t),I.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),s!=null&&(I.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset")),r!=null&&(I.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${Ge()}
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}},Xie={kernelName:Ka,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s,scale:r,offset:a,mean:i,variance:o}=e,{varianceEpsilon:u}=t,l=n,c=[s,i,o],p=null;a!=null&&(p=a.shape,c.push(a));let d=null;r!=null&&(d=r.shape,c.push(r));let h=new Kie(s.shape,i.shape,o.shape,p,d),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(h,c,s.dtype,f)}};function Yie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=s,m=I.convertConv2DDataFormat(c),g=I.computeConv2DInfo(r.shape,a.shape,u,p,l,d,!1,m);return LN({x:r,filter:a,convInfo:g,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:f,activation:h})}var Zie={kernelName:ga,backendName:"webgpu",kernelFunc:Yie};function Qie(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:p,activation:d,leakyreluAlpha:h}=s,f=c;f==null&&(f=[1,1]),w.assert(I.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let m=I.computeConv2DInfo(r.shape,a.shape,u,f,l,p,!0),g=[r,a],b=i!=null,y=o!=null;b&&g.push(i),y&&g.push(o);let v=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}],x;return m.inHeight>4&&m.inWidth>4&&m.strideHeight===1&&m.strideWidth===1&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?x=new MN(m,b,d,y):(x=new BN(m,b,d,y),v.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),d==="leakyrelu"&&(v.push({type:"float32",data:[h]}),x.uniforms+=" alpha : f32,"),n.runWebGPUProgram(x,g,"float32",v)}var Jie={kernelName:ba,backendName:"webgpu",kernelFunc:Qie},eoe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Qt(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
        ${Ge()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}};function toe(e){let{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=w.sizeFromShape(s.shape),[u,l,c,p]=I.prepareAndValidate(s,r),d=Re({inputs:{x:r},backend:n,attrs:{shape:[l,i]}}),h=Re({inputs:{x:s},backend:n,attrs:{shape:[w.sizeFromShape(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||s.dtype==="string"){let y=n.readSync(r.dataId),v=n.bufferSync(s),x=Gre(y,v,s.dtype,l,i,c,p,s.shape,o);return n.makeTensorInfo(u,s.dtype,x.values)}let f=new eoe(i,[l,c]),m=[{type:"int32",data:[i]},{type:"int32",data:p}],g=n.runWebGPUProgram(f,[h,d],h.dtype,m),b=Re({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeData(d.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),b}var noe={kernelName:Ao,backendName:"webgpu",kernelFunc:toe},soe=class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){let e=roe(this.aShape);return`
      ${Ge()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}};function roe(e){let t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let s=0;s<e.length;s++)s===2?n.push("indexZ"):n.push(`${t[s]}`);return n.join()}function UN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0],l=I.segment_util.collectGatherOpShapeInfo(r,a,u,o),c=w.sizeFromShape(a.shape),p=[],d=Re({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),h=Re({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});p.push(d),p.push(h);let f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,a])){let v=n.tensorMap.get(h.dataId).values,x=_e(h.shape,h.dtype,v),C=n.tensorMap.get(d.dataId).values,$=_e(d.shape,d.dtype,C),A=Hre($,x,f);return p.forEach(E=>n.disposeData(E.dataId)),n.makeTensorInfo(l.outputShape,A.dtype,A.values)}let m=new soe(d.shape,f),g=n.runWebGPUProgram(m,[d,h],d.dtype);p.push(g);let b=Re({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return p.forEach(y=>n.disposeData(y.dataId)),b}var aoe={kernelName:_o,backendName:"webgpu",kernelFunc:UN},ioe=Sn({opType:5,cpuKernelImpl:jre,dtype:"bool"}),ooe={kernelName:Eo,backendName:"webgpu",kernelFunc:ioe},uoe=Sn({opType:6,dtype:"bool",cpuKernelImpl:qre}),loe={kernelName:Xa,backendName:"webgpu",kernelFunc:uoe};function coe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=[{type:"float32",data:[a]}],o=new bc(r.shape,14);return o.uniforms="alpha : f32,",n.runWebGPUProgram(o,[r],"float32",i)}var doe={kernelName:Za,backendName:"webgpu",kernelFunc:coe},poe=Sn({opType:7,dtype:"bool",cpuKernelImpl:Xre}),hoe={kernelName:Ro,backendName:"webgpu",kernelFunc:poe},foe=Sn({opType:8,dtype:"bool",cpuKernelImpl:Kre}),moe={kernelName:Do,backendName:"webgpu",kernelFunc:foe},goe=tn({opType:9,cpuKernelImpl:Yre}),boe={kernelName:Qa,backendName:"webgpu",kernelFunc:goe},yoe=Sn({opType:9,dtype:"bool"}),voe={kernelName:Fo,backendName:"webgpu",kernelFunc:yoe},xoe=tn({opType:10}),woe={kernelName:Oo,backendName:"webgpu",kernelFunc:xoe};function GN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s;return vc(r,a,i,"max",n)}var koe={kernelName:Ja,backendName:"webgpu",kernelFunc:GN},Soe=Sn({opType:15,cpuKernelImpl:Qre}),Ioe={kernelName:ei,backendName:"webgpu",kernelFunc:Soe};function Coe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=s,l=1,c=I.computePool2DInfo(r.shape,a,i,l,o,u),p,d=[];if(c.filterHeight===1&&c.filterWidth===1){if(w.arraysEqual(c.inShape,c.outShape))return Gn({inputs:{x:r},backend:n});p=new FN(c),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]})}else p=new DN(c,"max"),d.push({type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]});return n.runWebGPUProgram(p,[r],r.dtype,d)}var Noe={kernelName:ti,backendName:"webgpu",kernelFunc:Coe};function Toe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{keepDims:a,axis:i}=s;return vc(r,i,a,"mean",n)}var $oe={kernelName:ni,backendName:"webgpu",kernelFunc:Toe};function _oe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return vc(r,a,i,"min",n)}var Aoe={kernelName:si,backendName:"webgpu",kernelFunc:_oe},Eoe=Sn({opType:16,cpuKernelImpl:Jre}),Roe={kernelName:ri,backendName:"webgpu",kernelFunc:Eoe},Doe=class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.offset=n==="reflect"?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){let e=this.xShape.length,t=this.xShape.map((u,l)=>`uniforms.pad${l}[0]`).join(","),n=this.xShape.map((u,l)=>`uniforms.pad${l}[0] + uniforms.xShape${e>1?`[${l}]`:""}`).join(","),s=e===1?"start":"start[i]",r=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=Qt(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ge()}
        if (index < uniforms.size) {
          let start = ${i}(${t});
          let end = ${i}(${n});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${r}) {
              ${a} = (${r} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${o}));
        }
      }
    `}},Foe={kernelName:ai,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:s}=e,{paddings:r,mode:a}=t,i=n,o=r.map(c=>({type:"int32",data:[c[0],c[1]]})),u=new Doe(s.shape,r,a);return i.runWebGPUProgram(u,[s],s.dtype,o)}};function Ooe(e){let{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){let a=n.tensorMap.get(s.dataId),[i,o]=tae(a.values,s.shape,s.dtype);return n.makeTensorInfo(o,s.dtype,i)}let r=new bc(s.shape,11);return n.runWebGPUProgram(r,[s],s.dtype)}var Poe={kernelName:Po,backendName:"webgpu",kernelFunc:Ooe};function Loe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=s,l=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:p}=$s.nonMaxSuppressionV3Impl(l,c,i,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}var zoe={kernelName:zo,backendName:"webgpu",kernelFunc:Loe};function Moe(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=s,c=n.readSync(r.dataId),p=n.readSync(a.dataId),d=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:b}=$s.nonMaxSuppressionV5Impl(c,p,d,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}var Boe={kernelName:Mo,backendName:"webgpu",kernelFunc:Moe};function cp(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="complex64"){let r=yc({inputs:{input:s},backend:n}),a=cp({inputs:{x:r},backend:n}),i=Rh({inputs:{input:s},backend:n}),o=cp({inputs:{x:i},backend:n}),u=Cu({inputs:{real:a,imag:o},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),u}else return Ri({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:n})}var Voe={kernelName:su,backendName:"webgpu",kernelFunc:cp};function HN(e){let{inputs:t,backend:n}=e,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){let r=yc({inputs:{input:s},backend:n}),a=HN({inputs:{x:r},backend:n}),i=Rh({inputs:{input:s},backend:n}),o=cp({inputs:{x:i},backend:n}),u=Cu({inputs:{real:a,imag:o},backend:n});return n.disposeData(r.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),n.disposeData(o.dataId),u}else return Ri({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}var Woe={kernelName:Bo,backendName:"webgpu",kernelFunc:HN};function Uoe(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Mg({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let p=Mg({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),l=PN({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeData(c.dataId)),l}var Goe={kernelName:Wo,backendName:"webgpu",kernelFunc:Uoe},Hoe=class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((n,s)=>n[0]+e[s]+n[1]),this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map((n,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){let e=this.xShape.length,t=Qt(e),n=this.xShape.map((c,p)=>`uniforms.pad${p}[0]`).join(","),s=this.xShape.map((c,p)=>`uniforms.pad${p}[0] + uniforms.xShape${e>1?`[${p}]`:""}`).join(","),r=e>1?`${t}(${n})`:`${n}`,a=e>1?`${t}(${s})`:`${s}`,i=e>1?"any(outC < start)":"outC < start",o=e>1?"any(outC >= end)":"outC >= end",u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${Ge()}
        if (index < uniforms.size) {
          let start = ${r};
          let end = ${a};
          let outC = getCoordsFromIndex(index);

          if (${i} || ${o}) {
            setOutputAtIndex(index, uniforms.constantValue);
          } else {
            let coords = outC - start;
            setOutputAtIndex(index, getX(${u}));
          }
        }
      }
    `}},qN=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(a.every(l=>w.arraysEqual(l,[0,0])))return Gn({inputs:{x:r},backend:n});if(w.sizeFromShape(r.shape)===0){let l=a.map((c,p)=>c[0]+r.shape[p]+c[1]);return Ri({backend:n,attrs:{shape:l,value:i,dtype:r.dtype}})}let o=[{type:"float32",data:[i]}];a.map(l=>o.push({type:"int32",data:[l[0],l[1]]}));let u=new Hoe(r.shape,a);return n.runWebGPUProgram(u,[r],r.dtype,o)},qoe={kernelName:oi,backendName:"webgpu",kernelFunc:qN},joe=Sn({opType:13}),Koe={kernelName:ui,backendName:"webgpu",kernelFunc:joe};function Xoe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=new Pg(14,s.shape,r.shape);return n.runWebGPUProgram(a,[s,r],"float32")}var Yoe={kernelName:li,backendName:"webgpu",kernelFunc:Xoe};function Zoe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return vc(r,a,i,"prod",n)}var Qoe={kernelName:ci,backendName:"webgpu",kernelFunc:Zoe},Joe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=rae(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},eue={kernelName:Bl,backendName:"webgpu",kernelFunc:Joe},jN=Sn({opType:3}),tue={kernelName:Ua,backendName:"webgpu",kernelFunc:jN},nue=tn({opType:12}),sue={kernelName:di,backendName:"webgpu",kernelFunc:nue},rue=tn({opType:13}),aue={kernelName:fi,backendName:"webgpu",kernelFunc:rue},iue=class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${Ge()}
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function oue(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,size:i,halfPixelCenters:o}=s,[u,l]=i,c=a&&u>1?1:0,p=a&&l>1?1:0,h=[{type:"float32",data:[c,p]},{type:"float32",data:[o?.5:0]}],f=new iue(r.shape,u,l);return n.runWebGPUProgram(f,[r],"float32",h)}var uue={kernelName:hi,backendName:"webgpu",kernelFunc:oue},lue=class{constructor(e,t,n,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${Ge()}
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}};function cue(e){let{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,c=a&&u>1?1:0,p=a&&l>1?1:0,h=[{type:"float32",data:[c,p]},{type:"float32",data:[a?.5:0]}],f=new lue(r.shape,u,l,i);return n.runWebGPUProgram(f,[r],r.dtype,h)}var due={kernelName:pi,backendName:"webgpu",kernelFunc:cue},pue=class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${Ge()}

          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}},hue={kernelName:ru,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,u=new pue(s.shape,a),[l,c]=I.getImageCenter(i,s.shape[1],s.shape[2]),p=[{type:"float32",data:[l]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof a=="number"?p.push({type:"float32",data:[Number.parseFloat(a.toFixed(2))]}):p.push({type:"float32",data:a}),o.runWebGPUProgram(u,[s],s.dtype,p)}},fue=tn({opType:15,cpuKernelImpl:aae}),mue={kernelName:mi,backendName:"webgpu",kernelFunc:fue},Td=class{constructor(e,t,n,s,r,a,i,o=!0){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=i,this.sumDupeIndices=o,this.dispatchLayout=We(e),this.dispatch=Ae(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${s}_${this.sliceDimGreaterThanOne}_${i}_${o}`;let u=Qt(r.length);this.uniforms=`sliceDim : i32, strides: ${u}, size: i32,`,this.updatesRank=s,this.indicesRank=n}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");let t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides",s="",r="";this.dispatchLayout.x.length===1?(s="flattenedIndex",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(s="vec2<i32>(flattenedIndex, coords[1])",r=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);let i=`getUpdates(${Array.from({length:this.updatesRank},(l,c)=>`coords[${c}]`).join(", ")})`,o=(l,c)=>{let p=`atomicAdd(${l}, bitcast<i32>(${c}))`;this.type==="float32"&&(p=`
          {
            var oldBits = 0;
            var newBits = bitcast<i32>(${c});
            loop {
              let info = atomicCompareExchangeWeak(${l}, oldBits, newBits);
              if (info.exchanged) {
                break;
              }
              oldBits = info.old_value;
              let oldValue = bitcast<f32>(oldBits);
              let newValue = oldValue + (${c});
              newBits = bitcast<i32>(newValue);
            }
          }
        `);let d=`atomicStore(${l}, bitcast<i32>(${c}));`;return this.sumDupeIndices?p:d};return`
    ${r}

      ${Ge()}

        if (index < uniforms.size) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${n};
          }
          let updateValue =
              ${sl(this.type,!1)}(${i});
          let flatIndex = getOutputIndexFromCoords(${s});

          ${o("&result[flatIndex]","updateValue")};
        }
      }`}};function gue(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=I.calculateShapes(a,r,i),d=[p/l,l];if(p===0)return n.makeTensorInfo(i,r.dtype);let h=Re({inputs:{x:r},backend:n,attrs:{shape:[u,o]}}),f=Re({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=f.dtype,g=Ri({backend:n,attrs:{shape:d,value:0,dtype:m}}),b=w.sizeFromShape(f.shape),y=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[b]}],v=new Td(f.shape,o,h.shape.length,f.shape.length,c,d,m),x=n.runWebGPUProgram(v,[f,h],m,y,g),k=Re({inputs:{x},backend:n,attrs:{shape:i}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(x.dataId),k}var bue={kernelName:qo,backendName:"webgpu",kernelFunc:gue},yue=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{let s=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${s[i]}`),i<this.cRank&&r.push(`${s[i]}`);e=r.join(),t=a.join()}return`
      ${Ge()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}};function vue(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new yue(s.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(i,[s,r,a],bn(r.dtype,a.dtype))}var xue={kernelName:jo,backendName:"webgpu",kernelFunc:vue},wue=tn({opType:18}),kue={kernelName:bi,backendName:"webgpu",kernelFunc:wue},Sue=tn({opType:16}),Iue={kernelName:gi,backendName:"webgpu",kernelFunc:Sue},Cue=tn({opType:17}),Nue={kernelName:Xo,backendName:"webgpu",kernelFunc:Cue},KN=Sn({opType:2,cpuKernelImpl:dae,supportsComplex:!0}),Tue={kernelName:ki,backendName:"webgpu",kernelFunc:KN};function $ue(e){let{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=w.parseAxisParam([a],r.shape),o=GN({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=I.expandShapeToKeepDim(o.shape,i),l=Re({inputs:{x:o},backend:n,attrs:{shape:u}}),c=KN({inputs:{a:r,b:l},backend:n}),p=WN({inputs:{x:c},backend:n}),d=bx({inputs:{x:p},backend:n,attrs:{axis:i,keepDims:!1}}),h=Re({inputs:{x:d},backend:n,attrs:{shape:u}}),f=jN({inputs:{a:p,b:h},backend:n});return n.disposeData(o.dataId),n.disposeData(l.dataId),n.disposeData(c.dataId),n.disposeData(p.dataId),n.disposeData(d.dataId),n.disposeData(h.dataId),f}var _ue={kernelName:xi,backendName:"webgpu",kernelFunc:$ue},Aue=e=>{let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;w.assert(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");let o=a.reduce((b,y)=>b*y),u=[[0,0]];u.push(...i);for(let b=1+a.length;b<r.shape.length;++b)u.push([0,0]);let l=[],c=qN({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),p=I.getReshaped(c.shape,a,o,!1),d=I.getPermuted(p.length,a.length,!1),h=I.getReshapedPermuted(c.shape,a,o,!1),f=Re({inputs:{x:c},backend:n,attrs:{shape:p}}),m=sr({inputs:{x:f},backend:n,attrs:{perm:d}}),g=Re({inputs:{x:m},backend:n,attrs:{shape:h}});return l.push(c),l.push(f),l.push(m),l.forEach(b=>n.disposeData(b.dataId)),g},Eue={kernelName:Yo,backendName:"webgpu",kernelFunc:Aue},Rue=class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){let e=Due(this.rank,"uniforms.");return`
      ${Ge()}
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}};function Due(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`(resRC % ${t}aShape)`;let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e;r++)s.push(`(${n[r]} % ${t}aShape[${r}])`);return s.join()}function XN(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if(n.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){let u=n.readSync(r.dataId),l=r.dtype==="string"?u.map(d=>w.decodeString(d)):u,c=_e(r.shape,r.dtype,l),p=pae(c,a);return n.makeTensorInfo(p.shape,p.dtype,p.values)}let i=new Rue(r.shape,a);return n.runWebGPUProgram(i,[r],r.dtype)}var Fue={kernelName:Dr,backendName:"webgpu",kernelFunc:XN};function Oue(e){let{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=I.calculateShapes(a,r,o),h=!1;if(a.dtype==="string"){let A=n.bufferSync(r),E=n.bufferSync(a),O=w.decodeString(n.readSync(i.dataId)[0]),R=iae(A,E,o,d,c,l,u,p,O,h);return n.makeTensorInfo(o,R.dtype,R.values)}let f=[d/c,c],m=Re({inputs:{x:r},backend:n,attrs:{shape:[l,u]}}),g=a.shape.length?Re({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}):Gn({inputs:{x:a},backend:n}),b=g.dtype,y=n.makeTensorInfo([],b,w.makeZerosTypedArray(1,b)),v=Re({inputs:{x:i},backend:n,attrs:{shape:Array(f.length).fill(1)}}),x=XN({inputs:{x:v},backend:n,attrs:{reps:f}}),k=w.sizeFromShape([l,c]),C=[{type:"int32",data:[u]},{type:"int32",data:p},{type:"int32",data:[k]}];switch(l){case 0:break;case 1:{let A=new Td([l,c],u,m.shape.length,g.shape.length,p,f,b,h);n.runWebGPUProgram(A,[g,m],b,C,x)}break;default:{let A=new Td([l,c],u,m.shape.length,y.shape.length,p,f,b,h);n.runWebGPUProgram(A,[y,m],b,C,x)}{let A=new Td([l,c],u,m.shape.length,g.shape.length,p,f,b);n.runWebGPUProgram(A,[g,m],b,C,x)}}let $=Re({inputs:{x},backend:n,attrs:{shape:o}});return n.disposeData(m.dataId),n.disposeData(g.dataId),n.disposeData(v.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),$}var Pue={kernelName:Ep,backendName:"webgpu",kernelFunc:Oue};function Lue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=w.parseAxisParam(i,r.shape)[0],u=I.prepareSplitSize(r,a,o),l=r.shape.length,c=new Array(l).fill(0),p=r.shape.slice();return u.map(d=>{let h=[...p];h[o]=d;let f=Nu({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});return c[o]+=d,f})}var zue={kernelName:Zo,backendName:"webgpu",kernelFunc:Lue},Mue=tn({opType:19}),Bue={kernelName:yi,backendName:"webgpu",kernelFunc:Mue},Vue={kernelName:ql,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,s=t,r=new bc(n.shape,20);return s.runWebGPUProgram(r,[n],n.dtype)}},Wue=Sn({opType:11}),Uue={kernelName:wi,backendName:"webgpu",kernelFunc:Wue},Gue=class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);let t=Qt(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){let e=this.outputShape.length,t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let s=0;t=this.outputShape.map((r,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${Ge()}
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}};function Hue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=It.sliceInfo(r.shape,a,i,o,u,l,c,p,d),k;if(m)k=Re({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=It.computeOutShape(y,v,x),$=Nu({inputs:{x:r},backend:n,attrs:{begin:y,size:C}});k=Re({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeData($.dataId)}else if(n.shouldExecuteOnCPU([r])){let $=n.readSync(r.dataId),A=_e(r.shape,r.dtype,$),E=lae(h,A,x,y);k=n.makeTensorInfo(f,r.dtype,E.values)}else{let $=new Gue(h),A=[{type:"int32",data:y},{type:"int32",data:x}],E=n.runWebGPUProgram($,[r],r.dtype,A);k=Re({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeData(E.dataId)}return k}var que={kernelName:Qo,backendName:"webgpu",kernelFunc:Hue};function jue(e){let{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=s,{data:c,dataSplits:p}=t,d=n.readSync(c.dataId),h=n.readSync(p.dataId),[f,m]=cae(d,h,r,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}var Kue={kernelName:jl,backendName:"webgpu",kernelFunc:jue},Xue=tn({opType:21}),Yue={kernelName:Si,backendName:"webgpu",kernelFunc:Xue},Zue=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${Ge()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}},Que=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${Ge()}
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}};function eo(e,t){t!==null&&e.disposeData(t.dataId)}function Ik(e){let t=1;for(;t<e;)t*=2;return t}function Jue(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=r.shape,u=o[o.length-1];if(n.shouldExecuteOnCPU([r])){let k=n.readSync(r.dataId),[C,$]=hae(k,o,r.dtype,a,i);return[n.makeTensorInfo(C.shape,C.dtype,C.values),n.makeTensorInfo($.shape,$.dtype,$.values)]}if(a===0)return o[o.length-1]=0,[n.makeTensorInfo(o,r.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(u===1)return[r,Ri({attrs:{shape:o,dtype:"int32",value:0},backend:n})];let c=w.sizeFromShape(o)/u,p=Re({inputs:{x:r},attrs:{shape:[c,u]},backend:n}),d=Ik(a),h=Ik(u),f=null,m=()=>f===null?[p,p]:[p,f],g=(k,C,$)=>{let A=m(),E=new Zue($),R=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[k]},{type:"int32",data:[C]}],D=f;f=n.runWebGPUProgram(E,A,"int32",R),eo(n,D)};for(let k=1;k<d;k*=2){let C=k*2;for(let $=k;$>=1;$/=2)g(C,$,[c,h])}for(let k=h;k>d;k/=2){let C=m(),$=new Que([c,k/2]),E=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[d]}],O=f;f=n.runWebGPUProgram($,C,"int32",E),eo(n,O);let R=d/2,D=R*2;for(let T=R;T>=1;T/=2)g(D,T,f.shape)}let b=f;f=Nu({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,a]}}),eo(n,b);let y=UN({inputs:{x:p,indices:f},backend:n,attrs:{axis:1,batchDims:1}});eo(n,p);let v=o.slice(0,-1);v.push(a),b=f,f=Re({inputs:{x:f},attrs:{shape:v},backend:n}),eo(n,b);let x=y;return y=Re({inputs:{x:y},attrs:{shape:v},backend:n}),eo(n,x),[y,f]}var ele={kernelName:eu,backendName:"webgpu",kernelFunc:Jue},tle=class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=We(this.outputShape),this.dispatch=Ae(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${Ge()}
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}};function nle(e){let{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,p,d,h]=r.shape,[f,m]=l!=null?l:[p,d],g=[c,f,m,h],b=new tle(g),y=i==="nearest"?1:2,v;switch(o){case"constant":v=1;break;case"reflect":v=2;break;case"wrap":v=3;break;case"nearest":v=4;break;default:v=1;break}let x=[{type:"int32",data:[y]},{type:"int32",data:[v]},{type:"float32",data:[u]}];return n.runWebGPUProgram(b,[r,a],"float32",x)}var sle={kernelName:tu,backendName:"webgpu",kernelFunc:nle};function rle(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r,o=i.shape.length,u=r.shape[a],l=new Array(o-1),c=0;for(let m=0;m<o;m++)m!==a&&(l[c++]=i.shape[m]);let p=[],d=new Array(o).fill(0),h=i.shape.slice();h[a]=1;let f=new Array(u);for(let m=0;m<f.length;m++){d[a]=m;let g=Nu({inputs:{x:i},backend:n,attrs:{begin:d,size:h}}),b=Re({inputs:{x:g},backend:n,attrs:{shape:l}});f[m]=b,p.push(g)}return p.forEach(m=>n.disposeData(m.dataId)),f}var ale={kernelName:nu,backendName:"webgpu",kernelFunc:rle},ile=[Fre,gae,yae,wae,Tae,_ae,Eae,Dae,zae,Wae,Gae,Kae,Pre,Qae,sie,uie,cie,pie,mie,bie,vie,kie,Cie,Aie,Rie,Fie,Oie,Pie,zie,Ere,Bie,qie,Wie,Gie,Xie,Zie,Jie,noe,aoe,ooe,loe,Ore,Yae,doe,hoe,moe,boe,voe,woe,koe,Ioe,Noe,$oe,Aoe,Roe,Foe,Nie,Poe,zoe,Boe,Mae,Woe,Goe,qoe,Koe,Yoe,Qoe,eue,Bae,tue,sue,aue,Rre,uue,due,hue,mue,bue,xue,kue,Iue,Nue,Pae,que,Kue,_ue,Eue,Pue,zue,Bue,Vue,Uue,Tue,$ie,Yue,Fue,ele,sle,Cae,ale,Voe];for(let e of ile)au(e);var ole=class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireUploadBuffer(e,t){return this.acquireBuffer(e,t,!0)}acquireBuffer(e,t,n=!1){let s=Ck(e,t);if(this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.usedBuffers.has(s)||this.usedBuffers.set(s,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(s).length>0){this.numFreeBuffers--;let a=this.freeBuffers.get(s).shift();return this.usedBuffers.get(s).push(a),a}this.numBytesAllocated+=e;let r=this.device.createBuffer({size:e,usage:t,mappedAtCreation:n});return this.usedBuffers.get(s).push(r),r}releaseBuffer(e,t,n){if(this.freeBuffers.size===0)return;let s=Ck(t,n);this.freeBuffers.has(s)||this.freeBuffers.set(s,[]),this.freeBuffers.get(s).push(e),this.numFreeBuffers++,this.numUsedBuffers--;let r=this.usedBuffers.get(s),a=r.indexOf(e);if(a<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(a,1),this.numBytesUsed-=t}releaseUploadBuffer(e,t,n){e.mapAsync(GPUMapMode.WRITE).then(()=>{this.releaseBuffer(e,t,n)},s=>{})}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Ck(e,t){return`${e}_${t}`}var ule=class{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,n,s){let r=Tk(n),a=e*t*r,i=Nk(e,t,n,s);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;let u=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(u),u}this.numBytesAllocated+=a;let o=this.device.createTexture({size:[e,t],format:n,usage:s});return this.usedTextures.get(i).push(o),o}releaseTexture(e,t,n,s,r){if(this.freeTextures.size===0)return;let a=Nk(t,n,s,r);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;let i=this.usedTextures.get(a),o=i.indexOf(e);if(o<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(o,1);let u=Tk(s),l=t*n*u;this.numBytesUsed-=l}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(n=>{n.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}};function Nk(e,t,n,s){return`${e}_${t}_${n}_${s}`}function Tk(e){if(e==="rgba8unorm")return 16;throw new Error(`${e} is not supported!`)}var lle=K().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),cle=(e,t)=>{let n=e.limits.maxComputeWorkgroupsPerDimension,s=t.dispatchLayout,r=t.dispatch;if(r.every(i=>i<=n))return r;w.assert(r[0]>n&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let a=Math.ceil(Math.sqrt(r[0]));return a>n?(a=Math.ceil(Math.cbrt(r[0])),w.assert(a<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[a,a,a]):[a,a,1]},YN=class extends xl{constructor(e){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchNumberInEncoder=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,!hx())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=e.features.has("timestamp-query"),this.bufferManager=new ole(this.device),this.textureManager=new ule(this.device),this.tensorMap=new fp(this,vs()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),K().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return YN.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}disposeData(e,t=!1){if(this.tensorDataPendingDisposal.indexOf(e)>=0)return!1;if(!this.tensorMap.has(e))return!0;let n=this.tensorMap.get(e);if(this.decRef(e),!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDataPendingDisposal.push(e),!1;let{complexTensorInfos:s}=this.tensorMap.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.releaseResource(e),this.tensorMap.delete(e),!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){let t=this.tensorMap.get(e);if(!(!t||!t.resourceInfo)){if("texture"in t.resourceInfo){let n=t.resourceInfo;n.texture instanceof GPUTexture&&this.textureManager.releaseTexture(n.texture,n.width,n.height,n.format,n.usage),n.texture=null}else{let n=t.resourceInfo;this.bufferManager.releaseBuffer(n.buffer,n.size,n.usage),n.buffer=null}t.resourceInfo=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){let t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){let t=this.tensorMap.get(e);t.refCount--}}write(e,t,n){if(n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:n,shape:t,values:e,refCount:1}),s}move(e,t,n,s,r){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:n,values:t,refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e.buffer,e.size,e.usage)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseUploadBuffer(e.buffer,e.size,e.usage)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.end(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e,t){let n=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e,0,n,0,t),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=n.getMappedRange().slice(0);return n.unmap(),n!=null&&this.bufferManager.releaseBuffer(n,t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),K().getBool("WEBGPU_USE_PROFILE_TOOL")&&(w.assert(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,t){let n=this.tensorMap.get(e);return this.releaseResource(e),n.values=t,n.values}readSync(e){let t=this.tensorMap.get(e),{values:n}=t;if(n==null)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);let t=this.tensorMap.get(e),{values:n}=t;if(n!=null)return this.convertAndCacheOnCPU(e,n);let s;if(t.dtype==="complex64"){let r=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),a=r[0],i=r[1];s=I.mergeRealAndImagArrays(a,i)}else{let r=t.resourceInfo,a=await this.getBufferData(r.buffer,r.size);s=_N(a,t.dtype)}return this.convertAndCacheOnCPU(e,s),s}readToGPU(e){let t=this.tensorMap.get(e),{values:n,dtype:s,shape:r,resourceInfo:a}=t;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw n!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let i=a.size,o=this.bufferManager.acquireBuffer(i,a.usage);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(a.buffer,0,o,0,i),this.submitQueue();let u=this.makeTensorInfo(r,s),l=vs().makeTensorFromTensorInfo(u),c=this.tensorMap.get(u.dataId);return c.resourceInfo={size:i,usage:this.defaultGpuBufferUsage(),buffer:o},{tensorRef:l,buffer:o,bufSize:i}}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(s=>w.decodeString(s));return _e(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return _e(e.shape,e.dtype,t)}async time(e){this.supportTimeQuery||console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled. Using performance.now is not workable for webgpu since it doesn't support synchronous data read from GPU.");let t=this.activeTimers,n=[],s=!1;this.programTimersStack==null?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=w.flatten(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=w.flatten(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=t,s&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(r);return i.kernelMs=w.sum(o),i.getExtraProfileInfo=()=>o.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}makeTensorInfo(e,t,n){return t==="string"&&n!=null&&n.length>0&&w.isString(n[0])&&(n=n.map(r=>w.encodeString(r))),{dataId:this.write(n,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;let t=this.tensorMap.get(e.dataId);if("texture"in t.resourceInfo){let s=t.resourceInfo;return s.texture instanceof GPUExternalTexture?s.texture:s.texture.createView()}let n=t.resourceInfo;return{offset:0,size:n.size,buffer:n.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){let t=this.tensorMap.get(e);if(t.resourceInfo)return;let n=$N(t.dtype)*w.sizeFromShape(t.shape),s=this.bufferManager.acquireBuffer(n,this.defaultGpuBufferUsage());if(t.resourceInfo={size:n,usage:this.defaultGpuBufferUsage(),buffer:s},t.values){let r=this.bufferManager.acquireUploadBuffer(n,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC),a=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),r.unmap(),this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(r,0,s,0,n);let i={size:n,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,buffer:r};this.stagingPendingDisposal.push(i)}}makeUniforms(e){let t=0,n=0,s=[];e.forEach(o=>{o.data.length===0&&(o.data=[1]);let u;switch(o.data.length){case 1:u=4;break;case 2:u=8;break;case 3:u=16;break;case 4:u=16;break;case 5:u=16;break;case 6:u=16;break;default:w.assert(!1,()=>`Unsupported ${o.data.length}D shape`)}(n===5||n===6)&&(u=16),t=Math.ceil(t/u)*u,n=o.data.length,s.push(t),t+=o.data.length*4});let r=new ArrayBuffer(t);e.forEach((o,u)=>{let l=s[u];o.type==="int32"?new Int32Array(r,l,o.data.length).set(o.data):o.type==="uint32"?new Uint32Array(r,l,o.data.length).set(o.data):new Float32Array(r,l,o.data.length).set(o.data)});let a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.queue.writeBuffer(a,0,r,0,t);let i={size:t,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:a};return this.uniformPendingDisposal.push(i),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,n,s,r){if(r||(r=this.makeTensorInfo(e.outputShape,n)),w.sizeFromShape(r.shape)===0)return this.tensorMap.get(r.dataId).values=w.getTypedArrayFromDType(r.dtype,0),r;this.uploadToGPU(r.dataId),e.dispatch=cle(this.device,e);let a=[],i=[];if(!e.isFromPixels){a.push({type:"float32",data:[NaN]}),i=t.concat(r).map(g=>g.shape);let f="int32";i.map(g=>{a.push({type:f,data:g})});let m=w.computeStrides(r.shape);if(a.push({type:f,data:m}),e.size){let g=w.sizeFromShape(e.outputShape);a.push({type:f,data:[e.isVec4?g/4:g]})}}let o=t.map((f,m)=>{if(f.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(f.dataId),{dtype:this.tensorMap.get(f.dataId).dtype,shape:f.shape,name:e.variableNames[m]}}),u=ure(e,i,o,r),l;u in this.pipelineCache?l=this.pipelineCache[u]:(l=ire(this.device,e,o,r),this.pipelineCache[u]=l),s&&(a=[...a,...s]);let c=[this.tensorToBinding(r),...t.map(f=>this.tensorToBinding(f)),this.makeUniforms(a)],p=this.device.createBindGroup({layout:l.getBindGroupLayout(0),entries:c.map((f,m)=>({binding:m,resource:f}))});this.ensureCommandEncoderReady();let d=this.getComputePass(),h=this.activeTimers!=null;return h&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,0),d.setPipeline(l),d.setBindGroup(0,p),d.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),h&&this.supportTimeQuery&&d.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach(f=>{this.commandQueueOwnedIds.add(f.dataId)}),this.commandQueueOwnedIds.add(r.dataId),K().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),h&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}async getTimeFromQuerySet(e){let t=this.bufferManager.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.bufferManager.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);let s=new BigUint64Array(n.getMappedRange()),r=Number(s[1]-s[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=lle){return K().getBool("WEBGPU_CPU_FORWARD")&&e.every(n=>this.tensorMap.get(n.dataId).resourceInfo==null&&w.sizeFromShape(n.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}},yx=YN;yx.nextDataId=0;var dle={};Ee(dle,{WebGPUBackend:()=>yx,webgpu_util:()=>NN});hx()&&iu("webgpu",async()=>{K().set("CHECK_COMPUTATION_FOR_ERRORS",!1);let e={powerPreference:K().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e),n=t.limits,s={},r=t.features.has("timestamp-query");s.requiredLimits={maxComputeWorkgroupStorageSize:n.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:n.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:n.maxStorageBufferBindingSize},r&&(s.requiredFeatures=["timestamp-query"]);let a=await t.requestDevice(s);return new yx(a)},3);var Ct=(e=>(e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64",e))(Ct||{}),Dh=(e=>(e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu",e))(Dh||{}),ZN;function ple(e){ZN=e.wasm.cwrap(ma,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function hle(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=s,d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=0;if(i!=null){let A=n.dataIdMap.get(i.dataId);if(A.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${A.shape.length}.`);f=A.id}let m=o==null?0:n.dataIdMap.get(o.dataId).id,g=Dh[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let b=u?r.shape[2]:r.shape[1],y=l?a.shape[1]:a.shape[2],v=ou.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)),x=n.makeOutput([...v,b,y],r.dtype),k=n.dataIdMap.get(x.dataId).id,C=new Uint8Array(new Int32Array(r.shape).buffer),$=new Uint8Array(new Int32Array(a.shape).buffer);return ZN(d,C,r.shape.length,h,$,a.shape.length,u,l,g,f,m,p||0,k),x}var fle={kernelName:ma,backendName:"wasm",setupFunc:ple,kernelFunc:hle};function Kt(e,t){let n;function s(a){n=a.wasm.cwrap(e,null,["number","number","number"])}function r(a){let{backend:i,inputs:{x:o}}=a,u=i.dataIdMap.get(o.dataId).id,l=i.makeOutput(o.shape,t||o.dtype),c=i.dataIdMap.get(l.dataId).id;return w.sizeFromShape(l.shape)===0||n(u,Ct[o.dtype],c),l}return{kernelName:e,backendName:"wasm",setupFunc:s,kernelFunc:r}}var mle=Kt(vo);function nn(e,t,n){let s;function r(i){s=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function a(i){let{backend:o,inputs:u}=i,{a:l,b:c}=u,p=o.dataIdMap.get(l.dataId).id,d=o.dataIdMap.get(c.dataId).id,h=n!=null?n:l.dtype,f=I.assertAndGetBroadcastShape(l.shape,c.shape),m=o.makeOutput(f,h);if(w.sizeFromShape(f)===0)return m;let g=new Uint8Array(new Int32Array(l.shape).buffer),b=new Uint8Array(new Int32Array(c.shape).buffer),y=o.dataIdMap.get(m.dataId).id;return(()=>s(p,g,l.shape.length,d,b,c.shape.length,Ct[l.dtype],y))(),m}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var gle=!0,ble=nn(Er,gle),QN;function yle(e){QN=e.wasm.cwrap(Ea,null,["array","number","number","number"])}function vle(e){let{inputs:t,backend:n}=e,s=n.makeOutput(t[0].shape,t[0].dtype);if(w.sizeFromShape(s.shape)===0)return s;let r=t.map(o=>n.dataIdMap.get(o.dataId).id),a=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(s.dataId).id;return QN(a,r.length,Ct[s.dtype],i),s}var xle={kernelName:Ea,backendName:"wasm",setupFunc:yle,kernelFunc:vle};function Fh(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(s).set(r),s}var wle={kernelName:Ya,backendName:"wasm",kernelFunc:Fh},JN;function kle(e){JN=e.wasm.cwrap(Js,null,["number","array","number","number","number","array","number"])}function _r(e){let{inputs:t,backend:n,attrs:s}=e,[r,a]=Ile(t.x.shape,s.perm),i=!0;for(let f=0;f<a.length;f++)a[f]!==f&&(i=!1);let o=Sle(t.x.shape,s.perm),u={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let f=Fh({inputs:t,backend:n});return f.shape=o,f}let l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(l.dataId).id,d=new Uint8Array(new Int32Array(a).buffer),h=new Uint8Array(new Int32Array(u.shape).buffer);return JN(c,h,u.shape.length,Ct[u.dtype],p,d,a.length),l}function Sle(e,t){let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];return n}function Ile(e,t){let n=[],s=[];for(let r=0;r<e.length;++r)e[r]!==1&&n.push(e[r]),e[t[r]]!==1&&s.push(t[r]);for(let r=0;r<s.length;++r){let a=-1;for(let i=0;i<s.length;++i)s[i]>=r&&(a===-1||s[a]>s[i])&&(a=i);s[a]=r}return[n,s]}var Cle={kernelName:Js,backendName:"wasm",kernelFunc:_r,setupFunc:kle};function Wr(e,t,n){let s=e.shape,r=e.shape.length,a=w.parseAxisParam(t,s),i=a,o=I.getAxesPermutation(i,r),u=null,l=!1;if(o!=null){let c=new Array(r);for(let h=0;h<c.length;h++)c[h]=s[o[h]];i=I.getInnerMostAxes(i.length,r),u=_r({inputs:{x:e},attrs:{perm:o},backend:n});let p=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==p&&(l=!0)}return{transposed:u,originalAxes:a,axes:i,inputWasTransposed:l}}var eT;function Nle(e){eT=e.wasm.cwrap(Sl,null,["number, number, number"])}function Tle(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Wr(i,r,t);if(h){let v=t.dataIdMap.get(c.dataId).id;l=c,u=v}let f=l.shape.length;I.assertAxesAreInnerMostDims("all",p,f);let[m,g]=I.computeOutAndReduceShapes(l.shape,p),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;eT(u,b,v)}if(h&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var $le={kernelName:Sl,backendName:"wasm",setupFunc:Nle,kernelFunc:Tle},tT;function _le(e){tT=e.wasm.cwrap(Il,null,["number, number, number"])}function Ale(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Wr(i,r,t);if(h){let v=t.dataIdMap.get(c.dataId).id;l=c,u=v}let f=l.shape.length;I.assertAxesAreInnerMostDims("any",p,f);let[m,g]=I.computeOutAndReduceShapes(l.shape,p),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;tT(u,b,v)}if(h&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var Ele={kernelName:Il,backendName:"wasm",setupFunc:_le,kernelFunc:Ale},nT;function Rle(e){nT=e.wasm.cwrap(Ra,null,["number","number","number","number","number"])}function Dle(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r}=s,{x:a}=n,i=t.dataIdMap.get(a.dataId).id,o=i,u=a,{transposed:l,axes:c,inputWasTransposed:p}=Wr(a,r,t);if(p){let b=t.dataIdMap.get(l.dataId).id;b!==i&&(u=l,o=b)}let d=u.shape.slice(0,-1),h=t.makeOutput(d,"int32"),f=t.dataIdMap.get(h.dataId).id,m=w.sizeFromShape(h.shape),g=u.shape[c[0]];return nT(o,Ct[u.dtype],m,g,f),p&&t.disposeData(l.dataId),h}var Fle={kernelName:Ra,backendName:"wasm",kernelFunc:Dle,setupFunc:Rle},sT;function Ole(e){sT=e.wasm.cwrap(Da,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ple(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=I.computePool2DInfo(r.shape,i,o,1,u,l),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,b=c.strideHeight,y=c.strideWidth,v=c.inChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(c.dilationWidth!==1||c.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);let x=s.makeOutput(c.outShape,"float32"),k=s.dataIdMap.get(x.dataId).id;return sT(a,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,b,y,v,k),x}var Lle={kernelName:Da,backendName:"wasm",setupFunc:Ole,kernelFunc:Ple};function An(e){let{inputs:t,attrs:n}=e,{x:s}=t,{shape:r}=n,a=w.sizeFromShape(s.shape),i=w.inferFromImplicitShape(r,a);return w.assert(a===w.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(s.dataId),{dataId:s.dataId,shape:i,dtype:s.dtype}}var zle={kernelName:Uo,backendName:"wasm",kernelFunc:An},rT;function Mle(e){rT=e.wasm.cwrap(Fa,null,["number","array","number","number","array","number","number","number","number"])}function Ble(e){let{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;if(r.dtype!=="float32"||a.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=r.shape.length,l=a.shape.length,c=i?r.shape[u-2]:r.shape[u-1],p=o?a.shape[l-1]:a.shape[l-2],d=i?r.shape[u-1]:r.shape[u-2],h=o?a.shape[l-2]:a.shape[l-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=w.sizeFromShape(f),b=w.sizeFromShape(m),v=ou.assertAndGetBroadcastShape(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([d,h]);w.assert(c===p,()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,c,d]:[g,d,c],k=o?[b,h,p]:[b,p,h],C=An({inputs:{x:r},backend:n,attrs:{shape:x}}),$=An({inputs:{x:a},backend:n,attrs:{shape:k}}),A=n.dataIdMap.get(C.dataId).id,E=n.dataIdMap.get($.dataId).id,O=i?C.shape[2]:C.shape[1],R=o?$.shape[1]:$.shape[2],D=Math.max(g,b),T=n.makeOutput([D,O,R],C.dtype),L=n.dataIdMap.get(T.dataId).id,W=new Uint8Array(new Int32Array(C.shape).buffer),q=new Uint8Array(new Int32Array($.shape).buffer);return rT(A,W,C.shape.length,E,q,$.shape.length,i,o,L),n.disposeData(C.dataId),n.disposeData($.dataId),T.shape=v,T}var Vle={kernelName:Fa,backendName:"wasm",setupFunc:Mle,kernelFunc:Ble};function $a(e){let{inputs:{x:t},attrs:{begin:n,size:s},backend:r}=e,[a,i]=It.parseSliceParams(t,n,s),o=It.isSliceContinous(t.shape,a,i),u=r.readSync(t.dataId),l=r.makeOutput(i,t.dtype),c=w.computeStrides(t.shape),p=r.dataIdMap.get(l.dataId);if(o){let f=It.computeFlatOffset(a,c);return t.dtype==="string"?p.stringBytes=u.slice(f,f+w.sizeFromShape(i)):r.typedArrayFromHeap(l).set(u.subarray(f,f+w.sizeFromShape(i))),l}if(t.dtype==="string"){let f=np(u,a,i,t.shape,t.dtype);return p.stringBytes=f,l}let d=r.typedArrayFromHeap(l),h=t.shape.length;if(h===2)Wle(u,c[0],d,a,i);else if(h===3)Ule(u,c[0],c[1],d,a,i);else if(h===4)Gle(u,c[0],c[1],c[2],d,a,i);else{let f=np(u,a,i,t.shape,t.dtype);d.set(f)}return l}function Wle(e,t,n,s,r){let a=0,i=s[0],o=s[1],u=i+r[0];for(let l=i;l<u;l++){let c=l*t+o;n.set(e.subarray(c,c+r[1]),a),a+=r[1]}}function Ule(e,t,n,s,r,a){let i=0,o=r[0],u=r[1],l=r[2],c=o+a[0],p=u+a[1];for(let d=o;d<c;d++)for(let h=u;h<p;h++){let f=d*t+h*n+l;s.set(e.subarray(f,f+a[2]),i),i+=a[2]}}function Gle(e,t,n,s,r,a,i){let o=0,u=a[0],l=a[1],c=a[2],p=u+i[0],d=l+i[1],h=c+i[2],f=a[3];for(let m=u;m<p;m++)for(let g=l;g<d;g++)for(let b=c;b<h;b++){let y=m*t+g*n+b*s+f;r.set(e.subarray(y,y+i[3]),o),o+=i[3]}}var Hle={kernelName:Ko,backendName:"wasm",kernelFunc:$a};function qle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s,o=a.reduce((b,y)=>b*y),u=I.getReshaped(r.shape,a,o),l=I.getPermuted(u.length,a.length),c=I.getReshapedPermuted(r.shape,a,o),p=I.getSliceBeginCoords(i,a.length),d=I.getSliceSize(c,i,a.length),h=An({inputs:{x:r},backend:n,attrs:{shape:u}}),f=_r({inputs:{x:h},backend:n,attrs:{perm:l}}),m=An({inputs:{x:f},backend:n,attrs:{shape:c}}),g=$a({inputs:{x:m},backend:n,attrs:{begin:p,size:d}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),g}var jle={kernelName:xo,backendName:"wasm",kernelFunc:qle};function Tu(e){let{inputs:{x:t},attrs:{dtype:n},backend:s}=e,r=s.makeOutput(t.shape,n),a=s.typedArrayFromHeap(t);return s.typedArrayFromHeap(r).set(a),r}var Kle={kernelName:Oa,backendName:"wasm",kernelFunc:Tu},Xle=Kt(Pa),aT;function Yle(e){aT=e.wasm.cwrap(Rr,null,["number","number","number","number"])}function Zle(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s,o=n.dataIdMap.get(r.dataId).id,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(u.dataId).id;return aT(o,a,i,l),u}var Qle={kernelName:Rr,backendName:"wasm",setupFunc:Yle,kernelFunc:Zle};function iT(e){let{inputs:t,backend:n}=e,s=w.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=I.computeOutShape(t.map(h=>h.shape),s),a=t.filter(h=>w.sizeFromShape(h.shape)>0);if(a.length===1)return Fh({inputs:{x:a[0]},backend:n});let i=n.makeOutput(r,t[0].dtype);if(w.sizeFromShape(r)===0)return i;let o=a.map(h=>h.shape);if(I.assertParamsConsistent(o,s),a[0].dtype==="string"){let h=a.map(v=>{let x=w.sizeFromShape(v.shape.slice(s));return An({inputs:{x:v},backend:n,attrs:{shape:[-1,x]}})}),f=h.map(v=>({vals:n.readSync(v.dataId),shape:v.shape}));r=I.computeOutShape(h.map(v=>v.shape),1);let m=h[0].shape[0]===1,g=Mv(f,r,t[0].dtype,m),b=I.computeOutShape(a.map(v=>v.shape),s);i.shape=b;let y=n.dataIdMap.get(i.dataId);return y.stringBytes=I.fromStringArrayToUint8(g),h.forEach(v=>n.disposeData(v.dataId)),i}let u=w.sizeFromShape(a[0].shape.slice(0,s)),l=0,c=a.map(h=>{let f=w.sizeFromShape(h.shape.slice(s));return l+=f,f}),p=a.map(h=>n.typedArrayFromHeap(h)),d=n.typedArrayFromHeap(i);for(let h=0;h<u;h++){let f=h*l;for(let m=0;m<p.length;m++){let g=c[m],b=h*g,y=p[m].subarray(b,b+g);d.set(y,f),f+=g}}return i}var Jle={kernelName:wo,backendName:"wasm",kernelFunc:iT},oT;function ece(e){oT=e.wasm.cwrap(La,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function tce(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,i=s.dataIdMap.get(r.dataId).id,o=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:p,dataFormat:d}=n,h=I.convertConv2DDataFormat(d),f=I.computeConv2DInfo(r.shape,a.shape,u,l,c,p,!1,h),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,y=f.padInfo.right,v=f.padInfo.bottom,x=f.padInfo.left,k=f.dilationHeight,C=f.dilationWidth,$=f.strideHeight,A=f.strideWidth,E=f.inChannels,O=f.outChannels,R=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let D=s.makeOutput(f.outShape,"float32"),T=s.dataIdMap.get(D.dataId).id;return oT(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,b,y,v,x,R,k,C,$,A,E,O,T),D}var nce={kernelName:La,backendName:"wasm",setupFunc:ece,kernelFunc:tce},uT;function sce(e){uT=e.wasm.cwrap(za,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function rce(e){let{backend:t,inputs:n,attrs:s}=e,{dy:r,filter:a}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=s,p=1,d=I.convertConv2DDataFormat(u),h=I.computeConv2DInfo(c,a.shape,i,p,o,l,!1,d),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:y,inWidth:v,outChannels:x,outHeight:k,outWidth:C,strideHeight:$,strideWidth:A}=h,E=m-1-h.padInfo.top,O=g-1-h.padInfo.left,R=h.dataFormat==="channelsLast",D=w.computeStrides(h.inShape),T=w.computeStrides(r.shape),[L,W,q]=w.computeStrides(a.shape),j=D[0],X=R?D[1]:D[2],Q=R?D[2]:1,ne=R?1:D[1],J=T[0],se=R?T[1]:T[2],te=R?T[2]:1,oe=R?1:T[1],re=t.makeOutput(h.inShape,"float32"),le=t.dataIdMap.get(re.dataId).id,ge=t.dataIdMap.get(r.dataId).id,we=t.dataIdMap.get(a.dataId).id;return uT(ge,we,f,m,g,y,v,b,k,C,x,$,A,E,O,L,W,q,j,X,Q,ne,J,se,te,oe,le),re}var ace={kernelName:za,backendName:"wasm",setupFunc:sce,kernelFunc:rce},ice=Kt(Ma),oce=Kt(Ba),lT=(e=>(e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest",e))(lT||{}),cT;function uce(e){cT=e.wasm.cwrap(So,null,["number","number","number","number","array","number","number","number","number","number"])}function lce(e){let{backend:t,inputs:n,attrs:s}=e,{method:r,extrapolationValue:a,cropSize:i}=s,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[p,d]=i,h=[c,p,d,o.shape[3]],f=t.dataIdMap.get(o.dataId),m;o.dtype!=="float32"&&(m=Tu({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(m.dataId));let g=f.id,b=t.dataIdMap.get(u.dataId).id,y=t.dataIdMap.get(l.dataId).id,v=t.makeOutput(h,"float32"),x=t.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(o.shape).buffer);return cT(g,b,y,c,k,p,d,lT[r],a,x),m!=null&&t.disposeData(m.dataId),v}var cce={kernelName:So,backendName:"wasm",setupFunc:uce,kernelFunc:lce},dT;function dce(e){dT=e.wasm.cwrap(ko,null,["number","number","number","number","number","number"])}function pce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,u=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);let l=I.getAxesPermutation([a],u),c=r;l!==null&&(c=_r({inputs:{x:r},attrs:{perm:l},backend:n}));let p=I.getInnerMostAxes(1,u)[0];I.assertAxesAreInnerMostDims("cumprod",[p],u);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;dT(f,i?1:0,o?1:0,h,m,Ct[r.dtype]);let g=d;if(l!==null){let b=I.getUndoAxesPermutation(l);g=_r({inputs:{x:d},attrs:{perm:b},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var hce={kernelName:ko,backendName:"wasm",setupFunc:dce,kernelFunc:pce},pT;function fce(e){pT=e.wasm.cwrap(Va,null,["number","number","number","number","number","number"])}function mce(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,u=r.shape.length;w.assert(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);let l=I.getAxesPermutation([a],u),c=r;l!==null&&(c=_r({inputs:{x:r},attrs:{perm:l},backend:n}));let p=I.getInnerMostAxes(1,u)[0];I.assertAxesAreInnerMostDims("cumsum",[p],u);let d=n.makeOutput(c.shape,c.dtype),h=c.shape[p],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(d.dataId).id;pT(f,i?1:0,o?1:0,h,m,Ct[r.dtype]);let g=d;if(l!==null){let b=I.getUndoAxesPermutation(l);g=_r({inputs:{x:d},attrs:{perm:b},backend:n}),n.disposeData(c.dataId),n.disposeData(d.dataId)}return g}var gce={kernelName:Va,backendName:"wasm",setupFunc:fce,kernelFunc:mce},hT;function bce(e){hT=e.wasm.cwrap(Io,null,["number","number","number","array","number","array","array","number","number"])}function yce(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{blockSize:a,dataFormat:i}=s,o=r.shape[0],u=i==="NHWC"?r.shape[1]:r.shape[2],l=i==="NHWC"?r.shape[2]:r.shape[3],c=i==="NHWC"?r.shape[3]:r.shape[1],p=u*a,d=l*a,h=c/(a*a),f=i==="NHWC"?[o,p,d,h]:[o,h,p,d],m=t.makeOutput(f,"float32"),b=t.dataIdMap.get(r.dataId).id,y=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),v=new Uint8Array(new Int32Array(f).buffer),x=new Uint8Array(new Int32Array(w.computeStrides(f)).buffer),k=t.dataIdMap.get(m.dataId).id;return hT(b,a,i==="NHWC"?1:0,y,r.shape.length-1,v,x,f.length,k),m}var vce={kernelName:Io,backendName:"wasm",setupFunc:bce,kernelFunc:yce},fT;function xce(e){fT=e.wasm.cwrap(Wa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wce(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a}=t,i=s.dataIdMap.get(r.dataId).id,o=s.dataIdMap.get(a.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:p}=n,d=l==null?[1,1]:l,h=I.computeConv2DInfo(r.shape,a.shape,u,d,c,p,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,b=h.padInfo.right,y=h.padInfo.bottom,v=h.padInfo.left,x=h.dilationHeight,k=h.dilationWidth,C=h.strideHeight,$=h.strideWidth,A=h.inChannels,E=h.outChannels,O=h.padInfo.type==="SAME"?1:0;if(h.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);let R=s.makeOutput(h.outShape,"float32"),D=s.dataIdMap.get(R.dataId).id;return fT(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,b,y,v,O,x,k,C,$,A,E,D),R}var kce={kernelName:Wa,backendName:"wasm",setupFunc:xce,kernelFunc:wce},Sce=Kt(Ga),Ice=!1,Cce=nn(Co,Ice,"bool"),Nce=Kt(Ha,"float32");function Bg(e){let{inputs:t,attrs:n,backend:s}=e,{input:r}=t,{dim:a}=n,i=r.shape.length,o=r.shape.slice(),u=a;return a<0&&(w.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),An({inputs:{x:r},backend:s,attrs:{shape:o}})}var Tce={kernelName:No,backendName:"wasm",kernelFunc:Bg};function mT(e){let{attrs:{shape:t,value:n,dtype:s},backend:r}=e,a=r.makeOutput(t,s);return r.typedArrayFromHeap(a).fill(n),a}var $ce={kernelName:Rl,backendName:"wasm",kernelFunc:mT},gT;function _ce(e){gT=e.wasm.cwrap($o,null,["number","number","number","number","number","number"])}function Ace(e){let{inputs:t,backend:n}=e,{image:s}=t,r=n.makeOutput(s.shape,s.dtype),a=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,u,l,c]=s.shape;return gT(a,o,u,l,c,i),r}var Ece={kernelName:$o,backendName:"wasm",kernelFunc:Ace,setupFunc:_ce},Rce=Kt(qa),Dce=!1,Fce=nn(ja,Dce),bT;function Oce(e){bT=e.wasm.cwrap(Ka,null,["number","number","number","number","number","number","number"])}function Pce(e){let{backend:t,inputs:n,attrs:s}=e,{varianceEpsilon:r}=s,{x:a,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,h=u!=null?t.dataIdMap.get(u.dataId).id:0,f=l!=null?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(a.shape,a.dtype);if(w.sizeFromShape(a.shape)===0)return m;let g=t.dataIdMap.get(m.dataId).id;return bT(c,p,d,h,f,r,g),m}var Lce={kernelName:Ka,backendName:"wasm",setupFunc:Oce,kernelFunc:Pce},yT;function zce(e){yT=e.wasm.cwrap(ga,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Mce(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=I.computeConv2DInfo(r.shape,a.shape,u,c,l,d),g=Dh[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);let b=s.dataIdMap.get(r.dataId).id,y=s.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(i!=null){let te=s.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${te.shape}) does not match the number of output channels (${v})`);x=te.id}let k=m.filterHeight,C=m.filterWidth,$=m.padInfo.top,A=m.padInfo.right,E=m.padInfo.bottom,O=m.padInfo.left,R=m.dilationHeight,D=m.dilationWidth,T=m.strideHeight,L=m.strideWidth,W=m.inChannels,q=m.padInfo.type==="SAME"?1:0,j=m.batchSize,X=m.inHeight,Q=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ne=s.makeOutput(m.outShape,"float32"),J=s.dataIdMap.get(ne.dataId).id,se=o==null?0:s.dataIdMap.get(o.dataId).id;return yT(b,j,X,Q,y,k,C,x,$,A,E,O,q,R,D,T,L,W,v,g,se,f||0,J),ne}var Bce={kernelName:ga,backendName:"wasm",setupFunc:zce,kernelFunc:Mce},vT;function Vce(e){vT=e.wasm.cwrap(ba,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Wce(e){let{inputs:t,attrs:n,backend:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:p,dimRoundingMode:d,activation:h,leakyreluAlpha:f}=n,m=I.computeConv2DInfo(r.shape,a.shape,u,c,l,d,!0),g=Dh[h];if(g==null)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let b=s.dataIdMap.get(r.dataId).id,y=s.dataIdMap.get(a.dataId).id,v=m.outChannels,x=0;if(i!=null){let te=s.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${te.shape}) does not match the number of output channels (${v})`);x=te.id}let k=m.filterHeight,C=m.filterWidth,$=m.padInfo.top,A=m.padInfo.right,E=m.padInfo.bottom,O=m.padInfo.left,R=m.dilationHeight,D=m.dilationWidth,T=m.strideHeight,L=m.strideWidth,W=m.inChannels,q=m.padInfo.type==="SAME"?1:0,j=m.batchSize,X=m.inHeight,Q=m.inWidth;if(p!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${p}'. Please use 'NHWC'.`);let ne=s.makeOutput(m.outShape,"float32"),J=s.dataIdMap.get(ne.dataId).id,se=o==null?0:s.dataIdMap.get(o.dataId).id;return vT(b,j,X,Q,y,k,C,x,$,A,E,O,q,R,D,T,L,W,v,g,se,f||0,J),ne}var Uce={kernelName:ba,backendName:"wasm",setupFunc:Vce,kernelFunc:Wce},xT;function Gce(e){xT=e.wasm.cwrap(Ao,null,["number","number","number","number","number","number","array","number"])}function Hce(e){let{backend:t,inputs:n}=e,{params:s,indices:r}=n,[a,i,o,u]=$0.prepareAndValidate(s,r),l=t.makeOutput(a,s.dtype);if(i===0)return l;let c=r.shape,p=c[c.length-1],h=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(u).buffer),b=t.dataIdMap.get(l.dataId).id;return xT(h,Ct[s.dtype],m,i,p,o,g,b),l}var qce={kernelName:Ao,backendName:"wasm",setupFunc:Gce,kernelFunc:Hce},wT;function jce(e){wT=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Kce(e){let{backend:t,inputs:n,attrs:s}=e,{x:r,indices:a}=n,{axis:i,batchDims:o}=s,u=w.parseAxisParam(i,r.shape)[0],l=t.readSync(a.dataId),c=r.shape[u];for(let E=0;E<l.length;++E){let O=l[E];w.assert(O<=c-1&&O>=0,()=>`GatherV2: the index value ${O} is not in [0, ${c-1}]`)}let p=I.segment_util.collectGatherOpShapeInfo(r,a,u,o),d=An({inputs:{x:r},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),h=w.sizeFromShape(a.shape),f=An({inputs:{x:a},attrs:{shape:[p.batchSize,h/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],g=t.makeOutput(m,r.dtype);if(w.sizeFromShape(r.shape)===0)return g;let b=d.shape.length-1,v=t.dataIdMap.get(d.dataId).id,k=t.dataIdMap.get(f.dataId).id,C=t.dataIdMap.get(g.dataId).id,$=new Uint8Array(new Int32Array(w.computeStrides(d.shape)).buffer),A=new Uint8Array(new Int32Array(w.computeStrides(m)).buffer);return wT(v,Ct[r.dtype],$,b,k,p.batchSize,A,C),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}var Xce={kernelName:_o,backendName:"wasm",setupFunc:jce,kernelFunc:Kce},Yce=!1,Zce=nn(Eo,Yce,"bool"),Qce=!1,Jce=nn(Xa,Qce,"bool"),kT;function ede(e){kT=e.wasm.cwrap(Za,null,["number","number","number","number"])}function tde(e){let{inputs:{x:t},attrs:{alpha:n},backend:s}=e,r=s.dataIdMap.get(t.dataId).id,a=s.makeOutput(t.shape,"float32");if(w.sizeFromShape(t.shape)!==0){let i=s.dataIdMap.get(a.dataId).id;kT(r,Ct[t.dtype],n,i)}return a}var nde={kernelName:Za,backendName:"wasm",setupFunc:ede,kernelFunc:tde},sde=!1,rde=nn(Ro,sde,"bool"),ade=!1,ide=nn(Do,ade,"bool"),ode=Kt(Qa),ude=!1,lde=nn(Fo,ude,"bool"),cde=Kt(Oo),dde=!1,pde=nn(Ll,dde,"bool"),hde=!1,fde=nn(X_,hde,"bool"),ST;function mde(e){ST=e.wasm.cwrap(Ja,null,["number","number","number","number"])}function gde(e){let{backend:t,inputs:n,attrs:s}=e,{reductionIndices:r,keepDims:a}=s,{x:i}=n,u=t.dataIdMap.get(i.dataId).id,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Wr(i,r,t);if(h){let v=t.dataIdMap.get(c.dataId).id;l=c,u=v}let f=l.shape.length;I.assertAxesAreInnerMostDims("max",p,f);let[m,g]=I.computeOutAndReduceShapes(l.shape,p),b=w.sizeFromShape(g),y=t.makeOutput(m,i.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;ST(u,Ct[i.dtype],b,v)}if(h&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var bde={kernelName:Ja,backendName:"wasm",setupFunc:mde,kernelFunc:gde},yde=!1,vde=nn(ei,yde),IT;function xde(e){IT=e.wasm.cwrap(ti,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wde(e){let{inputs:t,attrs:n,backend:s}=e,r=t.x,a=s.dataIdMap.get(r.dataId).id;w.assert(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);let{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=I.computePool2DInfo(r.shape,i,o,1,u,l),p=c.filterHeight,d=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,b=c.dilationHeight,y=c.dilationWidth,v=c.strideHeight,x=c.strideWidth,k=c.inChannels,C=c.outChannels;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let $=s.makeOutput(c.outShape,"float32"),A=s.dataIdMap.get($.dataId).id;return IT(a,r.shape[0],r.shape[1],r.shape[2],p,d,h,f,m,g,b,y,v,x,k,C,A),$}var kde={kernelName:ti,backendName:"wasm",setupFunc:xde,kernelFunc:wde},CT;function Sde(e){CT=e.wasm.cwrap(ni,null,["number, number, number"])}function Ide(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Wr(i,r,t),f=p;if(h){let x=t.dataIdMap.get(c.dataId).id;x!==o&&(l=c,u=x,f=I.getInnerMostAxes(f.length,l.shape.length))}I.assertAxesAreInnerMostDims("mean",f,l.shape.length);let[m,g]=I.computeOutAndReduceShapes(l.shape,f),b=w.sizeFromShape(g),y=l;l.dtype!=="float32"&&(y=Tu({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(y.dataId).id);let v=t.makeOutput(m,"float32");if(w.sizeFromShape(l.shape)!==0){let x=t.dataIdMap.get(v.dataId).id;CT(u,b,x)}if(h&&t.disposeData(c.dataId),a){let x=I.expandShapeToKeepDim(v.shape,d);v.shape=x}return l.dtype!=="float32"&&t.disposeData(y.dataId),v}var Cde={kernelName:ni,backendName:"wasm",setupFunc:Sde,kernelFunc:Ide},NT;function Nde(e){NT=e.wasm.cwrap(si,null,["number","number","number","number"])}function Tde(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Wr(i,r,t);if(h){let v=t.dataIdMap.get(c.dataId).id;v!==o&&(l=c,u=v)}let f=l.shape.length;I.assertAxesAreInnerMostDims("min",p,f);let[m,g]=I.computeOutAndReduceShapes(l.shape,p),b=w.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;NT(u,Ct[i.dtype],b,v)}if(h&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var $de={kernelName:si,backendName:"wasm",setupFunc:Nde,kernelFunc:Tde},_de=!1,Ade=nn(ri,_de),TT=(e=>(e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric",e))(TT||{}),$T;function Ede(e){$T=e.wasm.cwrap(ai,null,["number","array","number","number","array","array","number","number"])}function Rde(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,mode:r}}=e,a=s.map((f,m)=>f[0]+t.shape[m]+f[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=s.map(f=>f[0]),p=s.map(f=>f[1]),d=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(p).buffer);return $T(i,l,t.shape.length,Ct[t.dtype],d,h,TT[r],u),o}var Dde={kernelName:ai,backendName:"wasm",kernelFunc:Rde,setupFunc:Ede},Fde=!0,Ode=nn(ii,Fde),Pde=Kt(Po);function vx(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),s=n[0],r=n[1],a=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:s,selectedSize:r,pSelectedScores:a,pValidOutputs:i}}var _T;function Lde(e){_T=e.wasm.cwrap(zo,"number",["number","number","number","number","number"])}function zde(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i}=s,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=_T(l,c,a,r,i),{pSelectedIndices:d,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=vx(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",d)}var Mde={kernelName:zo,backendName:"wasm",setupFunc:Lde,kernelFunc:zde},AT;function Bde(e){AT=e.wasm.cwrap(Ml,"number",["number","number","number","number","number","bool"])}function Vde(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i,padToMaxOutputSize:o}=s,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,d=AT(c,p,a,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=vx(t,d);t.wasm._free(m);let b=t.makeOutput([f],"int32",h),y=t.makeOutput([],"int32",g);return[b,y]}var Wde={kernelName:Ml,backendName:"wasm",setupFunc:Bde,kernelFunc:Vde},ET;function Ude(e){ET=e.wasm.cwrap(Mo,"number",["number","number","number","number","number","number"])}function Gde(e){let{backend:t,inputs:n,attrs:s}=e,{iouThreshold:r,maxOutputSize:a,scoreThreshold:i,softNmsSigma:o}=s,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,d=ET(c,p,a,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=vx(t,d);t.wasm._free(g);let b=t.makeOutput([f],"int32",h),y=t.makeOutput([f],"float32",m);return[b,y]}var Hde={kernelName:Mo,backendName:"wasm",setupFunc:Ude,kernelFunc:Gde},qde=!1,jde=nn(Lo,qde,"bool"),RT;function Kde(e){RT=e.wasm.cwrap(Vo,null,["number","number","number","number","number"])}function Xde(e){let{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,u=n.makeOutput([...r.shape,a],"int32"),l=n.dataIdMap.get(u.dataId).id,p=n.dataIdMap.get(r.dataId).id;return RT(p,a,i,o,l),u}var Yde={kernelName:Vo,backendName:"wasm",setupFunc:Kde,kernelFunc:Xde};function Zde(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(1),s}var Qde={kernelName:Bo,backendName:"wasm",kernelFunc:Zde};function Jde(e){let{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(t.length===1)return Bg({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let a=t[0].shape,i=t[0].dtype;t.forEach(c=>{w.assertShapesMatch(a,c.shape,"All tensors passed to stack must have matching shapes"),w.assert(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(c=>{let p=Bg({inputs:{input:c},backend:n,attrs:{dim:r}});return o.push(p),p}),l=iT({inputs:u,backend:n,attrs:{axis:r}});return o.forEach(c=>n.disposeData(c.dataId)),l}var epe={kernelName:Wo,backendName:"wasm",kernelFunc:Jde},DT;function tpe(e){DT=e.wasm.cwrap(oi,null,["number","array","number","number","array","array","number","number"])}function npe(e){let{inputs:{x:t},backend:n,attrs:{paddings:s,constantValue:r}}=e,a=s.map((m,g)=>m[0]+t.shape[g]+m[1]);if(w.sizeFromShape(t.shape)===0)return mT({backend:n,attrs:{shape:a,value:r,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(a,t.dtype),l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),p=s.map(m=>m[0]),d=s.map(m=>m[1]),h=new Uint8Array(new Int32Array(p).buffer),f=new Uint8Array(new Int32Array(d).buffer);return DT(i,c,t.shape.length,Ct[t.dtype],h,f,r,l),o}var FT={kernelName:oi,backendName:"wasm",kernelFunc:npe,setupFunc:tpe},spe=!1,rpe=nn(ui,spe),OT;function ape(e){OT=e.wasm.cwrap(li,null,["number","number","number"])}function ipe(e){let{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=n.dataIdMap.get(s.dataId).id,i=n.dataIdMap.get(r.dataId).id,o=a,u=s,l=u;u.dtype!=="float32"&&(l=Tu({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);let c=n.makeOutput(s.shape,"float32"),p=n.dataIdMap.get(c.dataId).id;return OT(o,i,p),u.dtype!=="float32"&&n.disposeData(l.dataId),c}var ope={kernelName:li,backendName:"wasm",setupFunc:ape,kernelFunc:ipe},PT;function upe(e){PT=e.wasm.cwrap(ci,null,["number","number","number","number"])}function lpe(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Wr(i,r,t),f=p;if(h){let v=t.dataIdMap.get(c.dataId).id;v!==o&&(l=c,u=v,f=I.getInnerMostAxes(f.length,l.shape.length))}I.assertAxesAreInnerMostDims("prod",f,l.shape.length);let[m,g]=I.computeOutAndReduceShapes(l.shape,f),b=w.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;PT(u,b,Ct[y.dtype],v)}if(h&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var cpe={kernelName:ci,backendName:"wasm",setupFunc:upe,kernelFunc:lpe},dpe=e=>{let{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=Wv(s,r,a,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u},ppe={kernelName:Bl,backendName:"wasm",kernelFunc:dpe},hpe=!0,fpe=nn(Ua,hpe),mpe=Kt(di),gpe=Kt(fi),LT;function bpe(e){LT=e.wasm.cwrap(hi,null,["number","number","number","number","number","number","number","number","number","number"])}function ype(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,[c,p,d,h]=r.shape,f=[c,u,l,h],m=t.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Tu({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(g.dataId));let b=m.id,y=t.makeOutput(f,"float32");if(w.sizeFromShape(r.shape)===0)return y;let v=t.dataIdMap.get(y.dataId).id;return LT(b,c,p,d,h,u,l,a?1:0,i?1:0,v),g!=null&&t.disposeData(g.dataId),y}var vpe={kernelName:hi,backendName:"wasm",setupFunc:bpe,kernelFunc:ype},zT;function xpe(e){zT=e.wasm.cwrap(pi,null,["number","number","number","number","number","number","number","number","number","number"])}function wpe(e){let{backend:t,inputs:n,attrs:s}=e,{images:r}=n,{alignCorners:a,halfPixelCenters:i,size:o}=s,[u,l]=o,[c,p,d,h]=r.shape,f=[c,u,l,h],m=t.makeOutput(f,"float32");if(w.sizeFromShape(r.shape)===0)return m;let g=t.dataIdMap.get(r.dataId),b;g.dtype!=="float32"&&(b=Tu({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(b.dataId));let y=g.id,v=t.dataIdMap.get(m.dataId).id;return zT(y,c,p,d,h,u,l,a?1:0,i?1:0,v),b!=null&&t.disposeData(b.dataId),m}var kpe={kernelName:pi,backendName:"wasm",setupFunc:xpe,kernelFunc:wpe},MT;function Spe(e){MT=e.wasm.cwrap(Go,null,["number","array","number","array","number","number"])}function Ipe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=w.parseAxisParam(a,r.shape);if(r.shape.length===0)return Fh({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),p=new Uint8Array(new Int32Array(r.shape).buffer);MT(u,c,i.length,p,r.shape.length,l);let d=An({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),d}var Cpe={kernelName:Go,backendName:"wasm",kernelFunc:Ipe,setupFunc:Spe},BT;function Npe(e){BT=e.wasm.cwrap(ru,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Tpe(e){let{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{radians:a,fillValue:i,center:o}=s,u=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(u.dataId).id,[p,d,h,f]=r.shape,[m,g]=I.getImageCenter(o,d,h),b=i===0,y=255,v=typeof i=="number"?[i,i,i,b?0:y]:[...i,y],x=new Uint8Array(new Int32Array(v).buffer);return BT(l,p,d,h,f,a,m,g,x,v.length,c),u}var $pe={kernelName:ru,backendName:"wasm",kernelFunc:Tpe,setupFunc:Npe},_pe=Kt(Ho),Ape=Kt(mi),VT;function Epe(e){VT=e.wasm.cwrap(qo,null,["number","number","number","number","number","number","array","number","number"])}function Rpe(e){let{backend:t,inputs:n,attrs:s}=e,{indices:r,updates:a}=n,{shape:i}=s,o=t.makeOutput(i,a.dtype);if(w.sizeFromShape(i)===0)return o;let{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:d}=A0.calculateShapes(a,r,i),f=t.dataIdMap.get(r.dataId).id,g=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(p).buffer),y=t.dataIdMap.get(o.dataId).id;return VT(f,g,Ct[a.dtype],u,l,c,b,d,y),o}var Dpe={kernelName:qo,backendName:"wasm",setupFunc:Epe,kernelFunc:Rpe},WT;function Fpe(e){WT=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Ope(e){let{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=n.dataIdMap.get(s.dataId).id,o=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(a.dataId).id,l=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(l.dataId).id,p=s.shape.length,d=r.shape.length,h=p===0||p>1||d===1?1:w.sizeFromShape(r.shape.slice(1));return WT(i,o,u,h,c),l}var Ppe={kernelName:jo,backendName:"wasm",kernelFunc:Ope,setupFunc:Fpe},UT;function Lpe(e){UT=e.wasm.cwrap(bi,null,["number","number"])}function zpe(e){let{backend:t,inputs:{x:n}}=e,s=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),a=t.dataIdMap.get(r.dataId).id;return w.sizeFromShape(r.shape)===0||UT(s,a),r}var Mpe={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Lpe,kernelFunc:zpe},Bpe=Kt(gi),GT;function Vpe(e){GT=e.wasm.cwrap(xi,null,["number","number","number","number"])}function Wpe(e){let{backend:t,inputs:{logits:n},attrs:{dim:s}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(a.dataId).id,o=n.shape[s],u=w.sizeFromShape(n.shape)/o;return w.sizeFromShape(a.shape)===0||GT(r,i,o,u),a}var Upe={kernelName:xi,backendName:"wasm",setupFunc:Vpe,kernelFunc:Wpe};function Gpe(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s,o=w.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let C=1+a.length;C<r.shape.length;++C)u.push([0,0]);let l=FT.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:u,constantValue:0}}),c=I.getReshaped(l.shape,a,o,!1),p=I.getPermuted(c.length,a.length,!1),d=I.getReshapedPermuted(l.shape,a,o,!1),m=An({inputs:{x:l},backend:n,attrs:{shape:c}}),y=_r({inputs:{x:m},backend:n,attrs:{perm:p}}),k=An({inputs:{x:y},backend:n,attrs:{shape:d}});return n.disposeData(l.dataId),n.disposeData(m.dataId),n.disposeData(y.dataId),k}var Hpe={kernelName:Yo,backendName:"wasm",kernelFunc:Gpe},HT;function qpe(e){HT=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function jpe(e){let{backend:t,inputs:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=n,o=s.shape[0],u=s.shape[1],l=t.readSync(a.dataId)[0],c=[o+l,u],p=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(c,s.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),r.dtype),b=t.dataIdMap.get(g.dataId).id,y=t.makeOutput([l],"bool"),v=t.dataIdMap.get(y.dataId).id,x=t.makeOutput([o],s.dtype),k=t.dataIdMap.get(x.dataId).id,C=t.makeOutput([4],"int32"),$=t.dataIdMap.get(C.dataId).id,A=HT(p,d,Ct[r.dtype],o,l,u,h,m,b,v,k,$),E=t.readSync(C.dataId),O;switch(E[0]){case 1:{O=I.getSparseFillEmptyRowsIndicesDenseShapeMismatch(E[1]);break}case 2:{O=I.getSparseFillEmptyRowsNegativeIndexErrorMessage(E[1],E[2]);break}case 3:O=I.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(E[1],E[2],E[3]);break;default:O=""}if(t.disposeData(C.dataId),O)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(y.dataId),t.disposeData(x.dataId),new Error(O);let R=f,D=g;return A!==c[0]&&(R=$a({inputs:{x:f},attrs:{begin:0,size:[A,u]},backend:t}),D=$a({inputs:{x:g},attrs:{begin:0,size:A},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[R,D,y,x]}var Kpe={kernelName:$p,backendName:"wasm",setupFunc:qpe,kernelFunc:jpe},qT;function Xpe(e){qT=e.wasm.cwrap(Hl,null,["number","number","number","number","number","number","number"])}function Ype(e){let{backend:t,inputs:n}=e,{inputIndices:s,inputShape:r,newShape:a}=n;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);let i=t.dataIdMap.get(s.dataId).id,o=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(a.dataId).id,l=s.shape[0],c=w.sizeFromShape(a.shape),p=t.makeOutput([l,c],s.dtype),d=t.dataIdMap.get(p.dataId).id,h=t.makeOutput([c],a.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;qT(i,o,u,l,d,f,g);let b=t.readSync(m.dataId),y;switch(b[0]){case 0:{y=I.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(b[1],b[2]);break}case 1:{y=I.getSparseReshapeNegativeOutputDimErrorMessage(b[1],b[2]);break}case 2:y=I.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let v=Array.from(t.readSync(r.dataId)),x=Array.from(t.readSync(h.dataId));y=I.getSparseReshapeInputOutputMultipleErrorMessage(v,x);break}case 4:{let v=Array.from(t.readSync(r.dataId)),x=Array.from(t.readSync(h.dataId));y=I.getSparseReshapeInputOutputMismatchErrorMessage(v,x);break}default:y=""}if(t.disposeData(m.dataId),y)throw t.disposeData(p.dataId),t.disposeData(h.dataId),new Error(y);return[p,h]}var Zpe={kernelName:Hl,backendName:"wasm",setupFunc:Xpe,kernelFunc:Ype},jT;function KT(e){jT=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function XT(e,t){let{backend:n,inputs:s}=e,{data:r,indices:a,segmentIds:i}=s,o=a.shape[0],u=n.readSync(i.dataId,o-1,o)[0],c=o>0?u+1:0;if(c<0)throw new Error(I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=r.shape.slice();p[0]=c;let d=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(a.dataId).id,f=n.dataIdMap.get(i.dataId).id,m=n.makeOutput(p,r.dtype),g=n.dataIdMap.get(m.dataId).id,b=n.makeOutput([4],"int32"),y=n.dataIdMap.get(b.dataId).id;jT(d,Ct[r.dtype],r.shape[0],h,f,g,y,t,0);let v=n.readSync(b.dataId),x;switch(v[0]){case 0:{x=I.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=I.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=I.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(v[1],v[2]);break;case 3:x=I.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(v[1],v[2],v[3]);break;default:x=""}if(n.disposeData(b.dataId),x)throw n.disposeData(m.dataId),new Error(x);return m}function Qpe(e){return XT(e,!0)}var Jpe={kernelName:_p,backendName:"wasm",setupFunc:KT,kernelFunc:Qpe};function ehe(e){return XT(e,!1)}var the={kernelName:Ap,backendName:"wasm",setupFunc:KT,kernelFunc:ehe};function nhe(e){let{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=n,o=w.parseAxisParam(i,r.shape)[0],u=I.prepareSplitSize(r,a,o),l=new Array(r.shape.length).fill(0),c=r.shape.slice();return u.map(p=>{let d=[...c];d[o]=p;let h=$a({inputs:{x:r},attrs:{begin:l,size:d},backend:s});return l[o]+=p,h})}var she={kernelName:Zo,backendName:"wasm",kernelFunc:nhe},rhe=Kt(yi),ahe=Kt(ql),ihe=!0,ohe=nn(wi,ihe),YT;function uhe(e){YT=e.wasm.cwrap(Ii,null,["number","number","number","number"])}function lhe(e){let{backend:t,inputs:n,attrs:s}=e,{alpha:r}=s,{x:a}=n,i=t.dataIdMap.get(a.dataId).id,o=t.makeOutput(a.shape,a.dtype),u=t.dataIdMap.get(o.dataId).id;return YT(i,r,Ct[a.dtype],u),o}var che={kernelName:Ii,backendName:"wasm",setupFunc:uhe,kernelFunc:lhe},ZT;function dhe(e){ZT=e.wasm.cwrap(Qo,null,["number","array","number","array","array","array","array","array","number","number"])}function phe(e){let{backend:t,inputs:n,attrs:s}=e,{x:r}=n,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:y,end:v,strides:x}=It.sliceInfo(r.shape,a,i,o,u,l,c,p,d),k;if(m)k=An({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||b){w.assert(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);let C=It.computeOutShape(y,v,x),$=$a({inputs:{x:r},backend:t,attrs:{begin:y,size:C}});k=An({inputs:{x:$},backend:t,attrs:{shape:f}}),t.disposeData($.dataId)}else{let C=t.makeOutput(h,"float32"),$=t.dataIdMap.get(r.dataId).id,A=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),E=new Uint8Array(new Int32Array(y).buffer),O=new Uint8Array(new Int32Array(v).buffer),R=new Uint8Array(new Int32Array(x).buffer),D=new Uint8Array(new Int32Array(h).buffer),T=new Uint8Array(new Int32Array(w.computeStrides(h)).buffer),L=t.dataIdMap.get(C.dataId).id;ZT($,A,r.shape.length,E,O,R,D,T,h.length,L),k=An({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeData(C.dataId)}return k}var hhe={kernelName:Qo,backendName:"wasm",setupFunc:dhe,kernelFunc:phe};function fhe(e){let{backend:t,inputs:n,attrs:s}=e,{data:r,dataSplits:a}=n,{separator:i,nGramWidths:o,leftPad:u,rightPad:l,padWidth:c,preserveShortSequences:p}=s,d=t.readSync(r.dataId),h=t.readSync(a.dataId),[f,m]=Gv(d,h,i,o,u,l,c,p),g=t.makeOutput([f.length],"string"),b=t.dataIdMap.get(g.dataId);b.stringBytes=f;let y=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}var mhe={kernelName:jl,backendName:"wasm",kernelFunc:fhe};function ghe(e){let{backend:t,inputs:n,attrs:s}=e,{input:r,delimiter:a}=n,{skipEmpty:i}=s,o=t.readSync(r.dataId),u=t.readSync(a.dataId),[l,c,p]=Hv(o,u[0],i),d=c.length,h=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(h).set(l);let m=t.makeOutput([d],"string"),g=t.dataIdMap.get(m.dataId);g.stringBytes=c;let b=t.makeOutput([2],"int32");return t.typedArrayFromHeap(b).set(p),[h,m,b]}var bhe={kernelName:Rp,backendName:"wasm",kernelFunc:ghe};function yhe(e){let{backend:t,inputs:n,attrs:s}=e,{input:r}=n,{numBuckets:a}=s,i=t.readSync(r.dataId),o=qv(i,a),u=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(u).set(o),u}var vhe={kernelName:Dp,backendName:"wasm",kernelFunc:yhe},xhe=!0,whe=nn(ki,xhe),QT;function khe(e){QT=e.wasm.cwrap(vi,null,["number","number","number","number"])}function She(e){let{backend:t,inputs:n,attrs:s}=e,{axis:r,keepDims:a}=s,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,l=i,{transposed:c,axes:p,originalAxes:d,inputWasTransposed:h}=Wr(i,r,t),f=p;if(h){let v=t.dataIdMap.get(c.dataId).id;v!==o&&(l=c,u=v,f=I.getInnerMostAxes(f.length,l.shape.length))}I.assertAxesAreInnerMostDims("sum",f,l.shape.length);let[m,g]=I.computeOutAndReduceShapes(l.shape,f),b=w.sizeFromShape(g),y=t.makeOutput(m,l.dtype);if(w.sizeFromShape(l.shape)!==0){let v=t.dataIdMap.get(y.dataId).id;QT(u,b,Ct[y.dtype],v)}if(h&&t.disposeData(c.dataId),a){let v=I.expandShapeToKeepDim(y.shape,d);y.shape=v}return y}var Ihe={kernelName:vi,backendName:"wasm",setupFunc:khe,kernelFunc:She},Che=Kt(Jo),Nhe=Kt(Si),JT;function The(e){JT=e.wasm.cwrap(Dr,null,["number","array","number","array","number","number"])}function $he(e){let{inputs:t,backend:n,attrs:s}=e,{x:r}=t,a=n.dataIdMap.get(r.dataId).id,{reps:i}=s,o=new Array(r.shape.length);for(let d=0;d<o.length;d++)o[d]=r.shape[d]*i[d];let u=new Uint8Array(new Int32Array(r.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,r.dtype),p=n.dataIdMap.get(c.dataId).id;return JT(a,u,r.shape.length,l,o.length,Ct[c.dtype],p),c}var _he={kernelName:Dr,backendName:"wasm",setupFunc:The,kernelFunc:$he},e$;function Ahe(e){e$=e.wasm.cwrap(eu,null,["number","array","number","number","number","bool","number","number"])}var Ehe=({inputs:e,backend:t,attrs:n})=>{let{x:s}=e,{k:r,sorted:a}=n,i=t.dataIdMap.get(s.dataId).id,o=new Uint8Array(new Int32Array(s.shape).buffer),u=s.shape.slice();u[u.length-1]=r;let l=t.makeOutput(u,s.dtype),c=t.dataIdMap.get(l.dataId).id,p=t.makeOutput(u,"int32"),d=t.dataIdMap.get(p.dataId).id;return e$(i,o,s.shape.length,Ct[s.dtype],r,a,c,d),[l,p]},Rhe={kernelName:eu,backendName:"wasm",setupFunc:Ahe,kernelFunc:Ehe},t$;function Dhe(e){t$=e.wasm.cwrap(tu,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])}function Fhe(e){let{backend:t,inputs:n,attrs:s}=e,{image:r,transforms:a}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=s,[c,p,d,h]=r.shape,[f,m]=l!=null?l:[p,d],g=[c,f,m,h],b=new Uint8Array(new Int32Array(w.computeStrides(r.shape)).buffer),y=t.makeOutput(g,r.dtype),v=t.dataIdMap.get(y.dataId).id,k=t.dataIdMap.get(r.dataId).id,$=t.dataIdMap.get(a.dataId).id,A=i==="nearest"?1:2,E;switch(o){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return t$(k,$,a.shape[0]>1,c,f,m,h,d,p,b,r.shape.length-1,A,E,u,v),y}var Ohe={kernelName:tu,backendName:"wasm",setupFunc:Dhe,kernelFunc:Fhe};function Phe(e){let{inputs:t,backend:n,attrs:s}=e,{value:r}=t,{axis:a}=s;a<0&&(a+=r.shape.length);let i=r.shape[a],o=r.shape.length,u=new Array(o-1),l=0;for(let h=0;h<o;h++)h!==a&&(u[l++]=r.shape[h]);let c=new Array(i),p=new Array(o).fill(0),d=r.shape.slice();d[a]=1;for(let h=0;h<c.length;h++)p[a]=h,c[h]=$a({inputs:{x:r},attrs:{begin:p,size:d},backend:n});return c.map(({dataId:h,dtype:f})=>({dataId:h,dtype:f,shape:u}))}var Lhe={kernelName:nu,backendName:"wasm",kernelFunc:Phe};function zhe(e){let{inputs:{x:t},backend:n}=e,s=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(s).fill(0),s}var Mhe={kernelName:su,backendName:"wasm",kernelFunc:zhe},Bhe=[fle,mle,ble,xle,$le,Ele,Fle,Lle,Vle,jle,Kle,Xle,Qle,Jle,nce,ace,ice,oce,cce,hce,gce,vce,kce,Sce,Cce,Nce,Tce,$ce,Ece,Rce,Fce,Lce,Bce,Uce,qce,Xce,Zce,Jce,wle,nde,rde,ide,ode,lde,cde,pde,fde,bde,vde,kde,Cde,$de,Ade,Dde,Ode,Pde,Mde,Wde,Hde,jde,Yde,Qde,epe,FT,rpe,ope,cpe,ppe,fpe,mpe,gpe,zle,vpe,kpe,Cpe,$pe,_pe,Ape,Dpe,Ppe,Mpe,Bpe,Hle,Upe,Hpe,Kpe,Zpe,Jpe,the,she,rhe,ahe,ohe,che,hhe,mhe,bhe,vhe,whe,Ihe,Che,Nhe,_he,Rhe,Ohe,Cle,Lhe,Mhe];for(let e of Bhe)au(e);var Vg=K();Vg.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])));Vg.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Vg.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var $k=_a(S_()),et={},n$=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";n$&&(Fm=Fk(),Om=Fm.parentPort,Om.on("message",function(e){onmessage({data:e})}),Wg=hp(),Object.assign(global,{self:global,require:u_,Module:et,location:{href:__filename},Worker:Fm.Worker,importScripts:function(e){(0,eval)(Wg.readFileSync(e,"utf8"))},postMessage:function(e){Om.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}}));var Fm,Om,Wg;function Vhe(){var e=Array.prototype.slice.call(arguments).join(" ");if(n$){Wg.writeSync(2,e+`
`);return}console.error(e)}function Whe(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:et._pthread_self()})}var md=Vhe;self.alert=Whe;et.instantiateWasm=(e,t)=>{var n=new WebAssembly.Instance(et.wasmModule,e);return t(n),et.wasmModule=null,n.exports};self.onmessage=e=>{try{if(e.data.cmd==="load"){if(et.wasmModule=e.data.wasmModule,et.wasmMemory=e.data.wasmMemory,et.buffer=et.wasmMemory.buffer,et.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}WasmBackendModuleThreadedSimd(et).then(function(s){et=s})}else if(e.data.cmd==="run"){et.__performance_now_clock_drift=performance.now()-e.data.time,et.__emscripten_thread_init(e.data.threadInfoStruct,0,0,1),et.establishStackSpace(),et.PThread.receiveObjectTransfer(e.data),et.PThread.threadInit();try{var n=et.invokeEntryPoint(e.data.start_routine,e.data.arg);et.keepRuntimeAlive()?et.PThread.setExitStatus(n):et.__emscripten_thread_exit(n)}catch(s){if(s!="unwind")if(s instanceof et.ExitStatus)et.keepRuntimeAlive()||et.__emscripten_thread_exit(s.status);else throw s}}else e.data.cmd==="cancel"?et._pthread_self()&&et.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="processThreadQueue"?et._pthread_self()&&et._emscripten_current_thread_process_queued_calls():e.data.cmd==="processProxyingQueue"?et._pthread_self()&&et._emscripten_proxy_execute_queue(e.data.queue):(md("worker.js received unknown command "+e.data.cmd),md(e.data)))}catch(s){throw md("worker.js onmessage() captured an uncaught exception: "+s),s&&s.stack&&md(s.stack),et.__emscripten_thread_crashed&&et.__emscripten_thread_crashed(),s}};var _k=_a(I_()),Ak=$k.default||$k,Uhe=_k.default||_k,Ghe=class extends xl{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(Xhe),Yhe=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new fp(this,vs())}write(e,t,n){let s={id:this.dataIdNextNumber++};return this.move(s,e,t,n,1),s}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=w.now();return e(),{kernelMs:w.now()-t}}move(e,t,n,s,r){let a=this.dataIdNextNumber++;if(s==="string"){let l=t;this.dataIdMap.set(e,{id:a,stringBytes:l,shape:n,dtype:s,memoryOffset:null,refCount:r});return}let i=w.sizeFromShape(n),o=i*w.bytesPerElement(s),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:n,dtype:s,refCount:r}),this.wasm.tfjs.registerTensor(a,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:s,dtype:r,shape:a,stringBytes:i}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||w.sizeFromShape(a);let o=w.bytesPerElement(r),u=this.wasm.HEAPU8.slice(s+t*o,s+n*o);return jhe(u.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let s;if(n==null)s=this.write(null,e,t);else{let r=this.dataIdNextNumber++;s={id:r},this.dataIdMap.set(s,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let a=w.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,a,n)}return{dataId:s,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let s=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),a=w.sizeFromShape(e);switch(t){case"float32":return new Float32Array(s,r,a);case"int32":return new Int32Array(s,r,a);case"bool":return new Uint8Array(s,r,a);default:throw new Error(`Unknown dtype ${t}`)}}};function Hhe(e){return(t,n)=>(w.fetch(e,{credentials:"same-origin"}).then(s=>{s.ok||t.env.a(`failed to load wasm binary file at '${e}'`),s.arrayBuffer().then(r=>{WebAssembly.instantiate(r,t).then(a=>{n(a.instance,a.module)})})}),{})}function Ek(e,t,n){if(Ug!=null)return Ug;let s="tfjs-backend-wasm.wasm";return e&&t?s="tfjs-backend-wasm-threaded-simd.wasm":e&&(s="tfjs-backend-wasm-simd.wasm"),Pm!=null&&Pm[s]!=null?Pm[s]:n+s}async function qhe(){let[e,t]=await Promise.all([K().getAsync("WASM_HAS_SIMD_SUPPORT"),K().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,s)=>{let r={};r.locateFile=(o,u)=>{if(o.endsWith(".worker.js")){let l=(void 0).replace(/\n/g,"\\n"),c=new Blob([l],{type:"application/javascript"});return URL.createObjectURL(c)}return o.endsWith(".wasm")?Ek(e,t,gd!=null?gd:u):u+o},Khe&&(r.instantiateWasm=Hhe(Ek(e,t,gd!=null?gd:"")));let a=!1;r.onAbort=()=>{if(a||Lm)return;Lm=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let i;t&&e&&Ug==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+Ak.toString()],{type:"text/javascript"}),i=Ak(r)):i=Uhe(r),i.then(o=>{a=!0,Lm=!1;let u=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",u,["number"]),dispose:o.cwrap("dispose",u,[])},n({wasm:o})}).catch(s)})}function jhe(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var Ug=null,gd=null,Pm={},Lm=!1,Khe=!1;var Xhe=-1,Yhe=-1;var Zhe=2;iu("wasm",async()=>{let{wasm:e}=await qhe();return new Ghe(e)},Zhe);var Vt=(...e)=>{let t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;console.log(n,...e)};var Xt={name:"customgl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!1}};async function r$(e){var n;if(Xt.canvas=e,I0(Xt.name))return Xt.gl;try{if(Xt.gl=(n=Xt.canvas)==null?void 0:n.getContext("webgl2",Xt.webGLattr),!Xt.gl.getParameter(Xt.gl.VERSION).includes("2.0"))return Vt("error: webgl 2.0 is not detected"),null;Xt.canvas.addEventListener("webglcontextlost",async r=>{throw Vt("error:",r.type),new Error("backend error: webgl context lost")}),Xt.canvas.addEventListener("webglcontextrestored",r=>{Vt("error: context restored:",r)}),Xt.canvas.addEventListener("webglcontextcreationerror",r=>{Vt("error: context create:",r)})}catch(s){return Vt("error: cannot get webgl context:",s),null}try{Zv(2,Xt.gl)}catch(s){return Vt("error: cannot set webgl context:",s),null}try{let s=new nl(Xt.gl);iu(Xt.name,()=>new Ch(s),Xt.priority)}catch(s){return Vt("error: cannot register webgl backend:",s),null}try{Fd("webgl").forEach(r=>{let a={...r,backendName:Xt.name};au(a)})}catch(s){return Vt("error: cannot update WebGL backend registration:",s),null}let t=zp().getGPGPUContext?zp().getGPGPUContext().gl:null;return t?Vt(`webgl version:${t.getParameter(t.VERSION)} renderer:${t.getParameter(t.RENDERER)}`):Vt("error: no current gl context:",t,Xt.gl),bp.set("WEBGL_VERSION",2),Vt("backend registered:",Xt.name),Xt.gl}var xc=(e,t)=>{let n=e.getError();if(n!==e.NO_ERROR)throw new Error(`glError: ${t} ${n}`);return n!==e.NO_ERROR},Oh=class{constructor(t,n,s,r){Yt(this,"texture");Yt(this,"width");Yt(this,"height");Yt(this,"gl");this.gl=t,this.texture=n,this.width=s,this.height=r}bindTexture(){this.gl.bindTexture(this.gl.TEXTURE_2D,this.texture)}},xx=class extends Oh{constructor(n,s,r,a){let i=n.createTexture();if(!i)throw new Error("createTexture: framebuffer");super(n,i,s,r);Yt(this,"framebuffer");Yt(this,"format");this.framebuffer=n.createFramebuffer(),this.format=a.format,n.bindFramebuffer(n.FRAMEBUFFER,this.framebuffer),xc(n,"bindFramebuffer"),n.bindTexture(n.TEXTURE_2D,i),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR),n.pixelStorei(n.PACK_ALIGNMENT,1),n.pixelStorei(n.UNPACK_ALIGNMENT,1);let o=this.format==="rgba"?n.RGBA:n.RGB;n.texImage2D(n.TEXTURE_2D,0,o,s,r,0,o,n.UNSIGNED_BYTE,null),xc(n,"createTexture"),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,i,0);let u=n.checkFramebufferStatus(n.FRAMEBUFFER);if(u!==n.FRAMEBUFFER_COMPLETE)throw new Error(`checkFramebufferStatus: ${u}`);let l=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,l)}bindFramebuffer(){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.framebuffer),this.gl.viewport(0,0,this.width,this.height)}},a$=(e,t,n)=>{let s=e.createShader(t);if(!s)throw new Error(`compileShader: ${t}`);e.shaderSource(s,n),e.compileShader(s);let r=e.getShaderInfoLog(s);if(r)throw new Error(`compileShader: ${r}`);return s},wx=class{constructor(t,n,s){Yt(this,"program");Yt(this,"cachedUniformLocations");Yt(this,"gl");this.gl=t;let r=a$(t,t.VERTEX_SHADER,n);xc(t,"compileShader: vertex");let a=a$(t,t.FRAGMENT_SHADER,s);if(xc(t,"compileShader: fragment"),this.program=t.createProgram(),!this.program||!r||!a)throw new Error("createProgram");t.attachShader(this.program,r),t.attachShader(this.program,a),t.bindAttribLocation(this.program,0,"position"),t.bindAttribLocation(this.program,1,"input_tex_coord"),t.linkProgram(this.program),t.useProgram(this.program),xc(t,"createProgram"),this.cachedUniformLocations=new Map}useProgram(){this.gl.useProgram(this.program)}getUniformLocation(t){if(this.cachedUniformLocations.has(t))return this.cachedUniformLocations.get(t);let n=this.gl.getUniformLocation(this.program,t);if(this.cachedUniformLocations.set(t,n),!n)throw new Error(`getUniformLocation: ${t}`);return n}},kx=class{constructor(t,n){Yt(this,"program");Yt(this,"frame");Yt(this,"gl");Yt(this,"options");Yt(this,"squareVerticesBuffer");Yt(this,"textureVerticesBuffer");Yt(this,"vertexShaderSrc",`#version 300 es
    precision mediump float;
    in vec4 position;
    in vec4 input_tex_coord;
    out vec2 tex_coord;
    void main() {
      gl_Position = position; // set pixel position
      tex_coord = input_tex_coord.xy; // passthrough texture position
    }`);Yt(this,"fragmentShaderSrc",`#version 300 es
    precision mediump float;
    uniform int rgba;
    uniform sampler2D mask;
    in highp vec2 tex_coord;
    out vec4 out_color;
    void main() {
      if (rgba == 1) { // rgba format
        vec4 in_color = texture(mask, tex_coord).rgba;
        out_color = vec4(in_color.rgba);
      } else { // rgb format
        vec3 in_color = texture(mask, tex_coord).rgb;
        out_color = vec4(in_color.rgb, 1.0);    
      }
      if (out_color.r > 1.0) out_color = vec4(out_color.r / 255.0, out_color.g / 255.0, out_color.b / 255.0, 1.0); // silly normalization from 0..255 to 0..1
    }`);if(this.gl=t,this.options=n,this.gl.viewport(0,0,t.canvas.width,t.canvas.height),this.gl.scissor(0,0,t.canvas.width,t.canvas.height),this.program=new wx(this.gl,this.vertexShaderSrc,this.fragmentShaderSrc),this.frame=new xx(this.gl,t.canvas.width,t.canvas.height,this.options),this.squareVerticesBuffer=this.gl.createBuffer(),!this.squareVerticesBuffer)throw new Error("squareVerticesBuffer");if(this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.squareVerticesBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,Float32Array.from([-1,-1,1,-1,-1,1,1,1]),t.STATIC_DRAW),this.textureVerticesBuffer=this.gl.createBuffer(),!this.textureVerticesBuffer)throw new Error("textureVerticesBuffer");this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.textureVerticesBuffer),this.gl.bufferData(this.gl.ARRAY_BUFFER,Float32Array.from([0,0,1,0,0,1,1,1]),t.STATIC_DRAW);let s=this.program.getUniformLocation("rgba");this.gl.uniform1i(s,this.options.format==="rgba"?1:0)}bindTextures(t){let n=0;for(let[s,r]of t){let a=this.program.getUniformLocation(s);this.gl.activeTexture(this.gl.TEXTURE0+n),r.bindTexture(),this.gl.uniform1i(a,n),n++}}flipFramebuffers(){this.gl.bindFramebuffer(this.gl.DRAW_FRAMEBUFFER,null),this.gl.bindFramebuffer(this.gl.READ_FRAMEBUFFER,this.frame.framebuffer),this.gl.blitFramebuffer(0,0,this.frame.width,this.frame.height,0,this.frame.height,this.frame.width,0,this.gl.COLOR_BUFFER_BIT,this.gl.LINEAR)}drawVertices(){this.gl.enableVertexAttribArray(0),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.squareVerticesBuffer),this.gl.vertexAttribPointer(0,2,this.gl.FLOAT,!1,0,0),this.gl.enableVertexAttribArray(1),this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.textureVerticesBuffer),this.gl.vertexAttribPointer(1,2,this.gl.FLOAT,!1,0,0),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4)}},Hn;function i$(e,t,n={format:"rgba"}){var r;if(((r=Hn==null?void 0:Hn.gl)==null?void 0:r.canvas)!==e){let a=e.getContext("webgl2");if(!a)throw new Error("webgl2 getContext");Hn=new kx(a,n)}let s=new Oh(Hn.gl,t,Hn.frame.width,Hn.frame.height);return Hn.program.useProgram(),Hn.bindTextures([["mask",s]]),Hn.frame.bindFramebuffer(),Hn.drawVertices(),Hn.flipFramebuffers(),Hn}async function o$(e){let t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);if(!t)return 0;let n=performance.now();return new Promise(s=>{let r=()=>{let a=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(a===e.WAIT_FAILED)throw new Error("clientWaitSync: wait failed");a===e.ALREADY_SIGNALED||a===Hn.gl.CONDITION_SATISFIED?(e.deleteSync(t),s(performance.now()-n)):setTimeout(r,0)};r()})}var ts={modelUrl:"../model/whitebox.json",resolution:[720,720],backend:"customgl"},In,Fi,Sx,Di,Ix,He={};async function Qhe(){Vt("starting webcam...");let e={audio:!1,video:{facingMode:"user",resizeMode:"crop",width:{ideal:ts.resolution[0]},height:{ideal:ts.resolution[1]}}},t=await navigator.mediaDevices.getUserMedia(e),n=new Promise(o=>{In.onloadeddata=()=>o(!0)});In.onplay=()=>Vt("video play"),In.onpause=()=>Vt("video pause"),In.srcObject=t,In.play(),await n,Fi.width=In.videoWidth,Fi.height=In.videoHeight;let s=t.getVideoTracks()[0],r=s.getCapabilities?s.getCapabilities():"",a=s.getSettings?s.getSettings():"",i=s.getConstraints?s.getConstraints():"";Vt("video:",In.videoWidth,In.videoHeight,s.label,{stream:t,track:s,settings:a,constraints:i,capabilities:r}),Fi.onclick=()=>{In.paused?In.play():In.pause()}}var Ph=performance.now();async function Cx(e=0){if(In.paused){setTimeout(()=>Cx(e),50);return}let t=performance.now();if(He.pixels=await Bp.fromPixelsAsync(In,3),He.resize=br.resizeBilinear(He.pixels,ts.resolution),He.div=xe(He.resize,127.5),He.sub=me(He.div,1),He.expand=Nn(He.sub,0),He.result=Di.execute(He.expand),He.squeeze=Lr(He.result),[He.red,He.green,He.blue]=_n(He.squeeze,3,2),Ix||(Ix=$n([...ts.resolution,1],"float32")),He.rgba=Wn([He.red,He.green,He.blue,Ix],2),He.add=ie(He.rgba,1),ts.backend==="customgl"){He.norm=xe(He.add,2),He.data=He.norm.dataToGPU({customTexShape:[ts.resolution[0],ts.resolution[1]]}),He.reference=He.data.tensorRef;let s=i$(Fi,He.data.texture,{format:He.norm.shape[2]===4?"rgba":"rgb"});await o$(s.gl)}else{He.norm=V(He.add,127.5),He.cast=de(He.norm,"int32");let s=await He.cast.data(),r=new ImageData(Uint8ClampedArray.from(s),ts.resolution[0],ts.resolution[1]);Sx||(Sx=Fi.getContext("2d")),Sx.putImageData(r,0,0)}let n=performance.now();e%10===0&&Vt("frame",{frame:e,fps:Math.round(1e4/(n-Ph))/10,real:Math.round(n-Ph),inside:Math.round(n-t),outside:Math.round(t-Ph),tensors:il().numTensors}),Ph=n,Object.values(He).forEach(s=>Fe(s)),In.requestVideoFrameCallback(()=>Cx(++e))}async function Jhe(){Vt("anime"),In=document.getElementById("video"),Fi=document.getElementById("canvas"),ts.backend==="customgl"&&await r$(Fi),await w0(ts.backend),await k0(),K().flagRegistry.WEBGL_FORCE_F16_TEXTURES&&K().set("WEBGL_FORCE_F16_TEXTURES",!0),K().flagRegistry.WEBGL_EXP_CONV&&K().set("WEBGL_EXP_CONV",!0),Di=await AC(ts.modelUrl),Di&&(Vt("tf",{version:G0,backend:S0(),model:Di.modelUrl,flags:K().flags}),Di.inputs[0].shape&&(ts.resolution=[Di.inputs[0].shape[1],Di.inputs[0].shape[2]]),await Qhe(),await Cx())}window.onload=Jhe;
//# sourceMappingURL=anime.js.map
